{
  "82": [
      "82 PUSH MEMORY ELEMENT IF INIT      27 -> reg6",
      "85 STRICT NOT EQUAL      reg6 !== null -> reg5",
      "89 SET      reg5 -> reg4",
      "92 JUMP IF FALSE      reg4 TO: 115 | 95"
  ],
  "92": ["92 JUMP IF FALSE      reg4 TO: 115 | 95"],
  "95": [
      "95 GET WINDOW PROP      TypeError -> reg4",
      "100 NEW ARRAY      1 -> reg6",
      "103 PUT      reg6[0] = Super expression must either be null or a function",
      "109 BIND APPLY      reg4 reg6 -> 5",
      "113 HANDLE ERROR      reg5",
      "115 PUSH MEMORY ELEMENT IF INIT      26 -> reg7",
      "118 GET WINDOW PROP      Object -> reg5",
      "123 GET      reg5[create] -> reg6",
      "129 NEW ARRAY      2 -> reg8",
      "132 PUSH MEMORY ELEMENT IF INIT      27 -> reg10",
      "135 JUMP IF FALSE      reg10 TO: 150 | 138"
  ],
  "115": [
      "115 PUSH MEMORY ELEMENT IF INIT      26 -> reg7",
      "118 GET WINDOW PROP      Object -> reg5",
      "123 GET      reg5[create] -> reg6",
      "129 NEW ARRAY      2 -> reg8",
      "132 PUSH MEMORY ELEMENT IF INIT      27 -> reg10",
      "135 JUMP IF FALSE      reg10 TO: 150 | 138"
  ],
  "138": [
      "138 PUSH MEMORY ELEMENT IF INIT      27 -> reg9",
      "141 GET      reg9[prototype] -> reg11",
      "147 SET      reg11 -> reg10",
      "150 PUT      reg8[0] = reg10",
      "154 EMPTY OBJECT      -> reg9",
      "156 EMPTY OBJECT      -> reg10",
      "158 PUSH MEMORY ELEMENT IF INIT      26 -> reg12",
      "161 PUT      reg10[value] = reg12",
      "167 PUT      reg10[writable] = true",
      "173 PUT      reg10[configurable] = true",
      "179 PUT      reg9[constructor] = reg10",
      "185 PUT      reg8[1] = reg9",
      "189 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "193 SET      reg2 -> reg4",
      "196 PUT      reg7[prototype] = reg4",
      "202 GET WINDOW PROP      Object -> reg8",
      "207 GET      reg8[defineProperty] -> reg4",
      "213 NEW ARRAY      3 -> reg7",
      "216 PUSH MEMORY ELEMENT IF INIT      26 -> reg11",
      "219 PUT      reg7[0] = reg11",
      "223 PUT      reg7[1] = prototype",
      "229 EMPTY OBJECT      -> reg9",
      "231 PUT      reg9[writable] = false",
      "237 PUT      reg7[2] = reg9",
      "241 CALL FUNCTION      OBJ: reg8 FUNC: reg4 ARGS: reg7",
      "245 SET      reg2 -> reg6",
      "248 PUSH MEMORY ELEMENT IF INIT      27 -> reg4",
      "251 JUMP IF FALSE      reg4 TO: 281 | 254"
  ],
  "150": [
      "150 PUT      reg8[0] = reg10",
      "154 EMPTY OBJECT      -> reg9",
      "156 EMPTY OBJECT      -> reg10",
      "158 PUSH MEMORY ELEMENT IF INIT      26 -> reg12",
      "161 PUT      reg10[value] = reg12",
      "167 PUT      reg10[writable] = true",
      "173 PUT      reg10[configurable] = true",
      "179 PUT      reg9[constructor] = reg10",
      "185 PUT      reg8[1] = reg9",
      "189 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "193 SET      reg2 -> reg4",
      "196 PUT      reg7[prototype] = reg4",
      "202 GET WINDOW PROP      Object -> reg8",
      "207 GET      reg8[defineProperty] -> reg4",
      "213 NEW ARRAY      3 -> reg7",
      "216 PUSH MEMORY ELEMENT IF INIT      26 -> reg11",
      "219 PUT      reg7[0] = reg11",
      "223 PUT      reg7[1] = prototype",
      "229 EMPTY OBJECT      -> reg9",
      "231 PUT      reg9[writable] = false",
      "237 PUT      reg7[2] = reg9",
      "241 CALL FUNCTION      OBJ: reg8 FUNC: reg4 ARGS: reg7",
      "245 SET      reg2 -> reg6",
      "248 PUSH MEMORY ELEMENT IF INIT      27 -> reg4",
      "251 JUMP IF FALSE      reg4 TO: 281 | 254"
  ],
  "254": [
      "254 PUSH MEMORY ELEMENT IF INIT      9 -> reg7",
      "257 NEW ARRAY      2 -> reg6",
      "260 PUSH MEMORY ELEMENT IF INIT      26 -> reg9",
      "263 PUT      reg6[0] = reg9",
      "267 PUSH MEMORY ELEMENT IF INIT      27 -> reg9",
      "270 PUT      reg6[1] = reg9",
      "274 CALL FUNCTION      PTR: reg7 MEM: reg6",
      "278 SET      reg2 -> reg4",
      "281 JUMP OR RETURN"
  ],
  "281": ["281 JUMP OR RETURN"],
  "360": [
      "360 PUSH MEMORY ELEMENT IF INIT      10 -> reg5",
      "363 NEW ARRAY      1 -> reg8",
      "366 PUSH H       -> reg7",
      "368 PUT      reg8[0] = reg7",
      "372 CALL FUNCTION      PTR: reg5 MEM: reg8",
      "376 SET      reg2 -> reg4",
      "379 GET      reg4[constructor] -> reg6",
      "385 SET MEMORY ELEMENT IF INIT      39 = reg6",
      "388 GET WINDOW PROP      Reflect -> reg5",
      "393 GET      reg5[construct] -> reg6",
      "399 NEW ARRAY      3 -> reg8",
      "402 PUSH MEMORY ELEMENT IF INIT      37 -> reg7",
      "405 PUT      reg8[0] = reg7",
      "409 PUT      reg8[1] = reg3",
      "413 PUSH MEMORY ELEMENT IF INIT      39 -> reg7",
      "416 PUT      reg8[2] = reg7",
      "420 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "424 SET      reg2 -> reg4",
      "427 SET MEMORY ELEMENT IF INIT      38 = reg4",
      "430 JUMP      464",
      "464 PUSH MEMORY ELEMENT IF INIT      3 -> reg8",
      "467 NEW ARRAY      2 -> reg7",
      "470 PUSH H       -> reg10",
      "472 PUT      reg7[0] = reg10",
      "476 PUSH MEMORY ELEMENT IF INIT      38 -> reg9",
      "479 PUT      reg7[1] = reg9",
      "483 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "487 SET      reg2 -> reg4",
      "490 JUMP OR RETURN VAL      reg4"
  ],
  "432": [
      "432 PUSH MEMORY ELEMENT IF INIT      37 -> reg6",
      "435 GET      reg6[apply] -> reg8",
      "441 NEW ARRAY      2 -> reg7",
      "444 PUSH H       -> reg9",
      "446 PUT      reg7[0] = reg9",
      "450 PUT      reg7[1] = reg3",
      "454 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg7",
      "458 SET      reg2 -> reg4",
      "461 SET MEMORY ELEMENT IF INIT      38 = reg4",
      "464 PUSH MEMORY ELEMENT IF INIT      3 -> reg8",
      "467 NEW ARRAY      2 -> reg7",
      "470 PUSH H       -> reg10",
      "472 PUT      reg7[0] = reg10",
      "476 PUSH MEMORY ELEMENT IF INIT      38 -> reg9",
      "479 PUT      reg7[1] = reg9",
      "483 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "487 SET      reg2 -> reg4",
      "490 JUMP OR RETURN VAL      reg4"
  ],
  "518": [
      "518 PUSH MEMORY ELEMENT IF INIT      43 -> reg6",
      "521 TYPEOF      reg6 -> reg5",
      "524 STRICT EQUAL      reg5 === object -> reg7",
      "530 JUMP IF TRUE      reg7 TO: 548 | 533"
  ],
  "533": [
      "533 PUSH MEMORY ELEMENT IF INIT      43 -> reg8",
      "536 TYPEOF      reg8 -> reg5",
      "539 STRICT EQUAL      reg5 === function -> reg8",
      "545 SET      reg8 -> reg7",
      "548 SET      reg7 -> reg4",
      "551 JUMP IF FALSE      reg4 TO: 561 | 554"
  ],
  "548": [
      "548 SET      reg7 -> reg4",
      "551 JUMP IF FALSE      reg4 TO: 561 | 554"
  ],
  "551": ["551 JUMP IF FALSE      reg4 TO: 561 | 554"],
  "554": [
      "554 PUSH MEMORY ELEMENT IF INIT      43 -> reg4",
      "557 JUMP OR RETURN VAL      reg4"
  ],
  "561": [
      "561 PUSH MEMORY ELEMENT IF INIT      43 -> reg4",
      "564 SET      undefined -> reg5",
      "567 STRICT NOT EQUAL      reg4 !== reg5 -> reg7",
      "571 JUMP IF FALSE      reg7 TO: 594 | 574"
  ],
  "574": [
      "574 GET WINDOW PROP      TypeError -> reg5",
      "579 NEW ARRAY      1 -> reg6",
      "582 PUT      reg6[0] = Derived constructors may only return object or undefined",
      "588 BIND APPLY      reg5 reg6 -> 4",
      "592 HANDLE ERROR      reg4",
      "594 PUSH MEMORY ELEMENT IF INIT      4 -> reg5",
      "597 NEW ARRAY      1 -> reg6",
      "600 PUSH MEMORY ELEMENT IF INIT      42 -> reg7",
      "603 PUT      reg6[0] = reg7",
      "607 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "611 SET      reg2 -> reg4",
      "614 JUMP OR RETURN VAL      reg4"
  ],
  "594": [
      "594 PUSH MEMORY ELEMENT IF INIT      4 -> reg5",
      "597 NEW ARRAY      1 -> reg6",
      "600 PUSH MEMORY ELEMENT IF INIT      42 -> reg7",
      "603 PUT      reg6[0] = reg7",
      "607 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "611 SET      reg2 -> reg4",
      "614 JUMP OR RETURN VAL      reg4"
  ],
  "644": [
      "644 GET WINDOW PROP      ReferenceError -> reg4",
      "649 NEW ARRAY      1 -> reg6",
      "652 PUT      reg6[0] = this hasn't been initialised - super() hasn't been called",
      "658 BIND APPLY      reg4 reg6 -> 5",
      "662 HANDLE ERROR      reg5",
      "664 PUSH MEMORY ELEMENT IF INIT      49 -> reg4",
      "667 JUMP OR RETURN VAL      reg4"
  ],
  "664": [
      "664 PUSH MEMORY ELEMENT IF INIT      49 -> reg4",
      "667 JUMP OR RETURN VAL      reg4"
  ],
  "703": [
      "703 GET WINDOW PROP      Map -> reg5",
      "708 EMPTY ARRAY      -> reg7",
      "710 BIND APPLY      reg5 reg7 -> 4",
      "714 SET      reg4 -> reg6",
      "717 JUMP      727",
      "727 SET MEMORY ELEMENT IF INIT      53 = reg6",
      "730 INIT FUNCTION STATE      PTR: 739 NAME:  LEN: 1 -> reg4",
      "737 JUMP      1110",
      "1110 SET MEMORY ELEMENT IF INIT      5 = reg4",
      "1113 PUSH MEMORY ELEMENT IF INIT      5 -> reg5",
      "1116 NEW ARRAY      1 -> reg6",
      "1119 PUSH MEMORY ELEMENT IF INIT      52 -> reg7",
      "1122 PUT      reg6[0] = reg7",
      "1126 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "1130 SET      reg2 -> reg4",
      "1133 JUMP OR RETURN VAL      reg4"
  ],
  "719": [
      "719 GET WINDOW PROP      undefined -> reg4",
      "724 SET      reg4 -> reg6",
      "727 SET MEMORY ELEMENT IF INIT      53 = reg6",
      "730 INIT FUNCTION STATE      PTR: 739 NAME:  LEN: 1 -> reg4",
      "737 JUMP      1110",
      "1110 SET MEMORY ELEMENT IF INIT      5 = reg4",
      "1113 PUSH MEMORY ELEMENT IF INIT      5 -> reg5",
      "1116 NEW ARRAY      1 -> reg6",
      "1119 PUSH MEMORY ELEMENT IF INIT      52 -> reg7",
      "1122 PUT      reg6[0] = reg7",
      "1126 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "1130 SET      reg2 -> reg4",
      "1133 JUMP OR RETURN VAL      reg4"
  ],
  "823": [
      "823 PUSH MEMORY ELEMENT IF INIT      8 -> reg7",
      "826 NEW ARRAY      1 -> reg9",
      "829 PUSH MEMORY ELEMENT IF INIT      57 -> reg6",
      "832 PUT      reg9[0] = reg6",
      "836 CALL FUNCTION      PTR: reg7 MEM: reg9",
      "840 SET      reg2 -> reg4",
      "843 NOT      reg4 -> reg6",
      "846 SET      reg6 -> reg5",
      "849 JUMP IF FALSE      reg5 TO: 857 | 852"
  ],
  "849": ["849 JUMP IF FALSE      reg5 TO: 857 | 852"],
  "852": [
      "852 PUSH MEMORY ELEMENT IF INIT      57 -> reg4",
      "855 JUMP OR RETURN VAL      reg4"
  ],
  "857": [
      "857 PUSH MEMORY ELEMENT IF INIT      57 -> reg4",
      "860 TYPEOF      reg4 -> reg8",
      "863 STRICT NOT EQUAL      reg8 !== function -> reg6",
      "869 JUMP IF FALSE      reg6 TO: 892 | 872"
  ],
  "872": [
      "872 GET WINDOW PROP      TypeError -> reg4",
      "877 NEW ARRAY      1 -> reg6",
      "880 PUT      reg6[0] = Super expression must either be null or a function",
      "886 BIND APPLY      reg4 reg6 -> 5",
      "890 HANDLE ERROR      reg5",
      "892 PUSH MEMORY ELEMENT IF INIT      53 -> reg4",
      "895 TYPEOF      reg4 -> reg5",
      "898 STRICT NOT EQUAL      reg5 !== undefined -> reg6",
      "904 JUMP IF FALSE      reg6 TO: 997 | 907"
  ],
  "892": [
      "892 PUSH MEMORY ELEMENT IF INIT      53 -> reg4",
      "895 TYPEOF      reg4 -> reg5",
      "898 STRICT NOT EQUAL      reg5 !== undefined -> reg6",
      "904 JUMP IF FALSE      reg6 TO: 997 | 907"
  ],
  "907": [
      "907 PUSH MEMORY ELEMENT IF INIT      53 -> reg7",
      "910 GET      reg7[has] -> reg6",
      "916 NEW ARRAY      1 -> reg5",
      "919 PUSH MEMORY ELEMENT IF INIT      57 -> reg8",
      "922 PUT      reg5[0] = reg8",
      "926 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg5",
      "930 SET      reg2 -> reg4",
      "933 JUMP IF FALSE      reg4 TO: 964 | 936"
  ],
  "936": [
      "936 PUSH MEMORY ELEMENT IF INIT      53 -> reg4",
      "939 GET      reg4[get] -> reg6",
      "945 NEW ARRAY      1 -> reg8",
      "948 PUSH MEMORY ELEMENT IF INIT      57 -> reg9",
      "951 PUT      reg8[0] = reg9",
      "955 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg8",
      "959 SET      reg2 -> reg5",
      "962 JUMP OR RETURN VAL      reg5"
  ],
  "964": [
      "964 PUSH MEMORY ELEMENT IF INIT      53 -> reg6",
      "967 GET      reg6[set] -> reg8",
      "973 NEW ARRAY      2 -> reg11",
      "976 PUSH MEMORY ELEMENT IF INIT      57 -> reg9",
      "979 PUT      reg11[0] = reg9",
      "983 PUSH MEMORY ELEMENT IF INIT      58 -> reg10",
      "986 PUT      reg11[1] = reg10",
      "990 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg11",
      "994 SET      reg2 -> reg5",
      "997 PUSH MEMORY ELEMENT IF INIT      58 -> reg5",
      "1000 GET WINDOW PROP      Object -> reg10",
      "1005 GET      reg10[create] -> reg11",
      "1011 NEW ARRAY      2 -> reg9",
      "1014 PUSH MEMORY ELEMENT IF INIT      57 -> reg12",
      "1017 GET      reg12[prototype] -> reg13",
      "1023 PUT      reg9[0] = reg13",
      "1027 EMPTY OBJECT      -> reg13",
      "1029 EMPTY OBJECT      -> reg12",
      "1031 PUSH MEMORY ELEMENT IF INIT      58 -> reg14",
      "1034 PUT      reg12[value] = reg14",
      "1040 PUT      reg12[enumerable] = false",
      "1046 PUT      reg12[writable] = true",
      "1052 PUT      reg12[configurable] = true",
      "1058 PUT      reg13[constructor] = reg12",
      "1064 PUT      reg9[1] = reg13",
      "1068 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg9",
      "1072 SET      reg2 -> reg8",
      "1075 PUT      reg5[prototype] = reg8",
      "1081 PUSH MEMORY ELEMENT IF INIT      9 -> reg8",
      "1084 NEW ARRAY      2 -> reg11",
      "1087 PUSH MEMORY ELEMENT IF INIT      58 -> reg9",
      "1090 PUT      reg11[0] = reg9",
      "1094 PUSH MEMORY ELEMENT IF INIT      57 -> reg9",
      "1097 PUT      reg11[1] = reg9",
      "1101 CALL FUNCTION      PTR: reg8 MEM: reg11",
      "1105 SET      reg2 -> reg5",
      "1108 JUMP OR RETURN VAL      reg5"
  ],
  "997": [
      "997 PUSH MEMORY ELEMENT IF INIT      58 -> reg5",
      "1000 GET WINDOW PROP      Object -> reg10",
      "1005 GET      reg10[create] -> reg11",
      "1011 NEW ARRAY      2 -> reg9",
      "1014 PUSH MEMORY ELEMENT IF INIT      57 -> reg12",
      "1017 GET      reg12[prototype] -> reg13",
      "1023 PUT      reg9[0] = reg13",
      "1027 EMPTY OBJECT      -> reg13",
      "1029 EMPTY OBJECT      -> reg12",
      "1031 PUSH MEMORY ELEMENT IF INIT      58 -> reg14",
      "1034 PUT      reg12[value] = reg14",
      "1040 PUT      reg12[enumerable] = false",
      "1046 PUT      reg12[writable] = true",
      "1052 PUT      reg12[configurable] = true",
      "1058 PUT      reg13[constructor] = reg12",
      "1064 PUT      reg9[1] = reg13",
      "1068 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg9",
      "1072 SET      reg2 -> reg8",
      "1075 PUT      reg5[prototype] = reg8",
      "1081 PUSH MEMORY ELEMENT IF INIT      9 -> reg8",
      "1084 NEW ARRAY      2 -> reg11",
      "1087 PUSH MEMORY ELEMENT IF INIT      58 -> reg9",
      "1090 PUT      reg11[0] = reg9",
      "1094 PUSH MEMORY ELEMENT IF INIT      57 -> reg9",
      "1097 PUT      reg11[1] = reg9",
      "1101 CALL FUNCTION      PTR: reg8 MEM: reg11",
      "1105 SET      reg2 -> reg5",
      "1108 JUMP OR RETURN VAL      reg5"
  ],
  "1171": [
      "1171 GET WINDOW PROP      Reflect -> reg5",
      "1176 GET      reg5[construct] -> reg6",
      "1182 GET      reg6[bind] -> reg5",
      "1188 EMPTY ARRAY      -> reg7",
      "1190 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg7",
      "1194 SET      reg2 -> reg4",
      "1197 SET MEMORY ELEMENT IF INIT      6 = reg4",
      "1200 JUMP      1380",
      "1380 PUSH MEMORY ELEMENT IF INIT      6 -> reg7",
      "1383 GET      reg7[apply] -> reg4",
      "1389 NEW ARRAY      2 -> reg8",
      "1392 PUT      reg8[0] = null",
      "1396 PUT      reg8[1] = reg3",
      "1400 CALL FUNCTION      OBJ: reg7 FUNC: reg4 ARGS: reg8",
      "1404 SET      reg2 -> reg5",
      "1407 JUMP OR RETURN VAL      reg5"
  ],
  "1202": [
      "1202 INIT FUNCTION STATE      PTR: 1211 NAME:  LEN: 3 -> reg4",
      "1209 JUMP      1377",
      "1377 SET MEMORY ELEMENT IF INIT      6 = reg4",
      "1380 PUSH MEMORY ELEMENT IF INIT      6 -> reg7",
      "1383 GET      reg7[apply] -> reg4",
      "1389 NEW ARRAY      2 -> reg8",
      "1392 PUT      reg8[0] = null",
      "1396 PUT      reg8[1] = reg3",
      "1400 CALL FUNCTION      OBJ: reg7 FUNC: reg4 ARGS: reg8",
      "1404 SET      reg2 -> reg5",
      "1407 JUMP OR RETURN VAL      reg5"
  ],
  "1339": [
      "1339 PUSH MEMORY ELEMENT IF INIT      9 -> reg4",
      "1342 NEW ARRAY      2 -> reg7",
      "1345 PUSH MEMORY ELEMENT IF INIT      77 -> reg9",
      "1348 PUT      reg7[0] = reg9",
      "1352 PUSH MEMORY ELEMENT IF INIT      74 -> reg10",
      "1355 GET      reg10[prototype] -> reg9",
      "1361 PUT      reg7[1] = reg9",
      "1365 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "1369 SET      reg2 -> reg6",
      "1372 PUSH MEMORY ELEMENT IF INIT      77 -> reg4",
      "1375 JUMP OR RETURN VAL      reg4"
  ],
  "1372": [
      "1372 PUSH MEMORY ELEMENT IF INIT      77 -> reg4",
      "1375 JUMP OR RETURN VAL      reg4"
  ],
  "1438": [
      "1438 GET WINDOW PROP      Reflect -> reg5",
      "1443 GET      reg5[construct] -> reg6",
      "1449 NOT      reg6 -> reg5",
      "1452 SET      reg5 -> reg4",
      "1455 JUMP IF FALSE      reg4 TO: 1460 | 1458"
  ],
  "1455": ["1455 JUMP IF FALSE      reg4 TO: 1460 | 1458"],
  "1458": ["1458 JUMP OR RETURN VAL      false"],
  "1460": [
      "1460 GET WINDOW PROP      Reflect -> reg6",
      "1465 GET      reg6[construct] -> reg4",
      "1471 GET      reg4[sham] -> reg5",
      "1477 JUMP IF FALSE      reg5 TO: 1482 | 1480"
  ],
  "1480": ["1480 JUMP OR RETURN VAL      false"],
  "1482": [
      "1482 GET WINDOW PROP      Proxy -> reg5",
      "1487 TYPEOF      reg5 -> reg4",
      "1490 STRICT EQUAL      reg4 === function -> reg5",
      "1496 JUMP IF FALSE      reg5 TO: 1501 | 1499"
  ],
  "1499": ["1499 JUMP OR RETURN VAL      true"],
  "1501": [
      "1501 SET I      1594",
      "1503 GET WINDOW PROP      Boolean -> reg4",
      "1508 GET      reg4[prototype] -> reg7",
      "1514 GET      reg7[valueOf] -> reg5",
      "1520 GET      reg5[call] -> reg4",
      "1526 NEW ARRAY      1 -> reg7",
      "1529 GET WINDOW PROP      Reflect -> reg8",
      "1534 GET      reg8[construct] -> reg10",
      "1540 NEW ARRAY      3 -> reg11",
      "1543 GET WINDOW PROP      Boolean -> reg13",
      "1548 PUT      reg11[0] = reg13",
      "1552 EMPTY ARRAY      -> reg13",
      "1554 PUT      reg11[1] = reg13",
      "1558 INIT FUNCTION STATE      PTR: 1567 NAME:  LEN: 0 -> reg12",
      "1565 JUMP      1568",
      "1568 PUT      reg11[2] = reg12",
      "1572 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg11",
      "1576 SET      reg2 -> reg9",
      "1579 PUT      reg7[0] = reg9",
      "1583 CALL FUNCTION      OBJ: reg5 FUNC: reg4 ARGS: reg7",
      "1587 SET      reg2 -> reg6",
      "1590 JUMP OR RETURN VAL      true"
  ],
  "1594": [
      "1594 SET I      null",
      "1596 PUSH F.K      -> reg4",
      "1598 VOID F",
      "1599 SET MEMORY ELEMENT      0 = reg4",
      "1602 JUMP OR RETURN VAL      false"
  ],
  "1720": [
      "1720 GET WINDOW PROP      Object -> reg8",
      "1725 GET      reg8[setPrototypeOf] -> reg5",
      "1731 GET      reg5[bind] -> reg7",
      "1737 EMPTY ARRAY      -> reg8",
      "1739 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "1743 SET      reg2 -> reg6",
      "1746 SET      reg6 -> reg4",
      "1749 JUMP      1788",
      "1788 SET MEMORY ELEMENT IF INIT      9 = reg4",
      "1791 PUSH MEMORY ELEMENT IF INIT      9 -> reg6",
      "1794 NEW ARRAY      2 -> reg8",
      "1797 PUSH MEMORY ELEMENT IF INIT      90 -> reg7",
      "1800 PUT      reg8[0] = reg7",
      "1804 PUSH MEMORY ELEMENT IF INIT      91 -> reg7",
      "1807 PUT      reg8[1] = reg7",
      "1811 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "1815 SET      reg2 -> reg4",
      "1818 JUMP OR RETURN VAL      reg4"
  ],
  "1751": [
      "1751 INIT FUNCTION STATE      PTR: 1760 NAME:  LEN: 2 -> reg6",
      "1758 JUMP      1785",
      "1785 SET      reg6 -> reg4",
      "1788 SET MEMORY ELEMENT IF INIT      9 = reg4",
      "1791 PUSH MEMORY ELEMENT IF INIT      9 -> reg6",
      "1794 NEW ARRAY      2 -> reg8",
      "1797 PUSH MEMORY ELEMENT IF INIT      90 -> reg7",
      "1800 PUT      reg8[0] = reg7",
      "1804 PUSH MEMORY ELEMENT IF INIT      91 -> reg7",
      "1807 PUT      reg8[1] = reg7",
      "1811 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "1815 SET      reg2 -> reg4",
      "1818 JUMP OR RETURN VAL      reg4"
  ],
  "1849": [
      "1849 GET WINDOW PROP      Object -> reg6",
      "1854 GET      reg6[getPrototypeOf] -> reg7",
      "1860 GET      reg7[bind] -> reg6",
      "1866 EMPTY ARRAY      -> reg8",
      "1868 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg8",
      "1872 SET      reg2 -> reg5",
      "1875 SET      reg5 -> reg4",
      "1878 JUMP      1942",
      "1942 SET MEMORY ELEMENT IF INIT      10 = reg4",
      "1945 PUSH MEMORY ELEMENT IF INIT      10 -> reg6",
      "1948 NEW ARRAY      1 -> reg4",
      "1951 PUSH MEMORY ELEMENT IF INIT      98 -> reg8",
      "1954 PUT      reg4[0] = reg8",
      "1958 CALL FUNCTION      PTR: reg6 MEM: reg4",
      "1962 SET      reg2 -> reg5",
      "1965 JUMP OR RETURN VAL      reg5"
  ],
  "1880": [
      "1880 INIT FUNCTION STATE      PTR: 1889 NAME:  LEN: 1 -> reg5",
      "1887 JUMP      1939",
      "1939 SET      reg5 -> reg4",
      "1942 SET MEMORY ELEMENT IF INIT      10 = reg4",
      "1945 PUSH MEMORY ELEMENT IF INIT      10 -> reg6",
      "1948 NEW ARRAY      1 -> reg4",
      "1951 PUSH MEMORY ELEMENT IF INIT      98 -> reg8",
      "1954 PUT      reg4[0] = reg8",
      "1958 CALL FUNCTION      PTR: reg6 MEM: reg4",
      "1962 SET      reg2 -> reg5",
      "1965 JUMP OR RETURN VAL      reg5"
  ],
  "1906": [
      "1906 GET WINDOW PROP      Object -> reg5",
      "1911 GET      reg5[getPrototypeOf] -> reg7",
      "1917 NEW ARRAY      1 -> reg10",
      "1920 PUSH MEMORY ELEMENT IF INIT      102 -> reg8",
      "1923 PUT      reg10[0] = reg8",
      "1927 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg10",
      "1931 SET      reg2 -> reg6",
      "1934 SET      reg6 -> reg4",
      "1937 JUMP OR RETURN VAL      reg4"
  ],
  "1937": ["1937 JUMP OR RETURN VAL      reg4"],
  "2034": [
      "2034 GET WINDOW PROP      Object -> reg6",
      "2039 GET      reg6[getOwnPropertySymbols] -> reg7",
      "2045 NEW ARRAY      1 -> reg8",
      "2048 PUSH MEMORY ELEMENT IF INIT      105 -> reg9",
      "2051 PUT      reg8[0] = reg9",
      "2055 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "2059 SET      reg2 -> reg4",
      "2062 SET MEMORY ELEMENT IF INIT      108 = reg4",
      "2065 PUSH MEMORY ELEMENT IF INIT      106 -> reg4",
      "2068 JUMP IF FALSE      reg4 TO: 2155 | 2071"
  ],
  "2071": [
      "2071 PUSH MEMORY ELEMENT IF INIT      108 -> reg8",
      "2074 GET      reg8[filter] -> reg9",
      "2080 NEW ARRAY      1 -> reg10",
      "2083 INIT FUNCTION STATE      PTR: 2092 NAME:  LEN: 1 -> reg12",
      "2090 JUMP      2138",
      "2138 PUT      reg10[0] = reg12",
      "2142 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "2146 SET      reg2 -> reg7",
      "2149 SET MEMORY ELEMENT IF INIT      108 = reg7",
      "2152 SET      reg7 -> reg4",
      "2155 PUSH MEMORY ELEMENT IF INIT      107 -> reg7",
      "2158 GET      reg7[push] -> reg9",
      "2164 GET      reg9[apply] -> reg7",
      "2170 NEW ARRAY      2 -> reg10",
      "2173 PUSH MEMORY ELEMENT IF INIT      107 -> reg12",
      "2176 PUT      reg10[0] = reg12",
      "2180 PUSH MEMORY ELEMENT IF INIT      108 -> reg12",
      "2183 PUT      reg10[1] = reg12",
      "2187 CALL FUNCTION      OBJ: reg9 FUNC: reg7 ARGS: reg10",
      "2191 SET      reg2 -> reg4",
      "2194 PUSH MEMORY ELEMENT IF INIT      107 -> reg7",
      "2197 JUMP OR RETURN VAL      reg7"
  ],
  "2155": [
      "2155 PUSH MEMORY ELEMENT IF INIT      107 -> reg7",
      "2158 GET      reg7[push] -> reg9",
      "2164 GET      reg9[apply] -> reg7",
      "2170 NEW ARRAY      2 -> reg10",
      "2173 PUSH MEMORY ELEMENT IF INIT      107 -> reg12",
      "2176 PUT      reg10[0] = reg12",
      "2180 PUSH MEMORY ELEMENT IF INIT      108 -> reg12",
      "2183 PUT      reg10[1] = reg12",
      "2187 CALL FUNCTION      OBJ: reg9 FUNC: reg7 ARGS: reg10",
      "2191 SET      reg2 -> reg4",
      "2194 PUSH MEMORY ELEMENT IF INIT      107 -> reg7",
      "2197 JUMP OR RETURN VAL      reg7"
  ],
  "2194": [
      "2194 PUSH MEMORY ELEMENT IF INIT      107 -> reg7",
      "2197 JUMP OR RETURN VAL      reg7"
  ],
  "2237": [
      "2237 PUSH MEMORY ELEMENT IF INIT      116 -> reg5",
      "2240 GET      reg3[reg5] -> reg4",
      "2244 NOT EQUAL      null != reg4 -> reg6",
      "2248 JUMP IF FALSE      reg6 TO: 2263 | 2251"
  ],
  "2251": [
      "2251 PUSH MEMORY ELEMENT IF INIT      116 -> reg7",
      "2254 GET      reg3[reg7] -> reg5",
      "2258 SET      reg5 -> reg4",
      "2261 JUMP      2268",
      "2268 SET MEMORY ELEMENT IF INIT      117 = reg4",
      "2271 PUSH MEMORY ELEMENT IF INIT      116 -> reg4",
      "2274 MOD      reg4 % 2 -> reg5",
      "2278 JUMP IF FALSE      reg5 TO: 2406 | 2281"
  ],
  "2263": [
      "2263 EMPTY OBJECT      -> reg5",
      "2265 SET      reg5 -> reg4",
      "2268 SET MEMORY ELEMENT IF INIT      117 = reg4",
      "2271 PUSH MEMORY ELEMENT IF INIT      116 -> reg4",
      "2274 MOD      reg4 % 2 -> reg5",
      "2278 JUMP IF FALSE      reg5 TO: 2406 | 2281"
  ],
  "2281": [
      "2281 PUSH MEMORY ELEMENT IF INIT      11 -> reg8",
      "2284 NEW ARRAY      2 -> reg7",
      "2287 GET WINDOW PROP      Object -> reg9",
      "2292 NEW ARRAY      1 -> reg11",
      "2295 PUSH MEMORY ELEMENT IF INIT      117 -> reg13",
      "2298 PUT      reg11[0] = reg13",
      "2302 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "2306 SET      reg2 -> reg10",
      "2309 PUT      reg7[0] = reg10",
      "2313 NOT      0 -> reg9",
      "2316 PUT      reg7[1] = reg9",
      "2320 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "2324 SET      reg2 -> reg6",
      "2327 GET      reg6[forEach] -> reg7",
      "2333 NEW ARRAY      1 -> reg8",
      "2336 INIT FUNCTION STATE      PTR: 2345 NAME:  LEN: 1 -> reg9",
      "2343 JUMP      2390",
      "2390 PUT      reg8[0] = reg9",
      "2394 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "2398 SET      reg2 -> reg5",
      "2401 SET      reg5 -> reg4",
      "2404 JUMP      2637",
      "2637 PUSH MEMORY ELEMENT IF INIT      116 -> reg4",
      "2640 SET      reg4 -> reg7",
      "2643 ADD      reg41-> reg4",
      "2647 SET MEMORY ELEMENT IF INIT      116 = reg4",
      "2650 JUMP      2221",
      "2221 PUSH MEMORY ELEMENT IF INIT      116 -> reg4",
      "2224 GET      reg3[length] -> reg5",
      "2230 LESS THAN      reg4 < reg5 -> reg6",
      "2234 JUMP IF FALSE      reg6 TO: 2652 | 2237"
  ],
  "2406": [
      "2406 GET WINDOW PROP      Object -> reg5",
      "2411 GET      reg5[getOwnPropertyDescriptors] -> reg8",
      "2417 JUMP IF FALSE      reg8 TO: 2485 | 2420"
  ],
  "2420": [
      "2420 GET WINDOW PROP      Object -> reg8",
      "2425 GET      reg8[defineProperties] -> reg5",
      "2431 NEW ARRAY      2 -> reg11",
      "2434 PUSH MEMORY ELEMENT IF INIT      115 -> reg10",
      "2437 PUT      reg11[0] = reg10",
      "2441 GET WINDOW PROP      Object -> reg12",
      "2446 GET      reg12[getOwnPropertyDescriptors] -> reg13",
      "2452 NEW ARRAY      1 -> reg14",
      "2455 PUSH MEMORY ELEMENT IF INIT      117 -> reg15",
      "2458 PUT      reg14[0] = reg15",
      "2462 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "2466 SET      reg2 -> reg10",
      "2469 PUT      reg11[1] = reg10",
      "2473 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg11",
      "2477 SET      reg2 -> reg9",
      "2480 SET      reg9 -> reg7",
      "2483 JUMP      2634",
      "2634 SET      reg7 -> reg4",
      "2637 PUSH MEMORY ELEMENT IF INIT      116 -> reg4",
      "2640 SET      reg4 -> reg7",
      "2643 ADD      reg41-> reg4",
      "2647 SET MEMORY ELEMENT IF INIT      116 = reg4",
      "2650 JUMP      2221",
      "2221 PUSH MEMORY ELEMENT IF INIT      116 -> reg4",
      "2224 GET      reg3[length] -> reg5",
      "2230 LESS THAN      reg4 < reg5 -> reg6",
      "2234 JUMP IF FALSE      reg6 TO: 2652 | 2237"
  ],
  "2485": [
      "2485 PUSH MEMORY ELEMENT IF INIT      11 -> reg10",
      "2488 NEW ARRAY      1 -> reg13",
      "2491 GET WINDOW PROP      Object -> reg16",
      "2496 NEW ARRAY      1 -> reg14",
      "2499 PUSH MEMORY ELEMENT IF INIT      117 -> reg15",
      "2502 PUT      reg14[0] = reg15",
      "2506 CALL FUNCTION      PTR: reg16 MEM: reg14",
      "2510 SET      reg2 -> reg11",
      "2513 PUT      reg13[0] = reg11",
      "2517 CALL FUNCTION      PTR: reg10 MEM: reg13",
      "2521 SET      reg2 -> reg5",
      "2524 GET      reg5[forEach] -> reg10",
      "2530 NEW ARRAY      1 -> reg11",
      "2533 INIT FUNCTION STATE      PTR: 2542 NAME:  LEN: 1 -> reg14",
      "2540 JUMP      2620",
      "2620 PUT      reg11[0] = reg14",
      "2624 CALL FUNCTION      OBJ: reg5 FUNC: reg10 ARGS: reg11",
      "2628 SET      reg2 -> reg9",
      "2631 SET      reg9 -> reg7",
      "2634 SET      reg7 -> reg4",
      "2637 PUSH MEMORY ELEMENT IF INIT      116 -> reg4",
      "2640 SET      reg4 -> reg7",
      "2643 ADD      reg41-> reg4",
      "2647 SET MEMORY ELEMENT IF INIT      116 = reg4",
      "2650 JUMP      2221",
      "2221 PUSH MEMORY ELEMENT IF INIT      116 -> reg4",
      "2224 GET      reg3[length] -> reg5",
      "2230 LESS THAN      reg4 < reg5 -> reg6",
      "2234 JUMP IF FALSE      reg6 TO: 2652 | 2237"
  ],
  "2652": [
      "2652 PUSH MEMORY ELEMENT IF INIT      115 -> reg4",
      "2655 JUMP OR RETURN VAL      reg4"
  ],
  "2691": [
      "2691 GET WINDOW PROP      Object -> reg8",
      "2696 GET      reg8[defineProperty] -> reg7",
      "2702 NEW ARRAY      3 -> reg5",
      "2705 PUSH MEMORY ELEMENT IF INIT      129 -> reg9",
      "2708 PUT      reg5[0] = reg9",
      "2712 PUSH MEMORY ELEMENT IF INIT      130 -> reg6",
      "2715 PUT      reg5[1] = reg6",
      "2719 EMPTY OBJECT      -> reg6",
      "2721 PUSH MEMORY ELEMENT IF INIT      131 -> reg9",
      "2724 PUT      reg6[value] = reg9",
      "2730 PUT      reg6[enumerable] = true",
      "2736 PUT      reg6[configurable] = true",
      "2742 PUT      reg6[writable] = true",
      "2748 PUT      reg5[2] = reg6",
      "2752 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg5",
      "2756 SET      reg2 -> reg4",
      "2759 JUMP      2774",
      "2774 PUSH MEMORY ELEMENT IF INIT      129 -> reg4",
      "2777 JUMP OR RETURN VAL      reg4"
  ],
  "2761": [
      "2761 PUSH MEMORY ELEMENT IF INIT      129 -> reg5",
      "2764 PUSH MEMORY ELEMENT IF INIT      130 -> reg4",
      "2767 PUSH MEMORY ELEMENT IF INIT      131 -> reg7",
      "2770 PUT      reg5[reg4] = reg7",
      "2774 PUSH MEMORY ELEMENT IF INIT      129 -> reg4",
      "2777 JUMP OR RETURN VAL      reg4"
  ],
  "2813": [
      "2813 GET WINDOW PROP      TypeError -> reg5",
      "2818 NEW ARRAY      1 -> reg7",
      "2821 PUT      reg7[0] = Cannot call a class as a function",
      "2827 BIND APPLY      reg5 reg7 -> 4",
      "2831 HANDLE ERROR      reg4",
      "2833 JUMP OR RETURN"
  ],
  "2833": ["2833 JUMP OR RETURN"],
  "2878": [
      "2878 PUSH MEMORY ELEMENT IF INIT      139 -> reg4",
      "2881 PUSH MEMORY ELEMENT IF INIT      140 -> reg7",
      "2884 GET      reg4[reg7] -> reg5",
      "2888 SET MEMORY ELEMENT IF INIT      141 = reg5",
      "2891 PUSH MEMORY ELEMENT IF INIT      141 -> reg4",
      "2894 PUSH MEMORY ELEMENT IF INIT      141 -> reg5",
      "2897 GET      reg5[enumerable] -> reg6",
      "2903 JUMP IF TRUE      reg6 TO: 2909 | 2906"
  ],
  "2906": [
      "2906 SET      false -> reg6",
      "2909 PUT      reg4[enumerable] = reg6",
      "2915 PUSH MEMORY ELEMENT IF INIT      141 -> reg4",
      "2918 PUT      reg4[configurable] = true",
      "2924 PUSH MEMORY ELEMENT IF INIT      141 -> reg4",
      "2927 IN      value inreg4 -> reg6",
      "2933 JUMP IF FALSE      reg6 TO: 2945 | 2936"
  ],
  "2909": [
      "2909 PUT      reg4[enumerable] = reg6",
      "2915 PUSH MEMORY ELEMENT IF INIT      141 -> reg4",
      "2918 PUT      reg4[configurable] = true",
      "2924 PUSH MEMORY ELEMENT IF INIT      141 -> reg4",
      "2927 IN      value inreg4 -> reg6",
      "2933 JUMP IF FALSE      reg6 TO: 2945 | 2936"
  ],
  "2936": [
      "2936 PUSH MEMORY ELEMENT IF INIT      141 -> reg4",
      "2939 PUT      reg4[writable] = true",
      "2945 GET WINDOW PROP      Object -> reg5",
      "2950 GET      reg5[defineProperty] -> reg8",
      "2956 NEW ARRAY      3 -> reg7",
      "2959 PUSH MEMORY ELEMENT IF INIT      138 -> reg10",
      "2962 PUT      reg7[0] = reg10",
      "2966 PUSH MEMORY ELEMENT IF INIT      141 -> reg6",
      "2969 GET      reg6[key] -> reg9",
      "2975 PUT      reg7[1] = reg9",
      "2979 PUSH MEMORY ELEMENT IF INIT      141 -> reg9",
      "2982 PUT      reg7[2] = reg9",
      "2986 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg7",
      "2990 SET      reg2 -> reg4",
      "2993 PUSH MEMORY ELEMENT IF INIT      140 -> reg4",
      "2996 SET      reg4 -> reg6",
      "2999 ADD      reg41-> reg4",
      "3003 SET MEMORY ELEMENT IF INIT      140 = reg4",
      "3006 JUMP      2859",
      "2859 PUSH MEMORY ELEMENT IF INIT      140 -> reg4",
      "2862 PUSH MEMORY ELEMENT IF INIT      139 -> reg6",
      "2865 GET      reg6[length] -> reg5",
      "2871 LESS THAN      reg4 < reg5 -> reg6",
      "2875 JUMP IF FALSE      reg6 TO: 3008 | 2878"
  ],
  "2945": [
      "2945 GET WINDOW PROP      Object -> reg5",
      "2950 GET      reg5[defineProperty] -> reg8",
      "2956 NEW ARRAY      3 -> reg7",
      "2959 PUSH MEMORY ELEMENT IF INIT      138 -> reg10",
      "2962 PUT      reg7[0] = reg10",
      "2966 PUSH MEMORY ELEMENT IF INIT      141 -> reg6",
      "2969 GET      reg6[key] -> reg9",
      "2975 PUT      reg7[1] = reg9",
      "2979 PUSH MEMORY ELEMENT IF INIT      141 -> reg9",
      "2982 PUT      reg7[2] = reg9",
      "2986 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg7",
      "2990 SET      reg2 -> reg4",
      "2993 PUSH MEMORY ELEMENT IF INIT      140 -> reg4",
      "2996 SET      reg4 -> reg6",
      "2999 ADD      reg41-> reg4",
      "3003 SET MEMORY ELEMENT IF INIT      140 = reg4",
      "3006 JUMP      2859",
      "2859 PUSH MEMORY ELEMENT IF INIT      140 -> reg4",
      "2862 PUSH MEMORY ELEMENT IF INIT      139 -> reg6",
      "2865 GET      reg6[length] -> reg5",
      "2871 LESS THAN      reg4 < reg5 -> reg6",
      "2875 JUMP IF FALSE      reg6 TO: 3008 | 2878"
  ],
  "3008": ["3008 JUMP OR RETURN"],
  "3036": [
      "3036 PUSH MEMORY ELEMENT IF INIT      15 -> reg5",
      "3039 NEW ARRAY      2 -> reg4",
      "3042 PUSH MEMORY ELEMENT IF INIT      146 -> reg8",
      "3045 GET      reg8[prototype] -> reg6",
      "3051 PUT      reg4[0] = reg6",
      "3055 PUSH MEMORY ELEMENT IF INIT      147 -> reg6",
      "3058 PUT      reg4[1] = reg6",
      "3062 CALL FUNCTION      PTR: reg5 MEM: reg4",
      "3066 SET      reg2 -> reg7",
      "3069 PUSH MEMORY ELEMENT IF INIT      148 -> reg4",
      "3072 JUMP IF FALSE      reg4 TO: 3102 | 3075"
  ],
  "3069": [
      "3069 PUSH MEMORY ELEMENT IF INIT      148 -> reg4",
      "3072 JUMP IF FALSE      reg4 TO: 3102 | 3075"
  ],
  "3075": [
      "3075 PUSH MEMORY ELEMENT IF INIT      15 -> reg4",
      "3078 NEW ARRAY      2 -> reg6",
      "3081 PUSH MEMORY ELEMENT IF INIT      146 -> reg8",
      "3084 PUT      reg6[0] = reg8",
      "3088 PUSH MEMORY ELEMENT IF INIT      148 -> reg8",
      "3091 PUT      reg6[1] = reg8",
      "3095 CALL FUNCTION      PTR: reg4 MEM: reg6",
      "3099 SET      reg2 -> reg5",
      "3102 GET WINDOW PROP      Object -> reg5",
      "3107 GET      reg5[defineProperty] -> reg6",
      "3113 NEW ARRAY      3 -> reg7",
      "3116 PUSH MEMORY ELEMENT IF INIT      146 -> reg8",
      "3119 PUT      reg7[0] = reg8",
      "3123 PUT      reg7[1] = prototype",
      "3129 EMPTY OBJECT      -> reg8",
      "3131 PUT      reg8[writable] = false",
      "3137 PUT      reg7[2] = reg8",
      "3141 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "3145 SET      reg2 -> reg4",
      "3148 PUSH MEMORY ELEMENT IF INIT      146 -> reg6",
      "3151 JUMP OR RETURN VAL      reg6"
  ],
  "3102": [
      "3102 GET WINDOW PROP      Object -> reg5",
      "3107 GET      reg5[defineProperty] -> reg6",
      "3113 NEW ARRAY      3 -> reg7",
      "3116 PUSH MEMORY ELEMENT IF INIT      146 -> reg8",
      "3119 PUT      reg7[0] = reg8",
      "3123 PUT      reg7[1] = prototype",
      "3129 EMPTY OBJECT      -> reg8",
      "3131 PUT      reg8[writable] = false",
      "3137 PUT      reg7[2] = reg8",
      "3141 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "3145 SET      reg2 -> reg4",
      "3148 PUSH MEMORY ELEMENT IF INIT      146 -> reg6",
      "3151 JUMP OR RETURN VAL      reg6"
  ],
  "3191": [
      "3191 PUSH MEMORY ELEMENT IF INIT      19 -> reg8",
      "3194 NEW ARRAY      1 -> reg7",
      "3197 PUSH MEMORY ELEMENT IF INIT      152 -> reg6",
      "3200 PUT      reg7[0] = reg6",
      "3204 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "3208 SET      reg2 -> reg5",
      "3211 SET      reg5 -> reg4",
      "3214 JUMP IF TRUE      reg4 TO: 3240 | 3217"
  ],
  "3214": ["3214 JUMP IF TRUE      reg4 TO: 3240 | 3217"],
  "3217": [
      "3217 PUSH MEMORY ELEMENT IF INIT      22 -> reg7",
      "3220 NEW ARRAY      1 -> reg9",
      "3223 PUSH MEMORY ELEMENT IF INIT      152 -> reg10",
      "3226 PUT      reg9[0] = reg10",
      "3230 CALL FUNCTION      PTR: reg7 MEM: reg9",
      "3234 SET      reg2 -> reg5",
      "3237 SET      reg5 -> reg4",
      "3240 JUMP IF TRUE      reg4 TO: 3258 | 3243"
  ],
  "3240": ["3240 JUMP IF TRUE      reg4 TO: 3258 | 3243"],
  "3243": [
      "3243 PUSH MEMORY ELEMENT IF INIT      18 -> reg6",
      "3246 EMPTY ARRAY      -> reg7",
      "3248 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "3252 SET      reg2 -> reg5",
      "3255 SET      reg5 -> reg4",
      "3258 JUMP OR RETURN VAL      reg4"
  ],
  "3258": ["3258 JUMP OR RETURN VAL      reg4"],
  "3325": [
      "3325 PUSH MEMORY ELEMENT IF INIT      158 -> reg5",
      "3328 GET WINDOW PROP      Symbol -> reg9",
      "3333 GET      reg9[iterator] -> reg10",
      "3339 GET      reg5[reg10] -> reg7",
      "3343 NOT EQUAL      reg7 != null -> reg5",
      "3347 SET      reg5 -> reg4",
      "3350 JUMP IF TRUE      reg4 TO: 3369 | 3353"
  ],
  "3350": ["3350 JUMP IF TRUE      reg4 TO: 3369 | 3353"],
  "3353": [
      "3353 PUSH MEMORY ELEMENT IF INIT      158 -> reg5",
      "3356 GET      reg5[@@iterator] -> reg6",
      "3362 NOT EQUAL      reg6 != null -> reg5",
      "3366 SET      reg5 -> reg4",
      "3369 JUMP IF FALSE      reg4 TO: 3402 | 3372"
  ],
  "3369": ["3369 JUMP IF FALSE      reg4 TO: 3402 | 3372"],
  "3372": [
      "3372 GET WINDOW PROP      Array -> reg7",
      "3377 GET      reg7[from] -> reg5",
      "3383 NEW ARRAY      1 -> reg6",
      "3386 PUSH MEMORY ELEMENT IF INIT      158 -> reg8",
      "3389 PUT      reg6[0] = reg8",
      "3393 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg6",
      "3397 SET      reg2 -> reg4",
      "3400 JUMP OR RETURN VAL      reg4"
  ],
  "3402": ["3402 JUMP OR RETURN"],
  "3449": [
      "3449 PUSH MEMORY ELEMENT IF INIT      23 -> reg6",
      "3452 NEW ARRAY      1 -> reg8",
      "3455 PUSH MEMORY ELEMENT IF INIT      163 -> reg9",
      "3458 PUT      reg8[0] = reg9",
      "3462 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "3466 SET      reg2 -> reg5",
      "3469 JUMP OR RETURN VAL      reg5"
  ],
  "3471": ["3471 JUMP OR RETURN"],
  "3519": [
      "3519 PUSH MEMORY ELEMENT IF INIT      166 -> reg7",
      "3522 GET WINDOW PROP      Symbol -> reg9",
      "3527 GET      reg9[iterator] -> reg6",
      "3533 GET      reg7[reg6] -> reg5",
      "3537 SET      reg5 -> reg4",
      "3540 JUMP IF TRUE      reg4 TO: 3555 | 3543"
  ],
  "3540": ["3540 JUMP IF TRUE      reg4 TO: 3555 | 3543"],
  "3543": [
      "3543 PUSH MEMORY ELEMENT IF INIT      166 -> reg5",
      "3546 GET      reg5[@@iterator] -> reg6",
      "3552 SET      reg6 -> reg4",
      "3555 SET MEMORY ELEMENT IF INIT      168 = reg4",
      "3558 PUSH MEMORY ELEMENT IF INIT      168 -> reg5",
      "3561 NOT      reg5 -> reg6",
      "3564 JUMP IF FALSE      reg6 TO: 3843 | 3567"
  ],
  "3555": [
      "3555 SET MEMORY ELEMENT IF INIT      168 = reg4",
      "3558 PUSH MEMORY ELEMENT IF INIT      168 -> reg5",
      "3561 NOT      reg5 -> reg6",
      "3564 JUMP IF FALSE      reg6 TO: 3843 | 3567"
  ],
  "3567": [
      "3567 GET WINDOW PROP      Array -> reg4",
      "3572 GET      reg4[isArray] -> reg6",
      "3578 NEW ARRAY      1 -> reg9",
      "3581 PUSH MEMORY ELEMENT IF INIT      166 -> reg7",
      "3584 PUT      reg9[0] = reg7",
      "3588 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg9",
      "3592 SET      reg2 -> reg5",
      "3595 JUMP IF TRUE      reg5 TO: 3624 | 3598"
  ],
  "3598": [
      "3598 PUSH MEMORY ELEMENT IF INIT      22 -> reg7",
      "3601 NEW ARRAY      1 -> reg8",
      "3604 PUSH MEMORY ELEMENT IF INIT      166 -> reg10",
      "3607 PUT      reg8[0] = reg10",
      "3611 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "3615 SET      reg2 -> reg6",
      "3618 SET MEMORY ELEMENT IF INIT      168 = reg6",
      "3621 SET      reg6 -> reg5",
      "3624 JUMP IF TRUE      reg5 TO: 3666 | 3627"
  ],
  "3624": ["3624 JUMP IF TRUE      reg5 TO: 3666 | 3627"],
  "3627": [
      "3627 PUSH MEMORY ELEMENT IF INIT      167 -> reg6",
      "3630 JUMP IF FALSE      reg6 TO: 3639 | 3633"
  ],
  "3633": [
      "3633 PUSH MEMORY ELEMENT IF INIT      166 -> reg7",
      "3636 SET      reg7 -> reg6",
      "3639 JUMP IF FALSE      reg6 TO: 3663 | 3642"
  ],
  "3639": ["3639 JUMP IF FALSE      reg6 TO: 3663 | 3642"],
  "3642": [
      "3642 PUSH MEMORY ELEMENT IF INIT      166 -> reg7",
      "3645 GET      reg7[length] -> reg10",
      "3651 TYPEOF      reg10 -> reg7",
      "3654 STRICT EQUAL      reg7 === number -> reg8",
      "3660 SET      reg8 -> reg6",
      "3663 SET      reg6 -> reg5",
      "3666 JUMP IF FALSE      reg5 TO: 3823 | 3669"
  ],
  "3663": [
      "3663 SET      reg6 -> reg5",
      "3666 JUMP IF FALSE      reg5 TO: 3823 | 3669"
  ],
  "3666": ["3666 JUMP IF FALSE      reg5 TO: 3823 | 3669"],
  "3669": [
      "3669 PUSH MEMORY ELEMENT IF INIT      168 -> reg8",
      "3672 JUMP IF FALSE      reg8 TO: 3681 | 3675"
  ],
  "3675": [
      "3675 PUSH MEMORY ELEMENT IF INIT      168 -> reg5",
      "3678 SET MEMORY ELEMENT IF INIT      166 = reg5",
      "3681 SET MEMORY ELEMENT IF INIT      169 = 0",
      "3684 INIT FUNCTION STATE      PTR: 3693 NAME:  LEN: 0 -> reg7",
      "3691 JUMP      3694",
      "3694 SET MEMORY ELEMENT IF INIT      170 = reg7",
      "3697 EMPTY OBJECT      -> reg5",
      "3699 PUSH MEMORY ELEMENT IF INIT      170 -> reg7",
      "3702 PUT      reg5[s] = reg7",
      "3708 INIT FUNCTION STATE      PTR: 3717 NAME:  LEN: 0 -> reg6",
      "3715 JUMP      3782",
      "3782 PUT      reg5[n] = reg6",
      "3788 INIT FUNCTION STATE      PTR: 3797 NAME:  LEN: 1 -> reg6",
      "3795 JUMP      3806",
      "3806 PUT      reg5[e] = reg6",
      "3812 PUSH MEMORY ELEMENT IF INIT      170 -> reg6",
      "3815 PUT      reg5[f] = reg6",
      "3821 JUMP OR RETURN VAL      reg5"
  ],
  "3681": [
      "3681 SET MEMORY ELEMENT IF INIT      169 = 0",
      "3684 INIT FUNCTION STATE      PTR: 3693 NAME:  LEN: 0 -> reg7",
      "3691 JUMP      3694",
      "3694 SET MEMORY ELEMENT IF INIT      170 = reg7",
      "3697 EMPTY OBJECT      -> reg5",
      "3699 PUSH MEMORY ELEMENT IF INIT      170 -> reg7",
      "3702 PUT      reg5[s] = reg7",
      "3708 INIT FUNCTION STATE      PTR: 3717 NAME:  LEN: 0 -> reg6",
      "3715 JUMP      3782",
      "3782 PUT      reg5[n] = reg6",
      "3788 INIT FUNCTION STATE      PTR: 3797 NAME:  LEN: 1 -> reg6",
      "3795 JUMP      3806",
      "3806 PUT      reg5[e] = reg6",
      "3812 PUSH MEMORY ELEMENT IF INIT      170 -> reg6",
      "3815 PUT      reg5[f] = reg6",
      "3821 JUMP OR RETURN VAL      reg5"
  ],
  "3736": [
      "3736 EMPTY OBJECT      -> reg4",
      "3738 PUT      reg4[done] = true",
      "3744 JUMP OR RETURN VAL      reg4"
  ],
  "3746": [
      "3746 EMPTY OBJECT      -> reg4",
      "3748 PUT      reg4[done] = false",
      "3754 PUSH MEMORY ELEMENT IF INIT      166 -> reg5",
      "3757 PUSH MEMORY ELEMENT IF INIT      169 -> reg7",
      "3760 SET      reg7 -> reg9",
      "3763 ADD      reg71-> reg7",
      "3767 SET MEMORY ELEMENT IF INIT      169 = reg7",
      "3770 GET      reg5[reg9] -> reg6",
      "3774 PUT      reg4[value] = reg6",
      "3780 JUMP OR RETURN VAL      reg4"
  ],
  "3823": [
      "3823 GET WINDOW PROP      TypeError -> reg7",
      "3828 NEW ARRAY      1 -> reg5",
      "3831 PUT      reg5[0] = Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.",
      "3837 BIND APPLY      reg7 reg5 -> 6",
      "3841 HANDLE ERROR      reg6",
      "3843 SET MEMORY ELEMENT IF INIT      171 = true",
      "3846 SET MEMORY ELEMENT IF INIT      172 = false",
      "3849 EMPTY OBJECT      -> reg5",
      "3851 INIT FUNCTION STATE      PTR: 3860 NAME:  LEN: 0 -> reg6",
      "3858 JUMP      3890",
      "3890 PUT      reg5[s] = reg6",
      "3896 INIT FUNCTION STATE      PTR: 3905 NAME:  LEN: 0 -> reg6",
      "3903 JUMP      3945",
      "3945 PUT      reg5[n] = reg6",
      "3951 INIT FUNCTION STATE      PTR: 3960 NAME:  LEN: 1 -> reg6",
      "3958 JUMP      3973",
      "3973 PUT      reg5[e] = reg6",
      "3979 INIT FUNCTION STATE      PTR: 3988 NAME:  LEN: 0 -> reg6",
      "3986 JUMP      4057",
      "4057 PUT      reg5[f] = reg6",
      "4063 JUMP OR RETURN VAL      reg5"
  ],
  "3843": [
      "3843 SET MEMORY ELEMENT IF INIT      171 = true",
      "3846 SET MEMORY ELEMENT IF INIT      172 = false",
      "3849 EMPTY OBJECT      -> reg5",
      "3851 INIT FUNCTION STATE      PTR: 3860 NAME:  LEN: 0 -> reg6",
      "3858 JUMP      3890",
      "3890 PUT      reg5[s] = reg6",
      "3896 INIT FUNCTION STATE      PTR: 3905 NAME:  LEN: 0 -> reg6",
      "3903 JUMP      3945",
      "3945 PUT      reg5[n] = reg6",
      "3951 INIT FUNCTION STATE      PTR: 3960 NAME:  LEN: 1 -> reg6",
      "3958 JUMP      3973",
      "3973 PUT      reg5[e] = reg6",
      "3979 INIT FUNCTION STATE      PTR: 3988 NAME:  LEN: 0 -> reg6",
      "3986 JUMP      4057",
      "4057 PUT      reg5[f] = reg6",
      "4063 JUMP OR RETURN VAL      reg5"
  ],
  "4001": [
      "4001 PUSH MEMORY ELEMENT IF INIT      168 -> reg4",
      "4004 GET      reg4[return] -> reg5",
      "4010 NOT EQUAL      reg5 != null -> reg4",
      "4014 SET      reg4 -> reg6",
      "4017 JUMP IF FALSE      reg6 TO: 4038 | 4020"
  ],
  "4017": ["4017 JUMP IF FALSE      reg6 TO: 4038 | 4020"],
  "4020": [
      "4020 PUSH MEMORY ELEMENT IF INIT      168 -> reg4",
      "4023 GET      reg4[return] -> reg6",
      "4029 EMPTY ARRAY      -> reg7",
      "4031 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "4035 SET      reg2 -> reg5",
      "4038 SET I      null",
      "4040 SET N      null",
      "4042 PUSH MEMORY ELEMENT IF INIT      172 -> reg5",
      "4045 JUMP IF FALSE      reg5 TO: 4053 | 4048"
  ],
  "4038": [
      "4038 SET I      null",
      "4040 SET N      null",
      "4042 PUSH MEMORY ELEMENT IF INIT      172 -> reg5",
      "4045 JUMP IF FALSE      reg5 TO: 4053 | 4048"
  ],
  "4048": [
      "4048 PUSH MEMORY ELEMENT IF INIT      173 -> reg5",
      "4051 HANDLE ERROR      reg5",
      "4053 HANDLE TRACE OR JUMP OR RETURN C",
      "4054 SET I      null",
      "4056 JUMP OR RETURN"
  ],
  "4053": [
      "4053 HANDLE TRACE OR JUMP OR RETURN C",
      "4054 SET I      null",
      "4056 JUMP OR RETURN"
  ],
  "4094": ["4094 JUMP OR RETURN"],
  "4095": [
      "4095 PUSH MEMORY ELEMENT IF INIT      199 -> reg4",
      "4098 TYPEOF      reg4 -> reg6",
      "4101 STRICT EQUAL      reg6 === string -> reg4",
      "4107 JUMP IF FALSE      reg4 TO: 4139 | 4110"
  ],
  "4110": [
      "4110 PUSH MEMORY ELEMENT IF INIT      23 -> reg4",
      "4113 NEW ARRAY      2 -> reg6",
      "4116 PUSH MEMORY ELEMENT IF INIT      199 -> reg7",
      "4119 PUT      reg6[0] = reg7",
      "4123 PUSH MEMORY ELEMENT IF INIT      200 -> reg7",
      "4126 PUT      reg6[1] = reg7",
      "4130 CALL FUNCTION      PTR: reg4 MEM: reg6",
      "4134 SET      reg2 -> reg5",
      "4137 JUMP OR RETURN VAL      reg5"
  ],
  "4139": [
      "4139 GET WINDOW PROP      Object -> reg4",
      "4144 GET      reg4[prototype] -> reg8",
      "4150 GET      reg8[toString] -> reg4",
      "4156 GET      reg4[call] -> reg8",
      "4162 NEW ARRAY      1 -> reg5",
      "4165 PUSH MEMORY ELEMENT IF INIT      199 -> reg9",
      "4168 PUT      reg5[0] = reg9",
      "4172 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg5",
      "4176 SET      reg2 -> reg7",
      "4179 GET      reg7[slice] -> reg5",
      "4185 NEW ARRAY      2 -> reg8",
      "4188 PUT      reg8[0] = 8",
      "4192 SUBTRACT      0 - 1 -> reg9",
      "4196 PUT      reg8[1] = reg9",
      "4200 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg8",
      "4204 SET      reg2 -> reg6",
      "4207 SET MEMORY ELEMENT IF INIT      201 = reg6",
      "4210 PUSH MEMORY ELEMENT IF INIT      201 -> reg5",
      "4213 STRICT EQUAL      reg5 === Object -> reg6",
      "4219 JUMP IF FALSE      reg6 TO: 4234 | 4222"
  ],
  "4222": [
      "4222 PUSH MEMORY ELEMENT IF INIT      199 -> reg5",
      "4225 GET      reg5[constructor] -> reg8",
      "4231 SET      reg8 -> reg6",
      "4234 JUMP IF FALSE      reg6 TO: 4255 | 4237"
  ],
  "4234": ["4234 JUMP IF FALSE      reg6 TO: 4255 | 4237"],
  "4237": [
      "4237 PUSH MEMORY ELEMENT IF INIT      199 -> reg5",
      "4240 GET      reg5[constructor] -> reg6",
      "4246 GET      reg6[name] -> reg8",
      "4252 SET MEMORY ELEMENT IF INIT      201 = reg8",
      "4255 PUSH MEMORY ELEMENT IF INIT      201 -> reg5",
      "4258 STRICT EQUAL      reg5 === Map -> reg6",
      "4264 JUMP IF TRUE      reg6 TO: 4279 | 4267"
  ],
  "4255": [
      "4255 PUSH MEMORY ELEMENT IF INIT      201 -> reg5",
      "4258 STRICT EQUAL      reg5 === Map -> reg6",
      "4264 JUMP IF TRUE      reg6 TO: 4279 | 4267"
  ],
  "4267": [
      "4267 PUSH MEMORY ELEMENT IF INIT      201 -> reg5",
      "4270 STRICT EQUAL      reg5 === Set -> reg9",
      "4276 SET      reg9 -> reg6",
      "4279 JUMP IF FALSE      reg6 TO: 4312 | 4282"
  ],
  "4279": ["4279 JUMP IF FALSE      reg6 TO: 4312 | 4282"],
  "4282": [
      "4282 GET WINDOW PROP      Array -> reg5",
      "4287 GET      reg5[from] -> reg6",
      "4293 NEW ARRAY      1 -> reg12",
      "4296 PUSH MEMORY ELEMENT IF INIT      199 -> reg9",
      "4299 PUT      reg12[0] = reg9",
      "4303 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg12",
      "4307 SET      reg2 -> reg8",
      "4310 JUMP OR RETURN VAL      reg8"
  ],
  "4312": [
      "4312 PUSH MEMORY ELEMENT IF INIT      201 -> reg6",
      "4315 STRICT EQUAL      reg6 === Arguments -> reg8",
      "4321 JUMP IF TRUE      reg8 TO: 4358 | 4324"
  ],
  "4324": [
      "4324 NEW REGEXP      ^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$ ,  -> reg9",
      "4332 GET      reg9[test] -> reg10",
      "4338 NEW ARRAY      1 -> reg11",
      "4341 PUSH MEMORY ELEMENT IF INIT      201 -> reg13",
      "4344 PUT      reg11[0] = reg13",
      "4348 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "4352 SET      reg2 -> reg6",
      "4355 SET      reg6 -> reg8",
      "4358 JUMP IF FALSE      reg8 TO: 4390 | 4361"
  ],
  "4358": ["4358 JUMP IF FALSE      reg8 TO: 4390 | 4361"],
  "4361": [
      "4361 PUSH MEMORY ELEMENT IF INIT      23 -> reg6",
      "4364 NEW ARRAY      2 -> reg8",
      "4367 PUSH MEMORY ELEMENT IF INIT      199 -> reg11",
      "4370 PUT      reg8[0] = reg11",
      "4374 PUSH MEMORY ELEMENT IF INIT      200 -> reg11",
      "4377 PUT      reg8[1] = reg11",
      "4381 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "4385 SET      reg2 -> reg10",
      "4388 JUMP OR RETURN VAL      reg10"
  ],
  "4390": ["4390 JUMP OR RETURN"],
  "4423": [
      "4423 PUSH MEMORY ELEMENT IF INIT      212 -> reg4",
      "4426 PUSH MEMORY ELEMENT IF INIT      211 -> reg5",
      "4429 GET      reg5[length] -> reg7",
      "4435 GREATER THAN      reg4 > reg7 -> reg5",
      "4439 SET      reg5 -> reg6",
      "4442 JUMP IF FALSE      reg6 TO: 4457 | 4445"
  ],
  "4442": ["4442 JUMP IF FALSE      reg6 TO: 4457 | 4445"],
  "4445": [
      "4445 PUSH MEMORY ELEMENT IF INIT      211 -> reg4",
      "4448 GET      reg4[length] -> reg5",
      "4454 SET MEMORY ELEMENT IF INIT      212 = reg5",
      "4457 SET MEMORY ELEMENT IF INIT      213 = 0",
      "4460 GET WINDOW PROP      Array -> reg5",
      "4465 NEW ARRAY      1 -> reg6",
      "4468 PUSH MEMORY ELEMENT IF INIT      212 -> reg7",
      "4471 PUT      reg6[0] = reg7",
      "4475 BIND APPLY      reg5 reg6 -> 4",
      "4479 SET MEMORY ELEMENT IF INIT      214 = reg4",
      "4482 PUSH MEMORY ELEMENT IF INIT      213 -> reg4",
      "4485 PUSH MEMORY ELEMENT IF INIT      212 -> reg6",
      "4488 LESS THAN      reg4 < reg6 -> reg5",
      "4492 JUMP IF FALSE      reg5 TO: 4530 | 4495"
  ],
  "4457": [
      "4457 SET MEMORY ELEMENT IF INIT      213 = 0",
      "4460 GET WINDOW PROP      Array -> reg5",
      "4465 NEW ARRAY      1 -> reg6",
      "4468 PUSH MEMORY ELEMENT IF INIT      212 -> reg7",
      "4471 PUT      reg6[0] = reg7",
      "4475 BIND APPLY      reg5 reg6 -> 4",
      "4479 SET MEMORY ELEMENT IF INIT      214 = reg4",
      "4482 PUSH MEMORY ELEMENT IF INIT      213 -> reg4",
      "4485 PUSH MEMORY ELEMENT IF INIT      212 -> reg6",
      "4488 LESS THAN      reg4 < reg6 -> reg5",
      "4492 JUMP IF FALSE      reg5 TO: 4530 | 4495"
  ],
  "4495": [
      "4495 PUSH MEMORY ELEMENT IF INIT      214 -> reg4",
      "4498 PUSH MEMORY ELEMENT IF INIT      213 -> reg8",
      "4501 PUSH MEMORY ELEMENT IF INIT      211 -> reg5",
      "4504 PUSH MEMORY ELEMENT IF INIT      213 -> reg10",
      "4507 GET      reg5[reg10] -> reg6",
      "4511 PUT      reg4[reg8] = reg6",
      "4515 PUSH MEMORY ELEMENT IF INIT      213 -> reg4",
      "4518 SET      reg4 -> reg6",
      "4521 ADD      reg41-> reg4",
      "4525 SET MEMORY ELEMENT IF INIT      213 = reg4",
      "4528 JUMP      4482",
      "4482 PUSH MEMORY ELEMENT IF INIT      213 -> reg4",
      "4485 PUSH MEMORY ELEMENT IF INIT      212 -> reg6",
      "4488 LESS THAN      reg4 < reg6 -> reg5",
      "4492 JUMP IF FALSE      reg5 TO: 4530 | 4495"
  ],
  "4530": [
      "4530 PUSH MEMORY ELEMENT IF INIT      214 -> reg4",
      "4533 JUMP OR RETURN VAL      reg4"
  ],
  "4632": [
      "4632 PUSH MEMORY ELEMENT IF INIT      220 -> reg10",
      "4635 GET      reg10[get] -> reg11",
      "4641 NEW ARRAY      1 -> reg12",
      "4644 PUSH MEMORY ELEMENT IF INIT      224 -> reg14",
      "4647 PUT      reg12[0] = reg14",
      "4651 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "4655 SET      reg2 -> reg9",
      "4658 SET      reg9 -> reg8",
      "4661 PUT      reg7[1] = reg8",
      "4665 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "4669 SET      reg2 -> reg4",
      "4672 PUSH MEMORY ELEMENT IF INIT      9 -> reg6",
      "4675 NEW ARRAY      2 -> reg7",
      "4678 PUSH MEMORY ELEMENT IF INIT      227 -> reg8",
      "4681 PUT      reg7[0] = reg8",
      "4685 PUSH MEMORY ELEMENT IF INIT      221 -> reg8",
      "4688 GET      reg8[prototype] -> reg9",
      "4694 PUT      reg7[1] = reg9",
      "4698 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "4702 SET      reg2 -> reg4",
      "4705 JUMP OR RETURN VAL      reg4"
  ],
  "4661": [
      "4661 PUT      reg7[1] = reg8",
      "4665 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "4669 SET      reg2 -> reg4",
      "4672 PUSH MEMORY ELEMENT IF INIT      9 -> reg6",
      "4675 NEW ARRAY      2 -> reg7",
      "4678 PUSH MEMORY ELEMENT IF INIT      227 -> reg8",
      "4681 PUT      reg7[0] = reg8",
      "4685 PUSH MEMORY ELEMENT IF INIT      221 -> reg8",
      "4688 GET      reg8[prototype] -> reg9",
      "4694 PUT      reg7[1] = reg9",
      "4698 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "4702 SET      reg2 -> reg4",
      "4705 JUMP OR RETURN VAL      reg4"
  ],
  "4840": [
      "4840 PUSH MEMORY ELEMENT IF INIT      235 -> reg5",
      "4843 PUSH MEMORY ELEMENT IF INIT      236 -> reg6",
      "4846 PUSH MEMORY ELEMENT IF INIT      230 -> reg4",
      "4849 PUSH MEMORY ELEMENT IF INIT      237 -> reg8",
      "4852 GET      reg4[reg8] -> reg7",
      "4856 PUT      reg5[reg6] = reg7",
      "4860 JUMP      4960",
      "4960 PUSH MEMORY ELEMENT IF INIT      235 -> reg4",
      "4963 JUMP OR RETURN VAL      reg4"
  ],
  "4862": [
      "4862 SET MEMORY ELEMENT IF INIT      238 = 0",
      "4865 SET      undefined -> reg4",
      "4868 PUSH MEMORY ELEMENT IF INIT      230 -> reg6",
      "4871 PUSH MEMORY ELEMENT IF INIT      237 -> reg5",
      "4874 PUSH MEMORY ELEMENT IF INIT      238 -> reg10",
      "4877 GET      reg5[reg10] -> reg7",
      "4881 GET      reg6[reg7] -> reg8",
      "4885 STRICT EQUAL      reg4 === reg8 -> reg5",
      "4889 JUMP IF FALSE      reg5 TO: 4915 | 4892"
  ],
  "4892": [
      "4892 PUSH MEMORY ELEMENT IF INIT      238 -> reg4",
      "4895 ADD      reg41-> reg6",
      "4899 PUSH MEMORY ELEMENT IF INIT      237 -> reg4",
      "4902 GET      reg4[length] -> reg7",
      "4908 LESS THAN      reg6 < reg7 -> reg8",
      "4912 SET      reg8 -> reg5",
      "4915 JUMP IF FALSE      reg5 TO: 4933 | 4918"
  ],
  "4915": ["4915 JUMP IF FALSE      reg5 TO: 4933 | 4918"],
  "4918": [
      "4918 PUSH MEMORY ELEMENT IF INIT      238 -> reg4",
      "4921 SET      reg4 -> reg6",
      "4924 ADD      reg41-> reg4",
      "4928 SET MEMORY ELEMENT IF INIT      238 = reg4",
      "4931 JUMP      4865",
      "4865 SET      undefined -> reg4",
      "4868 PUSH MEMORY ELEMENT IF INIT      230 -> reg6",
      "4871 PUSH MEMORY ELEMENT IF INIT      237 -> reg5",
      "4874 PUSH MEMORY ELEMENT IF INIT      238 -> reg10",
      "4877 GET      reg5[reg10] -> reg7",
      "4881 GET      reg6[reg7] -> reg8",
      "4885 STRICT EQUAL      reg4 === reg8 -> reg5",
      "4889 JUMP IF FALSE      reg5 TO: 4915 | 4892"
  ],
  "4933": [
      "4933 PUSH MEMORY ELEMENT IF INIT      235 -> reg4",
      "4936 PUSH MEMORY ELEMENT IF INIT      236 -> reg5",
      "4939 PUSH MEMORY ELEMENT IF INIT      230 -> reg6",
      "4942 PUSH MEMORY ELEMENT IF INIT      237 -> reg8",
      "4945 PUSH MEMORY ELEMENT IF INIT      238 -> reg9",
      "4948 GET      reg8[reg9] -> reg11",
      "4952 GET      reg6[reg11] -> reg7",
      "4956 PUT      reg4[reg5] = reg7",
      "4960 PUSH MEMORY ELEMENT IF INIT      235 -> reg4",
      "4963 JUMP OR RETURN VAL      reg4"
  ],
  "5187": [
      "5187 PUSH MEMORY ELEMENT IF INIT      248 -> reg4",
      "5190 PUSH MEMORY ELEMENT IF INIT      222 -> reg7",
      "5193 NEW ARRAY      2 -> reg8",
      "5196 PUSH MEMORY ELEMENT IF INIT      248 -> reg9",
      "5199 PUT      reg8[0] = reg9",
      "5203 PUSH H       -> reg10",
      "5205 PUT      reg8[1] = reg10",
      "5209 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "5213 SET      reg2 -> reg6",
      "5216 PUT      reg4[groups] = reg6",
      "5222 PUSH MEMORY ELEMENT IF INIT      248 -> reg4",
      "5225 GET      reg4[indices] -> reg6",
      "5231 SET MEMORY ELEMENT IF INIT      249 = reg6",
      "5234 PUSH MEMORY ELEMENT IF INIT      249 -> reg4",
      "5237 JUMP IF FALSE      reg4 TO: 5278 | 5240"
  ],
  "5240": [
      "5240 PUSH MEMORY ELEMENT IF INIT      249 -> reg6",
      "5243 PUSH MEMORY ELEMENT IF INIT      222 -> reg9",
      "5246 NEW ARRAY      2 -> reg7",
      "5249 PUSH MEMORY ELEMENT IF INIT      249 -> reg12",
      "5252 PUT      reg7[0] = reg12",
      "5256 PUSH H       -> reg10",
      "5258 PUT      reg7[1] = reg10",
      "5262 CALL FUNCTION      PTR: reg9 MEM: reg7",
      "5266 SET      reg2 -> reg8",
      "5269 PUT      reg6[groups] = reg8",
      "5275 SET      reg8 -> reg4",
      "5278 PUSH MEMORY ELEMENT IF INIT      248 -> reg4",
      "5281 JUMP OR RETURN VAL      reg4"
  ],
  "5278": [
      "5278 PUSH MEMORY ELEMENT IF INIT      248 -> reg4",
      "5281 JUMP OR RETURN VAL      reg4"
  ],
  "5343": [
      "5343 PUSH MEMORY ELEMENT IF INIT      220 -> reg5",
      "5346 GET      reg5[get] -> reg6",
      "5352 NEW ARRAY      1 -> reg7",
      "5355 PUSH H       -> reg9",
      "5357 PUT      reg7[0] = reg9",
      "5361 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "5365 SET      reg2 -> reg4",
      "5368 SET MEMORY ELEMENT IF INIT      256 = reg4",
      "5371 PUSH MEMORY ELEMENT IF INIT      219 -> reg9",
      "5374 GET WINDOW PROP      Symbol -> reg4",
      "5379 GET      reg4[replace] -> reg8",
      "5385 GET      reg9[reg8] -> reg6",
      "5389 GET      reg6[call] -> reg4",
      "5395 NEW ARRAY      3 -> reg8",
      "5398 PUSH H       -> reg10",
      "5400 PUT      reg8[0] = reg10",
      "5404 PUSH MEMORY ELEMENT IF INIT      254 -> reg9",
      "5407 PUT      reg8[1] = reg9",
      "5411 PUSH MEMORY ELEMENT IF INIT      255 -> reg10",
      "5414 GET      reg10[replace] -> reg11",
      "5420 NEW ARRAY      2 -> reg12",
      "5423 NEW REGEXP      \\$<([^>]+)> , g -> reg13",
      "5431 PUT      reg12[0] = reg13",
      "5435 INIT FUNCTION STATE      PTR: 5444 NAME:  LEN: 2 -> reg13",
      "5442 JUMP      5540",
      "5540 PUT      reg12[1] = reg13",
      "5544 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "5548 SET      reg2 -> reg9",
      "5551 PUT      reg8[2] = reg9",
      "5555 CALL FUNCTION      OBJ: reg6 FUNC: reg4 ARGS: reg8",
      "5559 SET      reg2 -> reg7",
      "5562 JUMP OR RETURN VAL      reg7"
  ],
  "5496": [
      "5496 PUSH MEMORY ELEMENT IF INIT      263 -> reg7",
      "5499 GET      reg7[join] -> reg8",
      "5505 NEW ARRAY      1 -> reg10",
      "5508 PUT      reg10[0] = $",
      "5514 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "5518 SET      reg2 -> reg5",
      "5521 SET      reg5 -> reg6",
      "5524 JUMP      5532",
      "5532 ADD      $NaN-> reg5",
      "5538 JUMP OR RETURN VAL      reg5"
  ],
  "5526": [
      "5526 PUSH MEMORY ELEMENT IF INIT      263 -> reg5",
      "5529 SET      reg5 -> reg6",
      "5532 ADD      $NaN-> reg5",
      "5538 JUMP OR RETURN VAL      reg5"
  ],
  "5564": [
      "5564 PUSH MEMORY ELEMENT IF INIT      255 -> reg4",
      "5567 TYPEOF      reg4 -> reg8",
      "5570 EQUAL      function == reg8 -> reg7",
      "5576 JUMP IF FALSE      reg7 TO: 5801 | 5579"
  ],
  "5579": [
      "5579 PUSH H       -> reg4",
      "5581 SET MEMORY ELEMENT IF INIT      257 = reg4",
      "5584 PUSH MEMORY ELEMENT IF INIT      219 -> reg8",
      "5587 GET WINDOW PROP      Symbol -> reg11",
      "5592 GET      reg11[replace] -> reg4",
      "5598 GET      reg8[reg4] -> reg9",
      "5602 GET      reg9[call] -> reg8",
      "5608 NEW ARRAY      3 -> reg11",
      "5611 PUSH H       -> reg4",
      "5613 PUT      reg11[0] = reg4",
      "5617 PUSH MEMORY ELEMENT IF INIT      254 -> reg4",
      "5620 PUT      reg11[1] = reg4",
      "5624 INIT FUNCTION STATE      PTR: 5633 NAME:  LEN: 0 -> reg4",
      "5631 JUMP      5788",
      "5788 PUT      reg11[2] = reg4",
      "5792 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg11",
      "5796 SET      reg2 -> reg7",
      "5799 JUMP OR RETURN VAL      reg7"
  ],
  "5670": [
      "5670 EMPTY ARRAY      -> reg6",
      "5672 GET      reg6[slice] -> reg8",
      "5678 GET      reg8[call] -> reg6",
      "5684 NEW ARRAY      1 -> reg9",
      "5687 PUSH MEMORY ELEMENT IF INIT      268 -> reg10",
      "5690 PUT      reg9[0] = reg10",
      "5694 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg9",
      "5698 SET      reg2 -> reg4",
      "5701 SET MEMORY ELEMENT IF INIT      268 = reg4",
      "5704 GET      reg4[push] -> reg6",
      "5710 NEW ARRAY      1 -> reg9",
      "5713 PUSH MEMORY ELEMENT IF INIT      222 -> reg15",
      "5716 NEW ARRAY      2 -> reg12",
      "5719 PUSH MEMORY ELEMENT IF INIT      268 -> reg13",
      "5722 PUT      reg12[0] = reg13",
      "5726 PUSH MEMORY ELEMENT IF INIT      257 -> reg16",
      "5729 PUT      reg12[1] = reg16",
      "5733 CALL FUNCTION      PTR: reg15 MEM: reg12",
      "5737 SET      reg2 -> reg10",
      "5740 PUT      reg9[0] = reg10",
      "5744 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg9",
      "5748 SET      reg2 -> reg5",
      "5751 SET      reg5 -> reg7",
      "5754 PUSH MEMORY ELEMENT IF INIT      255 -> reg5",
      "5757 GET      reg5[apply] -> reg7",
      "5763 NEW ARRAY      2 -> reg11",
      "5766 PUSH H       -> reg9",
      "5768 PUT      reg11[0] = reg9",
      "5772 PUSH MEMORY ELEMENT IF INIT      268 -> reg9",
      "5775 PUT      reg11[1] = reg9",
      "5779 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg11",
      "5783 SET      reg2 -> reg6",
      "5786 JUMP OR RETURN VAL      reg6"
  ],
  "5754": [
      "5754 PUSH MEMORY ELEMENT IF INIT      255 -> reg5",
      "5757 GET      reg5[apply] -> reg7",
      "5763 NEW ARRAY      2 -> reg11",
      "5766 PUSH H       -> reg9",
      "5768 PUT      reg11[0] = reg9",
      "5772 PUSH MEMORY ELEMENT IF INIT      268 -> reg9",
      "5775 PUT      reg11[1] = reg9",
      "5779 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg11",
      "5783 SET      reg2 -> reg6",
      "5786 JUMP OR RETURN VAL      reg6"
  ],
  "5801": [
      "5801 PUSH MEMORY ELEMENT IF INIT      219 -> reg7",
      "5804 GET WINDOW PROP      Symbol -> reg12",
      "5809 GET      reg12[replace] -> reg11",
      "5815 GET      reg7[reg11] -> reg8",
      "5819 GET      reg8[call] -> reg7",
      "5825 NEW ARRAY      3 -> reg15",
      "5828 PUSH H       -> reg11",
      "5830 PUT      reg15[0] = reg11",
      "5834 PUSH MEMORY ELEMENT IF INIT      254 -> reg12",
      "5837 PUT      reg15[1] = reg12",
      "5841 PUSH MEMORY ELEMENT IF INIT      255 -> reg11",
      "5844 PUT      reg15[2] = reg11",
      "5848 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg15",
      "5852 SET      reg2 -> reg4",
      "5855 JUMP OR RETURN VAL      reg4"
  ],
  "5960": [
      "5960 GET WINDOW PROP      KPSDK -> reg8",
      "5965 TYPEOF      reg8 -> reg9",
      "5968 STRICT NOT EQUAL      reg9 !== undefined -> reg5",
      "5974 SET      reg5 -> reg4",
      "5977 JUMP IF FALSE      reg4 TO: 6045 | 5980"
  ],
  "5977": ["5977 JUMP IF FALSE      reg4 TO: 6045 | 5980"],
  "5980": [
      "5980 EMPTY OBJECT      -> reg4",
      "5982 GET WINDOW PROP      KPSDK -> reg5",
      "5987 GET      reg5[start] -> reg6",
      "5993 PUT      reg4[jln] = reg6",
      "5999 GET WINDOW PROP      KPSDK -> reg5",
      "6004 GET      reg5[scriptStart] -> reg6",
      "6010 PUT      reg4[uwx] = reg6",
      "6016 GET WINDOW PROP      KPSDK -> reg6",
      "6021 GET      reg6[now] -> reg7",
      "6027 EMPTY ARRAY      -> reg8",
      "6029 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "6033 SET      reg2 -> reg5",
      "6036 PUT      reg4[rbp] = reg5",
      "6042 SET MEMORY ELEMENT IF INIT      274 = reg4",
      "6045 SET MEMORY ELEMENT IF INIT      275 = false",
      "6048 SET MEMORY ELEMENT IF INIT      276 = ",
      "6053 GET WINDOW PROP      window -> reg4",
      "6058 SET MEMORY ELEMENT IF INIT      277 = reg4",
      "6061 GET WINDOW PROP      window -> reg4",
      "6066 GET      reg4[document] -> reg5",
      "6072 GET      reg5[documentMode] -> reg4",
      "6078 NOT      reg4 -> reg5",
      "6081 NOT      reg5 -> reg4",
      "6084 SET MEMORY ELEMENT IF INIT      278 = reg4",
      "6087 PUSH MEMORY ELEMENT IF INIT      278 -> reg4",
      "6090 NOT      reg4 -> reg5",
      "6093 JUMP IF FALSE      reg5 TO: 6212 | 6096"
  ],
  "6045": [
      "6045 SET MEMORY ELEMENT IF INIT      275 = false",
      "6048 SET MEMORY ELEMENT IF INIT      276 = ",
      "6053 GET WINDOW PROP      window -> reg4",
      "6058 SET MEMORY ELEMENT IF INIT      277 = reg4",
      "6061 GET WINDOW PROP      window -> reg4",
      "6066 GET      reg4[document] -> reg5",
      "6072 GET      reg5[documentMode] -> reg4",
      "6078 NOT      reg4 -> reg5",
      "6081 NOT      reg5 -> reg4",
      "6084 SET MEMORY ELEMENT IF INIT      278 = reg4",
      "6087 PUSH MEMORY ELEMENT IF INIT      278 -> reg4",
      "6090 NOT      reg4 -> reg5",
      "6093 JUMP IF FALSE      reg5 TO: 6212 | 6096"
  ],
  "6096": [
      "6096 GET WINDOW PROP      window -> reg7",
      "6101 GET      reg7[document] -> reg4",
      "6107 GET      reg4[createElement] -> reg8",
      "6113 NEW ARRAY      1 -> reg7",
      "6116 PUT      reg7[0] = iframe",
      "6122 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg7",
      "6126 SET      reg2 -> reg5",
      "6129 SET MEMORY ELEMENT IF INIT      279 = reg5",
      "6132 PUSH MEMORY ELEMENT IF INIT      279 -> reg5",
      "6135 PUT      reg5[src] = javascript:;",
      "6143 PUSH MEMORY ELEMENT IF INIT      279 -> reg5",
      "6146 GET      reg5[style] -> reg8",
      "6152 PUT      reg8[display] = none",
      "6160 GET WINDOW PROP      window -> reg8",
      "6165 GET      reg8[document] -> reg9",
      "6171 GET      reg9[body] -> reg7",
      "6177 GET      reg7[appendChild] -> reg9",
      "6183 NEW ARRAY      1 -> reg8",
      "6186 PUSH MEMORY ELEMENT IF INIT      279 -> reg10",
      "6189 PUT      reg8[0] = reg10",
      "6193 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg8",
      "6197 SET      reg2 -> reg5",
      "6200 PUSH MEMORY ELEMENT IF INIT      279 -> reg8",
      "6203 GET      reg8[contentWindow] -> reg9",
      "6209 SET MEMORY ELEMENT IF INIT      277 = reg9",
      "6212 EMPTY OBJECT      -> reg8",
      "6214 INIT FUNCTION STATE      PTR: 6223 NAME:  LEN: 0 -> reg5",
      "6221 JUMP      6356",
      "6356 PUT      reg8[parse] = reg5",
      "6362 INIT FUNCTION STATE      PTR: 6371 NAME:  LEN: 0 -> reg5",
      "6369 JUMP      6504",
      "6504 PUT      reg8[stringify] = reg5",
      "6510 SET MEMORY ELEMENT IF INIT      280 = reg8",
      "6513 INIT FUNCTION STATE      PTR: 6522 NAME:  LEN: 0 -> reg11",
      "6520 JUMP      41754",
      "41754 EMPTY ARRAY      -> reg5",
      "41756 CALL FUNCTION      PTR: reg11 MEM: reg5",
      "41760 SET      reg2 -> reg8",
      "41763 PUSH MEMORY ELEMENT IF INIT      272 -> reg5",
      "41766 JUMP IF FALSE      reg5 TO: 41798 | 41769"
  ],
  "6212": [
      "6212 EMPTY OBJECT      -> reg8",
      "6214 INIT FUNCTION STATE      PTR: 6223 NAME:  LEN: 0 -> reg5",
      "6221 JUMP      6356",
      "6356 PUT      reg8[parse] = reg5",
      "6362 INIT FUNCTION STATE      PTR: 6371 NAME:  LEN: 0 -> reg5",
      "6369 JUMP      6504",
      "6504 PUT      reg8[stringify] = reg5",
      "6510 SET MEMORY ELEMENT IF INIT      280 = reg8",
      "6513 INIT FUNCTION STATE      PTR: 6522 NAME:  LEN: 0 -> reg11",
      "6520 JUMP      41754",
      "41754 EMPTY ARRAY      -> reg5",
      "41756 CALL FUNCTION      PTR: reg11 MEM: reg5",
      "41760 SET      reg2 -> reg8",
      "41763 PUSH MEMORY ELEMENT IF INIT      272 -> reg5",
      "41766 JUMP IF FALSE      reg5 TO: 41798 | 41769"
  ],
  "6278": [
      "6278 PUSH MEMORY ELEMENT IF INIT      290 -> reg4",
      "6281 PUSH MEMORY ELEMENT IF INIT      291 -> reg5",
      "6284 PUSH MEMORY ELEMENT IF INIT      291 -> reg7",
      "6287 GET      reg3[reg7] -> reg6",
      "6291 PUT      reg4[reg5] = reg6",
      "6295 PUSH MEMORY ELEMENT IF INIT      291 -> reg4",
      "6298 SET      reg4 -> reg5",
      "6301 ADD      reg41-> reg4",
      "6305 SET MEMORY ELEMENT IF INIT      291 = reg4",
      "6308 JUMP      6265",
      "6265 PUSH MEMORY ELEMENT IF INIT      291 -> reg6",
      "6268 PUSH MEMORY ELEMENT IF INIT      289 -> reg4",
      "6271 LESS THAN      reg6 < reg4 -> reg5",
      "6275 JUMP IF FALSE      reg5 TO: 6310 | 6278"
  ],
  "6310": [
      "6310 PUSH MEMORY ELEMENT IF INIT      277 -> reg5",
      "6313 GET      reg5[JSON] -> reg6",
      "6319 GET      reg6[parse] -> reg7",
      "6325 GET      reg7[apply] -> reg5",
      "6331 NEW ARRAY      2 -> reg6",
      "6334 PUSH H       -> reg8",
      "6336 PUT      reg6[0] = reg8",
      "6340 PUSH MEMORY ELEMENT IF INIT      290 -> reg8",
      "6343 PUT      reg6[1] = reg8",
      "6347 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg6",
      "6351 SET      reg2 -> reg4",
      "6354 JUMP OR RETURN VAL      reg4"
  ],
  "6426": [
      "6426 PUSH MEMORY ELEMENT IF INIT      296 -> reg5",
      "6429 PUSH MEMORY ELEMENT IF INIT      297 -> reg4",
      "6432 PUSH MEMORY ELEMENT IF INIT      297 -> reg9",
      "6435 GET      reg3[reg9] -> reg6",
      "6439 PUT      reg5[reg4] = reg6",
      "6443 PUSH MEMORY ELEMENT IF INIT      297 -> reg6",
      "6446 SET      reg6 -> reg4",
      "6449 ADD      reg61-> reg6",
      "6453 SET MEMORY ELEMENT IF INIT      297 = reg6",
      "6456 JUMP      6413",
      "6413 PUSH MEMORY ELEMENT IF INIT      297 -> reg5",
      "6416 PUSH MEMORY ELEMENT IF INIT      295 -> reg6",
      "6419 LESS THAN      reg5 < reg6 -> reg4",
      "6423 JUMP IF FALSE      reg4 TO: 6458 | 6426"
  ],
  "6458": [
      "6458 PUSH MEMORY ELEMENT IF INIT      277 -> reg4",
      "6461 GET      reg4[JSON] -> reg6",
      "6467 GET      reg6[stringify] -> reg4",
      "6473 GET      reg4[apply] -> reg6",
      "6479 NEW ARRAY      2 -> reg7",
      "6482 PUSH H       -> reg8",
      "6484 PUT      reg7[0] = reg8",
      "6488 PUSH MEMORY ELEMENT IF INIT      296 -> reg9",
      "6491 PUT      reg7[1] = reg9",
      "6495 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "6499 SET      reg2 -> reg5",
      "6502 JUMP OR RETURN VAL      reg5"
  ],
  "6575": [
      "6575 PUSH MEMORY ELEMENT IF INIT      307 -> reg5",
      "6578 GET      reg5[exports] -> reg4",
      "6584 JUMP OR RETURN VAL      reg4"
  ],
  "6586": [
      "6586 PUSH MEMORY ELEMENT IF INIT      302 -> reg4",
      "6589 PUSH MEMORY ELEMENT IF INIT      306 -> reg5",
      "6592 EMPTY OBJECT      -> reg6",
      "6594 EMPTY OBJECT      -> reg7",
      "6596 PUT      reg6[exports] = reg7",
      "6602 PUT      reg4[reg5] = reg6",
      "6606 SET MEMORY ELEMENT IF INIT      308 = reg6",
      "6609 PUSH MEMORY ELEMENT IF INIT      301 -> reg7",
      "6612 PUSH MEMORY ELEMENT IF INIT      306 -> reg5",
      "6615 GET      reg7[reg5] -> reg6",
      "6619 GET      reg6[call] -> reg5",
      "6625 NEW ARRAY      4 -> reg7",
      "6628 PUSH MEMORY ELEMENT IF INIT      308 -> reg9",
      "6631 GET      reg9[exports] -> reg10",
      "6637 PUT      reg7[0] = reg10",
      "6641 PUSH MEMORY ELEMENT IF INIT      308 -> reg8",
      "6644 PUT      reg7[1] = reg8",
      "6648 PUSH MEMORY ELEMENT IF INIT      308 -> reg8",
      "6651 GET      reg8[exports] -> reg9",
      "6657 PUT      reg7[2] = reg9",
      "6661 PUSH MEMORY ELEMENT IF INIT      303 -> reg8",
      "6664 PUT      reg7[3] = reg8",
      "6668 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg7",
      "6672 SET      reg2 -> reg4",
      "6675 PUSH MEMORY ELEMENT IF INIT      308 -> reg5",
      "6678 GET      reg5[exports] -> reg4",
      "6684 JUMP OR RETURN VAL      reg4"
  ],
  "6794": [
      "6794 SET      undefined -> reg4",
      "6797 SET MEMORY ELEMENT IF INIT      325 = reg4",
      "6800 SET I      6835",
      "6802 GET WINDOW PROP      Object -> reg7",
      "6807 GET      reg7[getOwnPropertyNames] -> reg5",
      "6813 NEW ARRAY      1 -> reg8",
      "6816 PUSH MEMORY ELEMENT IF INIT      324 -> reg9",
      "6819 PUT      reg8[0] = reg9",
      "6823 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg8",
      "6827 SET      reg2 -> reg4",
      "6830 SET MEMORY ELEMENT IF INIT      325 = reg4",
      "6833 JUMP      6845",
      "6845 SET I      null",
      "6847 PUSH MEMORY ELEMENT IF INIT      21 -> reg8",
      "6850 NEW ARRAY      1 -> reg5",
      "6853 PUSH MEMORY ELEMENT IF INIT      325 -> reg9",
      "6856 PUT      reg5[0] = reg9",
      "6860 CALL FUNCTION      PTR: reg8 MEM: reg5",
      "6864 SET      reg2 -> reg4",
      "6867 SET MEMORY ELEMENT IF INIT      326 = reg4",
      "6870 SET I      7007",
      "6872 SET N      7041",
      "6874 PUSH MEMORY ELEMENT IF INIT      326 -> reg4",
      "6877 GET      reg4[s] -> reg5",
      "6883 EMPTY ARRAY      -> reg8",
      "6885 CALL FUNCTION      OBJ: reg4 FUNC: reg5 ARGS: reg8",
      "6889 SET      reg2 -> reg9",
      "6892 PUSH MEMORY ELEMENT IF INIT      326 -> reg8",
      "6895 GET      reg8[n] -> reg10",
      "6901 EMPTY ARRAY      -> reg13",
      "6903 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg13",
      "6907 SET      reg2 -> reg5",
      "6910 SET MEMORY ELEMENT IF INIT      327 = reg5",
      "6913 GET      reg5[done] -> reg11",
      "6919 NOT      reg11 -> reg5",
      "6922 JUMP IF FALSE      reg5 TO: 7005 | 6925"
  ],
  "6835": [
      "6835 SET I      null",
      "6837 PUSH F.K      -> reg4",
      "6839 VOID F",
      "6840 SET MEMORY ELEMENT      0 = reg4",
      "6843 JUMP      7099",
      "7099 PUSH MEMORY ELEMENT IF INIT      323 -> reg17",
      "7102 JUMP OR RETURN VAL      reg17"
  ],
  "6925": [
      "6925 PUSH MEMORY ELEMENT IF INIT      327 -> reg5",
      "6928 GET      reg5[value] -> reg10",
      "6934 SET MEMORY ELEMENT IF INIT      328 = reg10",
      "6937 SUBTRACT      0 - 1 -> reg5",
      "6941 PUSH MEMORY ELEMENT IF INIT      323 -> reg11",
      "6944 GET      reg11[indexOf] -> reg13",
      "6950 NEW ARRAY      1 -> reg12",
      "6953 PUSH MEMORY ELEMENT IF INIT      328 -> reg15",
      "6956 PUT      reg12[0] = reg15",
      "6960 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg12",
      "6964 SET      reg2 -> reg10",
      "6967 STRICT EQUAL      reg5 === reg10 -> reg13",
      "6971 JUMP IF FALSE      reg13 TO: 7003 | 6974"
  ],
  "6974": [
      "6974 PUSH MEMORY ELEMENT IF INIT      323 -> reg5",
      "6977 GET      reg5[push] -> reg10",
      "6983 NEW ARRAY      1 -> reg15",
      "6986 PUSH MEMORY ELEMENT IF INIT      328 -> reg12",
      "6989 PUT      reg15[0] = reg12",
      "6993 CALL FUNCTION      OBJ: reg5 FUNC: reg10 ARGS: reg15",
      "6997 SET      reg2 -> reg14",
      "7000 SET      reg14 -> reg13",
      "7003 JUMP      6892",
      "6892 PUSH MEMORY ELEMENT IF INIT      326 -> reg8",
      "6895 GET      reg8[n] -> reg10",
      "6901 EMPTY ARRAY      -> reg13",
      "6903 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg13",
      "6907 SET      reg2 -> reg5",
      "6910 SET MEMORY ELEMENT IF INIT      327 = reg5",
      "6913 GET      reg5[done] -> reg11",
      "6919 NOT      reg11 -> reg5",
      "6922 JUMP IF FALSE      reg5 TO: 7005 | 6925"
  ],
  "7003": [
      "7003 JUMP      6892",
      "6892 PUSH MEMORY ELEMENT IF INIT      326 -> reg8",
      "6895 GET      reg8[n] -> reg10",
      "6901 EMPTY ARRAY      -> reg13",
      "6903 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg13",
      "6907 SET      reg2 -> reg5",
      "6910 SET MEMORY ELEMENT IF INIT      327 = reg5",
      "6913 GET      reg5[done] -> reg11",
      "6919 NOT      reg11 -> reg5",
      "6922 JUMP IF FALSE      reg5 TO: 7005 | 6925"
  ],
  "7005": [
      "7005 JUMP      7041",
      "7041 SET I      null",
      "7043 SET N      null",
      "7045 PUSH MEMORY ELEMENT IF INIT      326 -> reg13",
      "7048 GET      reg13[f] -> reg15",
      "7054 EMPTY ARRAY      -> reg14",
      "7056 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg14",
      "7060 SET      reg2 -> reg12",
      "7063 HANDLE TRACE OR JUMP OR RETURN C",
      "7064 SET I      null",
      "7066 GET WINDOW PROP      Object -> reg12",
      "7071 GET      reg12[getPrototypeOf] -> reg17",
      "7077 NEW ARRAY      1 -> reg15",
      "7080 PUSH MEMORY ELEMENT IF INIT      324 -> reg16",
      "7083 PUT      reg15[0] = reg16",
      "7087 CALL FUNCTION      OBJ: reg12 FUNC: reg17 ARGS: reg15",
      "7091 SET      reg2 -> reg14",
      "7094 SET MEMORY ELEMENT IF INIT      324 = reg14",
      "7097 JUMP      6784",
      "6784 PUSH MEMORY ELEMENT IF INIT      324 -> reg4",
      "6787 STRICT NOT EQUAL      null !== reg4 -> reg5",
      "6791 JUMP IF FALSE      reg5 TO: 7099 | 6794"
  ],
  "7007": [
      "7007 SET I      7041",
      "7009 PUSH F.K      -> reg12",
      "7011 VOID F",
      "7012 SET MEMORY ELEMENT      0 = reg12",
      "7015 PUSH MEMORY ELEMENT IF INIT      326 -> reg10",
      "7018 GET      reg10[e] -> reg13",
      "7024 NEW ARRAY      1 -> reg14",
      "7027 PUSH MEMORY ELEMENT IF INIT      0 -> reg17",
      "7030 PUT      reg14[0] = reg17",
      "7034 CALL FUNCTION      OBJ: reg10 FUNC: reg13 ARGS: reg14",
      "7038 SET      reg2 -> reg12",
      "7041 SET I      null",
      "7043 SET N      null",
      "7045 PUSH MEMORY ELEMENT IF INIT      326 -> reg13",
      "7048 GET      reg13[f] -> reg15",
      "7054 EMPTY ARRAY      -> reg14",
      "7056 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg14",
      "7060 SET      reg2 -> reg12",
      "7063 HANDLE TRACE OR JUMP OR RETURN C",
      "7064 SET I      null",
      "7066 GET WINDOW PROP      Object -> reg12",
      "7071 GET      reg12[getPrototypeOf] -> reg17",
      "7077 NEW ARRAY      1 -> reg15",
      "7080 PUSH MEMORY ELEMENT IF INIT      324 -> reg16",
      "7083 PUT      reg15[0] = reg16",
      "7087 CALL FUNCTION      OBJ: reg12 FUNC: reg17 ARGS: reg15",
      "7091 SET      reg2 -> reg14",
      "7094 SET MEMORY ELEMENT IF INIT      324 = reg14",
      "7097 JUMP      6784",
      "6784 PUSH MEMORY ELEMENT IF INIT      324 -> reg4",
      "6787 STRICT NOT EQUAL      null !== reg4 -> reg5",
      "6791 JUMP IF FALSE      reg5 TO: 7099 | 6794"
  ],
  "7041": [
      "7041 SET I      null",
      "7043 SET N      null",
      "7045 PUSH MEMORY ELEMENT IF INIT      326 -> reg13",
      "7048 GET      reg13[f] -> reg15",
      "7054 EMPTY ARRAY      -> reg14",
      "7056 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg14",
      "7060 SET      reg2 -> reg12",
      "7063 HANDLE TRACE OR JUMP OR RETURN C",
      "7064 SET I      null",
      "7066 GET WINDOW PROP      Object -> reg12",
      "7071 GET      reg12[getPrototypeOf] -> reg17",
      "7077 NEW ARRAY      1 -> reg15",
      "7080 PUSH MEMORY ELEMENT IF INIT      324 -> reg16",
      "7083 PUT      reg15[0] = reg16",
      "7087 CALL FUNCTION      OBJ: reg12 FUNC: reg17 ARGS: reg15",
      "7091 SET      reg2 -> reg14",
      "7094 SET MEMORY ELEMENT IF INIT      324 = reg14",
      "7097 JUMP      6784",
      "6784 PUSH MEMORY ELEMENT IF INIT      324 -> reg4",
      "6787 STRICT NOT EQUAL      null !== reg4 -> reg5",
      "6791 JUMP IF FALSE      reg5 TO: 7099 | 6794"
  ],
  "7099": [
      "7099 PUSH MEMORY ELEMENT IF INIT      323 -> reg17",
      "7102 JUMP OR RETURN VAL      reg17"
  ],
  "7278": [
      "7278 SET      undefined -> reg4",
      "7281 PUSH MEMORY ELEMENT IF INIT      339 -> reg8",
      "7284 STRICT NOT EQUAL      reg4 !== reg8 -> reg7",
      "7288 SET      reg7 -> reg6",
      "7291 JUMP IF FALSE      reg6 TO: 7302 | 7294"
  ],
  "7291": ["7291 JUMP IF FALSE      reg6 TO: 7302 | 7294"],
  "7294": [
      "7294 PUSH MEMORY ELEMENT IF INIT      339 -> reg4",
      "7297 SET      reg4 -> reg8",
      "7300 JUMP      7305",
      "7305 SET MEMORY ELEMENT IF INIT      340 = reg8",
      "7308 PUSH MEMORY ELEMENT IF INIT      340 -> reg4",
      "7311 PUSH MEMORY ELEMENT IF INIT      336 -> reg6",
      "7314 GET      reg6[length] -> reg7",
      "7320 LESS THAN      reg4 < reg7 -> reg6",
      "7324 JUMP IF FALSE      reg6 TO: 7351 | 7327"
  ],
  "7302": [
      "7302 SET      0 -> reg8",
      "7305 SET MEMORY ELEMENT IF INIT      340 = reg8",
      "7308 PUSH MEMORY ELEMENT IF INIT      340 -> reg4",
      "7311 PUSH MEMORY ELEMENT IF INIT      336 -> reg6",
      "7314 GET      reg6[length] -> reg7",
      "7320 LESS THAN      reg4 < reg7 -> reg6",
      "7324 JUMP IF FALSE      reg6 TO: 7351 | 7327"
  ],
  "7327": [
      "7327 GET WINDOW PROP      String -> reg6",
      "7332 NEW ARRAY      1 -> reg9",
      "7335 PUSH MEMORY ELEMENT IF INIT      336 -> reg7",
      "7338 PUT      reg9[0] = reg7",
      "7342 CALL FUNCTION      PTR: reg6 MEM: reg9",
      "7346 SET      reg2 -> reg4",
      "7349 JUMP OR RETURN VAL      reg4"
  ],
  "7351": [
      "7351 PUSH MEMORY ELEMENT IF INIT      338 -> reg4",
      "7354 JUMP IF FALSE      reg4 TO: 7384 | 7357"
  ],
  "7357": [
      "7357 GET WINDOW PROP      String -> reg6",
      "7362 NEW ARRAY      1 -> reg8",
      "7365 PUSH MEMORY ELEMENT IF INIT      338 -> reg9",
      "7368 PUT      reg8[0] = reg9",
      "7372 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "7376 SET      reg2 -> reg4",
      "7379 SET      reg4 -> reg7",
      "7382 JUMP      7389",
      "7389 SET MEMORY ELEMENT IF INIT      341 = reg7",
      "7392 PUSH MEMORY ELEMENT IF INIT      340 -> reg6",
      "7395 PUSH MEMORY ELEMENT IF INIT      336 -> reg4",
      "7398 GET      reg4[length] -> reg7",
      "7404 SUBTRACT      reg6 - reg7 -> reg4",
      "7408 SET MEMORY ELEMENT IF INIT      342 = reg4",
      "7411 SET MEMORY ELEMENT IF INIT      343 = ",
      "7416 SET MEMORY ELEMENT IF INIT      344 = 0",
      "7419 PUSH MEMORY ELEMENT IF INIT      343 -> reg4",
      "7422 GET      reg4[length] -> reg6",
      "7428 PUSH MEMORY ELEMENT IF INIT      342 -> reg4",
      "7431 LESS THAN      reg6 < reg4 -> reg8",
      "7435 JUMP IF FALSE      reg8 TO: 7492 | 7438"
  ],
  "7384": [
      "7384 SET        -> reg7",
      "7389 SET MEMORY ELEMENT IF INIT      341 = reg7",
      "7392 PUSH MEMORY ELEMENT IF INIT      340 -> reg6",
      "7395 PUSH MEMORY ELEMENT IF INIT      336 -> reg4",
      "7398 GET      reg4[length] -> reg7",
      "7404 SUBTRACT      reg6 - reg7 -> reg4",
      "7408 SET MEMORY ELEMENT IF INIT      342 = reg4",
      "7411 SET MEMORY ELEMENT IF INIT      343 = ",
      "7416 SET MEMORY ELEMENT IF INIT      344 = 0",
      "7419 PUSH MEMORY ELEMENT IF INIT      343 -> reg4",
      "7422 GET      reg4[length] -> reg6",
      "7428 PUSH MEMORY ELEMENT IF INIT      342 -> reg4",
      "7431 LESS THAN      reg6 < reg4 -> reg8",
      "7435 JUMP IF FALSE      reg8 TO: 7492 | 7438"
  ],
  "7438": [
      "7438 PUSH MEMORY ELEMENT IF INIT      341 -> reg4",
      "7441 PUSH MEMORY ELEMENT IF INIT      344 -> reg6",
      "7444 GET      reg4[reg6] -> reg8",
      "7448 JUMP IF TRUE      reg8 TO: 7457 | 7451"
  ],
  "7451": [
      "7451 SET MEMORY ELEMENT IF INIT      344 = 0",
      "7454 SET      0 -> reg8",
      "7457 PUSH MEMORY ELEMENT IF INIT      343 -> reg4",
      "7460 PUSH MEMORY ELEMENT IF INIT      341 -> reg7",
      "7463 PUSH MEMORY ELEMENT IF INIT      344 -> reg6",
      "7466 GET      reg7[reg6] -> reg8",
      "7470 ADD      reg4NaN-> reg8",
      "7474 SET MEMORY ELEMENT IF INIT      343 = reg8",
      "7477 PUSH MEMORY ELEMENT IF INIT      344 -> reg4",
      "7480 SET      1 -> reg6",
      "7483 ADD      reg4NaN-> reg6",
      "7487 SET MEMORY ELEMENT IF INIT      344 = reg6",
      "7490 JUMP      7419",
      "7419 PUSH MEMORY ELEMENT IF INIT      343 -> reg4",
      "7422 GET      reg4[length] -> reg6",
      "7428 PUSH MEMORY ELEMENT IF INIT      342 -> reg4",
      "7431 LESS THAN      reg6 < reg4 -> reg8",
      "7435 JUMP IF FALSE      reg8 TO: 7492 | 7438"
  ],
  "7457": [
      "7457 PUSH MEMORY ELEMENT IF INIT      343 -> reg4",
      "7460 PUSH MEMORY ELEMENT IF INIT      341 -> reg7",
      "7463 PUSH MEMORY ELEMENT IF INIT      344 -> reg6",
      "7466 GET      reg7[reg6] -> reg8",
      "7470 ADD      reg4NaN-> reg8",
      "7474 SET MEMORY ELEMENT IF INIT      343 = reg8",
      "7477 PUSH MEMORY ELEMENT IF INIT      344 -> reg4",
      "7480 SET      1 -> reg6",
      "7483 ADD      reg4NaN-> reg6",
      "7487 SET MEMORY ELEMENT IF INIT      344 = reg6",
      "7490 JUMP      7419",
      "7419 PUSH MEMORY ELEMENT IF INIT      343 -> reg4",
      "7422 GET      reg4[length] -> reg6",
      "7428 PUSH MEMORY ELEMENT IF INIT      342 -> reg4",
      "7431 LESS THAN      reg6 < reg4 -> reg8",
      "7435 JUMP IF FALSE      reg8 TO: 7492 | 7438"
  ],
  "7492": [
      "7492 PUSH MEMORY ELEMENT IF INIT      343 -> reg4",
      "7495 GET WINDOW PROP      String -> reg7",
      "7500 NEW ARRAY      1 -> reg8",
      "7503 PUSH MEMORY ELEMENT IF INIT      336 -> reg10",
      "7506 PUT      reg8[0] = reg10",
      "7510 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "7514 SET      reg2 -> reg9",
      "7517 GET      reg9[slice] -> reg7",
      "7523 NEW ARRAY      1 -> reg8",
      "7526 PUT      reg8[0] = 0",
      "7530 CALL FUNCTION      OBJ: reg9 FUNC: reg7 ARGS: reg8",
      "7534 SET      reg2 -> reg6",
      "7537 ADD      reg4NaN-> reg10",
      "7541 JUMP OR RETURN VAL      reg10"
  ],
  "7610": [
      "7610 SET I      null",
      "7612 PUSH F.K      -> reg4",
      "7614 VOID F",
      "7615 SET MEMORY ELEMENT      0 = reg4",
      "7618 PUSH MEMORY ELEMENT IF INIT      353 -> reg5",
      "7621 NEW ARRAY      1 -> reg6",
      "7624 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "7627 PUT      reg6[0] = reg8",
      "7631 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "7635 SET      reg2 -> reg4",
      "7638 SET I      null",
      "7640 JUMP OR RETURN"
  ],
  "7683": [
      "7683 SET I      null",
      "7685 PUSH F.K      -> reg5",
      "7687 VOID F",
      "7688 SET MEMORY ELEMENT      0 = reg5",
      "7691 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "7694 GET WINDOW PROP      Error -> reg5",
      "7699 INSTANCEOF      reg4 instanceof reg5 -> reg6",
      "7703 JUMP IF FALSE      reg6 TO: 7775 | 7706"
  ],
  "7706": [
      "7706 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "7709 GET      reg6[stack] -> reg5",
      "7715 SET MEMORY ELEMENT IF INIT      361 = reg5",
      "7718 STRICT NOT EQUAL      null !== reg5 -> reg7",
      "7722 JUMP IF FALSE      reg7 TO: 7738 | 7725"
  ],
  "7725": [
      "7725 SET      undefined -> reg8",
      "7728 PUSH MEMORY ELEMENT IF INIT      361 -> reg5",
      "7731 STRICT NOT EQUAL      reg8 !== reg5 -> reg6",
      "7735 SET      reg6 -> reg7",
      "7738 JUMP IF FALSE      reg7 TO: 7749 | 7741"
  ],
  "7738": ["7738 JUMP IF FALSE      reg7 TO: 7749 | 7741"],
  "7741": [
      "7741 PUSH MEMORY ELEMENT IF INIT      361 -> reg5",
      "7744 SET      reg5 -> reg6",
      "7747 JUMP      7770",
      "7770 SET      reg6 -> reg4",
      "7773 JUMP      7805",
      "7805 JUMP OR RETURN VAL      reg4"
  ],
  "7749": [
      "7749 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "7752 GET      reg8[toString] -> reg7",
      "7758 EMPTY ARRAY      -> reg9",
      "7760 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "7764 SET      reg2 -> reg5",
      "7767 SET      reg5 -> reg6",
      "7770 SET      reg6 -> reg4",
      "7773 JUMP      7805",
      "7805 JUMP OR RETURN VAL      reg4"
  ],
  "7775": [
      "7775 GET      [concat] -> reg5",
      "7783 NEW ARRAY      1 -> reg7",
      "7786 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "7789 PUT      reg7[0] = reg9",
      "7793 CALL FUNCTION      OBJ:  FUNC: reg5 ARGS: reg7",
      "7799 SET      reg2 -> reg6",
      "7802 SET      reg6 -> reg4",
      "7805 JUMP OR RETURN VAL      reg4"
  ],
  "7880": [
      "7880 PUSH MEMORY ELEMENT IF INIT      320 -> reg6",
      "7883 NEW ARRAY      1 -> reg7",
      "7886 PUSH MEMORY ELEMENT IF INIT      368 -> reg8",
      "7889 PUT      reg7[0] = reg8",
      "7893 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "7897 SET      reg2 -> reg5",
      "7900 SET MEMORY ELEMENT IF INIT      372 = reg5",
      "7903 PUSH MEMORY ELEMENT IF INIT      369 -> reg6",
      "7906 GET      reg6[join] -> reg5",
      "7912 NEW ARRAY      1 -> reg8",
      "7915 PUT      reg8[0] = ",
      "7921 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "7925 SET      reg2 -> reg4",
      "7928 PUSH MEMORY ELEMENT IF INIT      372 -> reg5",
      "7931 GET      reg5[join] -> reg7",
      "7937 NEW ARRAY      1 -> reg10",
      "7940 PUT      reg10[0] = ",
      "7946 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg10",
      "7950 SET      reg2 -> reg8",
      "7953 STRICT NOT EQUAL      reg4 !== reg8 -> reg7",
      "7957 JUMP IF FALSE      reg7 TO: 7968 | 7960"
  ],
  "7960": [
      "7960 NOT      0 -> reg4",
      "7963 SET MEMORY ELEMENT IF INIT      370 = reg4",
      "7966 JUMP      7983",
      "7983 PUSH MEMORY ELEMENT IF INIT      370 -> reg4",
      "7986 JUMP IF FALSE      reg4 TO: 8012 | 7989"
  ],
  "7968": [
      "7968 PUSH MEMORY ELEMENT IF INIT      371 -> reg7",
      "7971 SET      1 -> reg4",
      "7974 ADD      reg7NaN-> reg4",
      "7978 SET MEMORY ELEMENT IF INIT      371 = reg4",
      "7981 JUMP      7870",
      "7870 PUSH MEMORY ELEMENT IF INIT      371 -> reg6",
      "7873 LESS THAN      reg6 < 3 -> reg4",
      "7877 JUMP IF FALSE      reg4 TO: 7983 | 7880"
  ],
  "7983": [
      "7983 PUSH MEMORY ELEMENT IF INIT      370 -> reg4",
      "7986 JUMP IF FALSE      reg4 TO: 8012 | 7989"
  ],
  "7989": [
      "7989 PUSH MEMORY ELEMENT IF INIT      369 -> reg4",
      "7992 GET      reg4[sort] -> reg11",
      "7998 EMPTY ARRAY      -> reg9",
      "8000 CALL FUNCTION      OBJ: reg4 FUNC: reg11 ARGS: reg9",
      "8004 SET      reg2 -> reg8",
      "8007 SET      reg8 -> reg7",
      "8010 JUMP      8018",
      "8018 JUMP OR RETURN VAL      reg7"
  ],
  "8012": [
      "8012 PUSH MEMORY ELEMENT IF INIT      369 -> reg8",
      "8015 SET      reg8 -> reg7",
      "8018 JUMP OR RETURN VAL      reg7"
  ],
  "8072": [
      "8072 SET I      null",
      "8074 PUSH F.K      -> reg4",
      "8076 VOID F",
      "8077 SET MEMORY ELEMENT      0 = reg4",
      "8080 JUMP OR RETURN VAL      not supported"
  ],
  "8099": [
      "8099 SET      not supported -> reg4",
      "8104 JUMP      8135",
      "8135 JUMP OR RETURN VAL      reg4"
  ],
  "8106": [
      "8106 PUSH MEMORY ELEMENT IF INIT      319 -> reg5",
      "8109 GET      reg5[eoq] -> reg9",
      "8115 NEW ARRAY      1 -> reg6",
      "8118 PUSH MEMORY ELEMENT IF INIT      380 -> reg8",
      "8121 PUT      reg6[0] = reg8",
      "8125 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg6",
      "8129 SET      reg2 -> reg7",
      "8132 SET      reg7 -> reg4",
      "8135 JUMP OR RETURN VAL      reg4"
  ],
  "8178": [
      "8178 GET      reg3[1] -> reg5",
      "8182 GET WINDOW PROP      undefined -> reg7",
      "8187 STRICT NOT EQUAL      reg5 !== reg7 -> reg6",
      "8191 SET      reg6 -> reg4",
      "8194 JUMP IF FALSE      reg4 TO: 8206 | 8197"
  ],
  "8194": ["8194 JUMP IF FALSE      reg4 TO: 8206 | 8197"],
  "8197": [
      "8197 GET      reg3[1] -> reg6",
      "8201 SET      reg6 -> reg5",
      "8204 JUMP      8211",
      "8211 SET MEMORY ELEMENT IF INIT      386 = reg5",
      "8214 EMPTY OBJECT      -> reg4",
      "8216 SET MEMORY ELEMENT IF INIT      387 = reg4",
      "8219 PUSH MEMORY ELEMENT IF INIT      385 -> reg5",
      "8222 COPY ENUMERABLE      reg5 -> reg4",
      "8225 GET      reg4[length] -> reg7",
      "8231 EQUAL      reg7 == 0 -> reg8",
      "8235 JUMP IF TRUE      reg8 TO: 8426 | 8238"
  ],
  "8206": [
      "8206 EMPTY ARRAY      -> reg4",
      "8208 SET      reg4 -> reg5",
      "8211 SET MEMORY ELEMENT IF INIT      386 = reg5",
      "8214 EMPTY OBJECT      -> reg4",
      "8216 SET MEMORY ELEMENT IF INIT      387 = reg4",
      "8219 PUSH MEMORY ELEMENT IF INIT      385 -> reg5",
      "8222 COPY ENUMERABLE      reg5 -> reg4",
      "8225 GET      reg4[length] -> reg7",
      "8231 EQUAL      reg7 == 0 -> reg8",
      "8235 JUMP IF TRUE      reg8 TO: 8426 | 8238"
  ],
  "8238": [
      "8238 SET      0 -> reg8",
      "8241 GET      reg4[reg8] -> reg5",
      "8245 SET MEMORY ELEMENT IF INIT      388 = reg5",
      "8248 PUSH MEMORY ELEMENT IF INIT      385 -> reg6",
      "8251 PUSH MEMORY ELEMENT IF INIT      388 -> reg11",
      "8254 GET      reg6[reg11] -> reg9",
      "8258 SET MEMORY ELEMENT IF INIT      389 = reg9",
      "8261 PUSH MEMORY ELEMENT IF INIT      389 -> reg6",
      "8264 TYPEOF      reg6 -> reg9",
      "8267 EQUAL      string == reg9 -> reg6",
      "8273 JUMP IF TRUE      reg6 TO: 8291 | 8276"
  ],
  "8241": [
      "8241 GET      reg4[reg8] -> reg5",
      "8245 SET MEMORY ELEMENT IF INIT      388 = reg5",
      "8248 PUSH MEMORY ELEMENT IF INIT      385 -> reg6",
      "8251 PUSH MEMORY ELEMENT IF INIT      388 -> reg11",
      "8254 GET      reg6[reg11] -> reg9",
      "8258 SET MEMORY ELEMENT IF INIT      389 = reg9",
      "8261 PUSH MEMORY ELEMENT IF INIT      389 -> reg6",
      "8264 TYPEOF      reg6 -> reg9",
      "8267 EQUAL      string == reg9 -> reg6",
      "8273 JUMP IF TRUE      reg6 TO: 8291 | 8276"
  ],
  "8276": [
      "8276 PUSH MEMORY ELEMENT IF INIT      389 -> reg9",
      "8279 TYPEOF      reg9 -> reg10",
      "8282 EQUAL      number == reg10 -> reg9",
      "8288 SET      reg9 -> reg6",
      "8291 JUMP IF TRUE      reg6 TO: 8309 | 8294"
  ],
  "8291": ["8291 JUMP IF TRUE      reg6 TO: 8309 | 8294"],
  "8294": [
      "8294 PUSH MEMORY ELEMENT IF INIT      389 -> reg9",
      "8297 TYPEOF      reg9 -> reg10",
      "8300 EQUAL      boolean == reg10 -> reg9",
      "8306 SET      reg9 -> reg6",
      "8309 JUMP IF FALSE      reg6 TO: 8330 | 8312"
  ],
  "8309": ["8309 JUMP IF FALSE      reg6 TO: 8330 | 8312"],
  "8312": [
      "8312 PUSH MEMORY ELEMENT IF INIT      387 -> reg10",
      "8315 PUSH MEMORY ELEMENT IF INIT      388 -> reg11",
      "8318 PUSH MEMORY ELEMENT IF INIT      389 -> reg6",
      "8321 PUT      reg10[reg11] = reg6",
      "8325 SET      reg6 -> reg9",
      "8328 JUMP      8415",
      "8415 ADD      reg81-> reg8",
      "8419 LESS THAN      reg8 < reg7 -> reg6",
      "8423 JUMP IF TRUE      reg6 TO: 8241 | 8426"
  ],
  "8330": [
      "8330 PUSH MEMORY ELEMENT IF INIT      386 -> reg6",
      "8333 GET      reg6[length] -> reg10",
      "8339 JUMP IF FALSE      reg10 TO: 8375 | 8342"
  ],
  "8342": [
      "8342 PUSH MEMORY ELEMENT IF INIT      386 -> reg12",
      "8345 GET      reg12[indexOf] -> reg11",
      "8351 NEW ARRAY      1 -> reg13",
      "8354 PUSH MEMORY ELEMENT IF INIT      388 -> reg14",
      "8357 PUT      reg13[0] = reg14",
      "8361 CALL FUNCTION      OBJ: reg12 FUNC: reg11 ARGS: reg13",
      "8365 SET      reg2 -> reg6",
      "8368 GREATER THAN OR EQUAL      reg6 >= 0 -> reg11",
      "8372 SET      reg11 -> reg10",
      "8375 JUMP IF FALSE      reg10 TO: 8393 | 8378"
  ],
  "8375": ["8375 JUMP IF FALSE      reg10 TO: 8393 | 8378"],
  "8378": [
      "8378 PUSH MEMORY ELEMENT IF INIT      389 -> reg6",
      "8381 TYPEOF      reg6 -> reg11",
      "8384 EQUAL      object == reg11 -> reg13",
      "8390 SET      reg13 -> reg10",
      "8393 JUMP IF FALSE      reg10 TO: 8412 | 8396"
  ],
  "8393": ["8393 JUMP IF FALSE      reg10 TO: 8412 | 8396"],
  "8396": [
      "8396 PUSH MEMORY ELEMENT IF INIT      387 -> reg6",
      "8399 PUSH MEMORY ELEMENT IF INIT      388 -> reg11",
      "8402 NOT      0 -> reg13",
      "8405 PUT      reg6[reg11] = reg13",
      "8409 SET      reg13 -> reg10",
      "8412 SET      reg10 -> reg9",
      "8415 ADD      reg81-> reg8",
      "8419 LESS THAN      reg8 < reg7 -> reg6",
      "8423 JUMP IF TRUE      reg6 TO: 8241 | 8426"
  ],
  "8412": [
      "8412 SET      reg10 -> reg9",
      "8415 ADD      reg81-> reg8",
      "8419 LESS THAN      reg8 < reg7 -> reg6",
      "8423 JUMP IF TRUE      reg6 TO: 8241 | 8426"
  ],
  "8426": [
      "8426 PUSH MEMORY ELEMENT IF INIT      387 -> reg4",
      "8429 JUMP OR RETURN VAL      reg4"
  ],
  "8482": [
      "8482 PUSH MEMORY ELEMENT IF INIT      402 -> reg5",
      "8485 GET      reg5[push] -> reg7",
      "8491 NEW ARRAY      1 -> reg6",
      "8494 PUSH MEMORY ELEMENT IF INIT      401 -> reg9",
      "8497 PUSH MEMORY ELEMENT IF INIT      403 -> reg8",
      "8500 GET      reg9[reg8] -> reg11",
      "8504 PUT      reg6[0] = reg11",
      "8508 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg6",
      "8512 SET      reg2 -> reg4",
      "8515 PUSH MEMORY ELEMENT IF INIT      403 -> reg4",
      "8518 SET      1 -> reg6",
      "8521 ADD      reg4NaN-> reg6",
      "8525 SET MEMORY ELEMENT IF INIT      403 = reg6",
      "8528 JUMP      8463",
      "8463 PUSH MEMORY ELEMENT IF INIT      403 -> reg9",
      "8466 PUSH MEMORY ELEMENT IF INIT      401 -> reg4",
      "8469 GET      reg4[length] -> reg6",
      "8475 LESS THAN      reg9 < reg6 -> reg8",
      "8479 JUMP IF FALSE      reg8 TO: 8530 | 8482"
  ],
  "8530": [
      "8530 PUSH MEMORY ELEMENT IF INIT      402 -> reg4",
      "8533 JUMP OR RETURN VAL      reg4"
  ],
  "8573": [
      "8573 PUSH MEMORY ELEMENT IF INIT      407 -> reg4",
      "8576 STRICT NOT EQUAL      null !== reg4 -> reg7",
      "8580 SET      reg7 -> reg5",
      "8583 JUMP IF FALSE      reg5 TO: 8598 | 8586"
  ],
  "8583": ["8583 JUMP IF FALSE      reg5 TO: 8598 | 8586"],
  "8586": [
      "8586 PUSH MEMORY ELEMENT IF INIT      407 -> reg4",
      "8589 PUSH MEMORY ELEMENT IF INIT      408 -> reg5",
      "8592 GET      reg4[reg5] -> reg7",
      "8596 JUMP OR RETURN VAL      reg7"
  ],
  "8598": ["8598 JUMP OR RETURN"],
  "8767": [
      "8767 GET WINDOW PROP      Error -> reg4",
      "8772 EMPTY ARRAY      -> reg6",
      "8774 CALL FUNCTION      PTR: reg4 MEM: reg6",
      "8778 SET      reg2 -> reg5",
      "8781 HANDLE ERROR      reg5",
      "8783 NEW ARRAY      7 -> reg4",
      "8786 PUT      reg4[0] = 85968",
      "8790 PUT      reg4[1] = 85969",
      "8794 PUT      reg4[2] = 85971",
      "8798 PUT      reg4[3] = 85975",
      "8802 PUT      reg4[4] = 85983",
      "8806 PUT      reg4[5] = 85999",
      "8810 PUT      reg4[6] = 86031",
      "8814 SET MEMORY ELEMENT IF INIT      420 = reg4",
      "8817 EMPTY OBJECT      -> reg5",
      "8819 PUT      reg5[occupiedBits] = 4",
      "8825 GET WINDOW PROP      Math -> reg6",
      "8830 GET      reg6[floor] -> reg7",
      "8836 NEW ARRAY      1 -> reg9",
      "8839 GET WINDOW PROP      Math -> reg10",
      "8844 GET      reg10[random] -> reg11",
      "8850 EMPTY ARRAY      -> reg12",
      "8852 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "8856 SET      reg2 -> reg8",
      "8859 MULTIPLY      16 * reg8 -> reg11",
      "8863 PUT      reg9[0] = reg11",
      "8867 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "8871 SET      reg2 -> reg4",
      "8874 PUT      reg5[nextCode] = reg4",
      "8880 EMPTY ARRAY      -> reg7",
      "8882 PUT      reg5[codePoints] = reg7",
      "8888 SET MEMORY ELEMENT IF INIT      421 = reg5",
      "8891 PUSH MEMORY ELEMENT IF INIT      21 -> reg5",
      "8894 NEW ARRAY      1 -> reg8",
      "8897 PUSH MEMORY ELEMENT IF INIT      419 -> reg7",
      "8900 PUT      reg8[0] = reg7",
      "8904 CALL FUNCTION      PTR: reg5 MEM: reg8",
      "8908 SET      reg2 -> reg4",
      "8911 SET MEMORY ELEMENT IF INIT      422 = reg4",
      "8914 SET I      9385",
      "8916 SET N      9419",
      "8918 PUSH MEMORY ELEMENT IF INIT      422 -> reg5",
      "8921 GET      reg5[s] -> reg7",
      "8927 EMPTY ARRAY      -> reg11",
      "8929 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg11",
      "8933 SET      reg2 -> reg4",
      "8936 PUSH MEMORY ELEMENT IF INIT      422 -> reg8",
      "8939 GET      reg8[n] -> reg9",
      "8945 EMPTY ARRAY      -> reg11",
      "8947 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg11",
      "8951 SET      reg2 -> reg7",
      "8954 SET MEMORY ELEMENT IF INIT      423 = reg7",
      "8957 GET      reg7[done] -> reg9",
      "8963 NOT      reg9 -> reg7",
      "8966 JUMP IF FALSE      reg7 TO: 9383 | 8969"
  ],
  "8783": [
      "8783 NEW ARRAY      7 -> reg4",
      "8786 PUT      reg4[0] = 85968",
      "8790 PUT      reg4[1] = 85969",
      "8794 PUT      reg4[2] = 85971",
      "8798 PUT      reg4[3] = 85975",
      "8802 PUT      reg4[4] = 85983",
      "8806 PUT      reg4[5] = 85999",
      "8810 PUT      reg4[6] = 86031",
      "8814 SET MEMORY ELEMENT IF INIT      420 = reg4",
      "8817 EMPTY OBJECT      -> reg5",
      "8819 PUT      reg5[occupiedBits] = 4",
      "8825 GET WINDOW PROP      Math -> reg6",
      "8830 GET      reg6[floor] -> reg7",
      "8836 NEW ARRAY      1 -> reg9",
      "8839 GET WINDOW PROP      Math -> reg10",
      "8844 GET      reg10[random] -> reg11",
      "8850 EMPTY ARRAY      -> reg12",
      "8852 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "8856 SET      reg2 -> reg8",
      "8859 MULTIPLY      16 * reg8 -> reg11",
      "8863 PUT      reg9[0] = reg11",
      "8867 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "8871 SET      reg2 -> reg4",
      "8874 PUT      reg5[nextCode] = reg4",
      "8880 EMPTY ARRAY      -> reg7",
      "8882 PUT      reg5[codePoints] = reg7",
      "8888 SET MEMORY ELEMENT IF INIT      421 = reg5",
      "8891 PUSH MEMORY ELEMENT IF INIT      21 -> reg5",
      "8894 NEW ARRAY      1 -> reg8",
      "8897 PUSH MEMORY ELEMENT IF INIT      419 -> reg7",
      "8900 PUT      reg8[0] = reg7",
      "8904 CALL FUNCTION      PTR: reg5 MEM: reg8",
      "8908 SET      reg2 -> reg4",
      "8911 SET MEMORY ELEMENT IF INIT      422 = reg4",
      "8914 SET I      9385",
      "8916 SET N      9419",
      "8918 PUSH MEMORY ELEMENT IF INIT      422 -> reg5",
      "8921 GET      reg5[s] -> reg7",
      "8927 EMPTY ARRAY      -> reg11",
      "8929 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg11",
      "8933 SET      reg2 -> reg4",
      "8936 PUSH MEMORY ELEMENT IF INIT      422 -> reg8",
      "8939 GET      reg8[n] -> reg9",
      "8945 EMPTY ARRAY      -> reg11",
      "8947 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg11",
      "8951 SET      reg2 -> reg7",
      "8954 SET MEMORY ELEMENT IF INIT      423 = reg7",
      "8957 GET      reg7[done] -> reg9",
      "8963 NOT      reg9 -> reg7",
      "8966 JUMP IF FALSE      reg7 TO: 9383 | 8969"
  ],
  "8969": [
      "8969 PUSH MEMORY ELEMENT IF INIT      423 -> reg11",
      "8972 GET      reg11[value] -> reg7",
      "8978 SET MEMORY ELEMENT IF INIT      424 = reg7",
      "8981 PUSH MEMORY ELEMENT IF INIT      424 -> reg7",
      "8984 LESS THAN      reg7 < 0 -> reg11",
      "8988 JUMP IF TRUE      reg11 TO: 9001 | 8991"
  ],
  "8991": [
      "8991 PUSH MEMORY ELEMENT IF INIT      424 -> reg7",
      "8994 GREATER THAN      reg7 > 127 -> reg9",
      "8998 SET      reg9 -> reg11",
      "9001 JUMP IF FALSE      reg11 TO: 9027 | 9004"
  ],
  "9001": ["9001 JUMP IF FALSE      reg11 TO: 9027 | 9004"],
  "9004": [
      "9004 GET WINDOW PROP      Error -> reg11",
      "9009 NEW ARRAY      1 -> reg7",
      "9012 PUT      reg7[0] = ",
      "9018 CALL FUNCTION      PTR: reg11 MEM: reg7",
      "9022 SET      reg2 -> reg9",
      "9025 HANDLE ERROR      reg9",
      "9027 PUSH MEMORY ELEMENT IF INIT      421 -> reg9",
      "9030 GET      reg9[occupiedBits] -> reg7",
      "9036 SET      7 -> reg11",
      "9039 ADD      reg7NaN-> reg11",
      "9043 PUT      reg9[occupiedBits] = reg11",
      "9049 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9052 GET      reg7[occupiedBits] -> reg9",
      "9058 GREATER THAN      reg9 > 16 -> reg7",
      "9062 JUMP IF FALSE      reg7 TO: 9352 | 9065"
  ],
  "9027": [
      "9027 PUSH MEMORY ELEMENT IF INIT      421 -> reg9",
      "9030 GET      reg9[occupiedBits] -> reg7",
      "9036 SET      7 -> reg11",
      "9039 ADD      reg7NaN-> reg11",
      "9043 PUT      reg9[occupiedBits] = reg11",
      "9049 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9052 GET      reg7[occupiedBits] -> reg9",
      "9058 GREATER THAN      reg9 > 16 -> reg7",
      "9062 JUMP IF FALSE      reg7 TO: 9352 | 9065"
  ],
  "9065": [
      "9065 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9068 GET      reg7[occupiedBits] -> reg9",
      "9074 SUBTRACT      reg9 - 16 -> reg7",
      "9078 SET MEMORY ELEMENT IF INIT      425 = reg7",
      "9081 PUSH MEMORY ELEMENT IF INIT      420 -> reg9",
      "9084 GET      reg9[slice] -> reg11",
      "9090 NEW ARRAY      2 -> reg14",
      "9093 PUT      reg14[0] = 0",
      "9097 PUSH MEMORY ELEMENT IF INIT      425 -> reg13",
      "9100 PUT      reg14[1] = reg13",
      "9104 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg14",
      "9108 SET      reg2 -> reg12",
      "9111 GET      reg12[reduceRight] -> reg11",
      "9117 NEW ARRAY      2 -> reg13",
      "9120 INIT FUNCTION STATE      PTR: 9129 NAME:  LEN: 2 -> reg14",
      "9127 JUMP      9147",
      "9147 PUT      reg13[0] = reg14",
      "9151 PUT      reg13[1] = 0",
      "9155 CALL FUNCTION      OBJ: reg12 FUNC: reg11 ARGS: reg13",
      "9159 SET      reg2 -> reg7",
      "9162 PUSH MEMORY ELEMENT IF INIT      425 -> reg11",
      "9165 MULTIPLY      85967 * reg11 -> reg13",
      "9169 SUBTRACT      reg7 - reg13 -> reg11",
      "9173 SET MEMORY ELEMENT IF INIT      426 = reg11",
      "9176 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9179 PUSH MEMORY ELEMENT IF INIT      425 -> reg13",
      "9182 PUT      reg7[occupiedBits] = reg13",
      "9188 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9191 GET      reg7[nextCode] -> reg11",
      "9197 SET MEMORY ELEMENT IF INIT      427 = reg11",
      "9200 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9203 PUSH MEMORY ELEMENT IF INIT      426 -> reg11",
      "9206 GET WINDOW PROP      Math -> reg14",
      "9211 GET      reg14[floor] -> reg15",
      "9217 NEW ARRAY      1 -> reg16",
      "9220 PUSH MEMORY ELEMENT IF INIT      424 -> reg17",
      "9223 PUT      reg16[0] = reg17",
      "9227 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg16",
      "9231 SET      reg2 -> reg13",
      "9234 AND      reg11 & reg13 -> reg15",
      "9238 PUT      reg7[nextCode] = reg15",
      "9244 PUSH MEMORY ELEMENT IF INIT      427 -> reg7",
      "9247 PUSH MEMORY ELEMENT IF INIT      425 -> reg11",
      "9250 SUBTRACT      7 - reg11 -> reg13",
      "9254 LSHIFT      reg7 << reg13 -> reg11",
      "9258 SET MEMORY ELEMENT IF INIT      428 = reg11",
      "9261 GET WINDOW PROP      Math -> reg11",
      "9266 GET      reg11[floor] -> reg13",
      "9272 NEW ARRAY      1 -> reg15",
      "9275 PUSH MEMORY ELEMENT IF INIT      424 -> reg16",
      "9278 PUT      reg15[0] = reg16",
      "9282 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg15",
      "9286 SET      reg2 -> reg7",
      "9289 PUSH MEMORY ELEMENT IF INIT      425 -> reg13",
      "9292 RSHIFT      reg7 >> reg13 -> reg15",
      "9296 SET MEMORY ELEMENT IF INIT      429 = reg15",
      "9299 PUSH MEMORY ELEMENT IF INIT      421 -> reg13",
      "9302 GET      reg13[codePoints] -> reg15",
      "9308 GET      reg15[push] -> reg13",
      "9314 NEW ARRAY      1 -> reg16",
      "9317 PUSH MEMORY ELEMENT IF INIT      428 -> reg17",
      "9320 PUSH MEMORY ELEMENT IF INIT      429 -> reg19",
      "9323 OR      reg17 | reg19 -> reg20",
      "9327 PUT      reg16[0] = reg20",
      "9331 CALL FUNCTION      OBJ: reg15 FUNC: reg13 ARGS: reg16",
      "9335 SET      reg2 -> reg7",
      "9338 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9341 PUSH MEMORY ELEMENT IF INIT      425 -> reg13",
      "9344 PUT      reg7[occupiedBits] = reg13",
      "9350 JUMP      9381",
      "9381 JUMP      8936",
      "8936 PUSH MEMORY ELEMENT IF INIT      422 -> reg8",
      "8939 GET      reg8[n] -> reg9",
      "8945 EMPTY ARRAY      -> reg11",
      "8947 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg11",
      "8951 SET      reg2 -> reg7",
      "8954 SET MEMORY ELEMENT IF INIT      423 = reg7",
      "8957 GET      reg7[done] -> reg9",
      "8963 NOT      reg9 -> reg7",
      "8966 JUMP IF FALSE      reg7 TO: 9383 | 8969"
  ],
  "9352": [
      "9352 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9355 PUSH MEMORY ELEMENT IF INIT      421 -> reg16",
      "9358 GET      reg16[nextCode] -> reg13",
      "9364 LSHIFT      reg13 << 7 -> reg16",
      "9368 PUSH MEMORY ELEMENT IF INIT      424 -> reg13",
      "9371 OR      reg16 | reg13 -> reg19",
      "9375 PUT      reg7[nextCode] = reg19",
      "9381 JUMP      8936",
      "8936 PUSH MEMORY ELEMENT IF INIT      422 -> reg8",
      "8939 GET      reg8[n] -> reg9",
      "8945 EMPTY ARRAY      -> reg11",
      "8947 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg11",
      "8951 SET      reg2 -> reg7",
      "8954 SET MEMORY ELEMENT IF INIT      423 = reg7",
      "8957 GET      reg7[done] -> reg9",
      "8963 NOT      reg9 -> reg7",
      "8966 JUMP IF FALSE      reg7 TO: 9383 | 8969"
  ],
  "9383": [
      "9383 JUMP      9419",
      "9419 SET I      null",
      "9421 SET N      null",
      "9423 PUSH MEMORY ELEMENT IF INIT      422 -> reg18",
      "9426 GET      reg18[f] -> reg17",
      "9432 EMPTY ARRAY      -> reg7",
      "9434 CALL FUNCTION      OBJ: reg18 FUNC: reg17 ARGS: reg7",
      "9438 SET      reg2 -> reg16",
      "9441 HANDLE TRACE OR JUMP OR RETURN C",
      "9442 SET I      null",
      "9444 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9447 GET      reg7[occupiedBits] -> reg16",
      "9453 SUBTRACT      16 - reg16 -> reg7",
      "9457 SET MEMORY ELEMENT IF INIT      430 = reg7",
      "9460 PUSH MEMORY ELEMENT IF INIT      430 -> reg16",
      "9463 GREATER THAN      reg16 > 0 -> reg17",
      "9467 JUMP IF FALSE      reg17 TO: 9608 | 9470"
  ],
  "9385": [
      "9385 SET I      9419",
      "9387 PUSH F.K      -> reg13",
      "9389 VOID F",
      "9390 SET MEMORY ELEMENT      0 = reg13",
      "9393 PUSH MEMORY ELEMENT IF INIT      422 -> reg13",
      "9396 GET      reg13[e] -> reg16",
      "9402 NEW ARRAY      1 -> reg17",
      "9405 PUSH MEMORY ELEMENT IF INIT      0 -> reg18",
      "9408 PUT      reg17[0] = reg18",
      "9412 CALL FUNCTION      OBJ: reg13 FUNC: reg16 ARGS: reg17",
      "9416 SET      reg2 -> reg7",
      "9419 SET I      null",
      "9421 SET N      null",
      "9423 PUSH MEMORY ELEMENT IF INIT      422 -> reg18",
      "9426 GET      reg18[f] -> reg17",
      "9432 EMPTY ARRAY      -> reg7",
      "9434 CALL FUNCTION      OBJ: reg18 FUNC: reg17 ARGS: reg7",
      "9438 SET      reg2 -> reg16",
      "9441 HANDLE TRACE OR JUMP OR RETURN C",
      "9442 SET I      null",
      "9444 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9447 GET      reg7[occupiedBits] -> reg16",
      "9453 SUBTRACT      16 - reg16 -> reg7",
      "9457 SET MEMORY ELEMENT IF INIT      430 = reg7",
      "9460 PUSH MEMORY ELEMENT IF INIT      430 -> reg16",
      "9463 GREATER THAN      reg16 > 0 -> reg17",
      "9467 JUMP IF FALSE      reg17 TO: 9608 | 9470"
  ],
  "9419": [
      "9419 SET I      null",
      "9421 SET N      null",
      "9423 PUSH MEMORY ELEMENT IF INIT      422 -> reg18",
      "9426 GET      reg18[f] -> reg17",
      "9432 EMPTY ARRAY      -> reg7",
      "9434 CALL FUNCTION      OBJ: reg18 FUNC: reg17 ARGS: reg7",
      "9438 SET      reg2 -> reg16",
      "9441 HANDLE TRACE OR JUMP OR RETURN C",
      "9442 SET I      null",
      "9444 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9447 GET      reg7[occupiedBits] -> reg16",
      "9453 SUBTRACT      16 - reg16 -> reg7",
      "9457 SET MEMORY ELEMENT IF INIT      430 = reg7",
      "9460 PUSH MEMORY ELEMENT IF INIT      430 -> reg16",
      "9463 GREATER THAN      reg16 > 0 -> reg17",
      "9467 JUMP IF FALSE      reg17 TO: 9608 | 9470"
  ],
  "9470": [
      "9470 GET WINDOW PROP      Math -> reg16",
      "9475 GET      reg16[floor] -> reg17",
      "9481 NEW ARRAY      1 -> reg21",
      "9484 GET WINDOW PROP      Math -> reg22",
      "9489 GET      reg22[random] -> reg19",
      "9495 EMPTY ARRAY      -> reg20",
      "9497 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg20",
      "9501 SET      reg2 -> reg23",
      "9504 GET WINDOW PROP      Math -> reg20",
      "9509 GET      reg20[pow] -> reg25",
      "9515 NEW ARRAY      2 -> reg26",
      "9518 PUT      reg26[0] = 2",
      "9522 PUSH MEMORY ELEMENT IF INIT      430 -> reg19",
      "9525 PUT      reg26[1] = reg19",
      "9529 CALL FUNCTION      OBJ: reg20 FUNC: reg25 ARGS: reg26",
      "9533 SET      reg2 -> reg24",
      "9536 MULTIPLY      reg23 * reg24 -> reg19",
      "9540 PUT      reg21[0] = reg19",
      "9544 CALL FUNCTION      OBJ: reg16 FUNC: reg17 ARGS: reg21",
      "9548 SET      reg2 -> reg7",
      "9551 SET MEMORY ELEMENT IF INIT      431 = reg7",
      "9554 PUSH MEMORY ELEMENT IF INIT      421 -> reg17",
      "9557 GET      reg17[codePoints] -> reg21",
      "9563 GET      reg21[push] -> reg17",
      "9569 NEW ARRAY      1 -> reg19",
      "9572 PUSH MEMORY ELEMENT IF INIT      421 -> reg23",
      "9575 GET      reg23[nextCode] -> reg24",
      "9581 PUSH MEMORY ELEMENT IF INIT      430 -> reg23",
      "9584 LSHIFT      reg24 << reg23 -> reg26",
      "9588 PUSH MEMORY ELEMENT IF INIT      431 -> reg23",
      "9591 OR      reg26 | reg23 -> reg24",
      "9595 PUT      reg19[0] = reg24",
      "9599 CALL FUNCTION      OBJ: reg21 FUNC: reg17 ARGS: reg19",
      "9603 SET      reg2 -> reg7",
      "9606 JUMP      9646",
      "9646 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9649 GET      reg7[codePoints] -> reg17",
      "9655 JUMP OR RETURN VAL      reg17"
  ],
  "9608": [
      "9608 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9611 GET      reg7[codePoints] -> reg23",
      "9617 GET      reg23[push] -> reg7",
      "9623 NEW ARRAY      1 -> reg19",
      "9626 PUSH MEMORY ELEMENT IF INIT      421 -> reg24",
      "9629 GET      reg24[nextCode] -> reg25",
      "9635 PUT      reg19[0] = reg25",
      "9639 CALL FUNCTION      OBJ: reg23 FUNC: reg7 ARGS: reg19",
      "9643 SET      reg2 -> reg17",
      "9646 PUSH MEMORY ELEMENT IF INIT      421 -> reg7",
      "9649 GET      reg7[codePoints] -> reg17",
      "9655 JUMP OR RETURN VAL      reg17"
  ],
  "9849": [
      "9849 PUSH MEMORY ELEMENT IF INIT      457 -> reg4",
      "9852 PUSH MEMORY ELEMENT IF INIT      460 -> reg8",
      "9855 GET      reg4[reg8] -> reg7",
      "9859 SET MEMORY ELEMENT IF INIT      458 = reg7",
      "9862 PUSH MEMORY ELEMENT IF INIT      455 -> reg4",
      "9865 AND      reg4 & 65535 -> reg6",
      "9869 RSHIFT      reg6 >> 6 -> reg7",
      "9873 PUSH MEMORY ELEMENT IF INIT      455 -> reg4",
      "9876 LSHIFT      reg4 << 10 -> reg8",
      "9880 OR      reg7 | reg8 -> reg6",
      "9884 AND      reg6 & 65535 -> reg7",
      "9888 SET MEMORY ELEMENT IF INIT      455 = reg7",
      "9891 PUSH MEMORY ELEMENT IF INIT      456 -> reg6",
      "9894 PUSH MEMORY ELEMENT IF INIT      455 -> reg4",
      "9897 ADD      reg6NaN-> reg4",
      "9901 SET MEMORY ELEMENT IF INIT      456 = reg4",
      "9904 PUSH MEMORY ELEMENT IF INIT      455 -> reg4",
      "9907 PUSH MEMORY ELEMENT IF INIT      460 -> reg7",
      "9910 SUBTRACT      reg4 - reg7 -> reg7",
      "9914 SET MEMORY ELEMENT IF INIT      455 = reg7",
      "9917 PUSH MEMORY ELEMENT IF INIT      458 -> reg4",
      "9920 SET      reg4 -> reg7",
      "9923 SUBTRACT      reg4 - 1 -> reg4",
      "9927 SET MEMORY ELEMENT IF INIT      458 = reg4",
      "9930 PUSH MEMORY ELEMENT IF INIT      458 -> reg4",
      "9933 LSHIFT      reg4 << 11 -> reg6",
      "9937 PUSH MEMORY ELEMENT IF INIT      458 -> reg4",
      "9940 AND      reg4 & 65535 -> reg8",
      "9944 RSHIFT      reg8 >> 5 -> reg4",
      "9948 OR      reg6 | reg4 -> reg7",
      "9952 AND      reg7 & 65535 -> reg6",
      "9956 SET MEMORY ELEMENT IF INIT      458 = reg6",
      "9959 PUSH MEMORY ELEMENT IF INIT      456 -> reg4",
      "9962 SET      reg4 -> reg6",
      "9965 ADD      reg41-> reg4",
      "9969 SET MEMORY ELEMENT IF INIT      456 = reg4",
      "9972 PUSH MEMORY ELEMENT IF INIT      458 -> reg4",
      "9975 SET      10828 -> reg8",
      "9978 ADD      reg4NaN-> reg8",
      "9982 SET MEMORY ELEMENT IF INIT      458 = reg8",
      "9985 PUSH MEMORY ELEMENT IF INIT      456 -> reg4",
      "9988 SET      reg4 -> reg6",
      "9991 SUBTRACT      reg4 - 1 -> reg4",
      "9995 SET MEMORY ELEMENT IF INIT      456 = reg4",
      "9998 PUSH MEMORY ELEMENT IF INIT      455 -> reg6",
      "10001 LSHIFT      reg6 << 5 -> reg4",
      "10005 PUSH MEMORY ELEMENT IF INIT      455 -> reg6",
      "10008 AND      reg6 & 65535 -> reg7",
      "10012 RSHIFT      reg7 >> 11 -> reg8",
      "10016 OR      reg4 | reg8 -> reg6",
      "10020 AND      reg6 & 65535 -> reg4",
      "10024 SET MEMORY ELEMENT IF INIT      455 = reg4",
      "10027 PUSH MEMORY ELEMENT IF INIT      455 -> reg6",
      "10030 SET      reg6 -> reg4",
      "10033 ADD      reg61-> reg6",
      "10037 SET MEMORY ELEMENT IF INIT      455 = reg6",
      "10040 PUSH MEMORY ELEMENT IF INIT      456 -> reg4",
      "10043 AND      reg4 & 65535 -> reg6",
      "10047 RSHIFT      reg6 >> 7 -> reg4",
      "10051 PUSH MEMORY ELEMENT IF INIT      456 -> reg6",
      "10054 LSHIFT      reg6 << 9 -> reg7",
      "10058 OR      reg4 | reg7 -> reg6",
      "10062 AND      reg6 & 65535 -> reg7",
      "10066 SET MEMORY ELEMENT IF INIT      456 = reg7",
      "10069 PUSH MEMORY ELEMENT IF INIT      456 -> reg4",
      "10072 INVERT      9181 -> reg6",
      "10075 SUBTRACT      reg4 - reg6 -> reg6",
      "10079 SET MEMORY ELEMENT IF INIT      456 = reg6",
      "10082 PUSH MEMORY ELEMENT IF INIT      455 -> reg4",
      "10085 SET      reg4 -> reg6",
      "10088 ADD      reg41-> reg4",
      "10092 SET MEMORY ELEMENT IF INIT      455 = reg4",
      "10095 PUSH MEMORY ELEMENT IF INIT      455 -> reg6",
      "10098 PUSH MEMORY ELEMENT IF INIT      460 -> reg4",
      "10101 SUBTRACT      reg6 - reg4 -> reg4",
      "10105 SET MEMORY ELEMENT IF INIT      455 = reg4",
      "10108 PUSH MEMORY ELEMENT IF INIT      458 -> reg4",
      "10111 SET      reg4 -> reg6",
      "10114 SUBTRACT      reg4 - 1 -> reg4",
      "10118 SET MEMORY ELEMENT IF INIT      458 = reg4",
      "10121 PUSH MEMORY ELEMENT IF INIT      456 -> reg6",
      "10124 SET      21936 -> reg4",
      "10127 XOR      reg6 ^ reg4 -> reg4",
      "10131 SET MEMORY ELEMENT IF INIT      456 = reg4",
      "10134 PUSH MEMORY ELEMENT IF INIT      458 -> reg6",
      "10137 SET      reg6 -> reg4",
      "10140 ADD      reg61-> reg6",
      "10144 SET MEMORY ELEMENT IF INIT      458 = reg6",
      "10147 PUSH MEMORY ELEMENT IF INIT      455 -> reg4",
      "10150 PUSH MEMORY ELEMENT IF INIT      460 -> reg6",
      "10153 ADD      reg4NaN-> reg6",
      "10157 SET MEMORY ELEMENT IF INIT      455 = reg6",
      "10160 PUSH MEMORY ELEMENT IF INIT      458 -> reg4",
      "10163 LSHIFT      reg4 << 10 -> reg6",
      "10167 PUSH MEMORY ELEMENT IF INIT      458 -> reg7",
      "10170 AND      reg7 & 65535 -> reg4",
      "10174 RSHIFT      reg4 >> 6 -> reg8",
      "10178 OR      reg6 | reg8 -> reg7",
      "10182 AND      reg7 & 65535 -> reg4",
      "10186 SET MEMORY ELEMENT IF INIT      458 = reg4",
      "10189 PUSH MEMORY ELEMENT IF INIT      459 -> reg4",
      "10192 GET      reg4[unshift] -> reg8",
      "10198 NEW ARRAY      1 -> reg9",
      "10201 GET WINDOW PROP      String -> reg10",
      "10206 GET      reg10[fromCharCode] -> reg12",
      "10212 NEW ARRAY      1 -> reg11",
      "10215 PUSH MEMORY ELEMENT IF INIT      458 -> reg14",
      "10218 AND      reg14 & 65535 -> reg13",
      "10222 PUT      reg11[0] = reg13",
      "10226 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg11",
      "10230 SET      reg2 -> reg7",
      "10233 PUT      reg9[0] = reg7",
      "10237 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg9",
      "10241 SET      reg2 -> reg6",
      "10244 PUSH MEMORY ELEMENT IF INIT      460 -> reg6",
      "10247 SET      1 -> reg7",
      "10250 SUBTRACT      reg6 - reg7 -> reg7",
      "10254 SET MEMORY ELEMENT IF INIT      460 = reg7",
      "10257 JUMP      9835",
      "9835 PUSH MEMORY ELEMENT IF INIT      460 -> reg6",
      "9838 SUBTRACT      0 - 1 -> reg7",
      "9842 GREATER THAN      reg6 > reg7 -> reg4",
      "9846 JUMP IF FALSE      reg4 TO: 10259 | 9849"
  ],
  "10259": [
      "10259 PUSH MEMORY ELEMENT IF INIT      459 -> reg7",
      "10262 GET      reg7[join] -> reg8",
      "10268 NEW ARRAY      1 -> reg9",
      "10271 PUT      reg9[0] = ",
      "10277 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "10281 SET      reg2 -> reg6",
      "10284 JUMP OR RETURN VAL      reg6"
  ],
  "10400": [
      "10400 PUSH MEMORY ELEMENT IF INIT      467 -> reg5",
      "10403 PUSH MEMORY ELEMENT IF INIT      470 -> reg7",
      "10406 GET      reg5[reg7] -> reg4",
      "10410 SET MEMORY ELEMENT IF INIT      468 = reg4",
      "10413 PUSH MEMORY ELEMENT IF INIT      465 -> reg4",
      "10416 INVERT      62483 -> reg5",
      "10419 SUBTRACT      reg4 - reg5 -> reg5",
      "10423 SET MEMORY ELEMENT IF INIT      465 = reg5",
      "10426 PUSH MEMORY ELEMENT IF INIT      468 -> reg4",
      "10429 INVERT      31904 -> reg5",
      "10432 ADD      reg4NaN-> reg5",
      "10436 SET MEMORY ELEMENT IF INIT      468 = reg5",
      "10439 PUSH MEMORY ELEMENT IF INIT      465 -> reg4",
      "10442 AND      reg4 & 65535 -> reg5",
      "10446 RSHIFT      reg5 >> 14 -> reg4",
      "10450 PUSH MEMORY ELEMENT IF INIT      465 -> reg8",
      "10453 LSHIFT      reg8 << 2 -> reg5",
      "10457 OR      reg4 | reg5 -> reg8",
      "10461 AND      reg8 & 65535 -> reg4",
      "10465 SET MEMORY ELEMENT IF INIT      465 = reg4",
      "10468 PUSH MEMORY ELEMENT IF INIT      468 -> reg8",
      "10471 LSHIFT      reg8 << 12 -> reg4",
      "10475 PUSH MEMORY ELEMENT IF INIT      468 -> reg8",
      "10478 AND      reg8 & 65535 -> reg5",
      "10482 RSHIFT      reg5 >> 4 -> reg7",
      "10486 OR      reg4 | reg7 -> reg8",
      "10490 AND      reg8 & 65535 -> reg5",
      "10494 SET MEMORY ELEMENT IF INIT      468 = reg5",
      "10497 PUSH MEMORY ELEMENT IF INIT      468 -> reg5",
      "10500 SET      reg5 -> reg4",
      "10503 SUBTRACT      reg5 - 1 -> reg5",
      "10507 SET MEMORY ELEMENT IF INIT      468 = reg5",
      "10510 PUSH MEMORY ELEMENT IF INIT      465 -> reg4",
      "10513 SET      2513 -> reg5",
      "10516 ADD      reg4NaN-> reg5",
      "10520 SET MEMORY ELEMENT IF INIT      465 = reg5",
      "10523 PUSH MEMORY ELEMENT IF INIT      465 -> reg4",
      "10526 AND      reg4 & 65535 -> reg8",
      "10530 RSHIFT      reg8 >> 3 -> reg4",
      "10534 PUSH MEMORY ELEMENT IF INIT      465 -> reg8",
      "10537 LSHIFT      reg8 << 13 -> reg5",
      "10541 OR      reg4 | reg5 -> reg7",
      "10545 AND      reg7 & 65535 -> reg4",
      "10549 SET MEMORY ELEMENT IF INIT      465 = reg4",
      "10552 PUSH MEMORY ELEMENT IF INIT      466 -> reg4",
      "10555 PUSH MEMORY ELEMENT IF INIT      466 -> reg7",
      "10558 ADD      reg4NaN-> reg7",
      "10562 SET MEMORY ELEMENT IF INIT      466 = reg7",
      "10565 PUSH MEMORY ELEMENT IF INIT      468 -> reg4",
      "10568 AND      reg4 & 65535 -> reg5",
      "10572 RSHIFT      reg5 >> 7 -> reg4",
      "10576 PUSH MEMORY ELEMENT IF INIT      468 -> reg5",
      "10579 LSHIFT      reg5 << 9 -> reg8",
      "10583 OR      reg4 | reg8 -> reg5",
      "10587 AND      reg5 & 65535 -> reg8",
      "10591 SET MEMORY ELEMENT IF INIT      468 = reg8",
      "10594 PUSH MEMORY ELEMENT IF INIT      466 -> reg4",
      "10597 SET      15044 -> reg7",
      "10600 SUBTRACT      reg4 - reg7 -> reg7",
      "10604 SET MEMORY ELEMENT IF INIT      466 = reg7",
      "10607 PUSH MEMORY ELEMENT IF INIT      465 -> reg8",
      "10610 SET      5251 -> reg4",
      "10613 XOR      reg8 ^ reg4 -> reg4",
      "10617 SET MEMORY ELEMENT IF INIT      465 = reg4",
      "10620 PUSH MEMORY ELEMENT IF INIT      468 -> reg4",
      "10623 PUSH MEMORY ELEMENT IF INIT      470 -> reg5",
      "10626 ADD      reg4NaN-> reg5",
      "10630 SET MEMORY ELEMENT IF INIT      468 = reg5",
      "10633 PUSH MEMORY ELEMENT IF INIT      468 -> reg4",
      "10636 SET      reg4 -> reg5",
      "10639 ADD      reg41-> reg4",
      "10643 SET MEMORY ELEMENT IF INIT      468 = reg4",
      "10646 PUSH MEMORY ELEMENT IF INIT      466 -> reg5",
      "10649 PUSH MEMORY ELEMENT IF INIT      470 -> reg4",
      "10652 SUBTRACT      reg5 - reg4 -> reg4",
      "10656 SET MEMORY ELEMENT IF INIT      466 = reg4",
      "10659 PUSH MEMORY ELEMENT IF INIT      469 -> reg4",
      "10662 GET      reg4[unshift] -> reg7",
      "10668 NEW ARRAY      1 -> reg9",
      "10671 GET WINDOW PROP      String -> reg11",
      "10676 GET      reg11[fromCharCode] -> reg10",
      "10682 NEW ARRAY      1 -> reg12",
      "10685 PUSH MEMORY ELEMENT IF INIT      468 -> reg16",
      "10688 AND      reg16 & 65535 -> reg13",
      "10692 PUT      reg12[0] = reg13",
      "10696 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg12",
      "10700 SET      reg2 -> reg8",
      "10703 PUT      reg9[0] = reg8",
      "10707 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg9",
      "10711 SET      reg2 -> reg5",
      "10714 PUSH MEMORY ELEMENT IF INIT      470 -> reg8",
      "10717 SET      1 -> reg5",
      "10720 SUBTRACT      reg8 - reg5 -> reg5",
      "10724 SET MEMORY ELEMENT IF INIT      470 = reg5",
      "10727 JUMP      10386",
      "10386 PUSH MEMORY ELEMENT IF INIT      470 -> reg4",
      "10389 SUBTRACT      0 - 1 -> reg5",
      "10393 GREATER THAN      reg4 > reg5 -> reg7",
      "10397 JUMP IF FALSE      reg7 TO: 10729 | 10400"
  ],
  "10729": [
      "10729 PUSH MEMORY ELEMENT IF INIT      469 -> reg8",
      "10732 GET      reg8[join] -> reg7",
      "10738 NEW ARRAY      1 -> reg10",
      "10741 PUT      reg10[0] = ",
      "10747 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg10",
      "10751 SET      reg2 -> reg5",
      "10754 JUMP OR RETURN VAL      reg5"
  ],
  "10870": [
      "10870 PUSH MEMORY ELEMENT IF INIT      477 -> reg4",
      "10873 PUSH MEMORY ELEMENT IF INIT      480 -> reg5",
      "10876 GET      reg4[reg5] -> reg7",
      "10880 SET MEMORY ELEMENT IF INIT      478 = reg7",
      "10883 PUSH MEMORY ELEMENT IF INIT      476 -> reg5",
      "10886 AND      reg5 & 65535 -> reg4",
      "10890 RSHIFT      reg4 >> 5 -> reg5",
      "10894 PUSH MEMORY ELEMENT IF INIT      476 -> reg4",
      "10897 LSHIFT      reg4 << 11 -> reg7",
      "10901 OR      reg5 | reg7 -> reg4",
      "10905 AND      reg4 & 65535 -> reg5",
      "10909 SET MEMORY ELEMENT IF INIT      476 = reg5",
      "10912 PUSH MEMORY ELEMENT IF INIT      475 -> reg4",
      "10915 LSHIFT      reg4 << 12 -> reg8",
      "10919 PUSH MEMORY ELEMENT IF INIT      475 -> reg5",
      "10922 AND      reg5 & 65535 -> reg4",
      "10926 RSHIFT      reg4 >> 4 -> reg7",
      "10930 OR      reg8 | reg7 -> reg4",
      "10934 AND      reg4 & 65535 -> reg5",
      "10938 SET MEMORY ELEMENT IF INIT      475 = reg5",
      "10941 PUSH MEMORY ELEMENT IF INIT      476 -> reg4",
      "10944 AND      reg4 & 65535 -> reg5",
      "10948 RSHIFT      reg5 >> 4 -> reg8",
      "10952 PUSH MEMORY ELEMENT IF INIT      476 -> reg5",
      "10955 LSHIFT      reg5 << 12 -> reg4",
      "10959 OR      reg8 | reg4 -> reg7",
      "10963 AND      reg7 & 65535 -> reg4",
      "10967 SET MEMORY ELEMENT IF INIT      476 = reg4",
      "10970 PUSH MEMORY ELEMENT IF INIT      476 -> reg4",
      "10973 INVERT      56188 -> reg5",
      "10976 XOR      reg4 ^ reg5 -> reg5",
      "10980 SET MEMORY ELEMENT IF INIT      476 = reg5",
      "10983 PUSH MEMORY ELEMENT IF INIT      476 -> reg4",
      "10986 SET      54584 -> reg5",
      "10989 XOR      reg4 ^ reg5 -> reg5",
      "10993 SET MEMORY ELEMENT IF INIT      476 = reg5",
      "10996 PUSH MEMORY ELEMENT IF INIT      476 -> reg5",
      "10999 SET      reg5 -> reg7",
      "11002 ADD      reg51-> reg5",
      "11006 SET MEMORY ELEMENT IF INIT      476 = reg5",
      "11009 PUSH MEMORY ELEMENT IF INIT      475 -> reg4",
      "11012 AND      reg4 & 65535 -> reg5",
      "11016 RSHIFT      reg5 >> 9 -> reg4",
      "11020 PUSH MEMORY ELEMENT IF INIT      475 -> reg7",
      "11023 LSHIFT      reg7 << 7 -> reg5",
      "11027 OR      reg4 | reg5 -> reg8",
      "11031 AND      reg8 & 65535 -> reg7",
      "11035 SET MEMORY ELEMENT IF INIT      475 = reg7",
      "11038 PUSH MEMORY ELEMENT IF INIT      478 -> reg4",
      "11041 AND      reg4 & 65535 -> reg7",
      "11045 RSHIFT      reg7 >> 13 -> reg4",
      "11049 PUSH MEMORY ELEMENT IF INIT      478 -> reg7",
      "11052 LSHIFT      reg7 << 3 -> reg5",
      "11056 OR      reg4 | reg5 -> reg7",
      "11060 AND      reg7 & 65535 -> reg4",
      "11064 SET MEMORY ELEMENT IF INIT      478 = reg4",
      "11067 PUSH MEMORY ELEMENT IF INIT      476 -> reg4",
      "11070 SET      23094 -> reg5",
      "11073 SUBTRACT      reg4 - reg5 -> reg5",
      "11077 SET MEMORY ELEMENT IF INIT      476 = reg5",
      "11080 PUSH MEMORY ELEMENT IF INIT      475 -> reg5",
      "11083 LSHIFT      reg5 << 9 -> reg8",
      "11087 PUSH MEMORY ELEMENT IF INIT      475 -> reg4",
      "11090 AND      reg4 & 65535 -> reg9",
      "11094 RSHIFT      reg9 >> 7 -> reg7",
      "11098 OR      reg8 | reg7 -> reg4",
      "11102 AND      reg4 & 65535 -> reg5",
      "11106 SET MEMORY ELEMENT IF INIT      475 = reg5",
      "11109 PUSH MEMORY ELEMENT IF INIT      476 -> reg5",
      "11112 LSHIFT      reg5 << 4 -> reg4",
      "11116 PUSH MEMORY ELEMENT IF INIT      476 -> reg5",
      "11119 AND      reg5 & 65535 -> reg7",
      "11123 RSHIFT      reg7 >> 12 -> reg5",
      "11127 OR      reg4 | reg5 -> reg7",
      "11131 AND      reg7 & 65535 -> reg4",
      "11135 SET MEMORY ELEMENT IF INIT      476 = reg4",
      "11138 PUSH MEMORY ELEMENT IF INIT      476 -> reg4",
      "11141 SET      reg4 -> reg5",
      "11144 ADD      reg41-> reg4",
      "11148 SET MEMORY ELEMENT IF INIT      476 = reg4",
      "11151 PUSH MEMORY ELEMENT IF INIT      476 -> reg4",
      "11154 SET      reg4 -> reg5",
      "11157 SUBTRACT      reg4 - 1 -> reg4",
      "11161 SET MEMORY ELEMENT IF INIT      476 = reg4",
      "11164 PUSH MEMORY ELEMENT IF INIT      479 -> reg5",
      "11167 GET      reg5[unshift] -> reg7",
      "11173 NEW ARRAY      1 -> reg8",
      "11176 GET WINDOW PROP      String -> reg10",
      "11181 GET      reg10[fromCharCode] -> reg11",
      "11187 NEW ARRAY      1 -> reg13",
      "11190 PUSH MEMORY ELEMENT IF INIT      478 -> reg12",
      "11193 AND      reg12 & 65535 -> reg14",
      "11197 PUT      reg13[0] = reg14",
      "11201 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg13",
      "11205 SET      reg2 -> reg9",
      "11208 PUT      reg8[0] = reg9",
      "11212 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "11216 SET      reg2 -> reg4",
      "11219 PUSH MEMORY ELEMENT IF INIT      480 -> reg4",
      "11222 SET      1 -> reg7",
      "11225 SUBTRACT      reg4 - reg7 -> reg7",
      "11229 SET MEMORY ELEMENT IF INIT      480 = reg7",
      "11232 JUMP      10856",
      "10856 PUSH MEMORY ELEMENT IF INIT      480 -> reg4",
      "10859 SUBTRACT      0 - 1 -> reg5",
      "10863 GREATER THAN      reg4 > reg5 -> reg7",
      "10867 JUMP IF FALSE      reg7 TO: 11234 | 10870"
  ],
  "11234": [
      "11234 PUSH MEMORY ELEMENT IF INIT      479 -> reg8",
      "11237 GET      reg8[join] -> reg7",
      "11243 NEW ARRAY      1 -> reg11",
      "11246 PUT      reg11[0] = ",
      "11252 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg11",
      "11256 SET      reg2 -> reg4",
      "11259 JUMP OR RETURN VAL      reg4"
  ],
  "11346": [
      "11346 SET I      null",
      "11348 PUSH F.K      -> reg4",
      "11350 VOID F",
      "11351 SET MEMORY ELEMENT      0 = reg4",
      "11354 PUSH MEMORY ELEMENT IF INIT      315 -> reg5",
      "11357 GET      reg5[DecodePairFnExecutionError] -> reg11",
      "11363 NEW ARRAY      1 -> reg5",
      "11366 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "11369 PUT      reg5[0] = reg8",
      "11373 BIND APPLY      reg11 reg5 -> 4",
      "11377 HANDLE ERROR      reg4",
      "11379 SET I      null",
      "11381 JUMP OR RETURN"
  ],
  "11638": [
      "11638 PUSH MEMORY ELEMENT IF INIT      494 -> reg4",
      "11641 GET      reg4[screen] -> reg5",
      "11647 GET      reg5[mozOrientation] -> reg4",
      "11653 SET      reg4 -> reg7",
      "11656 JUMP      11751",
      "11751 SET MEMORY ELEMENT IF INIT      495 = reg7",
      "11754 PUSH MEMORY ELEMENT IF INIT      495 -> reg4",
      "11757 JUMP OR RETURN VAL      reg4"
  ],
  "11658": [
      "11658 PUSH MEMORY ELEMENT IF INIT      494 -> reg5",
      "11661 GET      reg5[screen] -> reg6",
      "11667 IN      msOrientation inreg6 -> reg4",
      "11673 JUMP IF FALSE      reg4 TO: 11696 | 11676"
  ],
  "11676": [
      "11676 PUSH MEMORY ELEMENT IF INIT      494 -> reg4",
      "11679 GET      reg4[screen] -> reg5",
      "11685 GET      reg5[msOrientation] -> reg4",
      "11691 SET      reg4 -> reg6",
      "11694 JUMP      11748",
      "11748 SET      reg6 -> reg7",
      "11751 SET MEMORY ELEMENT IF INIT      495 = reg7",
      "11754 PUSH MEMORY ELEMENT IF INIT      495 -> reg4",
      "11757 JUMP OR RETURN VAL      reg4"
  ],
  "11696": [
      "11696 PUSH MEMORY ELEMENT IF INIT      494 -> reg4",
      "11699 GET      reg4[screen] -> reg9",
      "11705 GET      reg9[orientation] -> reg5",
      "11711 JUMP IF FALSE      reg5 TO: 11740 | 11714"
  ],
  "11714": [
      "11714 PUSH MEMORY ELEMENT IF INIT      494 -> reg4",
      "11717 GET      reg4[screen] -> reg8",
      "11723 GET      reg8[orientation] -> reg4",
      "11729 GET      reg4[type] -> reg5",
      "11735 SET      reg5 -> reg9",
      "11738 JUMP      11745",
      "11745 SET      reg9 -> reg6",
      "11748 SET      reg6 -> reg7",
      "11751 SET MEMORY ELEMENT IF INIT      495 = reg7",
      "11754 PUSH MEMORY ELEMENT IF INIT      495 -> reg4",
      "11757 JUMP OR RETURN VAL      reg4"
  ],
  "11740": [
      "11740 SET      not supported -> reg9",
      "11745 SET      reg9 -> reg6",
      "11748 SET      reg6 -> reg7",
      "11751 SET MEMORY ELEMENT IF INIT      495 = reg7",
      "11754 PUSH MEMORY ELEMENT IF INIT      495 -> reg4",
      "11757 JUMP OR RETURN VAL      reg4"
  ],
  "11791": [
      "11791 PUSH MEMORY ELEMENT IF INIT      501 -> reg6",
      "11794 GET      reg6[languages] -> reg4",
      "11800 STRICT NOT EQUAL       !== reg4 -> reg10",
      "11806 SET      reg10 -> reg5",
      "11809 JUMP IF FALSE      reg5 TO: 11832 | 11812"
  ],
  "11809": ["11809 JUMP IF FALSE      reg5 TO: 11832 | 11812"],
  "11812": [
      "11812 PUSH MEMORY ELEMENT IF INIT      501 -> reg4",
      "11815 GET      reg4[languages] -> reg9",
      "11821 GET      reg9[length] -> reg4",
      "11827 SET      reg4 -> reg6",
      "11830 JUMP      11835",
      "11835 JUMP OR RETURN VAL      reg6"
  ],
  "11832": ["11832 SET      0 -> reg6", "11835 JUMP OR RETURN VAL      reg6"],
  "11869": [
      "11869 PUSH MEMORY ELEMENT IF INIT      506 -> reg5",
      "11872 GET      reg5[PluginArray] -> reg7",
      "11878 GET      reg7[prototype] -> reg5",
      "11884 PUSH MEMORY ELEMENT IF INIT      506 -> reg6",
      "11887 GET      reg6[navigator] -> reg7",
      "11893 GET      reg7[plugins] -> reg6",
      "11899 GET      reg6[__proto__] -> reg8",
      "11905 STRICT NOT EQUAL      reg5 !== reg8 -> reg6",
      "11909 SET      reg6 -> reg4",
      "11912 JUMP      11919",
      "11919 JUMP OR RETURN VAL      reg4"
  ],
  "11914": [
      "11914 SET      not supported -> reg4",
      "11919 JUMP OR RETURN VAL      reg4"
  ],
  "11953": [
      "11953 PUSH MEMORY ELEMENT IF INIT      510 -> reg4",
      "11956 GET      reg4[MimeTypeArray] -> reg5",
      "11962 GET      reg5[prototype] -> reg4",
      "11968 PUSH MEMORY ELEMENT IF INIT      510 -> reg5",
      "11971 GET      reg5[navigator] -> reg7",
      "11977 GET      reg7[mimeTypes] -> reg8",
      "11983 GET      reg8[__proto__] -> reg5",
      "11989 STRICT NOT EQUAL      reg4 !== reg5 -> reg7",
      "11993 SET      reg7 -> reg6",
      "11996 JUMP      12003",
      "12003 JUMP OR RETURN VAL      reg6"
  ],
  "11998": [
      "11998 SET      not supported -> reg6",
      "12003 JUMP OR RETURN VAL      reg6"
  ],
  "12037": [
      "12037 PUSH MEMORY ELEMENT IF INIT      514 -> reg5",
      "12040 GET      reg5[connection] -> reg7",
      "12046 IN      rtt inreg7 -> reg9",
      "12052 SET      reg9 -> reg6",
      "12055 JUMP IF FALSE      reg6 TO: 12102 | 12058"
  ],
  "12055": ["12055 JUMP IF FALSE      reg6 TO: 12102 | 12058"],
  "12058": [
      "12058 GET      [concat] -> reg6",
      "12066 NEW ARRAY      1 -> reg7",
      "12069 PUSH MEMORY ELEMENT IF INIT      514 -> reg8",
      "12072 GET      reg8[connection] -> reg9",
      "12078 GET      reg9[rtt] -> reg11",
      "12084 PUT      reg7[0] = reg11",
      "12088 CALL FUNCTION      OBJ:  FUNC: reg6 ARGS: reg7",
      "12094 SET      reg2 -> reg5",
      "12097 SET      reg5 -> reg4",
      "12100 JUMP      12107",
      "12107 JUMP OR RETURN VAL      reg4"
  ],
  "12102": [
      "12102 SET      not supported -> reg4",
      "12107 JUMP OR RETURN VAL      reg4"
  ],
  "12217": [
      "12217 GET WINDOW PROP      document -> reg6",
      "12222 GET      reg6[body] -> reg8",
      "12228 GET      reg8[removeChild] -> reg9",
      "12234 NEW ARRAY      1 -> reg6",
      "12237 PUSH MEMORY ELEMENT IF INIT      519 -> reg10",
      "12240 PUT      reg6[0] = reg10",
      "12244 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg6",
      "12248 SET      reg2 -> reg5",
      "12251 SET      reg5 -> reg4",
      "12254 JUMP OR RETURN"
  ],
  "12254": ["12254 JUMP OR RETURN"],
  "12415": [
      "12415 EMPTY OBJECT      -> reg4",
      "12417 PUSH MEMORY ELEMENT IF INIT      532 -> reg9",
      "12420 GET      reg9[name] -> reg6",
      "12426 PUT      reg4[errorName] = reg6",
      "12432 PUSH MEMORY ELEMENT IF INIT      532 -> reg6",
      "12435 GET      reg6[constructor] -> reg7",
      "12441 GET      reg7[name] -> reg6",
      "12447 PUT      reg4[errorConstructorName] = reg6",
      "12453 PUSH MEMORY ELEMENT IF INIT      532 -> reg7",
      "12456 GET      reg7[message] -> reg6",
      "12462 PUT      reg4[errorMessage] = reg6",
      "12468 PUSH MEMORY ELEMENT IF INIT      532 -> reg6",
      "12471 GET      reg6[stack] -> reg7",
      "12477 SET MEMORY ELEMENT IF INIT      533 = reg7",
      "12480 STRICT EQUAL      null === reg7 -> reg6",
      "12484 JUMP IF TRUE      reg6 TO: 12500 | 12487"
  ],
  "12487": [
      "12487 SET      undefined -> reg7",
      "12490 PUSH MEMORY ELEMENT IF INIT      533 -> reg8",
      "12493 STRICT EQUAL      reg7 === reg8 -> reg9",
      "12497 SET      reg9 -> reg6",
      "12500 JUMP IF FALSE      reg6 TO: 12511 | 12503"
  ],
  "12500": ["12500 JUMP IF FALSE      reg6 TO: 12511 | 12503"],
  "12503": [
      "12503 SET      undefined -> reg6",
      "12506 SET      reg6 -> reg7",
      "12509 JUMP      12590",
      "12590 SET MEMORY ELEMENT IF INIT      534 = reg7",
      "12593 STRICT NOT EQUAL      null !== reg7 -> reg9",
      "12597 JUMP IF FALSE      reg9 TO: 12613 | 12600"
  ],
  "12511": [
      "12511 PUSH MEMORY ELEMENT IF INIT      533 -> reg10",
      "12514 GET      reg10[toString] -> reg12",
      "12520 EMPTY ARRAY      -> reg13",
      "12522 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg13",
      "12526 SET      reg2 -> reg8",
      "12529 GET      reg8[replace] -> reg12",
      "12535 NEW ARRAY      2 -> reg11",
      "12538 PUSH MEMORY ELEMENT IF INIT      318 -> reg14",
      "12541 PUT      reg11[0] = reg14",
      "12545 PUT      reg11[1] = [path]",
      "12551 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg11",
      "12555 SET      reg2 -> reg6",
      "12558 GET      reg6[replace] -> reg11",
      "12564 NEW ARRAY      2 -> reg12",
      "12567 PUSH MEMORY ELEMENT IF INIT      317 -> reg14",
      "12570 PUT      reg12[0] = reg14",
      "12574 PUT      reg12[1] = ips.js?$1=$2[...]",
      "12580 CALL FUNCTION      OBJ: reg6 FUNC: reg11 ARGS: reg12",
      "12584 SET      reg2 -> reg9",
      "12587 SET      reg9 -> reg7",
      "12590 SET MEMORY ELEMENT IF INIT      534 = reg7",
      "12593 STRICT NOT EQUAL      null !== reg7 -> reg9",
      "12597 JUMP IF FALSE      reg9 TO: 12613 | 12600"
  ],
  "12600": [
      "12600 SET      undefined -> reg7",
      "12603 PUSH MEMORY ELEMENT IF INIT      534 -> reg11",
      "12606 STRICT NOT EQUAL      reg7 !== reg11 -> reg12",
      "12610 SET      reg12 -> reg9",
      "12613 JUMP IF FALSE      reg9 TO: 12624 | 12616"
  ],
  "12613": ["12613 JUMP IF FALSE      reg9 TO: 12624 | 12616"],
  "12616": [
      "12616 PUSH MEMORY ELEMENT IF INIT      534 -> reg11",
      "12619 SET      reg11 -> reg7",
      "12622 JUMP      12627",
      "12627 PUT      reg4[errorStack] = reg7",
      "12633 SET      reg4 -> reg5",
      "12636 JUMP      12698",
      "12698 JUMP OR RETURN VAL      reg5"
  ],
  "12624": [
      "12624 SET      null -> reg7",
      "12627 PUT      reg4[errorStack] = reg7",
      "12633 SET      reg4 -> reg5",
      "12636 JUMP      12698",
      "12698 JUMP OR RETURN VAL      reg5"
  ],
  "12638": [
      "12638 EMPTY OBJECT      -> reg7",
      "12640 PUT      reg7[errorName] = unknown",
      "12648 PUT      reg7[errorConstructorName] = unknown",
      "12656 GET      [concat] -> reg11",
      "12664 NEW ARRAY      1 -> reg4",
      "12667 PUSH MEMORY ELEMENT IF INIT      532 -> reg12",
      "12670 PUT      reg4[0] = reg12",
      "12674 CALL FUNCTION      OBJ:  FUNC: reg11 ARGS: reg4",
      "12680 SET      reg2 -> reg9",
      "12683 PUT      reg7[errorMessage] = reg9",
      "12689 PUT      reg7[errorStack] = null",
      "12695 SET      reg7 -> reg5",
      "12698 JUMP OR RETURN VAL      reg5"
  ],
  "12759": [
      "12759 SET I      null",
      "12761 PUSH F.K      -> reg6",
      "12763 VOID F",
      "12764 SET MEMORY ELEMENT      0 = reg6",
      "12767 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "12770 GET WINDOW PROP      Error -> reg5",
      "12775 INSTANCEOF      reg4 instanceof reg5 -> reg6",
      "12779 JUMP IF FALSE      reg6 TO: 12810 | 12782"
  ],
  "12782": [
      "12782 PUSH MEMORY ELEMENT IF INIT      319 -> reg5",
      "12785 GET      reg5[kgx] -> reg6",
      "12791 NEW ARRAY      1 -> reg7",
      "12794 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "12797 PUT      reg7[0] = reg9",
      "12801 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "12805 SET      reg2 -> reg4",
      "12808 JUMP OR RETURN VAL      reg4"
  ],
  "12810": ["12810 SET I      null", "12812 JUMP OR RETURN VAL      null"],
  "12882": [
      "12882 SET      undefined -> reg9",
      "12885 PUSH MEMORY ELEMENT IF INIT      551 -> reg8",
      "12888 STRICT NOT EQUAL      reg9 !== reg8 -> reg5",
      "12892 SET      reg5 -> reg4",
      "12895 JUMP IF FALSE      reg4 TO: 12906 | 12898"
  ],
  "12895": ["12895 JUMP IF FALSE      reg4 TO: 12906 | 12898"],
  "12898": [
      "12898 PUSH MEMORY ELEMENT IF INIT      551 -> reg4",
      "12901 SET      reg4 -> reg5",
      "12904 JUMP      12913",
      "12913 JUMP OR RETURN VAL      reg5"
  ],
  "12906": [
      "12906 SUBTRACT      0 - 1 -> reg4",
      "12910 SET      reg4 -> reg5",
      "12913 JUMP OR RETURN VAL      reg5"
  ],
  "12917": [
      "12917 SET I      null",
      "12919 PUSH F.K      -> reg4",
      "12921 VOID F",
      "12922 SET MEMORY ELEMENT      0 = reg4",
      "12925 JUMP OR RETURN VAL      null"
  ],
  "13152": ["13152 JUMP OR RETURN VAL      null"],
  "13154": [
      "13154 PUSH MEMORY ELEMENT IF INIT      559 -> reg4",
      "13157 GET      reg4[contentWindow] -> reg5",
      "13163 SET MEMORY ELEMENT IF INIT      560 = reg5",
      "13166 PUSH MEMORY ELEMENT IF INIT      560 -> reg4",
      "13169 GET      reg4[innerWidth] -> reg5",
      "13175 SET MEMORY ELEMENT IF INIT      561 = reg5",
      "13178 PUSH MEMORY ELEMENT IF INIT      560 -> reg4",
      "13181 GET      reg4[innerHeight] -> reg5",
      "13187 SET MEMORY ELEMENT IF INIT      562 = reg5",
      "13190 PUSH MEMORY ELEMENT IF INIT      560 -> reg4",
      "13193 GET      reg4[outerWidth] -> reg5",
      "13199 SET MEMORY ELEMENT IF INIT      563 = reg5",
      "13202 PUSH MEMORY ELEMENT IF INIT      560 -> reg4",
      "13205 GET      reg4[outerHeight] -> reg6",
      "13211 SET MEMORY ELEMENT IF INIT      564 = reg6",
      "13214 PUSH MEMORY ELEMENT IF INIT      560 -> reg4",
      "13217 GET      reg4[screenX] -> reg5",
      "13223 SET MEMORY ELEMENT IF INIT      565 = reg5",
      "13226 PUSH MEMORY ELEMENT IF INIT      560 -> reg5",
      "13229 GET      reg5[screenY] -> reg4",
      "13235 SET MEMORY ELEMENT IF INIT      566 = reg4",
      "13238 PUSH MEMORY ELEMENT IF INIT      560 -> reg4",
      "13241 GET      reg4[devicePixelRatio] -> reg5",
      "13247 SET MEMORY ELEMENT IF INIT      567 = reg5",
      "13250 PUSH MEMORY ELEMENT IF INIT      560 -> reg5",
      "13253 GET      reg5[pageXOffset] -> reg4",
      "13259 SET MEMORY ELEMENT IF INIT      568 = reg4",
      "13262 PUSH MEMORY ELEMENT IF INIT      560 -> reg4",
      "13265 GET      reg4[pageYOffset] -> reg5",
      "13271 SET MEMORY ELEMENT IF INIT      569 = reg5",
      "13274 EMPTY OBJECT      -> reg4",
      "13276 PUSH MEMORY ELEMENT IF INIT      561 -> reg5",
      "13279 PUT      reg4[innerWidth] = reg5",
      "13285 PUSH MEMORY ELEMENT IF INIT      562 -> reg5",
      "13288 PUT      reg4[innerHeight] = reg5",
      "13294 PUSH MEMORY ELEMENT IF INIT      563 -> reg6",
      "13297 PUT      reg4[outerWidth] = reg6",
      "13303 PUSH MEMORY ELEMENT IF INIT      564 -> reg7",
      "13306 PUT      reg4[outerHeight] = reg7",
      "13312 PUSH MEMORY ELEMENT IF INIT      565 -> reg5",
      "13315 PUT      reg4[screenX] = reg5",
      "13321 PUSH MEMORY ELEMENT IF INIT      566 -> reg7",
      "13324 PUT      reg4[screenY] = reg7",
      "13330 PUSH MEMORY ELEMENT IF INIT      567 -> reg5",
      "13333 PUT      reg4[devicePixelRatio] = reg5",
      "13339 PUSH MEMORY ELEMENT IF INIT      568 -> reg6",
      "13342 PUT      reg4[pageXOffset] = reg6",
      "13348 PUSH MEMORY ELEMENT IF INIT      569 -> reg5",
      "13351 PUT      reg4[pageYOffset] = reg5",
      "13357 JUMP OR RETURN VAL      reg4"
  ],
  "13420": [
      "13420 SET I      null",
      "13422 PUSH F.K      -> reg4",
      "13424 VOID F",
      "13425 SET MEMORY ELEMENT      0 = reg4",
      "13428 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "13431 GET WINDOW PROP      Error -> reg5",
      "13436 INSTANCEOF      reg4 instanceof reg5 -> reg6",
      "13440 JUMP IF FALSE      reg6 TO: 13471 | 13443"
  ],
  "13443": [
      "13443 PUSH MEMORY ELEMENT IF INIT      319 -> reg5",
      "13446 GET      reg5[kgx] -> reg6",
      "13452 NEW ARRAY      1 -> reg8",
      "13455 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "13458 PUT      reg8[0] = reg7",
      "13462 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "13466 SET      reg2 -> reg4",
      "13469 JUMP OR RETURN VAL      reg4"
  ],
  "13471": ["13471 SET I      null", "13473 JUMP OR RETURN VAL      null"],
  "13523": [
      "13523 SET I      null",
      "13525 PUSH F.K      -> reg8",
      "13527 VOID F",
      "13528 SET MEMORY ELEMENT      0 = reg8",
      "13531 PUSH MEMORY ELEMENT IF INIT      319 -> reg4",
      "13534 GET      reg4[kgx] -> reg6",
      "13540 NEW ARRAY      1 -> reg7",
      "13543 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "13546 PUT      reg7[0] = reg10",
      "13550 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "13554 SET      reg2 -> reg5",
      "13557 JUMP OR RETURN VAL      reg5"
  ],
  "13662": [
      "13662 SET      undefined -> reg6",
      "13665 PUSH MEMORY ELEMENT IF INIT      585 -> reg8",
      "13668 STRICT EQUAL      reg6 === reg8 -> reg9",
      "13672 SET      reg9 -> reg7",
      "13675 JUMP IF FALSE      reg7 TO: 13686 | 13678"
  ],
  "13675": ["13675 JUMP IF FALSE      reg7 TO: 13686 | 13678"],
  "13678": [
      "13678 SET      undefined -> reg7",
      "13681 SET      reg7 -> reg6",
      "13684 JUMP      13698",
      "13698 SET MEMORY ELEMENT IF INIT      586 = reg6",
      "13701 STRICT EQUAL      null === reg6 -> reg7",
      "13705 JUMP IF TRUE      reg7 TO: 13721 | 13708"
  ],
  "13686": [
      "13686 PUSH MEMORY ELEMENT IF INIT      585 -> reg7",
      "13689 GET      reg7[get] -> reg11",
      "13695 SET      reg11 -> reg6",
      "13698 SET MEMORY ELEMENT IF INIT      586 = reg6",
      "13701 STRICT EQUAL      null === reg6 -> reg7",
      "13705 JUMP IF TRUE      reg7 TO: 13721 | 13708"
  ],
  "13708": [
      "13708 SET      undefined -> reg6",
      "13711 PUSH MEMORY ELEMENT IF INIT      586 -> reg8",
      "13714 STRICT EQUAL      reg6 === reg8 -> reg10",
      "13718 SET      reg10 -> reg7",
      "13721 JUMP IF FALSE      reg7 TO: 13732 | 13724"
  ],
  "13721": ["13721 JUMP IF FALSE      reg7 TO: 13732 | 13724"],
  "13724": [
      "13724 SET      undefined -> reg7",
      "13727 SET      reg7 -> reg6",
      "13730 JUMP      13753",
      "13753 SET MEMORY ELEMENT IF INIT      587 = reg6",
      "13756 STRICT NOT EQUAL      null !== reg6 -> reg7",
      "13760 JUMP IF FALSE      reg7 TO: 13776 | 13763"
  ],
  "13732": [
      "13732 PUSH MEMORY ELEMENT IF INIT      586 -> reg8",
      "13735 GET      reg8[toString] -> reg9",
      "13741 EMPTY ARRAY      -> reg10",
      "13743 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "13747 SET      reg2 -> reg7",
      "13750 SET      reg7 -> reg6",
      "13753 SET MEMORY ELEMENT IF INIT      587 = reg6",
      "13756 STRICT NOT EQUAL      null !== reg6 -> reg7",
      "13760 JUMP IF FALSE      reg7 TO: 13776 | 13763"
  ],
  "13763": [
      "13763 SET      undefined -> reg6",
      "13766 PUSH MEMORY ELEMENT IF INIT      587 -> reg9",
      "13769 STRICT NOT EQUAL      reg6 !== reg9 -> reg10",
      "13773 SET      reg10 -> reg7",
      "13776 JUMP IF FALSE      reg7 TO: 13787 | 13779"
  ],
  "13776": ["13776 JUMP IF FALSE      reg7 TO: 13787 | 13779"],
  "13779": [
      "13779 PUSH MEMORY ELEMENT IF INIT      587 -> reg7",
      "13782 SET      reg7 -> reg6",
      "13785 JUMP      13790",
      "13790 PUT      reg4[iframeSrcDocGetter] = reg6",
      "13796 GET WINDOW PROP      Object -> reg9",
      "13801 GET      reg9[getOwnPropertyDescriptor] -> reg11",
      "13807 NEW ARRAY      2 -> reg10",
      "13810 PUSH MEMORY ELEMENT IF INIT      584 -> reg6",
      "13813 PUT      reg10[0] = reg6",
      "13817 PUT      reg10[1] = srcdoc",
      "13823 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg10",
      "13827 SET      reg2 -> reg7",
      "13830 SET MEMORY ELEMENT IF INIT      588 = reg7",
      "13833 STRICT EQUAL      null === reg7 -> reg6",
      "13837 JUMP IF TRUE      reg6 TO: 13853 | 13840"
  ],
  "13787": [
      "13787 SET      null -> reg6",
      "13790 PUT      reg4[iframeSrcDocGetter] = reg6",
      "13796 GET WINDOW PROP      Object -> reg9",
      "13801 GET      reg9[getOwnPropertyDescriptor] -> reg11",
      "13807 NEW ARRAY      2 -> reg10",
      "13810 PUSH MEMORY ELEMENT IF INIT      584 -> reg6",
      "13813 PUT      reg10[0] = reg6",
      "13817 PUT      reg10[1] = srcdoc",
      "13823 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg10",
      "13827 SET      reg2 -> reg7",
      "13830 SET MEMORY ELEMENT IF INIT      588 = reg7",
      "13833 STRICT EQUAL      null === reg7 -> reg6",
      "13837 JUMP IF TRUE      reg6 TO: 13853 | 13840"
  ],
  "13840": [
      "13840 SET      undefined -> reg7",
      "13843 PUSH MEMORY ELEMENT IF INIT      588 -> reg10",
      "13846 STRICT EQUAL      reg7 === reg10 -> reg11",
      "13850 SET      reg11 -> reg6",
      "13853 JUMP IF FALSE      reg6 TO: 13864 | 13856"
  ],
  "13853": ["13853 JUMP IF FALSE      reg6 TO: 13864 | 13856"],
  "13856": [
      "13856 SET      undefined -> reg6",
      "13859 SET      reg6 -> reg7",
      "13862 JUMP      13876",
      "13876 SET MEMORY ELEMENT IF INIT      589 = reg7",
      "13879 STRICT EQUAL      null === reg7 -> reg6",
      "13883 JUMP IF TRUE      reg6 TO: 13899 | 13886"
  ],
  "13864": [
      "13864 PUSH MEMORY ELEMENT IF INIT      588 -> reg6",
      "13867 GET      reg6[set] -> reg10",
      "13873 SET      reg10 -> reg7",
      "13876 SET MEMORY ELEMENT IF INIT      589 = reg7",
      "13879 STRICT EQUAL      null === reg7 -> reg6",
      "13883 JUMP IF TRUE      reg6 TO: 13899 | 13886"
  ],
  "13886": [
      "13886 SET      undefined -> reg7",
      "13889 PUSH MEMORY ELEMENT IF INIT      589 -> reg11",
      "13892 STRICT EQUAL      reg7 === reg11 -> reg12",
      "13896 SET      reg12 -> reg6",
      "13899 JUMP IF FALSE      reg6 TO: 13910 | 13902"
  ],
  "13899": ["13899 JUMP IF FALSE      reg6 TO: 13910 | 13902"],
  "13902": [
      "13902 SET      undefined -> reg6",
      "13905 SET      reg6 -> reg7",
      "13908 JUMP      13931",
      "13931 SET MEMORY ELEMENT IF INIT      590 = reg7",
      "13934 STRICT NOT EQUAL      null !== reg7 -> reg11",
      "13938 JUMP IF FALSE      reg11 TO: 13954 | 13941"
  ],
  "13910": [
      "13910 PUSH MEMORY ELEMENT IF INIT      589 -> reg6",
      "13913 GET      reg6[toString] -> reg11",
      "13919 EMPTY ARRAY      -> reg10",
      "13921 CALL FUNCTION      OBJ: reg6 FUNC: reg11 ARGS: reg10",
      "13925 SET      reg2 -> reg14",
      "13928 SET      reg14 -> reg7",
      "13931 SET MEMORY ELEMENT IF INIT      590 = reg7",
      "13934 STRICT NOT EQUAL      null !== reg7 -> reg11",
      "13938 JUMP IF FALSE      reg11 TO: 13954 | 13941"
  ],
  "13941": [
      "13941 SET      undefined -> reg7",
      "13944 PUSH MEMORY ELEMENT IF INIT      590 -> reg10",
      "13947 STRICT NOT EQUAL      reg7 !== reg10 -> reg13",
      "13951 SET      reg13 -> reg11",
      "13954 JUMP IF FALSE      reg11 TO: 13965 | 13957"
  ],
  "13954": ["13954 JUMP IF FALSE      reg11 TO: 13965 | 13957"],
  "13957": [
      "13957 PUSH MEMORY ELEMENT IF INIT      590 -> reg7",
      "13960 SET      reg7 -> reg10",
      "13963 JUMP      13968",
      "13968 PUT      reg4[iframeSrcDocSetter] = reg10",
      "13974 JUMP OR RETURN VAL      reg4"
  ],
  "13965": [
      "13965 SET      null -> reg10",
      "13968 PUT      reg4[iframeSrcDocSetter] = reg10",
      "13974 JUMP OR RETURN VAL      reg4"
  ],
  "14054": [
      "14054 SET I      null",
      "14056 PUSH F.K      -> reg4",
      "14058 VOID F",
      "14059 SET MEMORY ELEMENT      0 = reg4",
      "14062 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "14065 GET WINDOW PROP      Error -> reg6",
      "14070 INSTANCEOF      reg4 instanceof reg6 -> reg7",
      "14074 JUMP IF FALSE      reg7 TO: 14096 | 14077"
  ],
  "14077": [
      "14077 EMPTY OBJECT      -> reg4",
      "14079 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "14082 GET      reg6[message] -> reg7",
      "14088 PUT      reg4[errorMessage] = reg7",
      "14094 JUMP OR RETURN VAL      reg4"
  ],
  "14096": ["14096 SET I      null", "14098 JUMP OR RETURN VAL      null"],
  "14165": [
      "14165 SET I      null",
      "14167 PUSH F.K      -> reg4",
      "14169 VOID F",
      "14170 SET MEMORY ELEMENT      0 = reg4",
      "14173 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "14176 GET WINDOW PROP      Error -> reg4",
      "14181 INSTANCEOF      reg5 instanceof reg4 -> reg6",
      "14185 JUMP IF FALSE      reg6 TO: 14207 | 14188"
  ],
  "14188": [
      "14188 EMPTY OBJECT      -> reg4",
      "14190 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "14193 GET      reg5[message] -> reg6",
      "14199 PUT      reg4[errorMessage] = reg6",
      "14205 JUMP OR RETURN VAL      reg4"
  ],
  "14207": ["14207 SET I      null", "14209 JUMP OR RETURN VAL      null"],
  "14293": [
      "14293 SET I      null",
      "14295 PUSH F.K      -> reg4",
      "14297 VOID F",
      "14298 SET MEMORY ELEMENT      0 = reg4",
      "14301 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "14304 GET WINDOW PROP      Error -> reg4",
      "14309 INSTANCEOF      reg6 instanceof reg4 -> reg5",
      "14313 JUMP IF FALSE      reg5 TO: 14335 | 14316"
  ],
  "14316": [
      "14316 EMPTY OBJECT      -> reg4",
      "14318 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "14321 GET      reg5[message] -> reg6",
      "14327 PUT      reg4[errorMessage] = reg6",
      "14333 JUMP OR RETURN VAL      reg4"
  ],
  "14335": ["14335 SET I      null", "14337 JUMP OR RETURN VAL      null"],
  "14679": [
      "14679 PUSH MEMORY ELEMENT IF INIT      622 -> reg4",
      "14682 PUT      reg4[0] = 127",
      "14686 SET      127 -> reg10",
      "14689 PUSH MEMORY ELEMENT IF INIT      622 -> reg9",
      "14692 GET      reg9[1] -> reg4",
      "14696 PUSH MEMORY ELEMENT IF INIT      623 -> reg9",
      "14699 GREATER THAN OR EQUAL      reg4 >= reg9 -> reg10",
      "14703 JUMP IF FALSE      reg10 TO: 14716 | 14706"
  ],
  "14689": [
      "14689 PUSH MEMORY ELEMENT IF INIT      622 -> reg9",
      "14692 GET      reg9[1] -> reg4",
      "14696 PUSH MEMORY ELEMENT IF INIT      623 -> reg9",
      "14699 GREATER THAN OR EQUAL      reg4 >= reg9 -> reg10",
      "14703 JUMP IF FALSE      reg10 TO: 14716 | 14706"
  ],
  "14706": [
      "14706 PUSH MEMORY ELEMENT IF INIT      622 -> reg4",
      "14709 PUT      reg4[1] = 127",
      "14713 SET      127 -> reg10",
      "14716 PUSH MEMORY ELEMENT IF INIT      622 -> reg9",
      "14719 GET      reg9[2] -> reg10",
      "14723 PUSH MEMORY ELEMENT IF INIT      623 -> reg4",
      "14726 GREATER THAN OR EQUAL      reg10 >= reg4 -> reg9",
      "14730 JUMP IF FALSE      reg9 TO: 14743 | 14733"
  ],
  "14716": [
      "14716 PUSH MEMORY ELEMENT IF INIT      622 -> reg9",
      "14719 GET      reg9[2] -> reg10",
      "14723 PUSH MEMORY ELEMENT IF INIT      623 -> reg4",
      "14726 GREATER THAN OR EQUAL      reg10 >= reg4 -> reg9",
      "14730 JUMP IF FALSE      reg9 TO: 14743 | 14733"
  ],
  "14733": [
      "14733 PUSH MEMORY ELEMENT IF INIT      622 -> reg4",
      "14736 PUT      reg4[2] = 127",
      "14740 SET      127 -> reg9",
      "14743 PUSH MEMORY ELEMENT IF INIT      319 -> reg4",
      "14746 GET      reg4[yhz] -> reg10",
      "14752 NEW ARRAY      1 -> reg11",
      "14755 PUSH MEMORY ELEMENT IF INIT      622 -> reg12",
      "14758 PUT      reg11[0] = reg12",
      "14762 CALL FUNCTION      OBJ: reg4 FUNC: reg10 ARGS: reg11",
      "14766 SET      reg2 -> reg9",
      "14769 JUMP OR RETURN VAL      reg9"
  ],
  "14743": [
      "14743 PUSH MEMORY ELEMENT IF INIT      319 -> reg4",
      "14746 GET      reg4[yhz] -> reg10",
      "14752 NEW ARRAY      1 -> reg11",
      "14755 PUSH MEMORY ELEMENT IF INIT      622 -> reg12",
      "14758 PUT      reg11[0] = reg12",
      "14762 CALL FUNCTION      OBJ: reg4 FUNC: reg10 ARGS: reg11",
      "14766 SET      reg2 -> reg9",
      "14769 JUMP OR RETURN VAL      reg9"
  ],
  "14890": [
      "14890 GET WINDOW PROP      Object -> reg6",
      "14895 GET      reg6[keys] -> reg8",
      "14901 NEW ARRAY      1 -> reg11",
      "14904 GET WINDOW PROP      Object -> reg9",
      "14909 GET      reg9[getPrototypeOf] -> reg14",
      "14915 NEW ARRAY      1 -> reg13",
      "14918 PUSH MEMORY ELEMENT IF INIT      637 -> reg15",
      "14921 GET      reg15[style] -> reg17",
      "14927 PUT      reg13[0] = reg17",
      "14931 CALL FUNCTION      OBJ: reg9 FUNC: reg14 ARGS: reg13",
      "14935 SET      reg2 -> reg12",
      "14938 PUT      reg11[0] = reg12",
      "14942 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg11",
      "14946 SET      reg2 -> reg7",
      "14949 SET MEMORY ELEMENT IF INIT      638 = reg7",
      "14952 SET      reg7 -> reg4",
      "14955 EMPTY OBJECT      -> reg7",
      "14957 SET MEMORY ELEMENT IF INIT      639 = reg7",
      "14960 PUSH MEMORY ELEMENT IF INIT      638 -> reg11",
      "14963 GET      reg11[forEach] -> reg7",
      "14969 NEW ARRAY      1 -> reg8",
      "14972 INIT FUNCTION STATE      PTR: 14981 NAME:  LEN: 1 -> reg12",
      "14979 JUMP      15116",
      "15116 PUT      reg8[0] = reg12",
      "15120 CALL FUNCTION      OBJ: reg11 FUNC: reg7 ARGS: reg8",
      "15124 SET      reg2 -> reg4",
      "15127 PUSH MEMORY ELEMENT IF INIT      639 -> reg4",
      "15130 JUMP OR RETURN VAL      reg4"
  ],
  "14955": [
      "14955 EMPTY OBJECT      -> reg7",
      "14957 SET MEMORY ELEMENT IF INIT      639 = reg7",
      "14960 PUSH MEMORY ELEMENT IF INIT      638 -> reg11",
      "14963 GET      reg11[forEach] -> reg7",
      "14969 NEW ARRAY      1 -> reg8",
      "14972 INIT FUNCTION STATE      PTR: 14981 NAME:  LEN: 1 -> reg12",
      "14979 JUMP      15116",
      "15116 PUT      reg8[0] = reg12",
      "15120 CALL FUNCTION      OBJ: reg11 FUNC: reg7 ARGS: reg8",
      "15124 SET      reg2 -> reg4",
      "15127 PUSH MEMORY ELEMENT IF INIT      639 -> reg4",
      "15130 JUMP OR RETURN VAL      reg4"
  ],
  "15029": [
      "15029 PUSH MEMORY ELEMENT IF INIT      645 -> reg4",
      "15032 GET      reg4[1] -> reg7",
      "15036 GET      reg7[toLowerCase] -> reg4",
      "15042 EMPTY ARRAY      -> reg6",
      "15044 CALL FUNCTION      OBJ: reg7 FUNC: reg4 ARGS: reg6",
      "15048 SET      reg2 -> reg5",
      "15051 SET MEMORY ELEMENT IF INIT      646 = reg5",
      "15054 PUSH MEMORY ELEMENT IF INIT      639 -> reg4",
      "15057 PUSH MEMORY ELEMENT IF INIT      646 -> reg6",
      "15060 PUSH MEMORY ELEMENT IF INIT      639 -> reg5",
      "15063 PUSH MEMORY ELEMENT IF INIT      646 -> reg12",
      "15066 GET      reg5[reg12] -> reg9",
      "15070 SET MEMORY ELEMENT IF INIT      644 = reg9",
      "15073 STRICT NOT EQUAL      null !== reg9 -> reg10",
      "15077 JUMP IF FALSE      reg10 TO: 15093 | 15080"
  ],
  "15080": [
      "15080 SET      undefined -> reg9",
      "15083 PUSH MEMORY ELEMENT IF INIT      644 -> reg5",
      "15086 STRICT NOT EQUAL      reg9 !== reg5 -> reg11",
      "15090 SET      reg11 -> reg10",
      "15093 JUMP IF FALSE      reg10 TO: 15104 | 15096"
  ],
  "15093": ["15093 JUMP IF FALSE      reg10 TO: 15104 | 15096"],
  "15096": [
      "15096 PUSH MEMORY ELEMENT IF INIT      644 -> reg5",
      "15099 SET      reg5 -> reg13",
      "15102 JUMP      15107",
      "15107 ADD      reg131-> reg5",
      "15111 PUT      reg4[reg6] = reg5",
      "15115 JUMP OR RETURN"
  ],
  "15104": [
      "15104 SET      0 -> reg13",
      "15107 ADD      reg131-> reg5",
      "15111 PUT      reg4[reg6] = reg5",
      "15115 JUMP OR RETURN"
  ],
  "15115": ["15115 JUMP OR RETURN"],
  "15618": [
      "15618 PUSH MEMORY ELEMENT IF INIT      670 -> reg7",
      "15621 SET      reg7 -> reg5",
      "15624 JUMP      15670",
      "15670 PUT      reg4[window] = reg5",
      "15676 SET      undefined -> reg4",
      "15679 PUSH H       -> reg6",
      "15681 GET      reg6[window] -> reg5",
      "15687 GET      reg5[KPSDK] -> reg6",
      "15693 STRICT EQUAL      reg4 === reg6 -> reg5",
      "15697 JUMP IF FALSE      reg5 TO: 15719 | 15700"
  ],
  "15626": [
      "15626 GET WINDOW PROP      globalThis -> reg9",
      "15631 TYPEOF      reg9 -> reg6",
      "15634 NOT EQUAL      undefined != reg6 -> reg7",
      "15640 JUMP IF FALSE      reg7 TO: 15659 | 15643"
  ],
  "15643": [
      "15643 GET WINDOW PROP      globalThis -> reg7",
      "15648 GET      reg7[window] -> reg8",
      "15654 SET      reg8 -> reg6",
      "15657 JUMP      15667",
      "15667 SET      reg6 -> reg5",
      "15670 PUT      reg4[window] = reg5",
      "15676 SET      undefined -> reg4",
      "15679 PUSH H       -> reg6",
      "15681 GET      reg6[window] -> reg5",
      "15687 GET      reg5[KPSDK] -> reg6",
      "15693 STRICT EQUAL      reg4 === reg6 -> reg5",
      "15697 JUMP IF FALSE      reg5 TO: 15719 | 15700"
  ],
  "15659": [
      "15659 GET WINDOW PROP      window -> reg7",
      "15664 SET      reg7 -> reg6",
      "15667 SET      reg6 -> reg5",
      "15670 PUT      reg4[window] = reg5",
      "15676 SET      undefined -> reg4",
      "15679 PUSH H       -> reg6",
      "15681 GET      reg6[window] -> reg5",
      "15687 GET      reg5[KPSDK] -> reg6",
      "15693 STRICT EQUAL      reg4 === reg6 -> reg5",
      "15697 JUMP IF FALSE      reg5 TO: 15719 | 15700"
  ],
  "15700": [
      "15700 PUSH H       -> reg4",
      "15702 GET      reg4[window] -> reg8",
      "15708 EMPTY OBJECT      -> reg4",
      "15710 PUT      reg8[KPSDK] = reg4",
      "15716 SET      reg4 -> reg5",
      "15719 JUMP OR RETURN"
  ],
  "15719": ["15719 JUMP OR RETURN"],
  "15812": [
      "15812 EMPTY OBJECT      -> reg11",
      "15814 PUSH MEMORY ELEMENT IF INIT      678 -> reg7",
      "15817 PUT      reg11[x-kpsdk-v] = reg7",
      "15823 SET      reg11 -> reg10",
      "15826 JUMP      15833",
      "15833 PUT      reg8[1] = reg10",
      "15837 CALL FUNCTION      PTR: reg4 MEM: reg8",
      "15841 SET      reg2 -> reg6",
      "15844 PUT      reg5[headers] = reg6",
      "15850 PUSH MEMORY ELEMENT IF INIT      676 -> reg6",
      "15853 GET      reg6[body] -> reg4",
      "15859 PUT      reg5[body] = reg4",
      "15865 SET MEMORY ELEMENT IF INIT      679 = reg5",
      "15868 PUSH MEMORY ELEMENT IF INIT      272 -> reg4",
      "15871 JUMP IF FALSE      reg4 TO: 15880 | 15874"
  ],
  "15828": [
      "15828 EMPTY OBJECT      -> reg11",
      "15830 SET      reg11 -> reg10",
      "15833 PUT      reg8[1] = reg10",
      "15837 CALL FUNCTION      PTR: reg4 MEM: reg8",
      "15841 SET      reg2 -> reg6",
      "15844 PUT      reg5[headers] = reg6",
      "15850 PUSH MEMORY ELEMENT IF INIT      676 -> reg6",
      "15853 GET      reg6[body] -> reg4",
      "15859 PUT      reg5[body] = reg4",
      "15865 SET MEMORY ELEMENT IF INIT      679 = reg5",
      "15868 PUSH MEMORY ELEMENT IF INIT      272 -> reg4",
      "15871 JUMP IF FALSE      reg4 TO: 15880 | 15874"
  ],
  "15874": [
      "15874 PUSH MEMORY ELEMENT IF INIT      274 -> reg5",
      "15877 SET      reg5 -> reg4",
      "15880 JUMP IF FALSE      reg4 TO: 15927 | 15883"
  ],
  "15880": ["15880 JUMP IF FALSE      reg4 TO: 15927 | 15883"],
  "15883": [
      "15883 PUSH MEMORY ELEMENT IF INIT      679 -> reg6",
      "15886 GET      reg6[headers] -> reg5",
      "15892 PUSH MEMORY ELEMENT IF INIT      662 -> reg7",
      "15895 GET      reg7[default] -> reg8",
      "15901 NEW ARRAY      1 -> reg7",
      "15904 PUSH MEMORY ELEMENT IF INIT      274 -> reg10",
      "15907 PUT      reg7[0] = reg10",
      "15911 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "15915 SET      reg2 -> reg6",
      "15918 PUT      reg5[x-kpsdk-dt] = reg6",
      "15924 SET      reg6 -> reg4",
      "15927 PUSH MEMORY ELEMENT IF INIT      664 -> reg5",
      "15930 GET      reg5[xmlHTTPRequest] -> reg8",
      "15936 NEW ARRAY      3 -> reg7",
      "15939 PUSH H       -> reg12",
      "15941 GET      reg12[url] -> reg9",
      "15947 PUT      reg7[0] = reg9",
      "15951 PUT      reg7[1] = POST",
      "15957 PUSH MEMORY ELEMENT IF INIT      679 -> reg5",
      "15960 PUT      reg7[2] = reg5",
      "15964 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "15968 SET      reg2 -> reg6",
      "15971 GET      reg6[then] -> reg5",
      "15977 NEW ARRAY      1 -> reg8",
      "15980 PUSH H       -> reg10",
      "15982 GET      reg10[zsv] -> reg9",
      "15988 GET      reg9[bind] -> reg10",
      "15994 NEW ARRAY      1 -> reg12",
      "15997 PUSH H       -> reg11",
      "15999 PUT      reg12[0] = reg11",
      "16003 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg12",
      "16007 SET      reg2 -> reg7",
      "16010 PUT      reg8[0] = reg7",
      "16014 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "16018 SET      reg2 -> reg4",
      "16021 JUMP OR RETURN VAL      reg4"
  ],
  "15927": [
      "15927 PUSH MEMORY ELEMENT IF INIT      664 -> reg5",
      "15930 GET      reg5[xmlHTTPRequest] -> reg8",
      "15936 NEW ARRAY      3 -> reg7",
      "15939 PUSH H       -> reg12",
      "15941 GET      reg12[url] -> reg9",
      "15947 PUT      reg7[0] = reg9",
      "15951 PUT      reg7[1] = POST",
      "15957 PUSH MEMORY ELEMENT IF INIT      679 -> reg5",
      "15960 PUT      reg7[2] = reg5",
      "15964 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "15968 SET      reg2 -> reg6",
      "15971 GET      reg6[then] -> reg5",
      "15977 NEW ARRAY      1 -> reg8",
      "15980 PUSH H       -> reg10",
      "15982 GET      reg10[zsv] -> reg9",
      "15988 GET      reg9[bind] -> reg10",
      "15994 NEW ARRAY      1 -> reg12",
      "15997 PUSH H       -> reg11",
      "15999 PUT      reg12[0] = reg11",
      "16003 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg12",
      "16007 SET      reg2 -> reg7",
      "16010 PUT      reg8[0] = reg7",
      "16014 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "16018 SET      reg2 -> reg4",
      "16021 JUMP OR RETURN VAL      reg4"
  ],
  "16098": [
      "16098 PUSH MEMORY ELEMENT IF INIT      686 -> reg6",
      "16101 GET      reg6[pathname] -> reg4",
      "16107 SET      reg4 -> reg5",
      "16110 JUMP      16148",
      "16148 GET      [concat] -> reg7",
      "16156 NEW ARRAY      2 -> reg8",
      "16159 PUSH MEMORY ELEMENT IF INIT      660 -> reg10",
      "16162 GET      reg10[default] -> reg4",
      "16168 PUT      reg8[0] = reg4",
      "16172 PUT      reg8[1] = /fp",
      "16178 CALL FUNCTION      OBJ:  FUNC: reg7 ARGS: reg8",
      "16184 SET      reg2 -> reg6",
      "16187 STRICT EQUAL      reg5 === reg6 -> reg4",
      "16191 JUMP IF FALSE      reg4 TO: 16224 | 16194"
  ],
  "16112": [
      "16112 GET      /[concat] -> reg4",
      "16120 NEW ARRAY      1 -> reg7",
      "16123 PUSH MEMORY ELEMENT IF INIT      686 -> reg8",
      "16126 GET      reg8[pathname] -> reg9",
      "16132 PUT      reg7[0] = reg9",
      "16136 CALL FUNCTION      OBJ: / FUNC: reg4 ARGS: reg7",
      "16142 SET      reg2 -> reg6",
      "16145 SET      reg6 -> reg5",
      "16148 GET      [concat] -> reg7",
      "16156 NEW ARRAY      2 -> reg8",
      "16159 PUSH MEMORY ELEMENT IF INIT      660 -> reg10",
      "16162 GET      reg10[default] -> reg4",
      "16168 PUT      reg8[0] = reg4",
      "16172 PUT      reg8[1] = /fp",
      "16178 CALL FUNCTION      OBJ:  FUNC: reg7 ARGS: reg8",
      "16184 SET      reg2 -> reg6",
      "16187 STRICT EQUAL      reg5 === reg6 -> reg4",
      "16191 JUMP IF FALSE      reg4 TO: 16224 | 16194"
  ],
  "16194": [
      "16194 PUSH H       -> reg8",
      "16196 GET      reg8[vxf] -> reg10",
      "16202 NEW ARRAY      1 -> reg4",
      "16205 PUSH MEMORY ELEMENT IF INIT      685 -> reg7",
      "16208 PUT      reg4[0] = reg7",
      "16212 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg4",
      "16216 SET      reg2 -> reg5",
      "16219 SET      reg5 -> reg6",
      "16222 JUMP      16258",
      "16258 JUMP OR RETURN"
  ],
  "16224": [
      "16224 PUSH H       -> reg5",
      "16226 GET      reg5[yjh] -> reg7",
      "16232 NEW ARRAY      1 -> reg9",
      "16235 PUSH MEMORY ELEMENT IF INIT      685 -> reg11",
      "16238 GET      reg11[responseText] -> reg10",
      "16244 PUT      reg9[0] = reg10",
      "16248 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg9",
      "16252 SET      reg2 -> reg4",
      "16255 SET      reg4 -> reg6",
      "16258 JUMP OR RETURN"
  ],
  "16308": ["16308 JUMP OR RETURN"],
  "16309": [
      "16309 SET I      16342",
      "16311 PUSH MEMORY ELEMENT IF INIT      280 -> reg5",
      "16314 GET      reg5[parse] -> reg6",
      "16320 NEW ARRAY      1 -> reg7",
      "16323 PUSH MEMORY ELEMENT IF INIT      691 -> reg8",
      "16326 PUT      reg7[0] = reg8",
      "16330 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "16334 SET      reg2 -> reg4",
      "16337 SET MEMORY ELEMENT IF INIT      692 = reg4",
      "16340 JUMP      16350",
      "16350 SET I      null",
      "16352 PUSH MEMORY ELEMENT IF INIT      692 -> reg4",
      "16355 EQUAL      null == reg4 -> reg7",
      "16359 JUMP IF FALSE      reg7 TO: 16370 | 16362"
  ],
  "16342": [
      "16342 SET I      null",
      "16344 PUSH F.K      -> reg4",
      "16346 VOID F",
      "16347 SET MEMORY ELEMENT      0 = reg4",
      "16350 SET I      null",
      "16352 PUSH MEMORY ELEMENT IF INIT      692 -> reg4",
      "16355 EQUAL      null == reg4 -> reg7",
      "16359 JUMP IF FALSE      reg7 TO: 16370 | 16362"
  ],
  "16362": [
      "16362 SET      undefined -> reg4",
      "16365 SET      reg4 -> reg8",
      "16368 JUMP      16382",
      "16382 JUMP IF FALSE      reg8 TO: 16700 | 16385"
  ],
  "16370": [
      "16370 PUSH MEMORY ELEMENT IF INIT      692 -> reg4",
      "16373 GET      reg4[reload] -> reg6",
      "16379 SET      reg6 -> reg8",
      "16382 JUMP IF FALSE      reg8 TO: 16700 | 16385"
  ],
  "16385": [
      "16385 PUSH H       -> reg7",
      "16387 GET      reg7[window] -> reg4",
      "16393 GET      reg4[document] -> reg6",
      "16399 GET      reg6[referrer] -> reg4",
      "16405 SET MEMORY ELEMENT IF INIT      693 = reg4",
      "16408 PUSH H       -> reg4",
      "16410 GET      reg4[window] -> reg6",
      "16416 IN      btoa inreg6 -> reg4",
      "16422 JUMP IF FALSE      reg4 TO: 16461 | 16425"
  ],
  "16425": [
      "16425 PUSH H       -> reg4",
      "16427 GET      reg4[window] -> reg8",
      "16433 GET      reg8[btoa] -> reg9",
      "16439 NEW ARRAY      1 -> reg4",
      "16442 PUSH MEMORY ELEMENT IF INIT      693 -> reg10",
      "16445 PUT      reg4[0] = reg10",
      "16449 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg4",
      "16453 SET      reg2 -> reg7",
      "16456 SET      reg7 -> reg6",
      "16459 JUMP      16569",
      "16569 SET MEMORY ELEMENT IF INIT      694 = reg6",
      "16572 PUSH H       -> reg4",
      "16574 GET      reg4[window] -> reg6",
      "16580 GET      reg6[document] -> reg4",
      "16586 GET      KP_REF=[concat] -> reg9",
      "16594 NEW ARRAY      2 -> reg7",
      "16597 PUSH MEMORY ELEMENT IF INIT      694 -> reg10",
      "16600 PUT      reg7[0] = reg10",
      "16604 PUT      reg7[1] = ; path=/; max-age=300",
      "16610 CALL FUNCTION      OBJ: KP_REF= FUNC: reg9 ARGS: reg7",
      "16616 SET      reg2 -> reg6",
      "16619 PUT      reg4[cookie] = reg6",
      "16625 GET WINDOW PROP      Function -> reg9",
      "16630 GET      reg9[apply] -> reg13",
      "16636 NEW ARRAY      2 -> reg14",
      "16639 PUT      reg14[0] = null",
      "16643 NEW ARRAY      1 -> reg10",
      "16646 PUT      reg10[0] = return (function(e){return e.reload(!0);})",
      "16652 PUT      reg14[1] = reg10",
      "16656 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg14",
      "16660 SET      reg2 -> reg4",
      "16663 EMPTY ARRAY      -> reg10",
      "16665 CALL FUNCTION      PTR: reg4 MEM: reg10",
      "16669 SET      reg2 -> reg7",
      "16672 NEW ARRAY      1 -> reg10",
      "16675 PUSH H       -> reg13",
      "16677 GET      reg13[window] -> reg15",
      "16683 GET      reg15[location] -> reg13",
      "16689 PUT      reg10[0] = reg13",
      "16693 CALL FUNCTION      PTR: reg7 MEM: reg10",
      "16697 SET      reg2 -> reg6",
      "16700 JUMP OR RETURN"
  ],
  "16461": [
      "16461 PUSH MEMORY ELEMENT IF INIT      661 -> reg7",
      "16464 GET      reg7[default] -> reg9",
      "16470 NEW ARRAY      1 -> reg7",
      "16473 PUSH MEMORY ELEMENT IF INIT      693 -> reg11",
      "16476 GET      reg11[split] -> reg13",
      "16482 NEW ARRAY      1 -> reg14",
      "16485 PUT      reg14[0] = ",
      "16491 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg14",
      "16495 SET      reg2 -> reg12",
      "16498 GET      reg12[map] -> reg13",
      "16504 NEW ARRAY      1 -> reg14",
      "16507 INIT FUNCTION STATE      PTR: 16516 NAME:  LEN: 1 -> reg15",
      "16514 JUMP      16544",
      "16544 PUT      reg14[0] = reg15",
      "16548 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "16552 SET      reg2 -> reg10",
      "16555 PUT      reg7[0] = reg10",
      "16559 CALL FUNCTION      PTR: reg9 MEM: reg7",
      "16563 SET      reg2 -> reg4",
      "16566 SET      reg4 -> reg6",
      "16569 SET MEMORY ELEMENT IF INIT      694 = reg6",
      "16572 PUSH H       -> reg4",
      "16574 GET      reg4[window] -> reg6",
      "16580 GET      reg6[document] -> reg4",
      "16586 GET      KP_REF=[concat] -> reg9",
      "16594 NEW ARRAY      2 -> reg7",
      "16597 PUSH MEMORY ELEMENT IF INIT      694 -> reg10",
      "16600 PUT      reg7[0] = reg10",
      "16604 PUT      reg7[1] = ; path=/; max-age=300",
      "16610 CALL FUNCTION      OBJ: KP_REF= FUNC: reg9 ARGS: reg7",
      "16616 SET      reg2 -> reg6",
      "16619 PUT      reg4[cookie] = reg6",
      "16625 GET WINDOW PROP      Function -> reg9",
      "16630 GET      reg9[apply] -> reg13",
      "16636 NEW ARRAY      2 -> reg14",
      "16639 PUT      reg14[0] = null",
      "16643 NEW ARRAY      1 -> reg10",
      "16646 PUT      reg10[0] = return (function(e){return e.reload(!0);})",
      "16652 PUT      reg14[1] = reg10",
      "16656 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg14",
      "16660 SET      reg2 -> reg4",
      "16663 EMPTY ARRAY      -> reg10",
      "16665 CALL FUNCTION      PTR: reg4 MEM: reg10",
      "16669 SET      reg2 -> reg7",
      "16672 NEW ARRAY      1 -> reg10",
      "16675 PUSH H       -> reg13",
      "16677 GET      reg13[window] -> reg15",
      "16683 GET      reg15[location] -> reg13",
      "16689 PUT      reg10[0] = reg13",
      "16693 CALL FUNCTION      PTR: reg7 MEM: reg10",
      "16697 SET      reg2 -> reg6",
      "16700 JUMP OR RETURN"
  ],
  "16700": ["16700 JUMP OR RETURN"],
  "16782": [
      "16782 SET      undefined -> reg4",
      "16785 PUSH MEMORY ELEMENT IF INIT      706 -> reg7",
      "16788 STRICT NOT EQUAL      reg4 !== reg7 -> reg10",
      "16792 SET      reg10 -> reg6",
      "16795 JUMP IF FALSE      reg6 TO: 16806 | 16798"
  ],
  "16795": ["16795 JUMP IF FALSE      reg6 TO: 16806 | 16798"],
  "16798": [
      "16798 PUSH MEMORY ELEMENT IF INIT      706 -> reg6",
      "16801 SET      reg6 -> reg4",
      "16804 JUMP      16811",
      "16811 SET MEMORY ELEMENT IF INIT      708 = reg4",
      "16814 PUSH MEMORY ELEMENT IF INIT      705 -> reg6",
      "16817 GET      reg6[getResponseHeader] -> reg7",
      "16823 NEW ARRAY      1 -> reg8",
      "16826 PUT      reg8[0] = x-kpsdk-cr",
      "16832 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "16836 SET      reg2 -> reg4",
      "16839 STRICT EQUAL      true === reg4 -> reg7",
      "16845 SET MEMORY ELEMENT IF INIT      709 = reg7",
      "16848 PUSH MEMORY ELEMENT IF INIT      705 -> reg7",
      "16851 GET      reg7[getResponseHeader] -> reg9",
      "16857 NEW ARRAY      1 -> reg10",
      "16860 PUT      reg10[0] = x-kpsdk-st",
      "16866 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "16870 SET      reg2 -> reg4",
      "16873 SET MEMORY ELEMENT IF INIT      707 = reg4",
      "16876 STRICT NOT EQUAL      null !== reg4 -> reg8",
      "16880 JUMP IF FALSE      reg8 TO: 16896 | 16883"
  ],
  "16806": [
      "16806 SET       -> reg4",
      "16811 SET MEMORY ELEMENT IF INIT      708 = reg4",
      "16814 PUSH MEMORY ELEMENT IF INIT      705 -> reg6",
      "16817 GET      reg6[getResponseHeader] -> reg7",
      "16823 NEW ARRAY      1 -> reg8",
      "16826 PUT      reg8[0] = x-kpsdk-cr",
      "16832 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "16836 SET      reg2 -> reg4",
      "16839 STRICT EQUAL      true === reg4 -> reg7",
      "16845 SET MEMORY ELEMENT IF INIT      709 = reg7",
      "16848 PUSH MEMORY ELEMENT IF INIT      705 -> reg7",
      "16851 GET      reg7[getResponseHeader] -> reg9",
      "16857 NEW ARRAY      1 -> reg10",
      "16860 PUT      reg10[0] = x-kpsdk-st",
      "16866 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "16870 SET      reg2 -> reg4",
      "16873 SET MEMORY ELEMENT IF INIT      707 = reg4",
      "16876 STRICT NOT EQUAL      null !== reg4 -> reg8",
      "16880 JUMP IF FALSE      reg8 TO: 16896 | 16883"
  ],
  "16883": [
      "16883 SET      undefined -> reg9",
      "16886 PUSH MEMORY ELEMENT IF INIT      707 -> reg11",
      "16889 STRICT NOT EQUAL      reg9 !== reg11 -> reg4",
      "16893 SET      reg4 -> reg8",
      "16896 JUMP IF FALSE      reg8 TO: 16907 | 16899"
  ],
  "16896": ["16896 JUMP IF FALSE      reg8 TO: 16907 | 16899"],
  "16899": [
      "16899 PUSH MEMORY ELEMENT IF INIT      707 -> reg9",
      "16902 SET      reg9 -> reg4",
      "16905 JUMP      16912",
      "16912 SET MEMORY ELEMENT IF INIT      710 = reg4",
      "16915 PUSH MEMORY ELEMENT IF INIT      663 -> reg4",
      "16918 GET      reg4[default] -> reg9",
      "16924 NEW ARRAY      3 -> reg4",
      "16927 PUSH MEMORY ELEMENT IF INIT      708 -> reg11",
      "16930 PUT      reg4[0] = reg11",
      "16934 PUSH MEMORY ELEMENT IF INIT      709 -> reg11",
      "16937 PUT      reg4[1] = reg11",
      "16941 PUSH MEMORY ELEMENT IF INIT      710 -> reg10",
      "16944 PUT      reg4[2] = reg10",
      "16948 CALL FUNCTION      PTR: reg9 MEM: reg4",
      "16952 SET      reg2 -> reg8",
      "16955 SET MEMORY ELEMENT IF INIT      711 = reg8",
      "16958 PUSH H       -> reg4",
      "16960 GET      reg4[window] -> reg9",
      "16966 GET      reg9[KPSDK] -> reg4",
      "16972 PUSH MEMORY ELEMENT IF INIT      711 -> reg8",
      "16975 PUT      reg4[message] = reg8",
      "16981 PUSH H       -> reg8",
      "16983 GET      reg8[window] -> reg11",
      "16989 GET      reg11[parent] -> reg9",
      "16995 GET      reg9[postMessage] -> reg8",
      "17001 NEW ARRAY      2 -> reg10",
      "17004 PUSH MEMORY ELEMENT IF INIT      711 -> reg11",
      "17007 PUT      reg10[0] = reg11",
      "17011 PUT      reg10[1] = *",
      "17017 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg10",
      "17021 SET      reg2 -> reg4",
      "17024 JUMP OR RETURN"
  ],
  "16907": [
      "16907 SET       -> reg4",
      "16912 SET MEMORY ELEMENT IF INIT      710 = reg4",
      "16915 PUSH MEMORY ELEMENT IF INIT      663 -> reg4",
      "16918 GET      reg4[default] -> reg9",
      "16924 NEW ARRAY      3 -> reg4",
      "16927 PUSH MEMORY ELEMENT IF INIT      708 -> reg11",
      "16930 PUT      reg4[0] = reg11",
      "16934 PUSH MEMORY ELEMENT IF INIT      709 -> reg11",
      "16937 PUT      reg4[1] = reg11",
      "16941 PUSH MEMORY ELEMENT IF INIT      710 -> reg10",
      "16944 PUT      reg4[2] = reg10",
      "16948 CALL FUNCTION      PTR: reg9 MEM: reg4",
      "16952 SET      reg2 -> reg8",
      "16955 SET MEMORY ELEMENT IF INIT      711 = reg8",
      "16958 PUSH H       -> reg4",
      "16960 GET      reg4[window] -> reg9",
      "16966 GET      reg9[KPSDK] -> reg4",
      "16972 PUSH MEMORY ELEMENT IF INIT      711 -> reg8",
      "16975 PUT      reg4[message] = reg8",
      "16981 PUSH H       -> reg8",
      "16983 GET      reg8[window] -> reg11",
      "16989 GET      reg11[parent] -> reg9",
      "16995 GET      reg9[postMessage] -> reg8",
      "17001 NEW ARRAY      2 -> reg10",
      "17004 PUSH MEMORY ELEMENT IF INIT      711 -> reg11",
      "17007 PUT      reg10[0] = reg11",
      "17011 PUT      reg10[1] = *",
      "17017 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg10",
      "17021 SET      reg2 -> reg4",
      "17024 JUMP OR RETURN"
  ],
  "17199": [
      "17199 EMPTY OBJECT      -> reg9",
      "17201 SET MEMORY ELEMENT IF INIT      720 = reg9",
      "17204 SET      reg9 -> reg7",
      "17207 PUT      reg8[0] = reg7",
      "17211 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "17215 SET      reg2 -> reg5",
      "17218 PUSH MEMORY ELEMENT IF INIT      719 -> reg6",
      "17221 PUSH MEMORY ELEMENT IF INIT      720 -> reg7",
      "17224 PUT      reg6[default] = reg7",
      "17230 JUMP OR RETURN"
  ],
  "17207": [
      "17207 PUT      reg8[0] = reg7",
      "17211 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "17215 SET      reg2 -> reg5",
      "17218 PUSH MEMORY ELEMENT IF INIT      719 -> reg6",
      "17221 PUSH MEMORY ELEMENT IF INIT      720 -> reg7",
      "17224 PUT      reg6[default] = reg7",
      "17230 JUMP OR RETURN"
  ],
  "17596": [
      "17596 GET      reg3[0] -> reg5",
      "17600 GET WINDOW PROP      undefined -> reg4",
      "17605 STRICT NOT EQUAL      reg5 !== reg4 -> reg6",
      "17609 SET      reg6 -> reg7",
      "17612 JUMP IF FALSE      reg7 TO: 17624 | 17615"
  ],
  "17612": ["17612 JUMP IF FALSE      reg7 TO: 17624 | 17615"],
  "17615": [
      "17615 GET      reg3[0] -> reg5",
      "17619 SET      reg5 -> reg4",
      "17622 JUMP      17630",
      "17630 SET MEMORY ELEMENT IF INIT      741 = reg4",
      "17633 GET      reg3[length] -> reg4",
      "17639 GREATER THAN      reg4 > 1 -> reg6",
      "17643 JUMP IF FALSE      reg6 TO: 17655 | 17646"
  ],
  "17624": [
      "17624 NOT      1 -> reg5",
      "17627 SET      reg5 -> reg4",
      "17630 SET MEMORY ELEMENT IF INIT      741 = reg4",
      "17633 GET      reg3[length] -> reg4",
      "17639 GREATER THAN      reg4 > 1 -> reg6",
      "17643 JUMP IF FALSE      reg6 TO: 17655 | 17646"
  ],
  "17646": [
      "17646 GET      reg3[1] -> reg5",
      "17650 SET      reg5 -> reg4",
      "17653 JUMP      17663",
      "17663 SET MEMORY ELEMENT IF INIT      742 = reg4",
      "17666 GET      reg3[length] -> reg6",
      "17672 GREATER THAN      reg6 > 2 -> reg4",
      "17676 JUMP IF FALSE      reg4 TO: 17695 | 17679"
  ],
  "17655": [
      "17655 GET WINDOW PROP      undefined -> reg5",
      "17660 SET      reg5 -> reg4",
      "17663 SET MEMORY ELEMENT IF INIT      742 = reg4",
      "17666 GET      reg3[length] -> reg6",
      "17672 GREATER THAN      reg6 > 2 -> reg4",
      "17676 JUMP IF FALSE      reg4 TO: 17695 | 17679"
  ],
  "17679": [
      "17679 GET      reg3[2] -> reg5",
      "17683 GET WINDOW PROP      undefined -> reg6",
      "17688 STRICT NOT EQUAL      reg5 !== reg6 -> reg7",
      "17692 SET      reg7 -> reg4",
      "17695 JUMP IF FALSE      reg4 TO: 17707 | 17698"
  ],
  "17695": ["17695 JUMP IF FALSE      reg4 TO: 17707 | 17698"],
  "17698": [
      "17698 GET      reg3[2] -> reg6",
      "17702 SET      reg6 -> reg5",
      "17705 JUMP      17719",
      "17719 SET MEMORY ELEMENT IF INIT      743 = reg5",
      "17722 PUSH MEMORY ELEMENT IF INIT      14 -> reg5",
      "17725 NEW ARRAY      2 -> reg6",
      "17728 PUSH H       -> reg7",
      "17730 PUT      reg6[0] = reg7",
      "17734 PUSH MEMORY ELEMENT IF INIT      739 -> reg7",
      "17737 PUT      reg6[1] = reg7",
      "17741 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "17745 SET      reg2 -> reg4",
      "17748 PUSH H       -> reg4",
      "17750 PUSH MEMORY ELEMENT IF INIT      741 -> reg5",
      "17753 PUT      reg4[reportErrors] = reg5",
      "17759 PUSH H       -> reg5",
      "17761 PUSH MEMORY ELEMENT IF INIT      742 -> reg4",
      "17764 NOT EQUAL      null != reg4 -> reg6",
      "17768 JUMP IF FALSE      reg6 TO: 17779 | 17771"
  ],
  "17707": [
      "17707 PUSH MEMORY ELEMENT IF INIT      734 -> reg4",
      "17710 GET      reg4[default] -> reg7",
      "17716 SET      reg7 -> reg5",
      "17719 SET MEMORY ELEMENT IF INIT      743 = reg5",
      "17722 PUSH MEMORY ELEMENT IF INIT      14 -> reg5",
      "17725 NEW ARRAY      2 -> reg6",
      "17728 PUSH H       -> reg7",
      "17730 PUT      reg6[0] = reg7",
      "17734 PUSH MEMORY ELEMENT IF INIT      739 -> reg7",
      "17737 PUT      reg6[1] = reg7",
      "17741 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "17745 SET      reg2 -> reg4",
      "17748 PUSH H       -> reg4",
      "17750 PUSH MEMORY ELEMENT IF INIT      741 -> reg5",
      "17753 PUT      reg4[reportErrors] = reg5",
      "17759 PUSH H       -> reg5",
      "17761 PUSH MEMORY ELEMENT IF INIT      742 -> reg4",
      "17764 NOT EQUAL      null != reg4 -> reg6",
      "17768 JUMP IF FALSE      reg6 TO: 17779 | 17771"
  ],
  "17771": [
      "17771 PUSH MEMORY ELEMENT IF INIT      742 -> reg6",
      "17774 SET      reg6 -> reg4",
      "17777 JUMP      17823",
      "17823 PUT      reg5[window] = reg4",
      "17829 PUSH H       -> reg4",
      "17831 PUSH MEMORY ELEMENT IF INIT      743 -> reg7",
      "17834 PUT      reg4[base64FromBytesFn] = reg7",
      "17840 JUMP OR RETURN"
  ],
  "17779": [
      "17779 GET WINDOW PROP      globalThis -> reg7",
      "17784 TYPEOF      reg7 -> reg10",
      "17787 NOT EQUAL      undefined != reg10 -> reg6",
      "17793 JUMP IF FALSE      reg6 TO: 17812 | 17796"
  ],
  "17796": [
      "17796 GET WINDOW PROP      globalThis -> reg7",
      "17801 GET      reg7[window] -> reg6",
      "17807 SET      reg6 -> reg8",
      "17810 JUMP      17820",
      "17820 SET      reg8 -> reg4",
      "17823 PUT      reg5[window] = reg4",
      "17829 PUSH H       -> reg4",
      "17831 PUSH MEMORY ELEMENT IF INIT      743 -> reg7",
      "17834 PUT      reg4[base64FromBytesFn] = reg7",
      "17840 JUMP OR RETURN"
  ],
  "17812": [
      "17812 GET WINDOW PROP      window -> reg6",
      "17817 SET      reg6 -> reg8",
      "17820 SET      reg8 -> reg4",
      "17823 PUT      reg5[window] = reg4",
      "17829 PUSH H       -> reg4",
      "17831 PUSH MEMORY ELEMENT IF INIT      743 -> reg7",
      "17834 PUT      reg4[base64FromBytesFn] = reg7",
      "17840 JUMP OR RETURN"
  ],
  "17900": [
      "17900 GET      reg3[1] -> reg4",
      "17904 GET WINDOW PROP      undefined -> reg6",
      "17909 STRICT NOT EQUAL      reg4 !== reg6 -> reg8",
      "17913 SET      reg8 -> reg5",
      "17916 JUMP IF FALSE      reg5 TO: 17928 | 17919"
  ],
  "17916": ["17916 JUMP IF FALSE      reg5 TO: 17928 | 17919"],
  "17919": [
      "17919 GET      reg3[1] -> reg5",
      "17923 SET      reg5 -> reg4",
      "17926 JUMP      17946",
      "17946 SET MEMORY ELEMENT IF INIT      754 = reg4",
      "17949 PUSH H       -> reg4",
      "17951 GET      reg4[reportErrors] -> reg7",
      "17957 NOT      reg7 -> reg4",
      "17960 JUMP IF FALSE      reg4 TO: 17982 | 17963"
  ],
  "17928": [
      "17928 PUSH MEMORY ELEMENT IF INIT      732 -> reg5",
      "17931 GET      reg5[FrontendErrorCode] -> reg7",
      "17937 GET      reg7[WebClientUnknownError] -> reg5",
      "17943 SET      reg5 -> reg4",
      "17946 SET MEMORY ELEMENT IF INIT      754 = reg4",
      "17949 PUSH H       -> reg4",
      "17951 GET      reg4[reportErrors] -> reg7",
      "17957 NOT      reg7 -> reg4",
      "17960 JUMP IF FALSE      reg4 TO: 17982 | 17963"
  ],
  "17963": [
      "17963 PROMISE      -> reg5",
      "17965 GET      reg5[resolve] -> reg6",
      "17971 EMPTY ARRAY      -> reg7",
      "17973 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "17977 SET      reg2 -> reg4",
      "17980 JUMP OR RETURN VAL      reg4"
  ],
  "17982": [
      "17982 PUSH MEMORY ELEMENT IF INIT      753 -> reg4",
      "17985 GET WINDOW PROP      Error -> reg6",
      "17990 INSTANCEOF      reg4 instanceof reg6 -> reg8",
      "17994 SET MEMORY ELEMENT IF INIT      755 = reg8",
      "17997 PUSH H       -> reg6",
      "17999 GET      reg6[serialiseError] -> reg8",
      "18005 NEW ARRAY      1 -> reg9",
      "18008 EMPTY OBJECT      -> reg7",
      "18010 PUSH MEMORY ELEMENT IF INIT      755 -> reg10",
      "18013 JUMP IF FALSE      reg10 TO: 18030 | 18016"
  ],
  "18016": [
      "18016 PUSH MEMORY ELEMENT IF INIT      753 -> reg10",
      "18019 GET      reg10[stack] -> reg14",
      "18025 SET      reg14 -> reg11",
      "18028 JUMP      18035",
      "18035 PUT      reg7[stack] = reg11",
      "18041 PUSH MEMORY ELEMENT IF INIT      755 -> reg10",
      "18044 JUMP IF FALSE      reg10 TO: 18061 | 18047"
  ],
  "18030": [
      "18030 SET      unknown -> reg11",
      "18035 PUT      reg7[stack] = reg11",
      "18041 PUSH MEMORY ELEMENT IF INIT      755 -> reg10",
      "18044 JUMP IF FALSE      reg10 TO: 18061 | 18047"
  ],
  "18047": [
      "18047 PUSH MEMORY ELEMENT IF INIT      753 -> reg13",
      "18050 GET      reg13[message] -> reg12",
      "18056 SET      reg12 -> reg11",
      "18059 JUMP      18091",
      "18091 PUT      reg7[message] = reg11",
      "18097 PUSH MEMORY ELEMENT IF INIT      755 -> reg11",
      "18100 JUMP IF FALSE      reg11 TO: 18117 | 18103"
  ],
  "18061": [
      "18061 GET      [concat] -> reg12",
      "18069 NEW ARRAY      1 -> reg13",
      "18072 PUSH MEMORY ELEMENT IF INIT      753 -> reg15",
      "18075 PUT      reg13[0] = reg15",
      "18079 CALL FUNCTION      OBJ:  FUNC: reg12 ARGS: reg13",
      "18085 SET      reg2 -> reg10",
      "18088 SET      reg10 -> reg11",
      "18091 PUT      reg7[message] = reg11",
      "18097 PUSH MEMORY ELEMENT IF INIT      755 -> reg11",
      "18100 JUMP IF FALSE      reg11 TO: 18117 | 18103"
  ],
  "18103": [
      "18103 PUSH MEMORY ELEMENT IF INIT      753 -> reg10",
      "18106 GET      reg10[name] -> reg11",
      "18112 SET      reg11 -> reg12",
      "18115 JUMP      18122",
      "18122 PUT      reg7[name] = reg12",
      "18128 PUSH MEMORY ELEMENT IF INIT      754 -> reg11",
      "18131 PUT      reg7[code] = reg11",
      "18137 PUT      reg9[0] = reg7",
      "18141 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "18145 SET      reg2 -> reg4",
      "18148 SET MEMORY ELEMENT IF INIT      756 = reg4",
      "18151 PUSH MEMORY ELEMENT IF INIT      735 -> reg7",
      "18154 GET      reg7[xmlHTTPRequest] -> reg10",
      "18160 NEW ARRAY      3 -> reg7",
      "18163 PUSH MEMORY ELEMENT IF INIT      736 -> reg9",
      "18166 PUT      reg7[0] = reg9",
      "18170 PUT      reg7[1] = POST",
      "18176 EMPTY OBJECT      -> reg9",
      "18178 EMPTY OBJECT      -> reg13",
      "18180 PUT      reg13[Content-Type] = text/plain",
      "18188 PUT      reg9[headers] = reg13",
      "18194 PUSH MEMORY ELEMENT IF INIT      756 -> reg11",
      "18197 PUT      reg9[body] = reg11",
      "18203 PUT      reg7[2] = reg9",
      "18207 CALL FUNCTION      PTR: reg10 MEM: reg7",
      "18211 SET      reg2 -> reg12",
      "18214 GET      reg12[then] -> reg9",
      "18220 NEW ARRAY      1 -> reg7",
      "18223 INIT FUNCTION STATE      PTR: 18232 NAME:  LEN: 0 -> reg10",
      "18230 JUMP      18233",
      "18233 PUT      reg7[0] = reg10",
      "18237 CALL FUNCTION      OBJ: reg12 FUNC: reg9 ARGS: reg7",
      "18241 SET      reg2 -> reg8",
      "18244 GET      reg8[catch] -> reg7",
      "18250 NEW ARRAY      1 -> reg9",
      "18253 INIT FUNCTION STATE      PTR: 18262 NAME:  LEN: 0 -> reg10",
      "18260 JUMP      18336",
      "18336 PUT      reg9[0] = reg10",
      "18340 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "18344 SET      reg2 -> reg4",
      "18347 JUMP OR RETURN VAL      reg4"
  ],
  "18117": [
      "18117 SET      unknown -> reg12",
      "18122 PUT      reg7[name] = reg12",
      "18128 PUSH MEMORY ELEMENT IF INIT      754 -> reg11",
      "18131 PUT      reg7[code] = reg11",
      "18137 PUT      reg9[0] = reg7",
      "18141 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "18145 SET      reg2 -> reg4",
      "18148 SET MEMORY ELEMENT IF INIT      756 = reg4",
      "18151 PUSH MEMORY ELEMENT IF INIT      735 -> reg7",
      "18154 GET      reg7[xmlHTTPRequest] -> reg10",
      "18160 NEW ARRAY      3 -> reg7",
      "18163 PUSH MEMORY ELEMENT IF INIT      736 -> reg9",
      "18166 PUT      reg7[0] = reg9",
      "18170 PUT      reg7[1] = POST",
      "18176 EMPTY OBJECT      -> reg9",
      "18178 EMPTY OBJECT      -> reg13",
      "18180 PUT      reg13[Content-Type] = text/plain",
      "18188 PUT      reg9[headers] = reg13",
      "18194 PUSH MEMORY ELEMENT IF INIT      756 -> reg11",
      "18197 PUT      reg9[body] = reg11",
      "18203 PUT      reg7[2] = reg9",
      "18207 CALL FUNCTION      PTR: reg10 MEM: reg7",
      "18211 SET      reg2 -> reg12",
      "18214 GET      reg12[then] -> reg9",
      "18220 NEW ARRAY      1 -> reg7",
      "18223 INIT FUNCTION STATE      PTR: 18232 NAME:  LEN: 0 -> reg10",
      "18230 JUMP      18233",
      "18233 PUT      reg7[0] = reg10",
      "18237 CALL FUNCTION      OBJ: reg12 FUNC: reg9 ARGS: reg7",
      "18241 SET      reg2 -> reg8",
      "18244 GET      reg8[catch] -> reg7",
      "18250 NEW ARRAY      1 -> reg9",
      "18253 INIT FUNCTION STATE      PTR: 18262 NAME:  LEN: 0 -> reg10",
      "18260 JUMP      18336",
      "18336 PUT      reg9[0] = reg10",
      "18340 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "18344 SET      reg2 -> reg4",
      "18347 JUMP OR RETURN VAL      reg4"
  ],
  "18462": [
      "18462 PUSH H       -> reg5",
      "18464 GET      reg5[window] -> reg10",
      "18470 GET      reg10[btoa] -> reg5",
      "18476 NEW ARRAY      1 -> reg6",
      "18479 PUSH MEMORY ELEMENT IF INIT      771 -> reg9",
      "18482 PUT      reg6[0] = reg9",
      "18486 CALL FUNCTION      OBJ: reg10 FUNC: reg5 ARGS: reg6",
      "18490 SET      reg2 -> reg4",
      "18493 SET      reg4 -> reg8",
      "18496 JUMP      18605",
      "18605 JUMP OR RETURN VAL      reg8"
  ],
  "18498": [
      "18498 PUSH H       -> reg5",
      "18500 GET      reg5[base64FromBytesFn] -> reg9",
      "18506 NEW ARRAY      1 -> reg6",
      "18509 PUSH MEMORY ELEMENT IF INIT      771 -> reg12",
      "18512 GET      reg12[split] -> reg14",
      "18518 NEW ARRAY      1 -> reg13",
      "18521 PUT      reg13[0] = ",
      "18527 CALL FUNCTION      OBJ: reg12 FUNC: reg14 ARGS: reg13",
      "18531 SET      reg2 -> reg15",
      "18534 GET      reg15[map] -> reg16",
      "18540 NEW ARRAY      1 -> reg13",
      "18543 INIT FUNCTION STATE      PTR: 18552 NAME:  LEN: 1 -> reg14",
      "18550 JUMP      18580",
      "18580 PUT      reg13[0] = reg14",
      "18584 CALL FUNCTION      OBJ: reg15 FUNC: reg16 ARGS: reg13",
      "18588 SET      reg2 -> reg11",
      "18591 PUT      reg6[0] = reg11",
      "18595 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg6",
      "18599 SET      reg2 -> reg4",
      "18602 SET      reg4 -> reg8",
      "18605 JUMP OR RETURN VAL      reg8"
  ],
  "18948": [
      "18948 PUSH MEMORY ELEMENT IF INIT      789 -> reg6",
      "18951 SET      reg6 -> reg7",
      "18954 JUMP      19000",
      "19000 PUT      reg5[window] = reg7",
      "19006 JUMP OR RETURN"
  ],
  "18956": [
      "18956 GET WINDOW PROP      globalThis -> reg6",
      "18961 TYPEOF      reg6 -> reg4",
      "18964 NOT EQUAL      undefined != reg4 -> reg6",
      "18970 JUMP IF FALSE      reg6 TO: 18989 | 18973"
  ],
  "18973": [
      "18973 GET WINDOW PROP      globalThis -> reg6",
      "18978 GET      reg6[window] -> reg10",
      "18984 SET      reg10 -> reg8",
      "18987 JUMP      18997",
      "18997 SET      reg8 -> reg7",
      "19000 PUT      reg5[window] = reg7",
      "19006 JUMP OR RETURN"
  ],
  "18989": [
      "18989 GET WINDOW PROP      window -> reg4",
      "18994 SET      reg4 -> reg8",
      "18997 SET      reg8 -> reg7",
      "19000 PUT      reg5[window] = reg7",
      "19006 JUMP OR RETURN"
  ],
  "19288": [
      "19288 PUSH MEMORY ELEMENT IF INIT      782 -> reg7",
      "19291 GET      reg7[default] -> reg8",
      "19297 GET      reg8[gpx] -> reg7",
      "19303 NEW ARRAY      1 -> reg9",
      "19306 PUSH MEMORY ELEMENT IF INIT      797 -> reg10",
      "19309 PUT      reg9[0] = reg10",
      "19313 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "19317 SET      reg2 -> reg5",
      "19320 SET      reg5 -> reg6",
      "19323 JUMP      19330",
      "19330 PUT      reg4[styleTags] = reg6",
      "19336 PUSH MEMORY ELEMENT IF INIT      797 -> reg5",
      "19339 GET      reg5[rkg] -> reg9",
      "19345 GET      reg9[document] -> reg7",
      "19351 GET      reg7[createElement] -> reg5",
      "19357 NEW ARRAY      1 -> reg10",
      "19360 PUT      reg10[0] = audio",
      "19366 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg10",
      "19370 SET      reg2 -> reg6",
      "19373 PUT      reg4[audio] = reg6",
      "19379 PUSH MEMORY ELEMENT IF INIT      797 -> reg5",
      "19382 GET      reg5[rkg] -> reg9",
      "19388 GET      reg9[document] -> reg5",
      "19394 GET      reg5[createElement] -> reg10",
      "19400 NEW ARRAY      1 -> reg11",
      "19403 PUT      reg11[0] = video",
      "19409 CALL FUNCTION      OBJ: reg5 FUNC: reg10 ARGS: reg11",
      "19413 SET      reg2 -> reg6",
      "19416 PUT      reg4[video] = reg6",
      "19422 JUMP OR RETURN VAL      reg4"
  ],
  "19325": [
      "19325 EMPTY OBJECT      -> reg5",
      "19327 SET      reg5 -> reg6",
      "19330 PUT      reg4[styleTags] = reg6",
      "19336 PUSH MEMORY ELEMENT IF INIT      797 -> reg5",
      "19339 GET      reg5[rkg] -> reg9",
      "19345 GET      reg9[document] -> reg7",
      "19351 GET      reg7[createElement] -> reg5",
      "19357 NEW ARRAY      1 -> reg10",
      "19360 PUT      reg10[0] = audio",
      "19366 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg10",
      "19370 SET      reg2 -> reg6",
      "19373 PUT      reg4[audio] = reg6",
      "19379 PUSH MEMORY ELEMENT IF INIT      797 -> reg5",
      "19382 GET      reg5[rkg] -> reg9",
      "19388 GET      reg9[document] -> reg5",
      "19394 GET      reg5[createElement] -> reg10",
      "19400 NEW ARRAY      1 -> reg11",
      "19403 PUT      reg11[0] = video",
      "19409 CALL FUNCTION      OBJ: reg5 FUNC: reg10 ARGS: reg11",
      "19413 SET      reg2 -> reg6",
      "19416 PUT      reg4[video] = reg6",
      "19422 JUMP OR RETURN VAL      reg4"
  ],
  "19670": [
      "19670 PUSH MEMORY ELEMENT IF INIT      814 -> reg7",
      "19673 JUMP IF FALSE      reg7 TO: 19715 | 19676"
  ],
  "19676": [
      "19676 PUSH MEMORY ELEMENT IF INIT      274 -> reg6",
      "19679 PUSH MEMORY ELEMENT IF INIT      274 -> reg4",
      "19682 PUSH MEMORY ELEMENT IF INIT      784 -> reg9",
      "19685 GET      reg9[default] -> reg10",
      "19691 EMPTY ARRAY      -> reg9",
      "19693 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "19697 SET      reg2 -> reg8",
      "19700 PUT      reg4[exf] = reg8",
      "19706 PUT      reg6[lzv] = reg8",
      "19712 SET      reg8 -> reg7",
      "19715 PROMISE      -> reg4",
      "19717 GET      reg4[resolve] -> reg6",
      "19723 NEW ARRAY      1 -> reg7",
      "19726 GET WINDOW PROP      Object -> reg9",
      "19731 GET      reg9[freeze] -> reg10",
      "19737 NEW ARRAY      1 -> reg11",
      "19740 PUSH MEMORY ELEMENT IF INIT      810 -> reg13",
      "19743 PUT      reg11[0] = reg13",
      "19747 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "19751 SET      reg2 -> reg8",
      "19754 PUT      reg7[0] = reg8",
      "19758 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "19762 SET      reg2 -> reg5",
      "19765 JUMP OR RETURN VAL      reg5"
  ],
  "19715": [
      "19715 PROMISE      -> reg4",
      "19717 GET      reg4[resolve] -> reg6",
      "19723 NEW ARRAY      1 -> reg7",
      "19726 GET WINDOW PROP      Object -> reg9",
      "19731 GET      reg9[freeze] -> reg10",
      "19737 NEW ARRAY      1 -> reg11",
      "19740 PUSH MEMORY ELEMENT IF INIT      810 -> reg13",
      "19743 PUT      reg11[0] = reg13",
      "19747 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "19751 SET      reg2 -> reg8",
      "19754 PUT      reg7[0] = reg8",
      "19758 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "19762 SET      reg2 -> reg5",
      "19765 JUMP OR RETURN VAL      reg5"
  ],
  "19767": [
      "19767 PUSH MEMORY ELEMENT IF INIT      808 -> reg5",
      "19770 GET      reg5[length] -> reg6",
      "19776 SET MEMORY ELEMENT IF INIT      817 = reg6",
      "19779 PROMISE      -> reg6",
      "19781 NEW ARRAY      1 -> reg7",
      "19784 INIT FUNCTION STATE      PTR: 19793 NAME:  LEN: 2 -> reg8",
      "19791 JUMP      21868",
      "21868 PUT      reg7[0] = reg8",
      "21872 BIND APPLY      reg6 reg7 -> 5",
      "21876 JUMP OR RETURN VAL      reg5"
  ],
  "19854": [
      "19854 PUSH MEMORY ELEMENT IF INIT      274 -> reg6",
      "19857 PUSH MEMORY ELEMENT IF INIT      825 -> reg4",
      "19860 PUT      reg6[lzv] = reg4",
      "19866 SET      reg4 -> reg5",
      "19869 PUSH MEMORY ELEMENT IF INIT      807 -> reg6",
      "19872 GET      reg6[jpx] -> reg5",
      "19878 EMPTY ARRAY      -> reg7",
      "19880 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg7",
      "19884 SET      reg2 -> reg4",
      "19887 SET MEMORY ELEMENT IF INIT      826 = reg4",
      "19890 EMPTY OBJECT      -> reg4",
      "19892 PUSH MEMORY ELEMENT IF INIT      807 -> reg5",
      "19895 GET      reg5[window] -> reg9",
      "19901 PUT      reg4[rkg] = reg9",
      "19907 PUSH MEMORY ELEMENT IF INIT      826 -> reg5",
      "19910 GET      reg5[contentWindow] -> reg7",
      "19916 PUT      reg4[npx] = reg7",
      "19922 SET MEMORY ELEMENT IF INIT      827 = reg4",
      "19925 PUSH MEMORY ELEMENT IF INIT      807 -> reg5",
      "19928 GET      reg5[uyd] -> reg7",
      "19934 NEW ARRAY      2 -> reg8",
      "19937 PUSH MEMORY ELEMENT IF INIT      827 -> reg9",
      "19940 PUT      reg8[0] = reg9",
      "19944 PUSH MEMORY ELEMENT IF INIT      813 -> reg9",
      "19947 PUT      reg8[1] = reg9",
      "19951 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "19955 SET      reg2 -> reg4",
      "19958 SET MEMORY ELEMENT IF INIT      828 = reg4",
      "19961 INIT FUNCTION STATE      PTR: 19970 NAME:  LEN: 1 -> reg4",
      "19968 JUMP      20330",
      "20330 SET MEMORY ELEMENT IF INIT      829 = reg4",
      "20333 INIT FUNCTION STATE      PTR: 20342 NAME:  LEN: 4 -> reg7",
      "20340 JUMP      20465",
      "20465 SET MEMORY ELEMENT IF INIT      830 = reg7",
      "20468 INIT FUNCTION STATE      PTR: 20477 NAME:  LEN: 4 -> reg9",
      "20475 JUMP      20630",
      "20630 SET MEMORY ELEMENT IF INIT      831 = reg9",
      "20633 INIT FUNCTION STATE      PTR: 20642 NAME:  LEN: 4 -> reg8",
      "20640 JUMP      21430",
      "21430 SET MEMORY ELEMENT IF INIT      832 = reg8",
      "21433 INIT FUNCTION STATE      PTR: 21442 NAME:  LEN: 2 -> reg4",
      "21440 JUMP      21657",
      "21657 SET MEMORY ELEMENT IF INIT      833 = reg4",
      "21660 INIT FUNCTION STATE      PTR: 21669 NAME:  LEN: 2 -> reg4",
      "21667 JUMP      21819",
      "21819 SET MEMORY ELEMENT IF INIT      834 = reg4",
      "21822 PUSH MEMORY ELEMENT IF INIT      784 -> reg4",
      "21825 GET      reg4[default] -> reg8",
      "21831 EMPTY ARRAY      -> reg4",
      "21833 CALL FUNCTION      PTR: reg8 MEM: reg4",
      "21837 SET      reg2 -> reg7",
      "21840 SET MEMORY ELEMENT IF INIT      815 = reg7",
      "21843 PUSH MEMORY ELEMENT IF INIT      834 -> reg7",
      "21846 NEW ARRAY      2 -> reg8",
      "21849 PUT      reg8[0] = 0",
      "21853 PUSH MEMORY ELEMENT IF INIT      810 -> reg9",
      "21856 PUT      reg8[1] = reg9",
      "21860 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "21864 SET      reg2 -> reg4",
      "21867 JUMP OR RETURN"
  ],
  "19869": [
      "19869 PUSH MEMORY ELEMENT IF INIT      807 -> reg6",
      "19872 GET      reg6[jpx] -> reg5",
      "19878 EMPTY ARRAY      -> reg7",
      "19880 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg7",
      "19884 SET      reg2 -> reg4",
      "19887 SET MEMORY ELEMENT IF INIT      826 = reg4",
      "19890 EMPTY OBJECT      -> reg4",
      "19892 PUSH MEMORY ELEMENT IF INIT      807 -> reg5",
      "19895 GET      reg5[window] -> reg9",
      "19901 PUT      reg4[rkg] = reg9",
      "19907 PUSH MEMORY ELEMENT IF INIT      826 -> reg5",
      "19910 GET      reg5[contentWindow] -> reg7",
      "19916 PUT      reg4[npx] = reg7",
      "19922 SET MEMORY ELEMENT IF INIT      827 = reg4",
      "19925 PUSH MEMORY ELEMENT IF INIT      807 -> reg5",
      "19928 GET      reg5[uyd] -> reg7",
      "19934 NEW ARRAY      2 -> reg8",
      "19937 PUSH MEMORY ELEMENT IF INIT      827 -> reg9",
      "19940 PUT      reg8[0] = reg9",
      "19944 PUSH MEMORY ELEMENT IF INIT      813 -> reg9",
      "19947 PUT      reg8[1] = reg9",
      "19951 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "19955 SET      reg2 -> reg4",
      "19958 SET MEMORY ELEMENT IF INIT      828 = reg4",
      "19961 INIT FUNCTION STATE      PTR: 19970 NAME:  LEN: 1 -> reg4",
      "19968 JUMP      20330",
      "20330 SET MEMORY ELEMENT IF INIT      829 = reg4",
      "20333 INIT FUNCTION STATE      PTR: 20342 NAME:  LEN: 4 -> reg7",
      "20340 JUMP      20465",
      "20465 SET MEMORY ELEMENT IF INIT      830 = reg7",
      "20468 INIT FUNCTION STATE      PTR: 20477 NAME:  LEN: 4 -> reg9",
      "20475 JUMP      20630",
      "20630 SET MEMORY ELEMENT IF INIT      831 = reg9",
      "20633 INIT FUNCTION STATE      PTR: 20642 NAME:  LEN: 4 -> reg8",
      "20640 JUMP      21430",
      "21430 SET MEMORY ELEMENT IF INIT      832 = reg8",
      "21433 INIT FUNCTION STATE      PTR: 21442 NAME:  LEN: 2 -> reg4",
      "21440 JUMP      21657",
      "21657 SET MEMORY ELEMENT IF INIT      833 = reg4",
      "21660 INIT FUNCTION STATE      PTR: 21669 NAME:  LEN: 2 -> reg4",
      "21667 JUMP      21819",
      "21819 SET MEMORY ELEMENT IF INIT      834 = reg4",
      "21822 PUSH MEMORY ELEMENT IF INIT      784 -> reg4",
      "21825 GET      reg4[default] -> reg8",
      "21831 EMPTY ARRAY      -> reg4",
      "21833 CALL FUNCTION      PTR: reg8 MEM: reg4",
      "21837 SET      reg2 -> reg7",
      "21840 SET MEMORY ELEMENT IF INIT      815 = reg7",
      "21843 PUSH MEMORY ELEMENT IF INIT      834 -> reg7",
      "21846 NEW ARRAY      2 -> reg8",
      "21849 PUT      reg8[0] = 0",
      "21853 PUSH MEMORY ELEMENT IF INIT      810 -> reg9",
      "21856 PUT      reg8[1] = reg9",
      "21860 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "21864 SET      reg2 -> reg4",
      "21867 JUMP OR RETURN"
  ],
  "19988": [
      "19988 NOT      0 -> reg4",
      "19991 SET MEMORY ELEMENT IF INIT      816 = reg4",
      "19994 SET I      20299",
      "19996 PUSH MEMORY ELEMENT IF INIT      807 -> reg5",
      "19999 GET      reg5[window] -> reg7",
      "20005 GET      reg7[document] -> reg5",
      "20011 GET      reg5[body] -> reg7",
      "20017 GET      reg7[contains] -> reg5",
      "20023 NEW ARRAY      1 -> reg6",
      "20026 PUSH MEMORY ELEMENT IF INIT      826 -> reg9",
      "20029 PUT      reg6[0] = reg9",
      "20033 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg6",
      "20037 SET      reg2 -> reg4",
      "20040 JUMP IF FALSE      reg4 TO: 20090 | 20043"
  ],
  "20043": [
      "20043 PUSH MEMORY ELEMENT IF INIT      807 -> reg6",
      "20046 GET      reg6[window] -> reg8",
      "20052 GET      reg8[document] -> reg9",
      "20058 GET      reg9[body] -> reg6",
      "20064 GET      reg6[removeChild] -> reg8",
      "20070 NEW ARRAY      1 -> reg9",
      "20073 PUSH MEMORY ELEMENT IF INIT      826 -> reg10",
      "20076 PUT      reg9[0] = reg10",
      "20080 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "20084 SET      reg2 -> reg5",
      "20087 SET      reg5 -> reg4",
      "20090 PUSH MEMORY ELEMENT IF INIT      838 -> reg5",
      "20093 JUMP IF FALSE      reg5 TO: 20124 | 20096"
  ],
  "20090": [
      "20090 PUSH MEMORY ELEMENT IF INIT      838 -> reg5",
      "20093 JUMP IF FALSE      reg5 TO: 20124 | 20096"
  ],
  "20096": [
      "20096 PUSH MEMORY ELEMENT IF INIT      838 -> reg5",
      "20099 GET      reg5[slice] -> reg9",
      "20105 NEW ARRAY      1 -> reg10",
      "20108 PUT      reg10[0] = 0",
      "20112 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg10",
      "20116 SET      reg2 -> reg4",
      "20119 SET      reg4 -> reg8",
      "20122 JUMP      20129",
      "20129 SET MEMORY ELEMENT IF INIT      839 = reg8",
      "20132 PUSH MEMORY ELEMENT IF INIT      784 -> reg4",
      "20135 GET      reg4[default] -> reg9",
      "20141 EMPTY ARRAY      -> reg10",
      "20143 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "20147 SET      reg2 -> reg8",
      "20150 SET MEMORY ELEMENT IF INIT      840 = reg8",
      "20153 PUSH MEMORY ELEMENT IF INIT      839 -> reg4",
      "20156 PUSH MEMORY ELEMENT IF INIT      811 -> reg8",
      "20159 EMPTY OBJECT      -> reg9",
      "20161 NEW ARRAY      4 -> reg10",
      "20164 PUSH MEMORY ELEMENT IF INIT      809 -> reg12",
      "20167 PUT      reg10[0] = reg12",
      "20171 PUSH MEMORY ELEMENT IF INIT      824 -> reg11",
      "20174 PUT      reg10[1] = reg11",
      "20178 PUSH MEMORY ELEMENT IF INIT      807 -> reg12",
      "20181 GET      reg12[xbp] -> reg13",
      "20187 NEW ARRAY      2 -> reg14",
      "20190 PUSH MEMORY ELEMENT IF INIT      815 -> reg15",
      "20193 PUT      reg14[0] = reg15",
      "20197 PUSH MEMORY ELEMENT IF INIT      840 -> reg15",
      "20200 PUT      reg14[1] = reg15",
      "20204 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "20208 SET      reg2 -> reg11",
      "20211 PUT      reg10[2] = reg11",
      "20215 PUT      reg10[3] = 3.0",
      "20221 PUT      reg9[t] = reg10",
      "20227 PUT      reg4[reg8] = reg9",
      "20231 PUSH MEMORY ELEMENT IF INIT      814 -> reg4",
      "20234 JUMP IF FALSE      reg4 TO: 20252 | 20237"
  ],
  "20124": [
      "20124 EMPTY ARRAY      -> reg4",
      "20126 SET      reg4 -> reg8",
      "20129 SET MEMORY ELEMENT IF INIT      839 = reg8",
      "20132 PUSH MEMORY ELEMENT IF INIT      784 -> reg4",
      "20135 GET      reg4[default] -> reg9",
      "20141 EMPTY ARRAY      -> reg10",
      "20143 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "20147 SET      reg2 -> reg8",
      "20150 SET MEMORY ELEMENT IF INIT      840 = reg8",
      "20153 PUSH MEMORY ELEMENT IF INIT      839 -> reg4",
      "20156 PUSH MEMORY ELEMENT IF INIT      811 -> reg8",
      "20159 EMPTY OBJECT      -> reg9",
      "20161 NEW ARRAY      4 -> reg10",
      "20164 PUSH MEMORY ELEMENT IF INIT      809 -> reg12",
      "20167 PUT      reg10[0] = reg12",
      "20171 PUSH MEMORY ELEMENT IF INIT      824 -> reg11",
      "20174 PUT      reg10[1] = reg11",
      "20178 PUSH MEMORY ELEMENT IF INIT      807 -> reg12",
      "20181 GET      reg12[xbp] -> reg13",
      "20187 NEW ARRAY      2 -> reg14",
      "20190 PUSH MEMORY ELEMENT IF INIT      815 -> reg15",
      "20193 PUT      reg14[0] = reg15",
      "20197 PUSH MEMORY ELEMENT IF INIT      840 -> reg15",
      "20200 PUT      reg14[1] = reg15",
      "20204 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "20208 SET      reg2 -> reg11",
      "20211 PUT      reg10[2] = reg11",
      "20215 PUT      reg10[3] = 3.0",
      "20221 PUT      reg9[t] = reg10",
      "20227 PUT      reg4[reg8] = reg9",
      "20231 PUSH MEMORY ELEMENT IF INIT      814 -> reg4",
      "20234 JUMP IF FALSE      reg4 TO: 20252 | 20237"
  ],
  "20237": [
      "20237 PUSH MEMORY ELEMENT IF INIT      274 -> reg8",
      "20240 PUSH MEMORY ELEMENT IF INIT      840 -> reg10",
      "20243 PUT      reg8[exf] = reg10",
      "20249 SET      reg10 -> reg4",
      "20252 PUSH MEMORY ELEMENT IF INIT      822 -> reg8",
      "20255 NEW ARRAY      1 -> reg9",
      "20258 GET WINDOW PROP      Object -> reg11",
      "20263 GET      reg11[freeze] -> reg13",
      "20269 NEW ARRAY      1 -> reg14",
      "20272 PUSH MEMORY ELEMENT IF INIT      839 -> reg15",
      "20275 PUT      reg14[0] = reg15",
      "20279 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg14",
      "20283 SET      reg2 -> reg10",
      "20286 PUT      reg9[0] = reg10",
      "20290 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "20294 SET      reg2 -> reg4",
      "20297 JUMP      20327",
      "20327 SET I      null",
      "20329 JUMP OR RETURN"
  ],
  "20252": [
      "20252 PUSH MEMORY ELEMENT IF INIT      822 -> reg8",
      "20255 NEW ARRAY      1 -> reg9",
      "20258 GET WINDOW PROP      Object -> reg11",
      "20263 GET      reg11[freeze] -> reg13",
      "20269 NEW ARRAY      1 -> reg14",
      "20272 PUSH MEMORY ELEMENT IF INIT      839 -> reg15",
      "20275 PUT      reg14[0] = reg15",
      "20279 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg14",
      "20283 SET      reg2 -> reg10",
      "20286 PUT      reg9[0] = reg10",
      "20290 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "20294 SET      reg2 -> reg4",
      "20297 JUMP      20327",
      "20327 SET I      null",
      "20329 JUMP OR RETURN"
  ],
  "20299": [
      "20299 SET I      null",
      "20301 PUSH F.K      -> reg4",
      "20303 VOID F",
      "20304 SET MEMORY ELEMENT      0 = reg4",
      "20307 PUSH MEMORY ELEMENT IF INIT      823 -> reg10",
      "20310 NEW ARRAY      1 -> reg8",
      "20313 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "20316 PUT      reg8[0] = reg9",
      "20320 CALL FUNCTION      PTR: reg10 MEM: reg8",
      "20324 SET      reg2 -> reg4",
      "20327 SET I      null",
      "20329 JUMP OR RETURN"
  ],
  "20329": ["20329 JUMP OR RETURN"],
  "20425": [
      "20425 NEW ARRAY      2 -> reg8",
      "20428 PUSH MEMORY ELEMENT IF INIT      848 -> reg9",
      "20431 PUT      reg8[0] = reg9",
      "20435 PUSH MEMORY ELEMENT IF INIT      852 -> reg9",
      "20438 PUT      reg8[1] = reg9",
      "20442 SET      reg8 -> reg7",
      "20445 JUMP      20460",
      "20460 PUT      reg6[reg5] = reg7",
      "20464 JUMP OR RETURN"
  ],
  "20447": [
      "20447 NEW ARRAY      1 -> reg8",
      "20450 PUSH MEMORY ELEMENT IF INIT      848 -> reg9",
      "20453 PUT      reg8[0] = reg9",
      "20457 SET      reg8 -> reg7",
      "20460 PUT      reg6[reg5] = reg7",
      "20464 JUMP OR RETURN"
  ],
  "20508": [
      "20508 GET      reg3[4] -> reg5",
      "20512 GET WINDOW PROP      undefined -> reg6",
      "20517 STRICT NOT EQUAL      reg5 !== reg6 -> reg7",
      "20521 SET      reg7 -> reg4",
      "20524 JUMP IF FALSE      reg4 TO: 20536 | 20527"
  ],
  "20524": ["20524 JUMP IF FALSE      reg4 TO: 20536 | 20527"],
  "20527": [
      "20527 GET      reg3[4] -> reg4",
      "20531 SET      reg4 -> reg5",
      "20534 JUMP      20541",
      "20541 SET MEMORY ELEMENT IF INIT      860 = reg5",
      "20544 PUSH MEMORY ELEMENT IF INIT      807 -> reg8",
      "20547 GET      reg8[xbp] -> reg4",
      "20553 NEW ARRAY      2 -> reg7",
      "20556 PUSH MEMORY ELEMENT IF INIT      859 -> reg9",
      "20559 PUT      reg7[0] = reg9",
      "20563 PUSH MEMORY ELEMENT IF INIT      784 -> reg6",
      "20566 GET      reg6[default] -> reg10",
      "20572 EMPTY ARRAY      -> reg13",
      "20574 CALL FUNCTION      PTR: reg10 MEM: reg13",
      "20578 SET      reg2 -> reg9",
      "20581 PUT      reg7[1] = reg9",
      "20585 CALL FUNCTION      OBJ: reg8 FUNC: reg4 ARGS: reg7",
      "20589 SET      reg2 -> reg5",
      "20592 SET MEMORY ELEMENT IF INIT      861 = reg5",
      "20595 PUSH MEMORY ELEMENT IF INIT      857 -> reg4",
      "20598 PUSH MEMORY ELEMENT IF INIT      858 -> reg6",
      "20601 NEW ARRAY      3 -> reg5",
      "20604 PUSH MEMORY ELEMENT IF INIT      856 -> reg7",
      "20607 PUT      reg5[0] = reg7",
      "20611 PUSH MEMORY ELEMENT IF INIT      860 -> reg7",
      "20614 PUT      reg5[1] = reg7",
      "20618 PUSH MEMORY ELEMENT IF INIT      861 -> reg7",
      "20621 PUT      reg5[2] = reg7",
      "20625 PUT      reg4[reg6] = reg5",
      "20629 JUMP OR RETURN"
  ],
  "20536": [
      "20536 SET       -> reg5",
      "20541 SET MEMORY ELEMENT IF INIT      860 = reg5",
      "20544 PUSH MEMORY ELEMENT IF INIT      807 -> reg8",
      "20547 GET      reg8[xbp] -> reg4",
      "20553 NEW ARRAY      2 -> reg7",
      "20556 PUSH MEMORY ELEMENT IF INIT      859 -> reg9",
      "20559 PUT      reg7[0] = reg9",
      "20563 PUSH MEMORY ELEMENT IF INIT      784 -> reg6",
      "20566 GET      reg6[default] -> reg10",
      "20572 EMPTY ARRAY      -> reg13",
      "20574 CALL FUNCTION      PTR: reg10 MEM: reg13",
      "20578 SET      reg2 -> reg9",
      "20581 PUT      reg7[1] = reg9",
      "20585 CALL FUNCTION      OBJ: reg8 FUNC: reg4 ARGS: reg7",
      "20589 SET      reg2 -> reg5",
      "20592 SET MEMORY ELEMENT IF INIT      861 = reg5",
      "20595 PUSH MEMORY ELEMENT IF INIT      857 -> reg4",
      "20598 PUSH MEMORY ELEMENT IF INIT      858 -> reg6",
      "20601 NEW ARRAY      3 -> reg5",
      "20604 PUSH MEMORY ELEMENT IF INIT      856 -> reg7",
      "20607 PUT      reg5[0] = reg7",
      "20611 PUSH MEMORY ELEMENT IF INIT      860 -> reg7",
      "20614 PUT      reg5[1] = reg7",
      "20618 PUSH MEMORY ELEMENT IF INIT      861 -> reg7",
      "20621 PUT      reg5[2] = reg7",
      "20625 PUT      reg4[reg6] = reg5",
      "20629 JUMP OR RETURN"
  ],
  "20765": [
      "20765 PUSH MEMORY ELEMENT IF INIT      877 -> reg5",
      "20768 STRICT NOT EQUAL      null !== reg5 -> reg4",
      "20772 SET      reg4 -> reg7",
      "20775 JUMP IF FALSE      reg7 TO: 20790 | 20778"
  ],
  "20775": ["20775 JUMP IF FALSE      reg7 TO: 20790 | 20778"],
  "20778": [
      "20778 PUSH MEMORY ELEMENT IF INIT      877 -> reg5",
      "20781 IN      then inreg5 -> reg4",
      "20787 SET      reg4 -> reg7",
      "20790 JUMP IF FALSE      reg7 TO: 20814 | 20793"
  ],
  "20790": ["20790 JUMP IF FALSE      reg7 TO: 20814 | 20793"],
  "20793": [
      "20793 PUSH MEMORY ELEMENT IF INIT      877 -> reg4",
      "20796 GET      reg4[then] -> reg6",
      "20802 TYPEOF      reg6 -> reg4",
      "20805 EQUAL      function == reg4 -> reg6",
      "20811 SET      reg6 -> reg7",
      "20814 JUMP OR RETURN VAL      reg7"
  ],
  "20814": ["20814 JUMP OR RETURN VAL      reg7"],
  "20836": [
      "20836 PROMISE      -> reg10",
      "20838 GET      reg10[race] -> reg11",
      "20844 NEW ARRAY      1 -> reg9",
      "20847 NEW ARRAY      2 -> reg12",
      "20850 PROMISE      -> reg14",
      "20852 NEW ARRAY      1 -> reg17",
      "20855 INIT FUNCTION STATE      PTR: 20864 NAME:  LEN: 2 -> reg15",
      "20862 JUMP      20942",
      "20942 PUT      reg17[0] = reg15",
      "20946 BIND APPLY      reg14 reg17 -> 13",
      "20950 PUT      reg12[0] = reg13",
      "20954 PUSH MEMORY ELEMENT IF INIT      871 -> reg14",
      "20957 PUT      reg12[1] = reg14",
      "20961 PUT      reg9[0] = reg12",
      "20965 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg9",
      "20969 SET      reg2 -> reg8",
      "20972 GET      reg8[then] -> reg9",
      "20978 NEW ARRAY      1 -> reg12",
      "20981 INIT FUNCTION STATE      PTR: 20990 NAME:  LEN: 1 -> reg11",
      "20988 JUMP      21035",
      "21035 PUT      reg12[0] = reg11",
      "21039 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg12",
      "21043 SET      reg2 -> reg5",
      "21046 GET      reg5[catch] -> reg9",
      "21052 NEW ARRAY      1 -> reg12",
      "21055 INIT FUNCTION STATE      PTR: 21064 NAME:  LEN: 1 -> reg13",
      "21062 JUMP      21223",
      "21223 PUT      reg12[0] = reg13",
      "21227 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg12",
      "21231 SET      reg2 -> reg4",
      "21234 SET      reg4 -> reg6",
      "21237 JUMP      21300",
      "21300 JUMP OR RETURN VAL      reg6"
  ],
  "21100": [
      "21100 PUSH MEMORY ELEMENT IF INIT      892 -> reg5",
      "21103 GET      reg5[message] -> reg6",
      "21109 SET      reg6 -> reg4",
      "21112 JUMP IF FALSE      reg4 TO: 21174 | 21115"
  ],
  "21112": ["21112 JUMP IF FALSE      reg4 TO: 21174 | 21115"],
  "21115": [
      "21115 PUSH MEMORY ELEMENT IF INIT      892 -> reg5",
      "21118 GET      reg5[message] -> reg6",
      "21124 STRICT EQUAL      to === reg6 -> reg5",
      "21130 JUMP IF FALSE      reg5 TO: 21156 | 21133"
  ],
  "21133": [
      "21133 PUSH MEMORY ELEMENT IF INIT      783 -> reg7",
      "21136 GET      reg7[default] -> reg8",
      "21142 GET      reg8[TimedOut] -> reg7",
      "21148 SET MEMORY ELEMENT IF INIT      894 = reg7",
      "21151 SET      reg7 -> reg6",
      "21154 JUMP      21171",
      "21171 SET      reg6 -> reg4",
      "21174 PUSH MEMORY ELEMENT IF INIT      831 -> reg4",
      "21177 NEW ARRAY      5 -> reg8",
      "21180 PUSH MEMORY ELEMENT IF INIT      894 -> reg6",
      "21183 PUT      reg8[0] = reg6",
      "21187 PUSH MEMORY ELEMENT IF INIT      869 -> reg6",
      "21190 PUT      reg8[1] = reg6",
      "21194 PUSH MEMORY ELEMENT IF INIT      868 -> reg6",
      "21197 PUT      reg8[2] = reg6",
      "21201 PUSH MEMORY ELEMENT IF INIT      870 -> reg7",
      "21204 PUT      reg8[3] = reg7",
      "21208 PUSH MEMORY ELEMENT IF INIT      893 -> reg6",
      "21211 PUT      reg8[4] = reg6",
      "21215 CALL FUNCTION      PTR: reg4 MEM: reg8",
      "21219 SET      reg2 -> reg5",
      "21222 JUMP OR RETURN"
  ],
  "21156": [
      "21156 PUSH MEMORY ELEMENT IF INIT      892 -> reg5",
      "21159 GET      reg5[message] -> reg7",
      "21165 SET MEMORY ELEMENT IF INIT      893 = reg7",
      "21168 SET      reg7 -> reg6",
      "21171 SET      reg6 -> reg4",
      "21174 PUSH MEMORY ELEMENT IF INIT      831 -> reg4",
      "21177 NEW ARRAY      5 -> reg8",
      "21180 PUSH MEMORY ELEMENT IF INIT      894 -> reg6",
      "21183 PUT      reg8[0] = reg6",
      "21187 PUSH MEMORY ELEMENT IF INIT      869 -> reg6",
      "21190 PUT      reg8[1] = reg6",
      "21194 PUSH MEMORY ELEMENT IF INIT      868 -> reg6",
      "21197 PUT      reg8[2] = reg6",
      "21201 PUSH MEMORY ELEMENT IF INIT      870 -> reg7",
      "21204 PUT      reg8[3] = reg7",
      "21208 PUSH MEMORY ELEMENT IF INIT      893 -> reg6",
      "21211 PUT      reg8[4] = reg6",
      "21215 CALL FUNCTION      PTR: reg4 MEM: reg8",
      "21219 SET      reg2 -> reg5",
      "21222 JUMP OR RETURN"
  ],
  "21174": [
      "21174 PUSH MEMORY ELEMENT IF INIT      831 -> reg4",
      "21177 NEW ARRAY      5 -> reg8",
      "21180 PUSH MEMORY ELEMENT IF INIT      894 -> reg6",
      "21183 PUT      reg8[0] = reg6",
      "21187 PUSH MEMORY ELEMENT IF INIT      869 -> reg6",
      "21190 PUT      reg8[1] = reg6",
      "21194 PUSH MEMORY ELEMENT IF INIT      868 -> reg6",
      "21197 PUT      reg8[2] = reg6",
      "21201 PUSH MEMORY ELEMENT IF INIT      870 -> reg7",
      "21204 PUT      reg8[3] = reg7",
      "21208 PUSH MEMORY ELEMENT IF INIT      893 -> reg6",
      "21211 PUT      reg8[4] = reg6",
      "21215 CALL FUNCTION      PTR: reg4 MEM: reg8",
      "21219 SET      reg2 -> reg5",
      "21222 JUMP OR RETURN"
  ],
  "21239": [
      "21239 PUSH MEMORY ELEMENT IF INIT      830 -> reg4",
      "21242 NEW ARRAY      4 -> reg12",
      "21245 PUSH MEMORY ELEMENT IF INIT      871 -> reg11",
      "21248 PUT      reg12[0] = reg11",
      "21252 PUSH MEMORY ELEMENT IF INIT      869 -> reg11",
      "21255 PUT      reg12[1] = reg11",
      "21259 PUSH MEMORY ELEMENT IF INIT      868 -> reg11",
      "21262 PUT      reg12[2] = reg11",
      "21266 PUSH MEMORY ELEMENT IF INIT      870 -> reg11",
      "21269 PUT      reg12[3] = reg11",
      "21273 CALL FUNCTION      PTR: reg4 MEM: reg12",
      "21277 SET      reg2 -> reg9",
      "21280 PROMISE      -> reg9",
      "21282 GET      reg9[resolve] -> reg12",
      "21288 EMPTY ARRAY      -> reg11",
      "21290 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg11",
      "21294 SET      reg2 -> reg4",
      "21297 SET      reg4 -> reg6",
      "21300 JUMP OR RETURN VAL      reg6"
  ],
  "21304": [
      "21304 SET I      null",
      "21306 PUSH F.K      -> reg4",
      "21308 VOID F",
      "21309 SET MEMORY ELEMENT      0 = reg4",
      "21312 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "21315 SET MEMORY ELEMENT IF INIT      872 = reg6",
      "21318 PUSH MEMORY ELEMENT IF INIT      872 -> reg4",
      "21321 JUMP IF FALSE      reg4 TO: 21336 | 21324"
  ],
  "21324": [
      "21324 PUSH MEMORY ELEMENT IF INIT      872 -> reg6",
      "21327 GET      reg6[message] -> reg11",
      "21333 SET      reg11 -> reg4",
      "21336 JUMP IF FALSE      reg4 TO: 21408 | 21339"
  ],
  "21336": ["21336 JUMP IF FALSE      reg4 TO: 21408 | 21339"],
  "21339": [
      "21339 PUSH MEMORY ELEMENT IF INIT      831 -> reg11",
      "21342 NEW ARRAY      5 -> reg12",
      "21345 PUSH MEMORY ELEMENT IF INIT      783 -> reg13",
      "21348 GET      reg13[default] -> reg14",
      "21354 GET      reg14[UnhandledException] -> reg13",
      "21360 PUT      reg12[0] = reg13",
      "21364 PUSH MEMORY ELEMENT IF INIT      869 -> reg14",
      "21367 PUT      reg12[1] = reg14",
      "21371 PUSH MEMORY ELEMENT IF INIT      868 -> reg13",
      "21374 PUT      reg12[2] = reg13",
      "21378 PUSH MEMORY ELEMENT IF INIT      870 -> reg13",
      "21381 PUT      reg12[3] = reg13",
      "21385 PUSH MEMORY ELEMENT IF INIT      872 -> reg15",
      "21388 GET      reg15[message] -> reg13",
      "21394 PUT      reg12[4] = reg13",
      "21398 CALL FUNCTION      PTR: reg11 MEM: reg12",
      "21402 SET      reg2 -> reg6",
      "21405 SET      reg6 -> reg4",
      "21408 PROMISE      -> reg6",
      "21410 GET      reg6[resolve] -> reg11",
      "21416 EMPTY ARRAY      -> reg12",
      "21418 CALL FUNCTION      OBJ: reg6 FUNC: reg11 ARGS: reg12",
      "21422 SET      reg2 -> reg4",
      "21425 JUMP OR RETURN VAL      reg4"
  ],
  "21408": [
      "21408 PROMISE      -> reg6",
      "21410 GET      reg6[resolve] -> reg11",
      "21416 EMPTY ARRAY      -> reg12",
      "21418 CALL FUNCTION      OBJ: reg6 FUNC: reg11 ARGS: reg12",
      "21422 SET      reg2 -> reg4",
      "21425 JUMP OR RETURN VAL      reg4"
  ],
  "21468": [
      "21468 PUSH MEMORY ELEMENT IF INIT      784 -> reg7",
      "21471 GET      reg7[default] -> reg5",
      "21477 EMPTY ARRAY      -> reg7",
      "21479 CALL FUNCTION      PTR: reg5 MEM: reg7",
      "21483 SET      reg2 -> reg6",
      "21486 PUSH MEMORY ELEMENT IF INIT      825 -> reg5",
      "21489 SUBTRACT      reg6 - reg5 -> reg7",
      "21493 PUSH MEMORY ELEMENT IF INIT      812 -> reg5",
      "21496 GREATER THAN OR EQUAL      reg7 >= reg5 -> reg8",
      "21500 SET      reg8 -> reg4",
      "21503 JUMP IF FALSE      reg4 TO: 21515 | 21506"
  ],
  "21503": ["21503 JUMP IF FALSE      reg4 TO: 21515 | 21506"],
  "21506": [
      "21506 PUSH MEMORY ELEMENT IF INIT      816 -> reg5",
      "21509 NOT      reg5 -> reg6",
      "21512 SET      reg6 -> reg4",
      "21515 JUMP IF FALSE      reg4 TO: 21547 | 21518"
  ],
  "21515": ["21515 JUMP IF FALSE      reg4 TO: 21547 | 21518"],
  "21518": [
      "21518 NOT      0 -> reg7",
      "21521 SET MEMORY ELEMENT IF INIT      824 = reg7",
      "21524 PUSH MEMORY ELEMENT IF INIT      829 -> reg7",
      "21527 NEW ARRAY      1 -> reg6",
      "21530 PUSH MEMORY ELEMENT IF INIT      906 -> reg9",
      "21533 PUT      reg6[0] = reg9",
      "21537 CALL FUNCTION      PTR: reg7 MEM: reg6",
      "21541 SET      reg2 -> reg5",
      "21544 SET      reg5 -> reg4",
      "21547 JUMP OR RETURN"
  ],
  "21547": ["21547 JUMP OR RETURN"],
  "21571": [
      "21571 PUSH MEMORY ELEMENT IF INIT      817 -> reg6",
      "21574 SET      1 -> reg4",
      "21577 SUBTRACT      reg6 - reg4 -> reg4",
      "21581 SET MEMORY ELEMENT IF INIT      817 = reg4",
      "21584 PUSH MEMORY ELEMENT IF INIT      817 -> reg4",
      "21587 LESS THAN OR EQUAL      reg4 <= 0 -> reg6",
      "21591 JUMP IF FALSE      reg6 TO: 21617 | 21594"
  ],
  "21594": [
      "21594 PUSH MEMORY ELEMENT IF INIT      829 -> reg9",
      "21597 NEW ARRAY      1 -> reg7",
      "21600 PUSH MEMORY ELEMENT IF INIT      902 -> reg8",
      "21603 PUT      reg7[0] = reg8",
      "21607 CALL FUNCTION      PTR: reg9 MEM: reg7",
      "21611 SET      reg2 -> reg4",
      "21614 SET      reg4 -> reg6",
      "21617 PUSH MEMORY ELEMENT IF INIT      816 -> reg4",
      "21620 JUMP IF TRUE      reg4 TO: 21653 | 21623"
  ],
  "21617": [
      "21617 PUSH MEMORY ELEMENT IF INIT      816 -> reg4",
      "21620 JUMP IF TRUE      reg4 TO: 21653 | 21623"
  ],
  "21623": [
      "21623 PUSH MEMORY ELEMENT IF INIT      834 -> reg7",
      "21626 NEW ARRAY      2 -> reg8",
      "21629 PUSH MEMORY ELEMENT IF INIT      903 -> reg9",
      "21632 PUT      reg8[0] = reg9",
      "21636 PUSH MEMORY ELEMENT IF INIT      902 -> reg9",
      "21639 PUT      reg8[1] = reg9",
      "21643 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "21647 SET      reg2 -> reg6",
      "21650 SET      reg6 -> reg4",
      "21653 SET      reg4 -> reg5",
      "21656 JUMP OR RETURN"
  ],
  "21653": ["21653 SET      reg4 -> reg5", "21656 JUMP OR RETURN"],
  "21656": ["21656 JUMP OR RETURN"],
  "22055": [
      "22055 PUSH MEMORY ELEMENT IF INIT      927 -> reg5",
      "22058 PUSH MEMORY ELEMENT IF INIT      929 -> reg6",
      "22061 GET      reg5[reg6] -> reg4",
      "22065 SET MEMORY ELEMENT IF INIT      930 = reg4",
      "22068 PUSH MEMORY ELEMENT IF INIT      927 -> reg5",
      "22071 PUSH MEMORY ELEMENT IF INIT      929 -> reg6",
      "22074 ADD      reg61-> reg7",
      "22078 GET      reg5[reg7] -> reg4",
      "22082 SET MEMORY ELEMENT IF INIT      931 = reg4",
      "22085 PUSH MEMORY ELEMENT IF INIT      927 -> reg4",
      "22088 PUSH MEMORY ELEMENT IF INIT      929 -> reg7",
      "22091 ADD      reg72-> reg6",
      "22095 GET      reg4[reg6] -> reg5",
      "22099 SET MEMORY ELEMENT IF INIT      932 = reg5",
      "22102 PUSH MEMORY ELEMENT IF INIT      930 -> reg4",
      "22105 GREATER THAN      reg4 > 255 -> reg6",
      "22109 JUMP IF TRUE      reg6 TO: 22122 | 22112"
  ],
  "22112": [
      "22112 PUSH MEMORY ELEMENT IF INIT      931 -> reg5",
      "22115 GREATER THAN      reg5 > 255 -> reg4",
      "22119 SET      reg4 -> reg6",
      "22122 JUMP IF TRUE      reg6 TO: 22135 | 22125"
  ],
  "22122": ["22122 JUMP IF TRUE      reg6 TO: 22135 | 22125"],
  "22125": [
      "22125 PUSH MEMORY ELEMENT IF INIT      932 -> reg4",
      "22128 GREATER THAN      reg4 > 255 -> reg5",
      "22132 SET      reg5 -> reg6",
      "22135 JUMP IF FALSE      reg6 TO: 22158 | 22138"
  ],
  "22135": ["22135 JUMP IF FALSE      reg6 TO: 22158 | 22138"],
  "22138": [
      "22138 GET WINDOW PROP      TypeError -> reg6",
      "22143 NEW ARRAY      1 -> reg4",
      "22146 PUT      reg4[0] = invalid byte encountered during base64 conversion",
      "22152 BIND APPLY      reg6 reg4 -> 5",
      "22156 HANDLE ERROR      reg5",
      "22158 PUSH MEMORY ELEMENT IF INIT      930 -> reg4",
      "22161 LSHIFT      reg4 << 16 -> reg7",
      "22165 PUSH MEMORY ELEMENT IF INIT      931 -> reg4",
      "22168 LSHIFT      reg4 << 8 -> reg6",
      "22172 OR      reg7 | reg6 -> reg4",
      "22176 PUSH MEMORY ELEMENT IF INIT      932 -> reg5",
      "22179 OR      reg4 | reg5 -> reg6",
      "22183 SET MEMORY ELEMENT IF INIT      933 = reg6",
      "22186 PUSH MEMORY ELEMENT IF INIT      928 -> reg5",
      "22189 PUSH MEMORY ELEMENT IF INIT      924 -> reg7",
      "22192 GET      reg7[charAt] -> reg6",
      "22198 NEW ARRAY      1 -> reg8",
      "22201 PUSH MEMORY ELEMENT IF INIT      933 -> reg14",
      "22204 RSHIFT      reg14 >> 18 -> reg9",
      "22208 AND      reg9 & 63 -> reg10",
      "22212 PUT      reg8[0] = reg10",
      "22216 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg8",
      "22220 SET      reg2 -> reg4",
      "22223 PUSH MEMORY ELEMENT IF INIT      924 -> reg8",
      "22226 GET      reg8[charAt] -> reg9",
      "22232 NEW ARRAY      1 -> reg10",
      "22235 PUSH MEMORY ELEMENT IF INIT      933 -> reg11",
      "22238 RSHIFT      reg11 >> 12 -> reg13",
      "22242 AND      reg13 & 63 -> reg12",
      "22246 PUT      reg10[0] = reg12",
      "22250 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "22254 SET      reg2 -> reg6",
      "22257 ADD      reg4NaN-> reg10",
      "22261 PUSH MEMORY ELEMENT IF INIT      924 -> reg6",
      "22264 GET      reg6[charAt] -> reg12",
      "22270 NEW ARRAY      1 -> reg13",
      "22273 PUSH MEMORY ELEMENT IF INIT      933 -> reg9",
      "22276 RSHIFT      reg9 >> 6 -> reg14",
      "22280 AND      reg14 & 63 -> reg9",
      "22284 PUT      reg13[0] = reg9",
      "22288 CALL FUNCTION      OBJ: reg6 FUNC: reg12 ARGS: reg13",
      "22292 SET      reg2 -> reg4",
      "22295 ADD      reg10NaN-> reg9",
      "22299 PUSH MEMORY ELEMENT IF INIT      924 -> reg10",
      "22302 GET      reg10[charAt] -> reg11",
      "22308 NEW ARRAY      1 -> reg12",
      "22311 PUSH MEMORY ELEMENT IF INIT      933 -> reg14",
      "22314 AND      63 & reg14 -> reg15",
      "22318 PUT      reg12[0] = reg15",
      "22322 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "22326 SET      reg2 -> reg4",
      "22329 ADD      reg9NaN-> reg11",
      "22333 ADD      reg5NaN-> reg11",
      "22337 SET MEMORY ELEMENT IF INIT      928 = reg11",
      "22340 PUSH MEMORY ELEMENT IF INIT      929 -> reg4",
      "22343 SET      3 -> reg9",
      "22346 ADD      reg4NaN-> reg9",
      "22350 SET MEMORY ELEMENT IF INIT      929 = reg9",
      "22353 JUMP      22036",
      "22036 PUSH MEMORY ELEMENT IF INIT      929 -> reg5",
      "22039 PUSH MEMORY ELEMENT IF INIT      927 -> reg4",
      "22042 GET      reg4[length] -> reg6",
      "22048 LESS THAN      reg5 < reg6 -> reg4",
      "22052 JUMP IF FALSE      reg4 TO: 22355 | 22055"
  ],
  "22158": [
      "22158 PUSH MEMORY ELEMENT IF INIT      930 -> reg4",
      "22161 LSHIFT      reg4 << 16 -> reg7",
      "22165 PUSH MEMORY ELEMENT IF INIT      931 -> reg4",
      "22168 LSHIFT      reg4 << 8 -> reg6",
      "22172 OR      reg7 | reg6 -> reg4",
      "22176 PUSH MEMORY ELEMENT IF INIT      932 -> reg5",
      "22179 OR      reg4 | reg5 -> reg6",
      "22183 SET MEMORY ELEMENT IF INIT      933 = reg6",
      "22186 PUSH MEMORY ELEMENT IF INIT      928 -> reg5",
      "22189 PUSH MEMORY ELEMENT IF INIT      924 -> reg7",
      "22192 GET      reg7[charAt] -> reg6",
      "22198 NEW ARRAY      1 -> reg8",
      "22201 PUSH MEMORY ELEMENT IF INIT      933 -> reg14",
      "22204 RSHIFT      reg14 >> 18 -> reg9",
      "22208 AND      reg9 & 63 -> reg10",
      "22212 PUT      reg8[0] = reg10",
      "22216 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg8",
      "22220 SET      reg2 -> reg4",
      "22223 PUSH MEMORY ELEMENT IF INIT      924 -> reg8",
      "22226 GET      reg8[charAt] -> reg9",
      "22232 NEW ARRAY      1 -> reg10",
      "22235 PUSH MEMORY ELEMENT IF INIT      933 -> reg11",
      "22238 RSHIFT      reg11 >> 12 -> reg13",
      "22242 AND      reg13 & 63 -> reg12",
      "22246 PUT      reg10[0] = reg12",
      "22250 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "22254 SET      reg2 -> reg6",
      "22257 ADD      reg4NaN-> reg10",
      "22261 PUSH MEMORY ELEMENT IF INIT      924 -> reg6",
      "22264 GET      reg6[charAt] -> reg12",
      "22270 NEW ARRAY      1 -> reg13",
      "22273 PUSH MEMORY ELEMENT IF INIT      933 -> reg9",
      "22276 RSHIFT      reg9 >> 6 -> reg14",
      "22280 AND      reg14 & 63 -> reg9",
      "22284 PUT      reg13[0] = reg9",
      "22288 CALL FUNCTION      OBJ: reg6 FUNC: reg12 ARGS: reg13",
      "22292 SET      reg2 -> reg4",
      "22295 ADD      reg10NaN-> reg9",
      "22299 PUSH MEMORY ELEMENT IF INIT      924 -> reg10",
      "22302 GET      reg10[charAt] -> reg11",
      "22308 NEW ARRAY      1 -> reg12",
      "22311 PUSH MEMORY ELEMENT IF INIT      933 -> reg14",
      "22314 AND      63 & reg14 -> reg15",
      "22318 PUT      reg12[0] = reg15",
      "22322 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "22326 SET      reg2 -> reg4",
      "22329 ADD      reg9NaN-> reg11",
      "22333 ADD      reg5NaN-> reg11",
      "22337 SET MEMORY ELEMENT IF INIT      928 = reg11",
      "22340 PUSH MEMORY ELEMENT IF INIT      929 -> reg4",
      "22343 SET      3 -> reg9",
      "22346 ADD      reg4NaN-> reg9",
      "22350 SET MEMORY ELEMENT IF INIT      929 = reg9",
      "22353 JUMP      22036",
      "22036 PUSH MEMORY ELEMENT IF INIT      929 -> reg5",
      "22039 PUSH MEMORY ELEMENT IF INIT      927 -> reg4",
      "22042 GET      reg4[length] -> reg6",
      "22048 LESS THAN      reg5 < reg6 -> reg4",
      "22052 JUMP IF FALSE      reg4 TO: 22355 | 22055"
  ],
  "22355": [
      "22355 PUSH MEMORY ELEMENT IF INIT      927 -> reg4",
      "22358 GET      reg4[length] -> reg9",
      "22364 MOD      reg9 % 3 -> reg5",
      "22368 SET MEMORY ELEMENT IF INIT      934 = reg5",
      "22371 PUSH MEMORY ELEMENT IF INIT      934 -> reg4",
      "22374 GREATER THAN      reg4 > 0 -> reg9",
      "22378 JUMP IF FALSE      reg9 TO: 22452 | 22381"
  ],
  "22381": [
      "22381 PUSH MEMORY ELEMENT IF INIT      928 -> reg11",
      "22384 GET      reg11[slice] -> reg4",
      "22390 NEW ARRAY      2 -> reg13",
      "22393 PUT      reg13[0] = 0",
      "22397 PUSH MEMORY ELEMENT IF INIT      934 -> reg12",
      "22400 SUBTRACT      reg12 - 3 -> reg15",
      "22404 PUT      reg13[1] = reg15",
      "22408 CALL FUNCTION      OBJ: reg11 FUNC: reg4 ARGS: reg13",
      "22412 SET      reg2 -> reg5",
      "22415 GET      ===[substring] -> reg4",
      "22423 NEW ARRAY      1 -> reg13",
      "22426 PUSH MEMORY ELEMENT IF INIT      934 -> reg14",
      "22429 PUT      reg13[0] = reg14",
      "22433 CALL FUNCTION      OBJ: === FUNC: reg4 ARGS: reg13",
      "22439 SET      reg2 -> reg12",
      "22442 ADD      reg5NaN-> reg13",
      "22446 SET MEMORY ELEMENT IF INIT      928 = reg13",
      "22449 SET      reg13 -> reg9",
      "22452 PUSH MEMORY ELEMENT IF INIT      928 -> reg4",
      "22455 JUMP OR RETURN VAL      reg4"
  ],
  "22452": [
      "22452 PUSH MEMORY ELEMENT IF INIT      928 -> reg4",
      "22455 JUMP OR RETURN VAL      reg4"
  ],
  "22996": [
      "22996 PUSH MEMORY ELEMENT IF INIT      947 -> reg5",
      "22999 NEW ARRAY      1 -> reg6",
      "23002 PUSH MEMORY ELEMENT IF INIT      949 -> reg7",
      "23005 EMPTY ARRAY      -> reg10",
      "23007 CALL FUNCTION      PTR: reg7 MEM: reg10",
      "23011 SET      reg2 -> reg8",
      "23014 PUSH MEMORY ELEMENT IF INIT      954 -> reg9",
      "23017 MULTIPLY      reg8 * reg9 -> reg10",
      "23021 PUT      reg6[0] = reg10",
      "23025 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "23029 SET      reg2 -> reg4",
      "23032 SET MEMORY ELEMENT IF INIT      955 = reg4",
      "23035 PUSH MEMORY ELEMENT IF INIT      948 -> reg8",
      "23038 NEW ARRAY      1 -> reg5",
      "23041 PUSH MEMORY ELEMENT IF INIT      951 -> reg9",
      "23044 PUSH MEMORY ELEMENT IF INIT      955 -> reg10",
      "23047 GET      reg9[reg10] -> reg6",
      "23051 GET      reg6[1] -> reg7",
      "23055 PUT      reg5[0] = reg7",
      "23059 CALL FUNCTION      PTR: reg8 MEM: reg5",
      "23063 SET      reg2 -> reg4",
      "23066 SET MEMORY ELEMENT IF INIT      956 = reg4",
      "23069 GET WINDOW PROP      isFinite -> reg4",
      "23074 NEW ARRAY      1 -> reg6",
      "23077 PUSH MEMORY ELEMENT IF INIT      956 -> reg10",
      "23080 PUT      reg6[0] = reg10",
      "23084 CALL FUNCTION      PTR: reg4 MEM: reg6",
      "23088 SET      reg2 -> reg5",
      "23091 JUMP IF FALSE      reg5 TO: 23247 | 23094"
  ],
  "23094": [
      "23094 PUSH MEMORY ELEMENT IF INIT      953 -> reg6",
      "23097 JUMP IF FALSE      reg6 TO: 23164 | 23100"
  ],
  "23100": [
      "23100 PUSH MEMORY ELEMENT IF INIT      952 -> reg4",
      "23103 PUSH MEMORY ELEMENT IF INIT      950 -> reg6",
      "23106 PUSH MEMORY ELEMENT IF INIT      947 -> reg10",
      "23109 NEW ARRAY      1 -> reg12",
      "23112 PUSH MEMORY ELEMENT IF INIT      949 -> reg13",
      "23115 EMPTY ARRAY      -> reg16",
      "23117 CALL FUNCTION      PTR: reg13 MEM: reg16",
      "23121 SET      reg2 -> reg8",
      "23124 PUSH MEMORY ELEMENT IF INIT      950 -> reg13",
      "23127 GET      reg13[length] -> reg14",
      "23133 MULTIPLY      reg8 * reg14 -> reg13",
      "23137 PUT      reg12[0] = reg13",
      "23141 CALL FUNCTION      PTR: reg10 MEM: reg12",
      "23145 SET      reg2 -> reg9",
      "23148 GET      reg6[reg9] -> reg7",
      "23152 ADD      reg4NaN-> reg7",
      "23156 SET MEMORY ELEMENT IF INIT      952 = reg7",
      "23159 SET      reg7 -> reg11",
      "23162 JUMP      23173",
      "23173 PUSH MEMORY ELEMENT IF INIT      952 -> reg7",
      "23176 PUSH MEMORY ELEMENT IF INIT      951 -> reg4",
      "23179 PUSH MEMORY ELEMENT IF INIT      955 -> reg9",
      "23182 GET      reg4[reg9] -> reg8",
      "23186 GET      reg8[0] -> reg9",
      "23190 GET      reg9[toString] -> reg8",
      "23196 NEW ARRAY      1 -> reg4",
      "23199 PUT      reg4[0] = 32",
      "23203 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg4",
      "23207 SET      reg2 -> reg6",
      "23210 PUSH MEMORY ELEMENT IF INIT      956 -> reg10",
      "23213 GET      reg10[toString] -> reg8",
      "23219 NEW ARRAY      1 -> reg11",
      "23222 PUT      reg11[0] = 32",
      "23226 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg11",
      "23230 SET      reg2 -> reg4",
      "23233 ADD      reg6NaN-> reg8",
      "23237 ADD      reg7NaN-> reg8",
      "23241 SET MEMORY ELEMENT IF INIT      952 = reg8",
      "23244 SET      reg8 -> reg5",
      "23247 PUSH MEMORY ELEMENT IF INIT      951 -> reg5",
      "23250 GET      reg5[splice] -> reg6",
      "23256 NEW ARRAY      2 -> reg11",
      "23259 PUSH MEMORY ELEMENT IF INIT      955 -> reg12",
      "23262 PUT      reg11[0] = reg12",
      "23266 PUT      reg11[1] = 1",
      "23270 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg11",
      "23274 SET      reg2 -> reg4",
      "23277 PUSH MEMORY ELEMENT IF INIT      954 -> reg4",
      "23280 SET      1 -> reg6",
      "23283 SUBTRACT      reg4 - reg6 -> reg6",
      "23287 SET MEMORY ELEMENT IF INIT      954 = reg6",
      "23290 JUMP      22986",
      "22986 PUSH MEMORY ELEMENT IF INIT      954 -> reg5",
      "22989 GREATER THAN      reg5 > 0 -> reg6",
      "22993 JUMP IF FALSE      reg6 TO: 23292 | 22996"
  ],
  "23164": [
      "23164 NOT      0 -> reg4",
      "23167 SET MEMORY ELEMENT IF INIT      953 = reg4",
      "23170 SET      reg4 -> reg11",
      "23173 PUSH MEMORY ELEMENT IF INIT      952 -> reg7",
      "23176 PUSH MEMORY ELEMENT IF INIT      951 -> reg4",
      "23179 PUSH MEMORY ELEMENT IF INIT      955 -> reg9",
      "23182 GET      reg4[reg9] -> reg8",
      "23186 GET      reg8[0] -> reg9",
      "23190 GET      reg9[toString] -> reg8",
      "23196 NEW ARRAY      1 -> reg4",
      "23199 PUT      reg4[0] = 32",
      "23203 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg4",
      "23207 SET      reg2 -> reg6",
      "23210 PUSH MEMORY ELEMENT IF INIT      956 -> reg10",
      "23213 GET      reg10[toString] -> reg8",
      "23219 NEW ARRAY      1 -> reg11",
      "23222 PUT      reg11[0] = 32",
      "23226 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg11",
      "23230 SET      reg2 -> reg4",
      "23233 ADD      reg6NaN-> reg8",
      "23237 ADD      reg7NaN-> reg8",
      "23241 SET MEMORY ELEMENT IF INIT      952 = reg8",
      "23244 SET      reg8 -> reg5",
      "23247 PUSH MEMORY ELEMENT IF INIT      951 -> reg5",
      "23250 GET      reg5[splice] -> reg6",
      "23256 NEW ARRAY      2 -> reg11",
      "23259 PUSH MEMORY ELEMENT IF INIT      955 -> reg12",
      "23262 PUT      reg11[0] = reg12",
      "23266 PUT      reg11[1] = 1",
      "23270 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg11",
      "23274 SET      reg2 -> reg4",
      "23277 PUSH MEMORY ELEMENT IF INIT      954 -> reg4",
      "23280 SET      1 -> reg6",
      "23283 SUBTRACT      reg4 - reg6 -> reg6",
      "23287 SET MEMORY ELEMENT IF INIT      954 = reg6",
      "23290 JUMP      22986",
      "22986 PUSH MEMORY ELEMENT IF INIT      954 -> reg5",
      "22989 GREATER THAN      reg5 > 0 -> reg6",
      "22993 JUMP IF FALSE      reg6 TO: 23292 | 22996"
  ],
  "23247": [
      "23247 PUSH MEMORY ELEMENT IF INIT      951 -> reg5",
      "23250 GET      reg5[splice] -> reg6",
      "23256 NEW ARRAY      2 -> reg11",
      "23259 PUSH MEMORY ELEMENT IF INIT      955 -> reg12",
      "23262 PUT      reg11[0] = reg12",
      "23266 PUT      reg11[1] = 1",
      "23270 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg11",
      "23274 SET      reg2 -> reg4",
      "23277 PUSH MEMORY ELEMENT IF INIT      954 -> reg4",
      "23280 SET      1 -> reg6",
      "23283 SUBTRACT      reg4 - reg6 -> reg6",
      "23287 SET MEMORY ELEMENT IF INIT      954 = reg6",
      "23290 JUMP      22986",
      "22986 PUSH MEMORY ELEMENT IF INIT      954 -> reg5",
      "22989 GREATER THAN      reg5 > 0 -> reg6",
      "22993 JUMP IF FALSE      reg6 TO: 23292 | 22996"
  ],
  "23292": [
      "23292 PUSH MEMORY ELEMENT IF INIT      952 -> reg4",
      "23295 JUMP OR RETURN VAL      reg4"
  ],
  "23584": [
      "23584 GET WINDOW PROP      performance -> reg6",
      "23589 GET      reg6[now] -> reg7",
      "23595 SET      reg7 -> reg4",
      "23598 JUMP IF FALSE      reg4 TO: 23642 | 23601"
  ],
  "23598": ["23598 JUMP IF FALSE      reg4 TO: 23642 | 23601"],
  "23601": [
      "23601 GET WINDOW PROP      performance -> reg7",
      "23606 GET      reg7[now] -> reg8",
      "23612 GET      reg8[bind] -> reg7",
      "23618 NEW ARRAY      1 -> reg9",
      "23621 GET WINDOW PROP      performance -> reg11",
      "23626 PUT      reg9[0] = reg11",
      "23630 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "23634 SET      reg2 -> reg4",
      "23637 SET      reg4 -> reg6",
      "23640 JUMP      23740",
      "23740 SET MEMORY ELEMENT IF INIT      973 = reg6",
      "23743 PUSH MEMORY ELEMENT IF INIT      972 -> reg4",
      "23746 PUSH MEMORY ELEMENT IF INIT      973 -> reg9",
      "23749 PUT      reg4[default] = reg9",
      "23755 JUMP OR RETURN"
  ],
  "23642": [
      "23642 GET WINDOW PROP      Date -> reg4",
      "23647 GET      reg4[now] -> reg7",
      "23653 JUMP IF FALSE      reg7 TO: 23697 | 23656"
  ],
  "23656": [
      "23656 GET WINDOW PROP      Date -> reg9",
      "23661 GET      reg9[now] -> reg10",
      "23667 GET      reg10[bind] -> reg9",
      "23673 NEW ARRAY      1 -> reg11",
      "23676 GET WINDOW PROP      Date -> reg12",
      "23681 PUT      reg11[0] = reg12",
      "23685 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg11",
      "23689 SET      reg2 -> reg7",
      "23692 SET      reg7 -> reg4",
      "23695 JUMP      23737",
      "23737 SET      reg4 -> reg6",
      "23740 SET MEMORY ELEMENT IF INIT      973 = reg6",
      "23743 PUSH MEMORY ELEMENT IF INIT      972 -> reg4",
      "23746 PUSH MEMORY ELEMENT IF INIT      973 -> reg9",
      "23749 PUT      reg4[default] = reg9",
      "23755 JUMP OR RETURN"
  ],
  "23697": [
      "23697 INIT FUNCTION STATE      PTR: 23706 NAME:  LEN: 0 -> reg7",
      "23704 JUMP      23734",
      "23734 SET      reg7 -> reg4",
      "23737 SET      reg4 -> reg6",
      "23740 SET MEMORY ELEMENT IF INIT      973 = reg6",
      "23743 PUSH MEMORY ELEMENT IF INIT      972 -> reg4",
      "23746 PUSH MEMORY ELEMENT IF INIT      973 -> reg9",
      "23749 PUT      reg4[default] = reg9",
      "23755 JUMP OR RETURN"
  ],
  "24062": [
      "24062 SET I      null",
      "24064 PUSH F.K      -> reg5",
      "24066 VOID F",
      "24067 SET MEMORY ELEMENT      0 = reg5",
      "24070 PUSH MEMORY ELEMENT IF INIT      992 -> reg5",
      "24073 GET      reg5[report] -> reg7",
      "24079 NEW ARRAY      2 -> reg6",
      "24082 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "24085 PUT      reg6[0] = reg8",
      "24089 PUSH MEMORY ELEMENT IF INIT      985 -> reg8",
      "24092 GET      reg8[FrontendErrorCode] -> reg11",
      "24098 GET      reg11[WebClientThreatIntelScriptExecutionError] -> reg9",
      "24104 PUT      reg6[1] = reg9",
      "24108 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg6",
      "24112 SET      reg2 -> reg4",
      "24115 SET I      null",
      "24117 GET WINDOW PROP      Number -> reg6",
      "24122 NEW ARRAY      1 -> reg8",
      "24125 PUSH MEMORY ELEMENT IF INIT      987 -> reg10",
      "24128 GET      reg10[default] -> reg12",
      "24134 EMPTY ARRAY      -> reg11",
      "24136 CALL FUNCTION      PTR: reg12 MEM: reg11",
      "24140 SET      reg2 -> reg9",
      "24143 PUSH MEMORY ELEMENT IF INIT      993 -> reg11",
      "24146 SUBTRACT      reg9 - reg11 -> reg10",
      "24150 PUT      reg8[0] = reg10",
      "24154 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "24158 SET      reg2 -> reg7",
      "24161 GET      reg7[toString] -> reg6",
      "24167 NEW ARRAY      1 -> reg9",
      "24170 PUT      reg9[0] = 16",
      "24174 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg9",
      "24178 SET      reg2 -> reg4",
      "24181 JUMP OR RETURN VAL      reg4"
  ],
  "24263": [
      "24263 PUSH MEMORY ELEMENT IF INIT      1003 -> reg4",
      "24266 GET      reg4[default] -> reg7",
      "24272 GET      reg7[kdh] -> reg4",
      "24278 NEW ARRAY      1 -> reg8",
      "24281 GET WINDOW PROP      Array -> reg10",
      "24286 NEW ARRAY      1 -> reg12",
      "24289 PUT      reg12[0] = 8",
      "24293 BIND APPLY      reg10 reg12 -> 9",
      "24297 PUT      reg8[0] = reg9",
      "24301 CALL FUNCTION      OBJ: reg7 FUNC: reg4 ARGS: reg8",
      "24305 SET      reg2 -> reg6",
      "24308 GET      reg6[map] -> reg4",
      "24314 NEW ARRAY      1 -> reg9",
      "24317 INIT FUNCTION STATE      PTR: 24326 NAME:  LEN: 0 -> reg8",
      "24324 JUMP      24377",
      "24377 PUT      reg9[0] = reg8",
      "24381 CALL FUNCTION      OBJ: reg6 FUNC: reg4 ARGS: reg9",
      "24385 SET      reg2 -> reg5",
      "24388 JUMP OR RETURN VAL      reg5"
  ],
  "24390": [
      "24390 GET WINDOW PROP      Uint8Array -> reg4",
      "24395 NEW ARRAY      1 -> reg8",
      "24398 PUT      reg8[0] = 8",
      "24402 BIND APPLY      reg4 reg8 -> 5",
      "24406 SET MEMORY ELEMENT IF INIT      1009 = reg5",
      "24409 PUSH MEMORY ELEMENT IF INIT      1003 -> reg8",
      "24412 GET      reg8[default] -> reg5",
      "24418 GET      reg5[kdh] -> reg8",
      "24424 NEW ARRAY      1 -> reg11",
      "24427 GET WINDOW PROP      window -> reg9",
      "24432 GET      reg9[crypto] -> reg12",
      "24438 GET      reg12[getRandomValues] -> reg13",
      "24444 NEW ARRAY      1 -> reg14",
      "24447 PUSH MEMORY ELEMENT IF INIT      1009 -> reg9",
      "24450 PUT      reg14[0] = reg9",
      "24454 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "24458 SET      reg2 -> reg10",
      "24461 PUT      reg11[0] = reg10",
      "24465 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg11",
      "24469 SET      reg2 -> reg4",
      "24472 JUMP OR RETURN VAL      reg4"
  ],
  "24803": [
      "24803 PUSH MEMORY ELEMENT IF INIT      274 -> reg6",
      "24806 PUSH MEMORY ELEMENT IF INIT      1005 -> reg7",
      "24809 GET      reg7[default] -> reg8",
      "24815 EMPTY ARRAY      -> reg7",
      "24817 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "24821 SET      reg2 -> reg5",
      "24824 PUT      reg6[zqe] = reg5",
      "24830 SET      reg5 -> reg4",
      "24833 SET MEMORY ELEMENT IF INIT      1016 = 06axdt8JhZ5xxEizlRfZsCJbUlGwdMw2js6p62NOqBiVVpjsw0TyUj0xPgo66ZKkTZAwOC96YQ3RBSNtY2fb5MgRo6z5zkuRzthxl8ZxeSno307wItSiROIQOxuNJUA4tNnbJr63S6sHKODLTi4FqThASFwc8JmPBv5KMPmJHDJTIIIa6XDoPVODporDe0srIAbkA9iQLgjYsUEC0Ga2valXL1dVVph176ReLuFu7i20fJO2U3G1nfAaxxQTshJqLPYWD8yhpHW22oSSEvxdIvwG9bePWY9QVuAZW5zE56GT3iPvVStq52DWwCThpBsAX7JBxmrydVMInaJOQIxZHQ3C8re19mnS0wrxM13dKLC7a3naty6nb2Max0wPU3mYCK9CeRkv5VU7pae1FCXcagbwTQ3IAxYKlG6Ng5MJ3bqesedwr9quyTnPYbnfuJVOokAKjSZnQBXs7v52w578KZNkNTbvqvTCaKUh1xlLn7CTkZvSyMI9mo9kq8zBzVVOFG90tsTSTLmoeogm7ul4AHtZ75FR5sGIwssopQLG6jtqilb1qkoCMCIoIgmjS616qtc2cKxMOgd3CgqfN7tKCgLd3kkOsYUzAlCLkiiCTnMmFPlaVqEq8kv8Fv8XpjXJxQQfe3dfHvsVK7PSe6cUpHkRCcATisEN8T2zvjsmK6isMbVyjFkhng9FgjxGkgSnKJr82QVqetoGhqCGJrSB5iMUNjyG9ck9l8znFLdbE9BrYCpZQZLniO86eNFCfuAfPNbcI18mM7CRuCwY8v7CnNkLnIgox8R8VNJGrCj13eLkjRgJgscp82prM2LuPEV7CpOAPKKB4zlVG0Hoha47vdWG3kJK7KmGbqqUfWTms8bMliCDOIP1pWW5qo96Fkd8DzibVF88s9CbCQsAI0461i3glRhrppjVMpinbEghwFIwQgMGd9zJjUPz9eUFI3nZMsBZY13oOJdACdbXRlTSk2wHA26loFzc33QroQw7vqfYk26oFnZot2KXLR4larpcdVNUbL8Yz66bw2wMfpw0YPu7qQMxn3mWSwZyLdJjQLHu5mqHmTWvR722pMsflrKoEV8sZKRevA",
      "24838 SET MEMORY ELEMENT IF INIT      1017 = [0,5087,3626,36510,16029,30365,24221,5789,18077,16029,30365,5789,16029,28317,28317,5789,18077,24221,22173,5789,18077,16029,18077,5789,16029,16029,20125,5789,16029,30365,28317,5789,16029,13981,13981,5789,18077,22173,28317,5789,28317,28317,5789,16029,20125,32413,5789,16029,26269,30365,5789,28317,32413,5789,16029,30365,5789,22173,26269,5789,32413,32413,5789,26269,26269,5789,16029,18077,13981,5789,30365,26269,5789,26269,30365,5789,18077,16029,13981,5789,16029,24221,28317,5789,16029,22173,22173,5789,13981,40606]",
      "24843 INIT FUNCTION STATE      PTR: 24852 NAME:  LEN: 1 -> reg4",
      "24850 JUMP      24956",
      "24956 NEW ARRAY      1 -> reg7",
      "24959 JUMP IF FALSE      true TO: 24999 | 24962"
  ],
  "24833": [
      "24833 SET MEMORY ELEMENT IF INIT      1016 = 06axdt8JhZ5xxEizlRfZsCJbUlGwdMw2js6p62NOqBiVVpjsw0TyUj0xPgo66ZKkTZAwOC96YQ3RBSNtY2fb5MgRo6z5zkuRzthxl8ZxeSno307wItSiROIQOxuNJUA4tNnbJr63S6sHKODLTi4FqThASFwc8JmPBv5KMPmJHDJTIIIa6XDoPVODporDe0srIAbkA9iQLgjYsUEC0Ga2valXL1dVVph176ReLuFu7i20fJO2U3G1nfAaxxQTshJqLPYWD8yhpHW22oSSEvxdIvwG9bePWY9QVuAZW5zE56GT3iPvVStq52DWwCThpBsAX7JBxmrydVMInaJOQIxZHQ3C8re19mnS0wrxM13dKLC7a3naty6nb2Max0wPU3mYCK9CeRkv5VU7pae1FCXcagbwTQ3IAxYKlG6Ng5MJ3bqesedwr9quyTnPYbnfuJVOokAKjSZnQBXs7v52w578KZNkNTbvqvTCaKUh1xlLn7CTkZvSyMI9mo9kq8zBzVVOFG90tsTSTLmoeogm7ul4AHtZ75FR5sGIwssopQLG6jtqilb1qkoCMCIoIgmjS616qtc2cKxMOgd3CgqfN7tKCgLd3kkOsYUzAlCLkiiCTnMmFPlaVqEq8kv8Fv8XpjXJxQQfe3dfHvsVK7PSe6cUpHkRCcATisEN8T2zvjsmK6isMbVyjFkhng9FgjxGkgSnKJr82QVqetoGhqCGJrSB5iMUNjyG9ck9l8znFLdbE9BrYCpZQZLniO86eNFCfuAfPNbcI18mM7CRuCwY8v7CnNkLnIgox8R8VNJGrCj13eLkjRgJgscp82prM2LuPEV7CpOAPKKB4zlVG0Hoha47vdWG3kJK7KmGbqqUfWTms8bMliCDOIP1pWW5qo96Fkd8DzibVF88s9CbCQsAI0461i3glRhrppjVMpinbEghwFIwQgMGd9zJjUPz9eUFI3nZMsBZY13oOJdACdbXRlTSk2wHA26loFzc33QroQw7vqfYk26oFnZot2KXLR4larpcdVNUbL8Yz66bw2wMfpw0YPu7qQMxn3mWSwZyLdJjQLHu5mqHmTWvR722pMsflrKoEV8sZKRevA",
      "24838 SET MEMORY ELEMENT IF INIT      1017 = [0,5087,3626,36510,16029,30365,24221,5789,18077,16029,30365,5789,16029,28317,28317,5789,18077,24221,22173,5789,18077,16029,18077,5789,16029,16029,20125,5789,16029,30365,28317,5789,16029,13981,13981,5789,18077,22173,28317,5789,28317,28317,5789,16029,20125,32413,5789,16029,26269,30365,5789,28317,32413,5789,16029,30365,5789,22173,26269,5789,32413,32413,5789,26269,26269,5789,16029,18077,13981,5789,30365,26269,5789,26269,30365,5789,18077,16029,13981,5789,16029,24221,28317,5789,16029,22173,22173,5789,13981,40606]",
      "24843 INIT FUNCTION STATE      PTR: 24852 NAME:  LEN: 1 -> reg4",
      "24850 JUMP      24956",
      "24956 NEW ARRAY      1 -> reg7",
      "24959 JUMP IF FALSE      true TO: 24999 | 24962"
  ],
  "24962": [
      "24962 PUSH MEMORY ELEMENT IF INIT      1003 -> reg9",
      "24965 GET      reg9[default] -> reg10",
      "24971 GET      reg10[jhz] -> reg11",
      "24977 NEW ARRAY      1 -> reg9",
      "24980 PUSH MEMORY ELEMENT IF INIT      1017 -> reg12",
      "24983 PUT      reg9[0] = reg12",
      "24987 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg9",
      "24991 SET      reg2 -> reg8",
      "24994 SET      reg8 -> reg6",
      "24997 JUMP      25005",
      "25005 PUT      reg7[0] = reg6",
      "25009 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "25013 SET      reg2 -> reg5",
      "25016 SET MEMORY ELEMENT IF INIT      1018 = reg5",
      "25019 EMPTY ARRAY      -> reg6",
      "25021 GET      reg6[concat] -> reg4",
      "25027 NEW ARRAY      2 -> reg11",
      "25030 PUSH MEMORY ELEMENT IF INIT      1007 -> reg7",
      "25033 PUT      reg11[0] = reg7",
      "25037 PUSH MEMORY ELEMENT IF INIT      17 -> reg9",
      "25040 NEW ARRAY      1 -> reg12",
      "25043 PUSH MEMORY ELEMENT IF INIT      1018 -> reg8",
      "25046 GET      reg8[ypx] -> reg13",
      "25052 PUT      reg12[0] = reg13",
      "25056 CALL FUNCTION      PTR: reg9 MEM: reg12",
      "25060 SET      reg2 -> reg7",
      "25063 PUT      reg11[1] = reg7",
      "25067 CALL FUNCTION      OBJ: reg6 FUNC: reg4 ARGS: reg11",
      "25071 SET      reg2 -> reg5",
      "25074 SET MEMORY ELEMENT IF INIT      1019 = reg5",
      "25077 PUSH MEMORY ELEMENT IF INIT      273 -> reg5",
      "25080 JUMP IF FALSE      reg5 TO: 25268 | 25083"
  ],
  "24999": [
      "24999 PUSH MEMORY ELEMENT IF INIT      1017 -> reg8",
      "25002 SET      reg8 -> reg6",
      "25005 PUT      reg7[0] = reg6",
      "25009 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "25013 SET      reg2 -> reg5",
      "25016 SET MEMORY ELEMENT IF INIT      1018 = reg5",
      "25019 EMPTY ARRAY      -> reg6",
      "25021 GET      reg6[concat] -> reg4",
      "25027 NEW ARRAY      2 -> reg11",
      "25030 PUSH MEMORY ELEMENT IF INIT      1007 -> reg7",
      "25033 PUT      reg11[0] = reg7",
      "25037 PUSH MEMORY ELEMENT IF INIT      17 -> reg9",
      "25040 NEW ARRAY      1 -> reg12",
      "25043 PUSH MEMORY ELEMENT IF INIT      1018 -> reg8",
      "25046 GET      reg8[ypx] -> reg13",
      "25052 PUT      reg12[0] = reg13",
      "25056 CALL FUNCTION      PTR: reg9 MEM: reg12",
      "25060 SET      reg2 -> reg7",
      "25063 PUT      reg11[1] = reg7",
      "25067 CALL FUNCTION      OBJ: reg6 FUNC: reg4 ARGS: reg11",
      "25071 SET      reg2 -> reg5",
      "25074 SET MEMORY ELEMENT IF INIT      1019 = reg5",
      "25077 PUSH MEMORY ELEMENT IF INIT      273 -> reg5",
      "25080 JUMP IF FALSE      reg5 TO: 25268 | 25083"
  ],
  "25083": [
      "25083 PUSH MEMORY ELEMENT IF INIT      1019 -> reg8",
      "25086 GET      reg8[push] -> reg7",
      "25092 GET      reg7[apply] -> reg9",
      "25098 NEW ARRAY      2 -> reg11",
      "25101 PUSH MEMORY ELEMENT IF INIT      1019 -> reg8",
      "25104 PUT      reg11[0] = reg8",
      "25108 PUSH MEMORY ELEMENT IF INIT      17 -> reg12",
      "25111 NEW ARRAY      1 -> reg13",
      "25114 PUSH MEMORY ELEMENT IF INIT      1001 -> reg16",
      "25117 GET      reg16[default] -> reg17",
      "25123 NEW ARRAY      3 -> reg16",
      "25126 PUSH MEMORY ELEMENT IF INIT      1018 -> reg19",
      "25129 GET      reg19[vmx] -> reg15",
      "25135 PUT      reg16[0] = reg15",
      "25139 PUSH MEMORY ELEMENT IF INIT      1006 -> reg18",
      "25142 EMPTY ARRAY      -> reg19",
      "25144 CALL FUNCTION      PTR: reg18 MEM: reg19",
      "25148 SET      reg2 -> reg15",
      "25151 PUT      reg16[1] = reg15",
      "25155 GET WINDOW PROP      Object -> reg18",
      "25160 GET      reg18[freeze] -> reg19",
      "25166 NEW ARRAY      1 -> reg20",
      "25169 NEW ARRAY      1 -> reg21",
      "25172 PUSH MEMORY ELEMENT IF INIT      1016 -> reg22",
      "25175 PUT      reg21[0] = reg22",
      "25179 GET      reg21[concat] -> reg25",
      "25185 NEW ARRAY      1 -> reg22",
      "25188 PUSH MEMORY ELEMENT IF INIT      17 -> reg26",
      "25191 NEW ARRAY      1 -> reg27",
      "25194 PUSH MEMORY ELEMENT IF INIT      1015 -> reg28",
      "25197 PUT      reg27[0] = reg28",
      "25201 CALL FUNCTION      PTR: reg26 MEM: reg27",
      "25205 SET      reg2 -> reg24",
      "25208 PUT      reg22[0] = reg24",
      "25212 CALL FUNCTION      OBJ: reg21 FUNC: reg25 ARGS: reg22",
      "25216 SET      reg2 -> reg23",
      "25219 PUT      reg20[0] = reg23",
      "25223 CALL FUNCTION      OBJ: reg18 FUNC: reg19 ARGS: reg20",
      "25227 SET      reg2 -> reg15",
      "25230 PUT      reg16[2] = reg15",
      "25234 CALL FUNCTION      PTR: reg17 MEM: reg16",
      "25238 SET      reg2 -> reg14",
      "25241 PUT      reg13[0] = reg14",
      "25245 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "25249 SET      reg2 -> reg8",
      "25252 PUT      reg11[1] = reg8",
      "25256 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg11",
      "25260 SET      reg2 -> reg5",
      "25263 SET      reg5 -> reg4",
      "25266 JUMP      25451",
      "25451 GET WINDOW PROP      window -> reg4",
      "25456 GET      reg4[Uint8Array] -> reg5",
      "25462 JUMP IF FALSE      reg5 TO: 25511 | 25465"
  ],
  "25268": [
      "25268 PUSH MEMORY ELEMENT IF INIT      1019 -> reg5",
      "25271 GET      reg5[push] -> reg8",
      "25277 GET      reg8[apply] -> reg12",
      "25283 NEW ARRAY      2 -> reg9",
      "25286 PUSH MEMORY ELEMENT IF INIT      1019 -> reg5",
      "25289 PUT      reg9[0] = reg5",
      "25293 PUSH MEMORY ELEMENT IF INIT      17 -> reg13",
      "25296 NEW ARRAY      1 -> reg14",
      "25299 PUSH MEMORY ELEMENT IF INIT      1002 -> reg16",
      "25302 GET      reg16[default] -> reg17",
      "25308 NEW ARRAY      3 -> reg16",
      "25311 PUSH MEMORY ELEMENT IF INIT      1018 -> reg19",
      "25314 GET      reg19[vmx] -> reg22",
      "25320 PUT      reg16[0] = reg22",
      "25324 PUSH MEMORY ELEMENT IF INIT      1006 -> reg20",
      "25327 EMPTY ARRAY      -> reg23",
      "25329 CALL FUNCTION      PTR: reg20 MEM: reg23",
      "25333 SET      reg2 -> reg19",
      "25336 PUT      reg16[1] = reg19",
      "25340 GET WINDOW PROP      Object -> reg20",
      "25345 GET      reg20[freeze] -> reg22",
      "25351 NEW ARRAY      1 -> reg25",
      "25354 NEW ARRAY      1 -> reg24",
      "25357 PUSH MEMORY ELEMENT IF INIT      1016 -> reg28",
      "25360 PUT      reg24[0] = reg28",
      "25364 GET      reg24[concat] -> reg27",
      "25370 NEW ARRAY      1 -> reg26",
      "25373 PUSH MEMORY ELEMENT IF INIT      17 -> reg29",
      "25376 NEW ARRAY      1 -> reg30",
      "25379 PUSH MEMORY ELEMENT IF INIT      1015 -> reg31",
      "25382 PUT      reg30[0] = reg31",
      "25386 CALL FUNCTION      PTR: reg29 MEM: reg30",
      "25390 SET      reg2 -> reg28",
      "25393 PUT      reg26[0] = reg28",
      "25397 CALL FUNCTION      OBJ: reg24 FUNC: reg27 ARGS: reg26",
      "25401 SET      reg2 -> reg23",
      "25404 PUT      reg25[0] = reg23",
      "25408 CALL FUNCTION      OBJ: reg20 FUNC: reg22 ARGS: reg25",
      "25412 SET      reg2 -> reg19",
      "25415 PUT      reg16[2] = reg19",
      "25419 CALL FUNCTION      PTR: reg17 MEM: reg16",
      "25423 SET      reg2 -> reg15",
      "25426 PUT      reg14[0] = reg15",
      "25430 CALL FUNCTION      PTR: reg13 MEM: reg14",
      "25434 SET      reg2 -> reg5",
      "25437 PUT      reg9[1] = reg5",
      "25441 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg9",
      "25445 SET      reg2 -> reg11",
      "25448 SET      reg11 -> reg4",
      "25451 GET WINDOW PROP      window -> reg4",
      "25456 GET      reg4[Uint8Array] -> reg5",
      "25462 JUMP IF FALSE      reg5 TO: 25511 | 25465"
  ],
  "25465": [
      "25465 EMPTY OBJECT      -> reg11",
      "25467 PUT      reg11[contentType] = application/octet-stream",
      "25475 GET WINDOW PROP      window -> reg9",
      "25480 GET      reg9[Uint8Array] -> reg5",
      "25486 NEW ARRAY      1 -> reg9",
      "25489 PUSH MEMORY ELEMENT IF INIT      1019 -> reg13",
      "25492 PUT      reg9[0] = reg13",
      "25496 BIND APPLY      reg5 reg9 -> 12",
      "25500 PUT      reg11[body] = reg12",
      "25506 SET      reg11 -> reg4",
      "25509 JUMP      25556",
      "25556 SET MEMORY ELEMENT IF INIT      1020 = reg4",
      "25559 PUSH MEMORY ELEMENT IF INIT      272 -> reg4",
      "25562 JUMP IF FALSE      reg4 TO: 25595 | 25565"
  ],
  "25511": [
      "25511 EMPTY OBJECT      -> reg5",
      "25513 PUT      reg5[contentType] = text/plain",
      "25521 PUSH MEMORY ELEMENT IF INIT      1004 -> reg11",
      "25524 GET      reg11[default] -> reg12",
      "25530 NEW ARRAY      1 -> reg11",
      "25533 PUSH MEMORY ELEMENT IF INIT      1019 -> reg13",
      "25536 PUT      reg11[0] = reg13",
      "25540 CALL FUNCTION      PTR: reg12 MEM: reg11",
      "25544 SET      reg2 -> reg9",
      "25547 PUT      reg5[body] = reg9",
      "25553 SET      reg5 -> reg4",
      "25556 SET MEMORY ELEMENT IF INIT      1020 = reg4",
      "25559 PUSH MEMORY ELEMENT IF INIT      272 -> reg4",
      "25562 JUMP IF FALSE      reg4 TO: 25595 | 25565"
  ],
  "25565": [
      "25565 PUSH MEMORY ELEMENT IF INIT      274 -> reg5",
      "25568 PUSH MEMORY ELEMENT IF INIT      1005 -> reg11",
      "25571 GET      reg11[default] -> reg12",
      "25577 EMPTY ARRAY      -> reg11",
      "25579 CALL FUNCTION      PTR: reg12 MEM: reg11",
      "25583 SET      reg2 -> reg9",
      "25586 PUT      reg5[gfw] = reg9",
      "25592 SET      reg9 -> reg4",
      "25595 PUSH MEMORY ELEMENT IF INIT      1020 -> reg9",
      "25598 JUMP OR RETURN VAL      reg9"
  ],
  "25595": [
      "25595 PUSH MEMORY ELEMENT IF INIT      1020 -> reg9",
      "25598 JUMP OR RETURN VAL      reg9"
  ],
  "25748": [
      "25748 PUSH MEMORY ELEMENT IF INIT      1033 -> reg7",
      "25751 EMPTY OBJECT      -> reg10",
      "25753 PUT      reg7[ReadyStates] = reg10",
      "25759 SET      reg10 -> reg9",
      "25762 SET MEMORY ELEMENT IF INIT      1034 = reg9",
      "25765 PUT      reg8[0] = reg9",
      "25769 CALL FUNCTION      PTR: reg4 MEM: reg8",
      "25773 SET      reg2 -> reg5",
      "25776 PUSH MEMORY ELEMENT IF INIT      1033 -> reg4",
      "25779 INIT FUNCTION STATE      PTR: 25788 NAME:  LEN: 3 -> reg5",
      "25786 JUMP      26576",
      "26576 PUT      reg4[xmlHTTPRequest] = reg5",
      "26582 JUMP OR RETURN"
  ],
  "25762": [
      "25762 SET MEMORY ELEMENT IF INIT      1034 = reg9",
      "25765 PUT      reg8[0] = reg9",
      "25769 CALL FUNCTION      PTR: reg4 MEM: reg8",
      "25773 SET      reg2 -> reg5",
      "25776 PUSH MEMORY ELEMENT IF INIT      1033 -> reg4",
      "25779 INIT FUNCTION STATE      PTR: 25788 NAME:  LEN: 3 -> reg5",
      "25786 JUMP      26576",
      "26576 PUT      reg4[xmlHTTPRequest] = reg5",
      "26582 JUMP OR RETURN"
  ],
  "25847": [
      "25847 SET I      25871",
      "25849 GET WINDOW PROP      ActiveXObject -> reg4",
      "25854 NEW ARRAY      1 -> reg6",
      "25857 PUT      reg6[0] = Msxml2.XMLHTTP.6.0",
      "25863 BIND APPLY      reg4 reg6 -> 5",
      "25867 JUMP OR RETURN VAL      reg5"
  ],
  "25871": [
      "25871 SET I      null",
      "25873 PUSH F.K      -> reg4",
      "25875 VOID F",
      "25876 SET MEMORY ELEMENT      0 = reg4",
      "25879 SET I      25903",
      "25881 GET WINDOW PROP      ActiveXObject -> reg5",
      "25886 NEW ARRAY      1 -> reg6",
      "25889 PUT      reg6[0] = Msxml2.XMLHTTP.3.0",
      "25895 BIND APPLY      reg5 reg6 -> 4",
      "25899 JUMP OR RETURN VAL      reg4"
  ],
  "25903": [
      "25903 SET I      null",
      "25905 PUSH F.K      -> reg4",
      "25907 VOID F",
      "25908 SET MEMORY ELEMENT      0 = reg4",
      "25911 SET I      25935",
      "25913 GET WINDOW PROP      ActiveXObject -> reg5",
      "25918 NEW ARRAY      1 -> reg6",
      "25921 PUT      reg6[0] = Microsoft.XMLHTTP",
      "25927 BIND APPLY      reg5 reg6 -> 4",
      "25931 JUMP OR RETURN VAL      reg4"
  ],
  "25935": [
      "25935 SET I      null",
      "25937 PUSH F.K      -> reg5",
      "25939 VOID F",
      "25940 SET MEMORY ELEMENT      0 = reg5",
      "25943 GET WINDOW PROP      Error -> reg5",
      "25948 NEW ARRAY      1 -> reg6",
      "25951 PUT      reg6[0] = AJAX requests appear to be unsupported by this browser",
      "25957 BIND APPLY      reg5 reg6 -> 4",
      "25961 HANDLE ERROR      reg4",
      "25963 SET I      null",
      "25965 SET I      null",
      "25967 SET I      null",
      "25969 GET WINDOW PROP      XMLHttpRequest -> reg4",
      "25974 EMPTY ARRAY      -> reg6",
      "25976 BIND APPLY      reg4 reg6 -> 5",
      "25980 JUMP OR RETURN VAL      reg5"
  ],
  "25969": [
      "25969 GET WINDOW PROP      XMLHttpRequest -> reg4",
      "25974 EMPTY ARRAY      -> reg6",
      "25976 BIND APPLY      reg4 reg6 -> 5",
      "25980 JUMP OR RETURN VAL      reg5"
  ],
  "26053": [
      "26053 INIT FUNCTION STATE      PTR: 26062 NAME:  LEN: 2 -> reg8",
      "26060 JUMP      26225",
      "26225 NEW ARRAY      2 -> reg9",
      "26228 PUSH MEMORY ELEMENT IF INIT      1048 -> reg6",
      "26231 PUT      reg9[0] = reg6",
      "26235 PUSH MEMORY ELEMENT IF INIT      1043 -> reg6",
      "26238 GET      reg6[headers] -> reg10",
      "26244 PUT      reg9[1] = reg10",
      "26248 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "26252 SET      reg2 -> reg5",
      "26255 SET      reg5 -> reg7",
      "26258 PUSH MEMORY ELEMENT IF INIT      1048 -> reg6",
      "26261 INIT FUNCTION STATE      PTR: 26270 NAME:  LEN: 0 -> reg5",
      "26268 JUMP      26495",
      "26495 PUT      reg6[onreadystatechange] = reg5",
      "26501 PUSH MEMORY ELEMENT IF INIT      1048 -> reg7",
      "26504 GET      reg7[send] -> reg5",
      "26510 NEW ARRAY      1 -> reg8",
      "26513 PUSH MEMORY ELEMENT IF INIT      1043 -> reg9",
      "26516 GET      reg9[body] -> reg10",
      "26522 PUT      reg8[0] = reg10",
      "26526 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg8",
      "26530 SET      reg2 -> reg6",
      "26533 JUMP      26563",
      "26563 SET I      null",
      "26565 JUMP OR RETURN"
  ],
  "26091": [
      "26091 SET      0 -> reg7",
      "26094 GET      reg5[reg7] -> reg4",
      "26098 SET MEMORY ELEMENT IF INIT      1061 = reg4",
      "26101 GET WINDOW PROP      Object -> reg8",
      "26106 GET      reg8[prototype] -> reg9",
      "26112 GET      reg9[hasOwnProperty] -> reg8",
      "26118 GET      reg8[call] -> reg11",
      "26124 NEW ARRAY      2 -> reg9",
      "26127 PUSH MEMORY ELEMENT IF INIT      1060 -> reg12",
      "26130 PUT      reg9[0] = reg12",
      "26134 PUSH MEMORY ELEMENT IF INIT      1061 -> reg13",
      "26137 PUT      reg9[1] = reg13",
      "26141 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg9",
      "26145 SET      reg2 -> reg10",
      "26148 JUMP IF FALSE      reg10 TO: 26213 | 26151"
  ],
  "26094": [
      "26094 GET      reg5[reg7] -> reg4",
      "26098 SET MEMORY ELEMENT IF INIT      1061 = reg4",
      "26101 GET WINDOW PROP      Object -> reg8",
      "26106 GET      reg8[prototype] -> reg9",
      "26112 GET      reg9[hasOwnProperty] -> reg8",
      "26118 GET      reg8[call] -> reg11",
      "26124 NEW ARRAY      2 -> reg9",
      "26127 PUSH MEMORY ELEMENT IF INIT      1060 -> reg12",
      "26130 PUT      reg9[0] = reg12",
      "26134 PUSH MEMORY ELEMENT IF INIT      1061 -> reg13",
      "26137 PUT      reg9[1] = reg13",
      "26141 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg9",
      "26145 SET      reg2 -> reg10",
      "26148 JUMP IF FALSE      reg10 TO: 26213 | 26151"
  ],
  "26151": [
      "26151 PUSH MEMORY ELEMENT IF INIT      1060 -> reg10",
      "26154 PUSH MEMORY ELEMENT IF INIT      1061 -> reg9",
      "26157 GET      reg10[reg9] -> reg14",
      "26161 SET MEMORY ELEMENT IF INIT      1062 = reg14",
      "26164 SET      undefined -> reg9",
      "26167 PUSH MEMORY ELEMENT IF INIT      1062 -> reg11",
      "26170 STRICT NOT EQUAL      reg9 !== reg11 -> reg12",
      "26174 JUMP IF FALSE      reg12 TO: 26213 | 26177"
  ],
  "26177": [
      "26177 PUSH MEMORY ELEMENT IF INIT      1059 -> reg11",
      "26180 GET      reg11[setRequestHeader] -> reg10",
      "26186 NEW ARRAY      2 -> reg13",
      "26189 PUSH MEMORY ELEMENT IF INIT      1061 -> reg14",
      "26192 PUT      reg13[0] = reg14",
      "26196 PUSH MEMORY ELEMENT IF INIT      1062 -> reg15",
      "26199 PUT      reg13[1] = reg15",
      "26203 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg13",
      "26207 SET      reg2 -> reg9",
      "26210 SET      reg9 -> reg12",
      "26213 ADD      reg71-> reg7",
      "26217 LESS THAN      reg7 < reg6 -> reg9",
      "26221 JUMP IF TRUE      reg9 TO: 26094 | 26224"
  ],
  "26213": [
      "26213 ADD      reg71-> reg7",
      "26217 LESS THAN      reg7 < reg6 -> reg9",
      "26221 JUMP IF TRUE      reg9 TO: 26094 | 26224"
  ],
  "26224": ["26224 JUMP OR RETURN"],
  "26258": [
      "26258 PUSH MEMORY ELEMENT IF INIT      1048 -> reg6",
      "26261 INIT FUNCTION STATE      PTR: 26270 NAME:  LEN: 0 -> reg5",
      "26268 JUMP      26495",
      "26495 PUT      reg6[onreadystatechange] = reg5",
      "26501 PUSH MEMORY ELEMENT IF INIT      1048 -> reg7",
      "26504 GET      reg7[send] -> reg5",
      "26510 NEW ARRAY      1 -> reg8",
      "26513 PUSH MEMORY ELEMENT IF INIT      1043 -> reg9",
      "26516 GET      reg9[body] -> reg10",
      "26522 PUT      reg8[0] = reg10",
      "26526 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg8",
      "26530 SET      reg2 -> reg6",
      "26533 JUMP      26563",
      "26563 SET I      null",
      "26565 JUMP OR RETURN"
  ],
  "26297": [
      "26297 GET      [concat] -> reg4",
      "26305 NEW ARRAY      1 -> reg7",
      "26308 PUSH MEMORY ELEMENT IF INIT      1048 -> reg6",
      "26311 GET      reg6[status] -> reg9",
      "26317 PUT      reg7[0] = reg9",
      "26321 CALL FUNCTION      OBJ:  FUNC: reg4 ARGS: reg7",
      "26327 SET      reg2 -> reg5",
      "26330 SET MEMORY ELEMENT IF INIT      1068 = reg5",
      "26333 PUSH MEMORY ELEMENT IF INIT      1068 -> reg4",
      "26336 GET      reg4[charAt] -> reg6",
      "26342 NEW ARRAY      1 -> reg7",
      "26345 PUT      reg7[0] = 0",
      "26349 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "26353 SET      reg2 -> reg5",
      "26356 STRICT EQUAL      4 === reg5 -> reg6",
      "26362 JUMP IF TRUE      reg6 TO: 26397 | 26365"
  ],
  "26365": [
      "26365 PUSH MEMORY ELEMENT IF INIT      1068 -> reg8",
      "26368 GET      reg8[charAt] -> reg7",
      "26374 NEW ARRAY      1 -> reg12",
      "26377 PUT      reg12[0] = 0",
      "26381 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg12",
      "26385 SET      reg2 -> reg5",
      "26388 STRICT EQUAL      5 === reg5 -> reg9",
      "26394 SET      reg9 -> reg6",
      "26397 JUMP IF FALSE      reg6 TO: 26471 | 26400"
  ],
  "26397": ["26397 JUMP IF FALSE      reg6 TO: 26471 | 26400"],
  "26400": [
      "26400 PUSH MEMORY ELEMENT IF INIT      1047 -> reg9",
      "26403 NEW ARRAY      1 -> reg7",
      "26406 GET WINDOW PROP      Error -> reg11",
      "26411 NEW ARRAY      1 -> reg13",
      "26414 GET      Error issuing AJAX request (status code: [concat] -> reg14",
      "26422 NEW ARRAY      2 -> reg15",
      "26425 PUSH MEMORY ELEMENT IF INIT      1068 -> reg16",
      "26428 PUT      reg15[0] = reg16",
      "26432 PUT      reg15[1] = )",
      "26438 CALL FUNCTION      OBJ: Error issuing AJAX request (status code:  FUNC: reg14 ARGS: reg15",
      "26444 SET      reg2 -> reg12",
      "26447 PUT      reg13[0] = reg12",
      "26451 BIND APPLY      reg11 reg13 -> 10",
      "26455 PUT      reg7[0] = reg10",
      "26459 CALL FUNCTION      PTR: reg9 MEM: reg7",
      "26463 SET      reg2 -> reg6",
      "26466 SET      reg6 -> reg5",
      "26469 JUMP      26494",
      "26494 JUMP OR RETURN"
  ],
  "26471": [
      "26471 PUSH MEMORY ELEMENT IF INIT      1046 -> reg7",
      "26474 NEW ARRAY      1 -> reg10",
      "26477 PUSH MEMORY ELEMENT IF INIT      1048 -> reg9",
      "26480 PUT      reg10[0] = reg9",
      "26484 CALL FUNCTION      PTR: reg7 MEM: reg10",
      "26488 SET      reg2 -> reg6",
      "26491 SET      reg6 -> reg5",
      "26494 JUMP OR RETURN"
  ],
  "26494": ["26494 JUMP OR RETURN"],
  "26535": [
      "26535 SET I      null",
      "26537 PUSH F.K      -> reg5",
      "26539 VOID F",
      "26540 SET MEMORY ELEMENT      0 = reg5",
      "26543 PUSH MEMORY ELEMENT IF INIT      1047 -> reg5",
      "26546 NEW ARRAY      1 -> reg9",
      "26549 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "26552 PUT      reg9[0] = reg10",
      "26556 CALL FUNCTION      PTR: reg5 MEM: reg9",
      "26560 SET      reg2 -> reg8",
      "26563 SET I      null",
      "26565 JUMP OR RETURN"
  ],
  "26761": [
      "26761 PUSH MEMORY ELEMENT IF INIT      1083 -> reg10",
      "26764 GET      reg10[message] -> reg7",
      "26770 SET      reg7 -> reg9",
      "26773 JUMP      26780",
      "26780 PUT      reg8[1] = reg9",
      "26784 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "26788 SET      reg2 -> reg4",
      "26791 SET MEMORY ELEMENT IF INIT      1084 = reg4",
      "26794 PUSH MEMORY ELEMENT IF INIT      1083 -> reg4",
      "26797 GET WINDOW PROP      Error -> reg5",
      "26802 INSTANCEOF      reg4 instanceof reg5 -> reg8",
      "26806 JUMP IF FALSE      reg8 TO: 26830 | 26809"
  ],
  "26775": [
      "26775 SET      Failed to execute decode function from encode/decode pair -> reg9",
      "26780 PUT      reg8[1] = reg9",
      "26784 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "26788 SET      reg2 -> reg4",
      "26791 SET MEMORY ELEMENT IF INIT      1084 = reg4",
      "26794 PUSH MEMORY ELEMENT IF INIT      1083 -> reg4",
      "26797 GET WINDOW PROP      Error -> reg5",
      "26802 INSTANCEOF      reg4 instanceof reg5 -> reg8",
      "26806 JUMP IF FALSE      reg8 TO: 26830 | 26809"
  ],
  "26809": [
      "26809 PUSH MEMORY ELEMENT IF INIT      1084 -> reg4",
      "26812 PUSH MEMORY ELEMENT IF INIT      1083 -> reg5",
      "26815 GET      reg5[stack] -> reg9",
      "26821 PUT      reg4[stack] = reg9",
      "26827 SET      reg9 -> reg8",
      "26830 PUSH MEMORY ELEMENT IF INIT      1084 -> reg4",
      "26833 JUMP OR RETURN VAL      reg4"
  ],
  "26830": [
      "26830 PUSH MEMORY ELEMENT IF INIT      1084 -> reg4",
      "26833 JUMP OR RETURN VAL      reg4"
  ],
  "27287": [
      "27287 PUSH MEMORY ELEMENT IF INIT      1090 -> reg8",
      "27290 EMPTY OBJECT      -> reg9",
      "27292 PUT      reg8[FrontendErrorCode] = reg9",
      "27298 SET      reg9 -> reg10",
      "27301 PUT      reg7[0] = reg10",
      "27305 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "27309 SET      reg2 -> reg4",
      "27312 JUMP OR RETURN"
  ],
  "27301": [
      "27301 PUT      reg7[0] = reg10",
      "27305 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "27309 SET      reg2 -> reg4",
      "27312 JUMP OR RETURN"
  ],
  "27818": [
      "27818 GET WINDOW PROP      Error -> reg4",
      "27823 NEW ARRAY      1 -> reg8",
      "27826 PUT      reg8[0] = key must be 128-bit",
      "27832 BIND APPLY      reg4 reg8 -> 5",
      "27836 HANDLE ERROR      reg5",
      "27838 NEW ARRAY      4 -> reg4",
      "27841 PUSH MEMORY ELEMENT IF INIT      1117 -> reg6",
      "27844 NEW ARRAY      2 -> reg9",
      "27847 PUSH MEMORY ELEMENT IF INIT      1123 -> reg8",
      "27850 PUT      reg9[0] = reg8",
      "27854 PUT      reg9[1] = 0",
      "27858 CALL FUNCTION      PTR: reg6 MEM: reg9",
      "27862 SET      reg2 -> reg5",
      "27865 PUT      reg4[0] = reg5",
      "27869 PUSH MEMORY ELEMENT IF INIT      1117 -> reg6",
      "27872 NEW ARRAY      2 -> reg7",
      "27875 PUSH MEMORY ELEMENT IF INIT      1123 -> reg8",
      "27878 PUT      reg7[0] = reg8",
      "27882 PUT      reg7[1] = 4",
      "27886 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "27890 SET      reg2 -> reg5",
      "27893 PUT      reg4[1] = reg5",
      "27897 PUSH MEMORY ELEMENT IF INIT      1117 -> reg5",
      "27900 NEW ARRAY      2 -> reg8",
      "27903 PUSH MEMORY ELEMENT IF INIT      1123 -> reg10",
      "27906 PUT      reg8[0] = reg10",
      "27910 PUT      reg8[1] = 8",
      "27914 CALL FUNCTION      PTR: reg5 MEM: reg8",
      "27918 SET      reg2 -> reg7",
      "27921 PUT      reg4[2] = reg7",
      "27925 PUSH MEMORY ELEMENT IF INIT      1117 -> reg7",
      "27928 NEW ARRAY      2 -> reg6",
      "27931 PUSH MEMORY ELEMENT IF INIT      1123 -> reg9",
      "27934 PUT      reg6[0] = reg9",
      "27938 PUT      reg6[1] = 12",
      "27942 CALL FUNCTION      PTR: reg7 MEM: reg6",
      "27946 SET      reg2 -> reg5",
      "27949 PUT      reg4[3] = reg5",
      "27953 JUMP OR RETURN VAL      reg4"
  ],
  "27838": [
      "27838 NEW ARRAY      4 -> reg4",
      "27841 PUSH MEMORY ELEMENT IF INIT      1117 -> reg6",
      "27844 NEW ARRAY      2 -> reg9",
      "27847 PUSH MEMORY ELEMENT IF INIT      1123 -> reg8",
      "27850 PUT      reg9[0] = reg8",
      "27854 PUT      reg9[1] = 0",
      "27858 CALL FUNCTION      PTR: reg6 MEM: reg9",
      "27862 SET      reg2 -> reg5",
      "27865 PUT      reg4[0] = reg5",
      "27869 PUSH MEMORY ELEMENT IF INIT      1117 -> reg6",
      "27872 NEW ARRAY      2 -> reg7",
      "27875 PUSH MEMORY ELEMENT IF INIT      1123 -> reg8",
      "27878 PUT      reg7[0] = reg8",
      "27882 PUT      reg7[1] = 4",
      "27886 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "27890 SET      reg2 -> reg5",
      "27893 PUT      reg4[1] = reg5",
      "27897 PUSH MEMORY ELEMENT IF INIT      1117 -> reg5",
      "27900 NEW ARRAY      2 -> reg8",
      "27903 PUSH MEMORY ELEMENT IF INIT      1123 -> reg10",
      "27906 PUT      reg8[0] = reg10",
      "27910 PUT      reg8[1] = 8",
      "27914 CALL FUNCTION      PTR: reg5 MEM: reg8",
      "27918 SET      reg2 -> reg7",
      "27921 PUT      reg4[2] = reg7",
      "27925 PUSH MEMORY ELEMENT IF INIT      1117 -> reg7",
      "27928 NEW ARRAY      2 -> reg6",
      "27931 PUSH MEMORY ELEMENT IF INIT      1123 -> reg9",
      "27934 PUT      reg6[0] = reg9",
      "27938 PUT      reg6[1] = 12",
      "27942 CALL FUNCTION      PTR: reg7 MEM: reg6",
      "27946 SET      reg2 -> reg5",
      "27949 PUT      reg4[3] = reg5",
      "27953 JUMP OR RETURN VAL      reg4"
  ],
  "27971": [
      "27971 EMPTY OBJECT      -> reg9",
      "27973 SET MEMORY ELEMENT IF INIT      1113 = reg9",
      "27976 SET      reg9 -> reg5",
      "27979 PUT      reg7[0] = reg5",
      "27983 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "27987 SET      reg2 -> reg4",
      "27990 PUSH MEMORY ELEMENT IF INIT      1112 -> reg4",
      "27993 PUSH MEMORY ELEMENT IF INIT      1113 -> reg5",
      "27996 PUT      reg4[default] = reg5",
      "28002 JUMP OR RETURN"
  ],
  "27979": [
      "27979 PUT      reg7[0] = reg5",
      "27983 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "27987 SET      reg2 -> reg4",
      "27990 PUSH MEMORY ELEMENT IF INIT      1112 -> reg4",
      "27993 PUSH MEMORY ELEMENT IF INIT      1113 -> reg5",
      "27996 PUT      reg4[default] = reg5",
      "28002 JUMP OR RETURN"
  ],
  "28046": [
      "28046 PUSH H       -> reg7",
      "28048 GET      reg7[__importDefault] -> reg4",
      "28054 SET      reg4 -> reg5",
      "28057 JUMP IF TRUE      reg5 TO: 28120 | 28060"
  ],
  "28057": ["28057 JUMP IF TRUE      reg5 TO: 28120 | 28060"],
  "28060": [
      "28060 INIT FUNCTION STATE      PTR: 28069 NAME:  LEN: 1 -> reg4",
      "28067 JUMP      28117",
      "28117 SET      reg4 -> reg5",
      "28120 SET MEMORY ELEMENT IF INIT      1131 = reg5",
      "28123 GET WINDOW PROP      Object -> reg6",
      "28128 GET      reg6[defineProperty] -> reg5",
      "28134 NEW ARRAY      3 -> reg7",
      "28137 PUSH MEMORY ELEMENT IF INIT      1129 -> reg8",
      "28140 PUT      reg7[0] = reg8",
      "28144 PUT      reg7[1] = __esModule",
      "28150 EMPTY OBJECT      -> reg9",
      "28152 NOT      0 -> reg8",
      "28155 PUT      reg9[value] = reg8",
      "28161 PUT      reg7[2] = reg9",
      "28165 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg7",
      "28169 SET      reg2 -> reg4",
      "28172 PUSH MEMORY ELEMENT IF INIT      1131 -> reg5",
      "28175 NEW ARRAY      1 -> reg7",
      "28178 PUSH MEMORY ELEMENT IF INIT      1130 -> reg9",
      "28181 NEW ARRAY      1 -> reg10",
      "28184 PUT      reg10[0] = 138",
      "28188 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "28192 SET      reg2 -> reg8",
      "28195 PUT      reg7[0] = reg8",
      "28199 CALL FUNCTION      PTR: reg5 MEM: reg7",
      "28203 SET      reg2 -> reg4",
      "28206 SET MEMORY ELEMENT IF INIT      1132 = reg4",
      "28209 PUSH MEMORY ELEMENT IF INIT      1131 -> reg4",
      "28212 NEW ARRAY      1 -> reg7",
      "28215 PUSH MEMORY ELEMENT IF INIT      1130 -> reg8",
      "28218 NEW ARRAY      1 -> reg10",
      "28221 PUT      reg10[0] = 89",
      "28225 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "28229 SET      reg2 -> reg9",
      "28232 PUT      reg7[0] = reg9",
      "28236 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "28240 SET      reg2 -> reg5",
      "28243 SET MEMORY ELEMENT IF INIT      1133 = reg5",
      "28246 PUSH MEMORY ELEMENT IF INIT      1133 -> reg5",
      "28249 GET      reg5[default] -> reg7",
      "28255 SET MEMORY ELEMENT IF INIT      1134 = reg7",
      "28258 PUSH MEMORY ELEMENT IF INIT      1134 -> reg4",
      "28261 GET      reg4[0] -> reg8",
      "28265 SET MEMORY ELEMENT IF INIT      1135 = reg8",
      "28268 PUSH MEMORY ELEMENT IF INIT      1134 -> reg4",
      "28271 GET      reg4[1] -> reg5",
      "28275 SET MEMORY ELEMENT IF INIT      1136 = reg5",
      "28278 PUSH MEMORY ELEMENT IF INIT      1129 -> reg4",
      "28281 INIT FUNCTION STATE      PTR: 28290 NAME:  LEN: 3 -> reg5",
      "28288 JUMP      29030",
      "29030 PUT      reg4[default] = reg5",
      "29036 JUMP OR RETURN"
  ],
  "28078": [
      "28078 PUSH MEMORY ELEMENT IF INIT      1141 -> reg4",
      "28081 GET      reg4[__esModule] -> reg6",
      "28087 SET      reg6 -> reg5",
      "28090 JUMP IF FALSE      reg5 TO: 28101 | 28093"
  ],
  "28090": ["28090 JUMP IF FALSE      reg5 TO: 28101 | 28093"],
  "28093": [
      "28093 PUSH MEMORY ELEMENT IF INIT      1141 -> reg7",
      "28096 SET      reg7 -> reg6",
      "28099 JUMP      28115",
      "28115 JUMP OR RETURN VAL      reg6"
  ],
  "28101": [
      "28101 EMPTY OBJECT      -> reg4",
      "28103 PUSH MEMORY ELEMENT IF INIT      1141 -> reg9",
      "28106 PUT      reg4[default] = reg9",
      "28112 SET      reg4 -> reg6",
      "28115 JUMP OR RETURN VAL      reg6"
  ],
  "28120": [
      "28120 SET MEMORY ELEMENT IF INIT      1131 = reg5",
      "28123 GET WINDOW PROP      Object -> reg6",
      "28128 GET      reg6[defineProperty] -> reg5",
      "28134 NEW ARRAY      3 -> reg7",
      "28137 PUSH MEMORY ELEMENT IF INIT      1129 -> reg8",
      "28140 PUT      reg7[0] = reg8",
      "28144 PUT      reg7[1] = __esModule",
      "28150 EMPTY OBJECT      -> reg9",
      "28152 NOT      0 -> reg8",
      "28155 PUT      reg9[value] = reg8",
      "28161 PUT      reg7[2] = reg9",
      "28165 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg7",
      "28169 SET      reg2 -> reg4",
      "28172 PUSH MEMORY ELEMENT IF INIT      1131 -> reg5",
      "28175 NEW ARRAY      1 -> reg7",
      "28178 PUSH MEMORY ELEMENT IF INIT      1130 -> reg9",
      "28181 NEW ARRAY      1 -> reg10",
      "28184 PUT      reg10[0] = 138",
      "28188 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "28192 SET      reg2 -> reg8",
      "28195 PUT      reg7[0] = reg8",
      "28199 CALL FUNCTION      PTR: reg5 MEM: reg7",
      "28203 SET      reg2 -> reg4",
      "28206 SET MEMORY ELEMENT IF INIT      1132 = reg4",
      "28209 PUSH MEMORY ELEMENT IF INIT      1131 -> reg4",
      "28212 NEW ARRAY      1 -> reg7",
      "28215 PUSH MEMORY ELEMENT IF INIT      1130 -> reg8",
      "28218 NEW ARRAY      1 -> reg10",
      "28221 PUT      reg10[0] = 89",
      "28225 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "28229 SET      reg2 -> reg9",
      "28232 PUT      reg7[0] = reg9",
      "28236 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "28240 SET      reg2 -> reg5",
      "28243 SET MEMORY ELEMENT IF INIT      1133 = reg5",
      "28246 PUSH MEMORY ELEMENT IF INIT      1133 -> reg5",
      "28249 GET      reg5[default] -> reg7",
      "28255 SET MEMORY ELEMENT IF INIT      1134 = reg7",
      "28258 PUSH MEMORY ELEMENT IF INIT      1134 -> reg4",
      "28261 GET      reg4[0] -> reg8",
      "28265 SET MEMORY ELEMENT IF INIT      1135 = reg8",
      "28268 PUSH MEMORY ELEMENT IF INIT      1134 -> reg4",
      "28271 GET      reg4[1] -> reg5",
      "28275 SET MEMORY ELEMENT IF INIT      1136 = reg5",
      "28278 PUSH MEMORY ELEMENT IF INIT      1129 -> reg4",
      "28281 INIT FUNCTION STATE      PTR: 28290 NAME:  LEN: 3 -> reg5",
      "28288 JUMP      29030",
      "29030 PUT      reg4[default] = reg5",
      "29036 JUMP OR RETURN"
  ],
  "28382": [
      "28382 GET WINDOW PROP      Error -> reg8",
      "28387 NEW ARRAY      1 -> reg5",
      "28390 PUT      reg5[0] = iv must be 64-bit",
      "28396 BIND APPLY      reg8 reg5 -> 4",
      "28400 HANDLE ERROR      reg4",
      "28402 NEW ARRAY      2 -> reg5",
      "28405 PUSH MEMORY ELEMENT IF INIT      1132 -> reg6",
      "28408 GET      reg6[default] -> reg7",
      "28414 GET      reg7[jfw] -> reg6",
      "28420 NEW ARRAY      2 -> reg8",
      "28423 PUSH MEMORY ELEMENT IF INIT      1161 -> reg9",
      "28426 PUT      reg8[0] = reg9",
      "28430 PUT      reg8[1] = 0",
      "28434 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg8",
      "28438 SET      reg2 -> reg4",
      "28441 PUT      reg5[0] = reg4",
      "28445 PUSH MEMORY ELEMENT IF INIT      1132 -> reg4",
      "28448 GET      reg4[default] -> reg8",
      "28454 GET      reg8[jfw] -> reg4",
      "28460 NEW ARRAY      2 -> reg9",
      "28463 PUSH MEMORY ELEMENT IF INIT      1161 -> reg10",
      "28466 PUT      reg9[0] = reg10",
      "28470 PUT      reg9[1] = 4",
      "28474 CALL FUNCTION      OBJ: reg8 FUNC: reg4 ARGS: reg9",
      "28478 SET      reg2 -> reg6",
      "28481 PUT      reg5[1] = reg6",
      "28485 JUMP OR RETURN VAL      reg5"
  ],
  "28402": [
      "28402 NEW ARRAY      2 -> reg5",
      "28405 PUSH MEMORY ELEMENT IF INIT      1132 -> reg6",
      "28408 GET      reg6[default] -> reg7",
      "28414 GET      reg7[jfw] -> reg6",
      "28420 NEW ARRAY      2 -> reg8",
      "28423 PUSH MEMORY ELEMENT IF INIT      1161 -> reg9",
      "28426 PUT      reg8[0] = reg9",
      "28430 PUT      reg8[1] = 0",
      "28434 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg8",
      "28438 SET      reg2 -> reg4",
      "28441 PUT      reg5[0] = reg4",
      "28445 PUSH MEMORY ELEMENT IF INIT      1132 -> reg4",
      "28448 GET      reg4[default] -> reg8",
      "28454 GET      reg8[jfw] -> reg4",
      "28460 NEW ARRAY      2 -> reg9",
      "28463 PUSH MEMORY ELEMENT IF INIT      1161 -> reg10",
      "28466 PUT      reg9[0] = reg10",
      "28470 PUT      reg9[1] = 4",
      "28474 CALL FUNCTION      OBJ: reg8 FUNC: reg4 ARGS: reg9",
      "28478 SET      reg2 -> reg6",
      "28481 PUT      reg5[1] = reg6",
      "28485 JUMP OR RETURN VAL      reg5"
  ],
  "28692": [
      "28692 PUSH MEMORY ELEMENT IF INIT      1153 -> reg9",
      "28695 PUSH MEMORY ELEMENT IF INIT      1152 -> reg10",
      "28698 LESS THAN      reg9 < reg10 -> reg11",
      "28702 SET      reg11 -> reg7",
      "28705 JUMP IF FALSE      reg7 TO: 28770 | 28708"
  ],
  "28705": ["28705 JUMP IF FALSE      reg7 TO: 28770 | 28708"],
  "28708": [
      "28708 PUSH MEMORY ELEMENT IF INIT      1151 -> reg10",
      "28711 GET      reg10[push] -> reg9",
      "28717 NEW ARRAY      1 -> reg13",
      "28720 PUSH MEMORY ELEMENT IF INIT      1135 -> reg12",
      "28723 NEW ARRAY      2 -> reg14",
      "28726 PUSH MEMORY ELEMENT IF INIT      1148 -> reg15",
      "28729 PUT      reg14[0] = reg15",
      "28733 PUSH MEMORY ELEMENT IF INIT      1153 -> reg16",
      "28736 SET      reg16 -> reg15",
      "28739 ADD      reg161-> reg16",
      "28743 SET MEMORY ELEMENT IF INIT      1153 = reg16",
      "28746 PUT      reg14[1] = reg15",
      "28750 CALL FUNCTION      PTR: reg12 MEM: reg14",
      "28754 SET      reg2 -> reg11",
      "28757 PUT      reg13[0] = reg11",
      "28761 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg13",
      "28765 SET      reg2 -> reg7",
      "28768 JUMP      28676",
      "28676 PUSH MEMORY ELEMENT IF INIT      1151 -> reg7",
      "28679 GET      reg7[length] -> reg9",
      "28685 LESS THAN      reg9 < 5 -> reg7",
      "28689 JUMP IF FALSE      reg7 TO: 28705 | 28692"
  ],
  "28770": [
      "28770 SET MEMORY ELEMENT IF INIT      1157 = 0",
      "28773 PUSH MEMORY ELEMENT IF INIT      1151 -> reg7",
      "28776 GET      reg7[length] -> reg11",
      "28782 GREATER THAN      reg11 > 0 -> reg7",
      "28786 JUMP IF FALSE      reg7 TO: 29025 | 28789"
  ],
  "28789": [
      "28789 PUSH MEMORY ELEMENT IF INIT      1157 -> reg9",
      "28792 PUSH MEMORY ELEMENT IF INIT      1156 -> reg7",
      "28795 GET      reg7[0] -> reg11",
      "28799 ADD      reg9NaN-> reg12",
      "28803 PUSH MEMORY ELEMENT IF INIT      1151 -> reg7",
      "28806 GET      reg7[length] -> reg11",
      "28812 MOD      reg12 % reg11 -> reg7",
      "28816 SET MEMORY ELEMENT IF INIT      1157 = reg7",
      "28819 PUSH MEMORY ELEMENT IF INIT      1157 -> reg7",
      "28822 LESS THAN      reg7 < 0 -> reg9",
      "28826 JUMP IF FALSE      reg9 TO: 28851 | 28829"
  ],
  "28829": [
      "28829 PUSH MEMORY ELEMENT IF INIT      1157 -> reg7",
      "28832 PUSH MEMORY ELEMENT IF INIT      1151 -> reg11",
      "28835 GET      reg11[length] -> reg12",
      "28841 ADD      reg7NaN-> reg12",
      "28845 SET MEMORY ELEMENT IF INIT      1157 = reg12",
      "28848 SET      reg12 -> reg9",
      "28851 PUSH MEMORY ELEMENT IF INIT      1151 -> reg13",
      "28854 PUSH MEMORY ELEMENT IF INIT      1157 -> reg9",
      "28857 GET      reg13[reg9] -> reg7",
      "28861 SET MEMORY ELEMENT IF INIT      1158 = reg7",
      "28864 PUSH MEMORY ELEMENT IF INIT      1136 -> reg9",
      "28867 NEW ARRAY      5 -> reg13",
      "28870 PUSH MEMORY ELEMENT IF INIT      1149 -> reg12",
      "28873 PUT      reg13[0] = reg12",
      "28877 PUSH MEMORY ELEMENT IF INIT      1156 -> reg11",
      "28880 PUT      reg13[1] = reg11",
      "28884 PUSH MEMORY ELEMENT IF INIT      1158 -> reg11",
      "28887 PUT      reg13[2] = reg11",
      "28891 PUSH MEMORY ELEMENT IF INIT      1155 -> reg11",
      "28894 PUT      reg13[3] = reg11",
      "28898 PUSH MEMORY ELEMENT IF INIT      1154 -> reg12",
      "28901 SET      reg12 -> reg14",
      "28904 ADD      reg121-> reg12",
      "28908 SET MEMORY ELEMENT IF INIT      1154 = reg12",
      "28911 PUT      reg13[4] = reg14",
      "28915 CALL FUNCTION      PTR: reg9 MEM: reg13",
      "28919 SET      reg2 -> reg7",
      "28922 SET MEMORY ELEMENT IF INIT      1156 = reg7",
      "28925 PUSH MEMORY ELEMENT IF INIT      1153 -> reg7",
      "28928 PUSH MEMORY ELEMENT IF INIT      1152 -> reg9",
      "28931 LESS THAN      reg7 < reg9 -> reg12",
      "28935 JUMP IF FALSE      reg12 TO: 28990 | 28938"
  ],
  "28851": [
      "28851 PUSH MEMORY ELEMENT IF INIT      1151 -> reg13",
      "28854 PUSH MEMORY ELEMENT IF INIT      1157 -> reg9",
      "28857 GET      reg13[reg9] -> reg7",
      "28861 SET MEMORY ELEMENT IF INIT      1158 = reg7",
      "28864 PUSH MEMORY ELEMENT IF INIT      1136 -> reg9",
      "28867 NEW ARRAY      5 -> reg13",
      "28870 PUSH MEMORY ELEMENT IF INIT      1149 -> reg12",
      "28873 PUT      reg13[0] = reg12",
      "28877 PUSH MEMORY ELEMENT IF INIT      1156 -> reg11",
      "28880 PUT      reg13[1] = reg11",
      "28884 PUSH MEMORY ELEMENT IF INIT      1158 -> reg11",
      "28887 PUT      reg13[2] = reg11",
      "28891 PUSH MEMORY ELEMENT IF INIT      1155 -> reg11",
      "28894 PUT      reg13[3] = reg11",
      "28898 PUSH MEMORY ELEMENT IF INIT      1154 -> reg12",
      "28901 SET      reg12 -> reg14",
      "28904 ADD      reg121-> reg12",
      "28908 SET MEMORY ELEMENT IF INIT      1154 = reg12",
      "28911 PUT      reg13[4] = reg14",
      "28915 CALL FUNCTION      PTR: reg9 MEM: reg13",
      "28919 SET      reg2 -> reg7",
      "28922 SET MEMORY ELEMENT IF INIT      1156 = reg7",
      "28925 PUSH MEMORY ELEMENT IF INIT      1153 -> reg7",
      "28928 PUSH MEMORY ELEMENT IF INIT      1152 -> reg9",
      "28931 LESS THAN      reg7 < reg9 -> reg12",
      "28935 JUMP IF FALSE      reg12 TO: 28990 | 28938"
  ],
  "28938": [
      "28938 PUSH MEMORY ELEMENT IF INIT      1151 -> reg9",
      "28941 PUSH MEMORY ELEMENT IF INIT      1157 -> reg11",
      "28944 PUSH MEMORY ELEMENT IF INIT      1135 -> reg14",
      "28947 NEW ARRAY      2 -> reg15",
      "28950 PUSH MEMORY ELEMENT IF INIT      1148 -> reg16",
      "28953 PUT      reg15[0] = reg16",
      "28957 PUSH MEMORY ELEMENT IF INIT      1153 -> reg16",
      "28960 SET      reg16 -> reg13",
      "28963 ADD      reg161-> reg16",
      "28967 SET MEMORY ELEMENT IF INIT      1153 = reg16",
      "28970 PUT      reg15[1] = reg13",
      "28974 CALL FUNCTION      PTR: reg14 MEM: reg15",
      "28978 SET      reg2 -> reg12",
      "28981 PUT      reg9[reg11] = reg12",
      "28985 SET      reg12 -> reg7",
      "28988 JUMP      29023",
      "29023 JUMP      28773",
      "28773 PUSH MEMORY ELEMENT IF INIT      1151 -> reg7",
      "28776 GET      reg7[length] -> reg11",
      "28782 GREATER THAN      reg11 > 0 -> reg7",
      "28786 JUMP IF FALSE      reg7 TO: 29025 | 28789"
  ],
  "28990": [
      "28990 PUSH MEMORY ELEMENT IF INIT      1151 -> reg12",
      "28993 GET      reg12[splice] -> reg9",
      "28999 NEW ARRAY      2 -> reg13",
      "29002 PUSH MEMORY ELEMENT IF INIT      1157 -> reg14",
      "29005 PUT      reg13[0] = reg14",
      "29009 PUT      reg13[1] = 1",
      "29013 CALL FUNCTION      OBJ: reg12 FUNC: reg9 ARGS: reg13",
      "29017 SET      reg2 -> reg11",
      "29020 SET      reg11 -> reg7",
      "29023 JUMP      28773",
      "28773 PUSH MEMORY ELEMENT IF INIT      1151 -> reg7",
      "28776 GET      reg7[length] -> reg11",
      "28782 GREATER THAN      reg11 > 0 -> reg7",
      "28786 JUMP IF FALSE      reg7 TO: 29025 | 28789"
  ],
  "29025": [
      "29025 PUSH MEMORY ELEMENT IF INIT      1155 -> reg9",
      "29028 JUMP OR RETURN VAL      reg9"
  ],
  "29078": [
      "29078 PUSH H       -> reg5",
      "29080 GET      reg5[__importDefault] -> reg7",
      "29086 SET      reg7 -> reg4",
      "29089 JUMP IF TRUE      reg4 TO: 29152 | 29092"
  ],
  "29089": ["29089 JUMP IF TRUE      reg4 TO: 29152 | 29092"],
  "29092": [
      "29092 INIT FUNCTION STATE      PTR: 29101 NAME:  LEN: 1 -> reg5",
      "29099 JUMP      29149",
      "29149 SET      reg5 -> reg4",
      "29152 SET MEMORY ELEMENT IF INIT      1173 = reg4",
      "29155 GET WINDOW PROP      Object -> reg6",
      "29160 GET      reg6[defineProperty] -> reg7",
      "29166 NEW ARRAY      3 -> reg5",
      "29169 PUSH MEMORY ELEMENT IF INIT      1171 -> reg8",
      "29172 PUT      reg5[0] = reg8",
      "29176 PUT      reg5[1] = __esModule",
      "29182 EMPTY OBJECT      -> reg8",
      "29184 NOT      0 -> reg9",
      "29187 PUT      reg8[value] = reg9",
      "29193 PUT      reg5[2] = reg8",
      "29197 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg5",
      "29201 SET      reg2 -> reg4",
      "29204 PUSH MEMORY ELEMENT IF INIT      1173 -> reg7",
      "29207 NEW ARRAY      1 -> reg5",
      "29210 PUSH MEMORY ELEMENT IF INIT      1172 -> reg9",
      "29213 NEW ARRAY      1 -> reg10",
      "29216 PUT      reg10[0] = 89",
      "29220 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "29224 SET      reg2 -> reg8",
      "29227 PUT      reg5[0] = reg8",
      "29231 CALL FUNCTION      PTR: reg7 MEM: reg5",
      "29235 SET      reg2 -> reg4",
      "29238 SET MEMORY ELEMENT IF INIT      1174 = reg4",
      "29241 PUSH MEMORY ELEMENT IF INIT      1174 -> reg4",
      "29244 GET      reg4[default] -> reg5",
      "29250 SET MEMORY ELEMENT IF INIT      1175 = reg5",
      "29253 PUSH MEMORY ELEMENT IF INIT      1175 -> reg4",
      "29256 GET      reg4[2] -> reg8",
      "29260 SET MEMORY ELEMENT IF INIT      1176 = reg8",
      "29263 PUSH MEMORY ELEMENT IF INIT      1175 -> reg4",
      "29266 GET      reg4[3] -> reg5",
      "29270 SET MEMORY ELEMENT IF INIT      1177 = reg5",
      "29273 PUSH MEMORY ELEMENT IF INIT      1171 -> reg5",
      "29276 INIT FUNCTION STATE      PTR: 29285 NAME:  LEN: 3 -> reg4",
      "29283 JUMP      29447",
      "29447 PUT      reg5[default] = reg4",
      "29453 JUMP OR RETURN"
  ],
  "29110": [
      "29110 PUSH MEMORY ELEMENT IF INIT      1182 -> reg5",
      "29113 GET      reg5[__esModule] -> reg6",
      "29119 SET      reg6 -> reg4",
      "29122 JUMP IF FALSE      reg4 TO: 29133 | 29125"
  ],
  "29122": ["29122 JUMP IF FALSE      reg4 TO: 29133 | 29125"],
  "29125": [
      "29125 PUSH MEMORY ELEMENT IF INIT      1182 -> reg4",
      "29128 SET      reg4 -> reg5",
      "29131 JUMP      29147",
      "29147 JUMP OR RETURN VAL      reg5"
  ],
  "29133": [
      "29133 EMPTY OBJECT      -> reg6",
      "29135 PUSH MEMORY ELEMENT IF INIT      1182 -> reg4",
      "29138 PUT      reg6[default] = reg4",
      "29144 SET      reg6 -> reg5",
      "29147 JUMP OR RETURN VAL      reg5"
  ],
  "29152": [
      "29152 SET MEMORY ELEMENT IF INIT      1173 = reg4",
      "29155 GET WINDOW PROP      Object -> reg6",
      "29160 GET      reg6[defineProperty] -> reg7",
      "29166 NEW ARRAY      3 -> reg5",
      "29169 PUSH MEMORY ELEMENT IF INIT      1171 -> reg8",
      "29172 PUT      reg5[0] = reg8",
      "29176 PUT      reg5[1] = __esModule",
      "29182 EMPTY OBJECT      -> reg8",
      "29184 NOT      0 -> reg9",
      "29187 PUT      reg8[value] = reg9",
      "29193 PUT      reg5[2] = reg8",
      "29197 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg5",
      "29201 SET      reg2 -> reg4",
      "29204 PUSH MEMORY ELEMENT IF INIT      1173 -> reg7",
      "29207 NEW ARRAY      1 -> reg5",
      "29210 PUSH MEMORY ELEMENT IF INIT      1172 -> reg9",
      "29213 NEW ARRAY      1 -> reg10",
      "29216 PUT      reg10[0] = 89",
      "29220 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "29224 SET      reg2 -> reg8",
      "29227 PUT      reg5[0] = reg8",
      "29231 CALL FUNCTION      PTR: reg7 MEM: reg5",
      "29235 SET      reg2 -> reg4",
      "29238 SET MEMORY ELEMENT IF INIT      1174 = reg4",
      "29241 PUSH MEMORY ELEMENT IF INIT      1174 -> reg4",
      "29244 GET      reg4[default] -> reg5",
      "29250 SET MEMORY ELEMENT IF INIT      1175 = reg5",
      "29253 PUSH MEMORY ELEMENT IF INIT      1175 -> reg4",
      "29256 GET      reg4[2] -> reg8",
      "29260 SET MEMORY ELEMENT IF INIT      1176 = reg8",
      "29263 PUSH MEMORY ELEMENT IF INIT      1175 -> reg4",
      "29266 GET      reg4[3] -> reg5",
      "29270 SET MEMORY ELEMENT IF INIT      1177 = reg5",
      "29273 PUSH MEMORY ELEMENT IF INIT      1171 -> reg5",
      "29276 INIT FUNCTION STATE      PTR: 29285 NAME:  LEN: 3 -> reg4",
      "29283 JUMP      29447",
      "29447 PUT      reg5[default] = reg4",
      "29453 JUMP OR RETURN"
  ],
  "29349": [
      "29349 GET WINDOW PROP      TextEncoder -> reg7",
      "29354 EMPTY ARRAY      -> reg8",
      "29356 BIND APPLY      reg7 reg8 -> 4",
      "29360 GET      reg4[encode] -> reg7",
      "29366 NEW ARRAY      1 -> reg9",
      "29369 PUSH MEMORY ELEMENT IF INIT      1190 -> reg8",
      "29372 PUT      reg9[0] = reg8",
      "29376 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg9",
      "29380 SET      reg2 -> reg6",
      "29383 SET MEMORY ELEMENT IF INIT      1191 = reg6",
      "29386 JUMP      29411",
      "29411 PUSH MEMORY ELEMENT IF INIT      1176 -> reg6",
      "29414 NEW ARRAY      3 -> reg8",
      "29417 PUSH MEMORY ELEMENT IF INIT      1187 -> reg9",
      "29420 PUT      reg8[0] = reg9",
      "29424 PUSH MEMORY ELEMENT IF INIT      1188 -> reg9",
      "29427 PUT      reg8[1] = reg9",
      "29431 PUSH MEMORY ELEMENT IF INIT      1191 -> reg9",
      "29434 PUT      reg8[2] = reg9",
      "29438 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "29442 SET      reg2 -> reg7",
      "29445 JUMP OR RETURN VAL      reg7"
  ],
  "29388": [
      "29388 PUSH MEMORY ELEMENT IF INIT      1177 -> reg7",
      "29391 NEW ARRAY      1 -> reg8",
      "29394 PUSH MEMORY ELEMENT IF INIT      1190 -> reg9",
      "29397 PUT      reg8[0] = reg9",
      "29401 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "29405 SET      reg2 -> reg6",
      "29408 SET MEMORY ELEMENT IF INIT      1191 = reg6",
      "29411 PUSH MEMORY ELEMENT IF INIT      1176 -> reg6",
      "29414 NEW ARRAY      3 -> reg8",
      "29417 PUSH MEMORY ELEMENT IF INIT      1187 -> reg9",
      "29420 PUT      reg8[0] = reg9",
      "29424 PUSH MEMORY ELEMENT IF INIT      1188 -> reg9",
      "29427 PUT      reg8[1] = reg9",
      "29431 PUSH MEMORY ELEMENT IF INIT      1191 -> reg9",
      "29434 PUT      reg8[2] = reg9",
      "29438 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "29442 SET      reg2 -> reg7",
      "29445 JUMP OR RETURN VAL      reg7"
  ],
  "29489": [
      "29489 PUSH H       -> reg5",
      "29491 GET      reg5[__importDefault] -> reg6",
      "29497 SET      reg6 -> reg4",
      "29500 JUMP IF TRUE      reg4 TO: 29563 | 29503"
  ],
  "29500": ["29500 JUMP IF TRUE      reg4 TO: 29563 | 29503"],
  "29503": [
      "29503 INIT FUNCTION STATE      PTR: 29512 NAME:  LEN: 1 -> reg5",
      "29510 JUMP      29560",
      "29560 SET      reg5 -> reg4",
      "29563 SET MEMORY ELEMENT IF INIT      1198 = reg4",
      "29566 GET WINDOW PROP      Object -> reg5",
      "29571 GET      reg5[defineProperty] -> reg6",
      "29577 NEW ARRAY      3 -> reg7",
      "29580 PUSH MEMORY ELEMENT IF INIT      1196 -> reg8",
      "29583 PUT      reg7[0] = reg8",
      "29587 PUT      reg7[1] = __esModule",
      "29593 EMPTY OBJECT      -> reg10",
      "29595 NOT      0 -> reg8",
      "29598 PUT      reg10[value] = reg8",
      "29604 PUT      reg7[2] = reg10",
      "29608 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "29612 SET      reg2 -> reg4",
      "29615 PUSH MEMORY ELEMENT IF INIT      1198 -> reg8",
      "29618 NEW ARRAY      1 -> reg6",
      "29621 PUSH MEMORY ELEMENT IF INIT      1197 -> reg9",
      "29624 NEW ARRAY      1 -> reg10",
      "29627 PUT      reg10[0] = 198",
      "29631 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "29635 SET      reg2 -> reg7",
      "29638 PUT      reg6[0] = reg7",
      "29642 CALL FUNCTION      PTR: reg8 MEM: reg6",
      "29646 SET      reg2 -> reg4",
      "29649 SET MEMORY ELEMENT IF INIT      1199 = reg4",
      "29652 PUSH MEMORY ELEMENT IF INIT      1196 -> reg4",
      "29655 INIT FUNCTION STATE      PTR: 29664 NAME:  LEN: 3 -> reg6",
      "29662 JUMP      29890",
      "29890 PUT      reg4[default] = reg6",
      "29896 JUMP OR RETURN"
  ],
  "29521": [
      "29521 PUSH MEMORY ELEMENT IF INIT      1204 -> reg5",
      "29524 GET      reg5[__esModule] -> reg6",
      "29530 SET      reg6 -> reg4",
      "29533 JUMP IF FALSE      reg4 TO: 29544 | 29536"
  ],
  "29533": ["29533 JUMP IF FALSE      reg4 TO: 29544 | 29536"],
  "29536": [
      "29536 PUSH MEMORY ELEMENT IF INIT      1204 -> reg4",
      "29539 SET      reg4 -> reg6",
      "29542 JUMP      29558",
      "29558 JUMP OR RETURN VAL      reg6"
  ],
  "29544": [
      "29544 EMPTY OBJECT      -> reg5",
      "29546 PUSH MEMORY ELEMENT IF INIT      1204 -> reg4",
      "29549 PUT      reg5[default] = reg4",
      "29555 SET      reg5 -> reg6",
      "29558 JUMP OR RETURN VAL      reg6"
  ],
  "29563": [
      "29563 SET MEMORY ELEMENT IF INIT      1198 = reg4",
      "29566 GET WINDOW PROP      Object -> reg5",
      "29571 GET      reg5[defineProperty] -> reg6",
      "29577 NEW ARRAY      3 -> reg7",
      "29580 PUSH MEMORY ELEMENT IF INIT      1196 -> reg8",
      "29583 PUT      reg7[0] = reg8",
      "29587 PUT      reg7[1] = __esModule",
      "29593 EMPTY OBJECT      -> reg10",
      "29595 NOT      0 -> reg8",
      "29598 PUT      reg10[value] = reg8",
      "29604 PUT      reg7[2] = reg10",
      "29608 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "29612 SET      reg2 -> reg4",
      "29615 PUSH MEMORY ELEMENT IF INIT      1198 -> reg8",
      "29618 NEW ARRAY      1 -> reg6",
      "29621 PUSH MEMORY ELEMENT IF INIT      1197 -> reg9",
      "29624 NEW ARRAY      1 -> reg10",
      "29627 PUT      reg10[0] = 198",
      "29631 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "29635 SET      reg2 -> reg7",
      "29638 PUT      reg6[0] = reg7",
      "29642 CALL FUNCTION      PTR: reg8 MEM: reg6",
      "29646 SET      reg2 -> reg4",
      "29649 SET MEMORY ELEMENT IF INIT      1199 = reg4",
      "29652 PUSH MEMORY ELEMENT IF INIT      1196 -> reg4",
      "29655 INIT FUNCTION STATE      PTR: 29664 NAME:  LEN: 3 -> reg6",
      "29662 JUMP      29890",
      "29890 PUT      reg4[default] = reg6",
      "29896 JUMP OR RETURN"
  ],
  "29737": [
      "29737 PUSH MEMORY ELEMENT IF INIT      1212 -> reg6",
      "29740 GET      reg6[charCodeAt] -> reg8",
      "29746 NEW ARRAY      1 -> reg9",
      "29749 PUSH MEMORY ELEMENT IF INIT      1214 -> reg7",
      "29752 PUT      reg9[0] = reg7",
      "29756 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "29760 SET      reg2 -> reg4",
      "29763 SET MEMORY ELEMENT IF INIT      1215 = reg4",
      "29766 PUSH MEMORY ELEMENT IF INIT      1215 -> reg4",
      "29769 LESS THAN OR EQUAL      reg4 <= 255 -> reg7",
      "29773 JUMP IF FALSE      reg7 TO: 29807 | 29776"
  ],
  "29776": [
      "29776 PUSH MEMORY ELEMENT IF INIT      1213 -> reg7",
      "29779 GET      reg7[push] -> reg10",
      "29785 NEW ARRAY      1 -> reg9",
      "29788 PUSH MEMORY ELEMENT IF INIT      1215 -> reg11",
      "29791 PUT      reg9[0] = reg11",
      "29795 CALL FUNCTION      OBJ: reg7 FUNC: reg10 ARGS: reg9",
      "29799 SET      reg2 -> reg4",
      "29802 SET      reg4 -> reg8",
      "29805 JUMP      29833",
      "29833 PUSH MEMORY ELEMENT IF INIT      1214 -> reg8",
      "29836 SET      reg8 -> reg4",
      "29839 ADD      reg81-> reg8",
      "29843 SET MEMORY ELEMENT IF INIT      1214 = reg8",
      "29846 JUMP      29718",
      "29718 PUSH MEMORY ELEMENT IF INIT      1214 -> reg4",
      "29721 PUSH MEMORY ELEMENT IF INIT      1212 -> reg6",
      "29724 GET      reg6[length] -> reg7",
      "29730 LESS THAN      reg4 < reg7 -> reg8",
      "29734 JUMP IF FALSE      reg8 TO: 29848 | 29737"
  ],
  "29807": [
      "29807 PUSH MEMORY ELEMENT IF INIT      1213 -> reg9",
      "29810 GET      reg9[push] -> reg4",
      "29816 NEW ARRAY      1 -> reg10",
      "29819 PUT      reg10[0] = 255",
      "29823 CALL FUNCTION      OBJ: reg9 FUNC: reg4 ARGS: reg10",
      "29827 SET      reg2 -> reg11",
      "29830 SET      reg11 -> reg8",
      "29833 PUSH MEMORY ELEMENT IF INIT      1214 -> reg8",
      "29836 SET      reg8 -> reg4",
      "29839 ADD      reg81-> reg8",
      "29843 SET MEMORY ELEMENT IF INIT      1214 = reg8",
      "29846 JUMP      29718",
      "29718 PUSH MEMORY ELEMENT IF INIT      1214 -> reg4",
      "29721 PUSH MEMORY ELEMENT IF INIT      1212 -> reg6",
      "29724 GET      reg6[length] -> reg7",
      "29730 LESS THAN      reg4 < reg7 -> reg8",
      "29734 JUMP IF FALSE      reg8 TO: 29848 | 29737"
  ],
  "29848": [
      "29848 PUSH MEMORY ELEMENT IF INIT      1199 -> reg8",
      "29851 GET      reg8[default] -> reg10",
      "29857 NEW ARRAY      3 -> reg8",
      "29860 PUSH MEMORY ELEMENT IF INIT      1209 -> reg11",
      "29863 PUT      reg8[0] = reg11",
      "29867 PUSH MEMORY ELEMENT IF INIT      1210 -> reg11",
      "29870 PUT      reg8[1] = reg11",
      "29874 PUSH MEMORY ELEMENT IF INIT      1213 -> reg11",
      "29877 PUT      reg8[2] = reg11",
      "29881 CALL FUNCTION      PTR: reg10 MEM: reg8",
      "29885 SET      reg2 -> reg4",
      "29888 JUMP OR RETURN VAL      reg4"
  ],
  "29932": [
      "29932 PUSH H       -> reg4",
      "29934 GET      reg4[__importDefault] -> reg6",
      "29940 SET      reg6 -> reg5",
      "29943 JUMP IF TRUE      reg5 TO: 30006 | 29946"
  ],
  "29943": ["29943 JUMP IF TRUE      reg5 TO: 30006 | 29946"],
  "29946": [
      "29946 INIT FUNCTION STATE      PTR: 29955 NAME:  LEN: 1 -> reg4",
      "29953 JUMP      30003",
      "30003 SET      reg4 -> reg5",
      "30006 SET MEMORY ELEMENT IF INIT      1223 = reg5",
      "30009 GET WINDOW PROP      Object -> reg5",
      "30014 GET      reg5[defineProperty] -> reg6",
      "30020 NEW ARRAY      3 -> reg7",
      "30023 PUSH MEMORY ELEMENT IF INIT      1221 -> reg8",
      "30026 PUT      reg7[0] = reg8",
      "30030 PUT      reg7[1] = __esModule",
      "30036 EMPTY OBJECT      -> reg9",
      "30038 NOT      0 -> reg8",
      "30041 PUT      reg9[value] = reg8",
      "30047 PUT      reg7[2] = reg9",
      "30051 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "30055 SET      reg2 -> reg4",
      "30058 PUSH MEMORY ELEMENT IF INIT      1223 -> reg4",
      "30061 NEW ARRAY      1 -> reg9",
      "30064 PUSH MEMORY ELEMENT IF INIT      1222 -> reg10",
      "30067 NEW ARRAY      1 -> reg11",
      "30070 PUT      reg11[0] = 472",
      "30074 CALL FUNCTION      PTR: reg10 MEM: reg11",
      "30078 SET      reg2 -> reg8",
      "30081 PUT      reg9[0] = reg8",
      "30085 CALL FUNCTION      PTR: reg4 MEM: reg9",
      "30089 SET      reg2 -> reg7",
      "30092 GET      reg7[default] -> reg4",
      "30098 EMPTY ARRAY      -> reg7",
      "30100 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "30104 SET      reg2 -> reg6",
      "30107 SET MEMORY ELEMENT IF INIT      1224 = reg6",
      "30110 PUSH MEMORY ELEMENT IF INIT      1221 -> reg4",
      "30113 GET WINDOW PROP      Function -> reg10",
      "30118 GET      reg10[apply] -> reg9",
      "30124 NEW ARRAY      2 -> reg11",
      "30127 PUT      reg11[0] = null",
      "30131 NEW ARRAY      1 -> reg12",
      "30134 PUT      reg12[0] = return (function(){function e(e,t){return t*=8,[e[t++]<<24|e[t++]<<16|e[t++]<<8|e[t++]<<0,e[t++]<<24|e[t++]<<16|e[t++]<<8|e[t++]<<0];}function t(e,_ref2,_ref3,i,a){var _ref4;var t=_ref2[0],r=_ref2[1];var n=_ref3[0],o=_ref3[1];return(_ref4=function(e,_ref5){var t=_ref5[0],r=_ref5[1];var n=0;for(var _o4=0;_o4<32;_o4++){t=t+((r<<4^r>>5)+r^n+e[3&n])|0,n=n+2654435769|0,r=r+((t<<4^t>>5)+t^n+e[n>>11&3])|0;}return[t,r];}(e,[n^t,o^r]),n=_ref4[0],o=_ref4[1]),function(e,t,_ref6){var r=_ref6[0],n=_ref6[1];t*=8,e[t++]=r>>24&255,e[t++]=r>>16&255,e[t++]=r>>8&255,e[t++]=255&r,e[t++]=n>>24&255,e[t++]=n>>16&255,e[t++]=n>>8&255,e[t++]=255&n;}(i,a,[n,o]),[n,o];}function r(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]<<0;}return[e,t,function(n,o,i){var a=function(e){if(16!==e.length)throw new Error(\"key must be 128-bit\");return[r(e,0),r(e,4),r(e,8),r(e,12)];}(n),c=function(e){if(8!==e.length)throw new Error(\"iv must be 64-bit\");return[r(e,0),r(e,4)];}(o),u=[],s=Math.ceil(i.length/8);var l=0,f=0;var d=[];var p=t(a,[0,0],c,d,f++);for(u.push([0,i.length]);u.length<5&&l<s;){u.push(e(i,l++));}var h=0;for(;u.length>0;){h=(h+p[0])%u.length,h<0&&(h+=u.length);p=t(a,p,u[h],d,f++),l<s?u[h]=e(i,l++):u.splice(h,1);}return d;},function(e){var t=[];for(var _r5=0;_r5<e.length;_r5++){var _n7=e.charCodeAt(_r5);_n7<=255?t.push(_n7):t.push(255);}return t;}];})",
      "30140 PUT      reg11[1] = reg12",
      "30144 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg11",
      "30148 SET      reg2 -> reg6",
      "30151 EMPTY ARRAY      -> reg9",
      "30153 CALL FUNCTION      PTR: reg6 MEM: reg9",
      "30157 SET      reg2 -> reg7",
      "30160 EMPTY ARRAY      -> reg6",
      "30162 CALL FUNCTION      PTR: reg7 MEM: reg6",
      "30166 SET      reg2 -> reg8",
      "30169 PUT      reg4[default] = reg8",
      "30175 JUMP OR RETURN"
  ],
  "29964": [
      "29964 PUSH MEMORY ELEMENT IF INIT      1229 -> reg5",
      "29967 GET      reg5[__esModule] -> reg7",
      "29973 SET      reg7 -> reg4",
      "29976 JUMP IF FALSE      reg4 TO: 29987 | 29979"
  ],
  "29976": ["29976 JUMP IF FALSE      reg4 TO: 29987 | 29979"],
  "29979": [
      "29979 PUSH MEMORY ELEMENT IF INIT      1229 -> reg4",
      "29982 SET      reg4 -> reg6",
      "29985 JUMP      30001",
      "30001 JUMP OR RETURN VAL      reg6"
  ],
  "29987": [
      "29987 EMPTY OBJECT      -> reg5",
      "29989 PUSH MEMORY ELEMENT IF INIT      1229 -> reg7",
      "29992 PUT      reg5[default] = reg7",
      "29998 SET      reg5 -> reg6",
      "30001 JUMP OR RETURN VAL      reg6"
  ],
  "30006": [
      "30006 SET MEMORY ELEMENT IF INIT      1223 = reg5",
      "30009 GET WINDOW PROP      Object -> reg5",
      "30014 GET      reg5[defineProperty] -> reg6",
      "30020 NEW ARRAY      3 -> reg7",
      "30023 PUSH MEMORY ELEMENT IF INIT      1221 -> reg8",
      "30026 PUT      reg7[0] = reg8",
      "30030 PUT      reg7[1] = __esModule",
      "30036 EMPTY OBJECT      -> reg9",
      "30038 NOT      0 -> reg8",
      "30041 PUT      reg9[value] = reg8",
      "30047 PUT      reg7[2] = reg9",
      "30051 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "30055 SET      reg2 -> reg4",
      "30058 PUSH MEMORY ELEMENT IF INIT      1223 -> reg4",
      "30061 NEW ARRAY      1 -> reg9",
      "30064 PUSH MEMORY ELEMENT IF INIT      1222 -> reg10",
      "30067 NEW ARRAY      1 -> reg11",
      "30070 PUT      reg11[0] = 472",
      "30074 CALL FUNCTION      PTR: reg10 MEM: reg11",
      "30078 SET      reg2 -> reg8",
      "30081 PUT      reg9[0] = reg8",
      "30085 CALL FUNCTION      PTR: reg4 MEM: reg9",
      "30089 SET      reg2 -> reg7",
      "30092 GET      reg7[default] -> reg4",
      "30098 EMPTY ARRAY      -> reg7",
      "30100 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "30104 SET      reg2 -> reg6",
      "30107 SET MEMORY ELEMENT IF INIT      1224 = reg6",
      "30110 PUSH MEMORY ELEMENT IF INIT      1221 -> reg4",
      "30113 GET WINDOW PROP      Function -> reg10",
      "30118 GET      reg10[apply] -> reg9",
      "30124 NEW ARRAY      2 -> reg11",
      "30127 PUT      reg11[0] = null",
      "30131 NEW ARRAY      1 -> reg12",
      "30134 PUT      reg12[0] = return (function(){function e(e,t){return t*=8,[e[t++]<<24|e[t++]<<16|e[t++]<<8|e[t++]<<0,e[t++]<<24|e[t++]<<16|e[t++]<<8|e[t++]<<0];}function t(e,_ref2,_ref3,i,a){var _ref4;var t=_ref2[0],r=_ref2[1];var n=_ref3[0],o=_ref3[1];return(_ref4=function(e,_ref5){var t=_ref5[0],r=_ref5[1];var n=0;for(var _o4=0;_o4<32;_o4++){t=t+((r<<4^r>>5)+r^n+e[3&n])|0,n=n+2654435769|0,r=r+((t<<4^t>>5)+t^n+e[n>>11&3])|0;}return[t,r];}(e,[n^t,o^r]),n=_ref4[0],o=_ref4[1]),function(e,t,_ref6){var r=_ref6[0],n=_ref6[1];t*=8,e[t++]=r>>24&255,e[t++]=r>>16&255,e[t++]=r>>8&255,e[t++]=255&r,e[t++]=n>>24&255,e[t++]=n>>16&255,e[t++]=n>>8&255,e[t++]=255&n;}(i,a,[n,o]),[n,o];}function r(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]<<0;}return[e,t,function(n,o,i){var a=function(e){if(16!==e.length)throw new Error(\"key must be 128-bit\");return[r(e,0),r(e,4),r(e,8),r(e,12)];}(n),c=function(e){if(8!==e.length)throw new Error(\"iv must be 64-bit\");return[r(e,0),r(e,4)];}(o),u=[],s=Math.ceil(i.length/8);var l=0,f=0;var d=[];var p=t(a,[0,0],c,d,f++);for(u.push([0,i.length]);u.length<5&&l<s;){u.push(e(i,l++));}var h=0;for(;u.length>0;){h=(h+p[0])%u.length,h<0&&(h+=u.length);p=t(a,p,u[h],d,f++),l<s?u[h]=e(i,l++):u.splice(h,1);}return d;},function(e){var t=[];for(var _r5=0;_r5<e.length;_r5++){var _n7=e.charCodeAt(_r5);_n7<=255?t.push(_n7):t.push(255);}return t;}];})",
      "30140 PUT      reg11[1] = reg12",
      "30144 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg11",
      "30148 SET      reg2 -> reg6",
      "30151 EMPTY ARRAY      -> reg9",
      "30153 CALL FUNCTION      PTR: reg6 MEM: reg9",
      "30157 SET      reg2 -> reg7",
      "30160 EMPTY ARRAY      -> reg6",
      "30162 CALL FUNCTION      PTR: reg7 MEM: reg6",
      "30166 SET      reg2 -> reg8",
      "30169 PUT      reg4[default] = reg8",
      "30175 JUMP OR RETURN"
  ],
  "30315": [
      "30315 PUSH MEMORY ELEMENT IF INIT      1266 -> reg5",
      "30318 STRICT NOT EQUAL      null !== reg5 -> reg4",
      "30322 SET      reg4 -> reg6",
      "30325 JUMP IF FALSE      reg6 TO: 30380 | 30328"
  ],
  "30325": ["30325 JUMP IF FALSE      reg6 TO: 30380 | 30328"],
  "30328": [
      "30328 GET WINDOW PROP      TypeError -> reg5",
      "30333 NEW ARRAY      1 -> reg7",
      "30336 GET WINDOW PROP      String -> reg8",
      "30341 NEW ARRAY      1 -> reg9",
      "30344 PUSH MEMORY ELEMENT IF INIT      1266 -> reg10",
      "30347 PUT      reg9[0] = reg10",
      "30351 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "30355 SET      reg2 -> reg6",
      "30358 ADD      Class extends value NaN-> reg9",
      "30364 ADD      reg9NaN-> reg6",
      "30370 PUT      reg7[0] = reg6",
      "30374 BIND APPLY      reg5 reg7 -> 4",
      "30378 HANDLE ERROR      reg4",
      "30380 PUSH MEMORY ELEMENT IF INIT      1237 -> reg5",
      "30383 NEW ARRAY      2 -> reg6",
      "30386 PUSH MEMORY ELEMENT IF INIT      1265 -> reg7",
      "30389 PUT      reg6[0] = reg7",
      "30393 PUSH MEMORY ELEMENT IF INIT      1266 -> reg7",
      "30396 PUT      reg6[1] = reg7",
      "30400 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "30404 SET      reg2 -> reg4",
      "30407 PUSH MEMORY ELEMENT IF INIT      1265 -> reg4",
      "30410 PUSH MEMORY ELEMENT IF INIT      1266 -> reg5",
      "30413 STRICT EQUAL      null === reg5 -> reg6",
      "30417 JUMP IF FALSE      reg6 TO: 30453 | 30420"
  ],
  "30380": [
      "30380 PUSH MEMORY ELEMENT IF INIT      1237 -> reg5",
      "30383 NEW ARRAY      2 -> reg6",
      "30386 PUSH MEMORY ELEMENT IF INIT      1265 -> reg7",
      "30389 PUT      reg6[0] = reg7",
      "30393 PUSH MEMORY ELEMENT IF INIT      1266 -> reg7",
      "30396 PUT      reg6[1] = reg7",
      "30400 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "30404 SET      reg2 -> reg4",
      "30407 PUSH MEMORY ELEMENT IF INIT      1265 -> reg4",
      "30410 PUSH MEMORY ELEMENT IF INIT      1266 -> reg5",
      "30413 STRICT EQUAL      null === reg5 -> reg6",
      "30417 JUMP IF FALSE      reg6 TO: 30453 | 30420"
  ],
  "30420": [
      "30420 GET WINDOW PROP      Object -> reg8",
      "30425 GET      reg8[create] -> reg11",
      "30431 NEW ARRAY      1 -> reg7",
      "30434 PUSH MEMORY ELEMENT IF INIT      1266 -> reg10",
      "30437 PUT      reg7[0] = reg10",
      "30441 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg7",
      "30445 SET      reg2 -> reg6",
      "30448 SET      reg6 -> reg5",
      "30451 JUMP      30483",
      "30483 PUT      reg4[prototype] = reg5",
      "30489 JUMP OR RETURN"
  ],
  "30453": [
      "30453 PUSH MEMORY ELEMENT IF INIT      1267 -> reg6",
      "30456 PUSH MEMORY ELEMENT IF INIT      1266 -> reg7",
      "30459 GET      reg7[prototype] -> reg9",
      "30465 PUT      reg6[prototype] = reg9",
      "30471 PUSH MEMORY ELEMENT IF INIT      1267 -> reg9",
      "30474 EMPTY ARRAY      -> reg7",
      "30476 BIND APPLY      reg9 reg7 -> 6",
      "30480 SET      reg6 -> reg5",
      "30483 PUT      reg4[prototype] = reg5",
      "30489 JUMP OR RETURN"
  ],
  "30538": [
      "30538 SET      0 -> reg8",
      "30541 GET      reg5[reg8] -> reg4",
      "30545 SET MEMORY ELEMENT IF INIT      1276 = reg4",
      "30548 GET WINDOW PROP      Object -> reg9",
      "30553 GET      reg9[prototype] -> reg10",
      "30559 GET      reg10[hasOwnProperty] -> reg11",
      "30565 GET      reg11[call] -> reg9",
      "30571 NEW ARRAY      2 -> reg10",
      "30574 PUSH MEMORY ELEMENT IF INIT      1273 -> reg13",
      "30577 PUT      reg10[0] = reg13",
      "30581 PUSH MEMORY ELEMENT IF INIT      1276 -> reg12",
      "30584 PUT      reg10[1] = reg12",
      "30588 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg10",
      "30592 SET      reg2 -> reg6",
      "30595 JUMP IF FALSE      reg6 TO: 30631 | 30598"
  ],
  "30541": [
      "30541 GET      reg5[reg8] -> reg4",
      "30545 SET MEMORY ELEMENT IF INIT      1276 = reg4",
      "30548 GET WINDOW PROP      Object -> reg9",
      "30553 GET      reg9[prototype] -> reg10",
      "30559 GET      reg10[hasOwnProperty] -> reg11",
      "30565 GET      reg11[call] -> reg9",
      "30571 NEW ARRAY      2 -> reg10",
      "30574 PUSH MEMORY ELEMENT IF INIT      1273 -> reg13",
      "30577 PUT      reg10[0] = reg13",
      "30581 PUSH MEMORY ELEMENT IF INIT      1276 -> reg12",
      "30584 PUT      reg10[1] = reg12",
      "30588 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg10",
      "30592 SET      reg2 -> reg6",
      "30595 JUMP IF FALSE      reg6 TO: 30631 | 30598"
  ],
  "30598": [
      "30598 PUSH MEMORY ELEMENT IF INIT      1274 -> reg12",
      "30601 GET      reg12[indexOf] -> reg13",
      "30607 NEW ARRAY      1 -> reg14",
      "30610 PUSH MEMORY ELEMENT IF INIT      1276 -> reg15",
      "30613 PUT      reg14[0] = reg15",
      "30617 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "30621 SET      reg2 -> reg9",
      "30624 LESS THAN      reg9 < 0 -> reg10",
      "30628 SET      reg10 -> reg6",
      "30631 JUMP IF FALSE      reg6 TO: 30657 | 30634"
  ],
  "30631": ["30631 JUMP IF FALSE      reg6 TO: 30657 | 30634"],
  "30634": [
      "30634 PUSH MEMORY ELEMENT IF INIT      1275 -> reg9",
      "30637 PUSH MEMORY ELEMENT IF INIT      1276 -> reg10",
      "30640 PUSH MEMORY ELEMENT IF INIT      1273 -> reg13",
      "30643 PUSH MEMORY ELEMENT IF INIT      1276 -> reg15",
      "30646 GET      reg13[reg15] -> reg14",
      "30650 PUT      reg9[reg10] = reg14",
      "30654 SET      reg14 -> reg6",
      "30657 ADD      reg81-> reg8",
      "30661 LESS THAN      reg8 < reg7 -> reg9",
      "30665 JUMP IF TRUE      reg9 TO: 30541 | 30668"
  ],
  "30657": [
      "30657 ADD      reg81-> reg8",
      "30661 LESS THAN      reg8 < reg7 -> reg9",
      "30665 JUMP IF TRUE      reg9 TO: 30541 | 30668"
  ],
  "30668": [
      "30668 PUSH MEMORY ELEMENT IF INIT      1273 -> reg4",
      "30671 NOT EQUAL      null != reg4 -> reg6",
      "30675 JUMP IF FALSE      reg6 TO: 30701 | 30678"
  ],
  "30678": [
      "30678 GET WINDOW PROP      Object -> reg7",
      "30683 GET      reg7[getOwnPropertySymbols] -> reg4",
      "30689 TYPEOF      reg4 -> reg5",
      "30692 EQUAL      function == reg5 -> reg4",
      "30698 SET      reg4 -> reg6",
      "30701 JUMP IF FALSE      reg6 TO: 30909 | 30704"
  ],
  "30701": ["30701 JUMP IF FALSE      reg6 TO: 30909 | 30704"],
  "30704": [
      "30704 SET MEMORY ELEMENT IF INIT      1277 = 0",
      "30707 GET WINDOW PROP      Object -> reg5",
      "30712 GET      reg5[getOwnPropertySymbols] -> reg7",
      "30718 NEW ARRAY      1 -> reg14",
      "30721 PUSH MEMORY ELEMENT IF INIT      1273 -> reg6",
      "30724 PUT      reg14[0] = reg6",
      "30728 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg14",
      "30732 SET      reg2 -> reg4",
      "30735 SET MEMORY ELEMENT IF INIT      1276 = reg4",
      "30738 PUSH MEMORY ELEMENT IF INIT      1277 -> reg6",
      "30741 PUSH MEMORY ELEMENT IF INIT      1276 -> reg7",
      "30744 GET      reg7[length] -> reg8",
      "30750 LESS THAN      reg6 < reg8 -> reg7",
      "30754 JUMP IF FALSE      reg7 TO: 30909 | 30757"
  ],
  "30757": [
      "30757 PUSH MEMORY ELEMENT IF INIT      1274 -> reg8",
      "30760 GET      reg8[indexOf] -> reg6",
      "30766 NEW ARRAY      1 -> reg9",
      "30769 PUSH MEMORY ELEMENT IF INIT      1276 -> reg13",
      "30772 PUSH MEMORY ELEMENT IF INIT      1277 -> reg15",
      "30775 GET      reg13[reg15] -> reg10",
      "30779 PUT      reg9[0] = reg10",
      "30783 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg9",
      "30787 SET      reg2 -> reg7",
      "30790 LESS THAN      reg7 < 0 -> reg13",
      "30794 JUMP IF FALSE      reg13 TO: 30854 | 30797"
  ],
  "30797": [
      "30797 GET WINDOW PROP      Object -> reg6",
      "30802 GET      reg6[prototype] -> reg7",
      "30808 GET      reg7[propertyIsEnumerable] -> reg6",
      "30814 GET      reg6[call] -> reg14",
      "30820 NEW ARRAY      2 -> reg10",
      "30823 PUSH MEMORY ELEMENT IF INIT      1273 -> reg7",
      "30826 PUT      reg10[0] = reg7",
      "30830 PUSH MEMORY ELEMENT IF INIT      1276 -> reg16",
      "30833 PUSH MEMORY ELEMENT IF INIT      1277 -> reg15",
      "30836 GET      reg16[reg15] -> reg7",
      "30840 PUT      reg10[1] = reg7",
      "30844 CALL FUNCTION      OBJ: reg6 FUNC: reg14 ARGS: reg10",
      "30848 SET      reg2 -> reg9",
      "30851 SET      reg9 -> reg13",
      "30854 JUMP IF FALSE      reg13 TO: 30894 | 30857"
  ],
  "30854": ["30854 JUMP IF FALSE      reg13 TO: 30894 | 30857"],
  "30857": [
      "30857 PUSH MEMORY ELEMENT IF INIT      1275 -> reg7",
      "30860 PUSH MEMORY ELEMENT IF INIT      1276 -> reg9",
      "30863 PUSH MEMORY ELEMENT IF INIT      1277 -> reg14",
      "30866 GET      reg9[reg14] -> reg10",
      "30870 PUSH MEMORY ELEMENT IF INIT      1273 -> reg9",
      "30873 PUSH MEMORY ELEMENT IF INIT      1276 -> reg15",
      "30876 PUSH MEMORY ELEMENT IF INIT      1277 -> reg17",
      "30879 GET      reg15[reg17] -> reg16",
      "30883 GET      reg9[reg16] -> reg14",
      "30887 PUT      reg7[reg10] = reg14",
      "30891 SET      reg14 -> reg13",
      "30894 PUSH MEMORY ELEMENT IF INIT      1277 -> reg9",
      "30897 SET      reg9 -> reg7",
      "30900 ADD      reg91-> reg9",
      "30904 SET MEMORY ELEMENT IF INIT      1277 = reg9",
      "30907 JUMP      30738",
      "30738 PUSH MEMORY ELEMENT IF INIT      1277 -> reg6",
      "30741 PUSH MEMORY ELEMENT IF INIT      1276 -> reg7",
      "30744 GET      reg7[length] -> reg8",
      "30750 LESS THAN      reg6 < reg8 -> reg7",
      "30754 JUMP IF FALSE      reg7 TO: 30909 | 30757"
  ],
  "30894": [
      "30894 PUSH MEMORY ELEMENT IF INIT      1277 -> reg9",
      "30897 SET      reg9 -> reg7",
      "30900 ADD      reg91-> reg9",
      "30904 SET MEMORY ELEMENT IF INIT      1277 = reg9",
      "30907 JUMP      30738",
      "30738 PUSH MEMORY ELEMENT IF INIT      1277 -> reg6",
      "30741 PUSH MEMORY ELEMENT IF INIT      1276 -> reg7",
      "30744 GET      reg7[length] -> reg8",
      "30750 LESS THAN      reg6 < reg8 -> reg7",
      "30754 JUMP IF FALSE      reg7 TO: 30909 | 30757"
  ],
  "30909": [
      "30909 PUSH MEMORY ELEMENT IF INIT      1275 -> reg7",
      "30912 JUMP OR RETURN VAL      reg7"
  ],
  "30965": [
      "30965 PUSH MEMORY ELEMENT IF INIT      1288 -> reg4",
      "30968 SET      reg4 -> reg6",
      "30971 JUMP      31035",
      "31035 SET MEMORY ELEMENT IF INIT      1293 = reg6",
      "31038 GET WINDOW PROP      Reflect -> reg5",
      "31043 TYPEOF      reg5 -> reg6",
      "31046 EQUAL      object == reg6 -> reg4",
      "31052 JUMP IF FALSE      reg4 TO: 31078 | 31055"
  ],
  "30973": [
      "30973 PUSH MEMORY ELEMENT IF INIT      1290 -> reg4",
      "30976 STRICT EQUAL      null === reg4 -> reg5",
      "30980 JUMP IF FALSE      reg5 TO: 31026 | 30983"
  ],
  "30983": [
      "30983 GET WINDOW PROP      Object -> reg8",
      "30988 GET      reg8[getOwnPropertyDescriptor] -> reg9",
      "30994 NEW ARRAY      2 -> reg7",
      "30997 PUSH MEMORY ELEMENT IF INIT      1288 -> reg12",
      "31000 PUT      reg7[0] = reg12",
      "31004 PUSH MEMORY ELEMENT IF INIT      1289 -> reg10",
      "31007 PUT      reg7[1] = reg10",
      "31011 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg7",
      "31015 SET      reg2 -> reg5",
      "31018 SET MEMORY ELEMENT IF INIT      1290 = reg5",
      "31021 SET      reg5 -> reg4",
      "31024 JUMP      31032",
      "31032 SET      reg4 -> reg6",
      "31035 SET MEMORY ELEMENT IF INIT      1293 = reg6",
      "31038 GET WINDOW PROP      Reflect -> reg5",
      "31043 TYPEOF      reg5 -> reg6",
      "31046 EQUAL      object == reg6 -> reg4",
      "31052 JUMP IF FALSE      reg4 TO: 31078 | 31055"
  ],
  "31026": [
      "31026 PUSH MEMORY ELEMENT IF INIT      1290 -> reg5",
      "31029 SET      reg5 -> reg4",
      "31032 SET      reg4 -> reg6",
      "31035 SET MEMORY ELEMENT IF INIT      1293 = reg6",
      "31038 GET WINDOW PROP      Reflect -> reg5",
      "31043 TYPEOF      reg5 -> reg6",
      "31046 EQUAL      object == reg6 -> reg4",
      "31052 JUMP IF FALSE      reg4 TO: 31078 | 31055"
  ],
  "31055": [
      "31055 GET WINDOW PROP      Reflect -> reg5",
      "31060 GET      reg5[decorate] -> reg6",
      "31066 TYPEOF      reg6 -> reg5",
      "31069 EQUAL      function == reg5 -> reg6",
      "31075 SET      reg6 -> reg4",
      "31078 JUMP IF FALSE      reg4 TO: 31135 | 31081"
  ],
  "31078": ["31078 JUMP IF FALSE      reg4 TO: 31135 | 31081"],
  "31081": [
      "31081 GET WINDOW PROP      Reflect -> reg5",
      "31086 GET      reg5[decorate] -> reg6",
      "31092 NEW ARRAY      4 -> reg7",
      "31095 PUSH MEMORY ELEMENT IF INIT      1287 -> reg9",
      "31098 PUT      reg7[0] = reg9",
      "31102 PUSH MEMORY ELEMENT IF INIT      1288 -> reg10",
      "31105 PUT      reg7[1] = reg10",
      "31109 PUSH MEMORY ELEMENT IF INIT      1289 -> reg9",
      "31112 PUT      reg7[2] = reg9",
      "31116 PUSH MEMORY ELEMENT IF INIT      1290 -> reg10",
      "31119 PUT      reg7[3] = reg10",
      "31123 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "31127 SET      reg2 -> reg4",
      "31130 SET MEMORY ELEMENT IF INIT      1293 = reg4",
      "31133 JUMP      31324",
      "31324 PUSH MEMORY ELEMENT IF INIT      1292 -> reg4",
      "31327 GREATER THAN      reg4 > 3 -> reg7",
      "31331 JUMP IF FALSE      reg7 TO: 31340 | 31334"
  ],
  "31135": [
      "31135 PUSH MEMORY ELEMENT IF INIT      1287 -> reg4",
      "31138 GET      reg4[length] -> reg6",
      "31144 SUBTRACT      reg6 - 1 -> reg9",
      "31148 SET MEMORY ELEMENT IF INIT      1294 = reg9",
      "31151 PUSH MEMORY ELEMENT IF INIT      1294 -> reg11",
      "31154 GREATER THAN OR EQUAL      reg11 >= 0 -> reg6",
      "31158 JUMP IF FALSE      reg6 TO: 31324 | 31161"
  ],
  "31161": [
      "31161 PUSH MEMORY ELEMENT IF INIT      1287 -> reg6",
      "31164 PUSH MEMORY ELEMENT IF INIT      1294 -> reg7",
      "31167 GET      reg6[reg7] -> reg4",
      "31171 SET MEMORY ELEMENT IF INIT      1291 = reg4",
      "31174 JUMP IF FALSE      reg4 TO: 31309 | 31177"
  ],
  "31177": [
      "31177 PUSH MEMORY ELEMENT IF INIT      1292 -> reg6",
      "31180 LESS THAN      reg6 < 3 -> reg7",
      "31184 JUMP IF FALSE      reg7 TO: 31212 | 31187"
  ],
  "31187": [
      "31187 PUSH MEMORY ELEMENT IF INIT      1291 -> reg9",
      "31190 NEW ARRAY      1 -> reg11",
      "31193 PUSH MEMORY ELEMENT IF INIT      1293 -> reg10",
      "31196 PUT      reg11[0] = reg10",
      "31200 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "31204 SET      reg2 -> reg7",
      "31207 SET      reg7 -> reg6",
      "31210 JUMP      31294",
      "31294 JUMP IF TRUE      reg6 TO: 31303 | 31297"
  ],
  "31212": [
      "31212 PUSH MEMORY ELEMENT IF INIT      1292 -> reg7",
      "31215 GREATER THAN      reg7 > 3 -> reg11",
      "31219 JUMP IF FALSE      reg11 TO: 31261 | 31222"
  ],
  "31222": [
      "31222 PUSH MEMORY ELEMENT IF INIT      1291 -> reg10",
      "31225 NEW ARRAY      3 -> reg12",
      "31228 PUSH MEMORY ELEMENT IF INIT      1288 -> reg11",
      "31231 PUT      reg12[0] = reg11",
      "31235 PUSH MEMORY ELEMENT IF INIT      1289 -> reg11",
      "31238 PUT      reg12[1] = reg11",
      "31242 PUSH MEMORY ELEMENT IF INIT      1293 -> reg11",
      "31245 PUT      reg12[2] = reg11",
      "31249 CALL FUNCTION      PTR: reg10 MEM: reg12",
      "31253 SET      reg2 -> reg7",
      "31256 SET      reg7 -> reg9",
      "31259 JUMP      31291",
      "31291 SET      reg9 -> reg6",
      "31294 JUMP IF TRUE      reg6 TO: 31303 | 31297"
  ],
  "31261": [
      "31261 PUSH MEMORY ELEMENT IF INIT      1291 -> reg11",
      "31264 NEW ARRAY      2 -> reg10",
      "31267 PUSH MEMORY ELEMENT IF INIT      1288 -> reg12",
      "31270 PUT      reg10[0] = reg12",
      "31274 PUSH MEMORY ELEMENT IF INIT      1289 -> reg12",
      "31277 PUT      reg10[1] = reg12",
      "31281 CALL FUNCTION      PTR: reg11 MEM: reg10",
      "31285 SET      reg2 -> reg7",
      "31288 SET      reg7 -> reg9",
      "31291 SET      reg9 -> reg6",
      "31294 JUMP IF TRUE      reg6 TO: 31303 | 31297"
  ],
  "31297": [
      "31297 PUSH MEMORY ELEMENT IF INIT      1293 -> reg7",
      "31300 SET      reg7 -> reg6",
      "31303 SET MEMORY ELEMENT IF INIT      1293 = reg6",
      "31306 SET      reg6 -> reg4",
      "31309 PUSH MEMORY ELEMENT IF INIT      1294 -> reg6",
      "31312 SET      reg6 -> reg4",
      "31315 SUBTRACT      reg6 - 1 -> reg6",
      "31319 SET MEMORY ELEMENT IF INIT      1294 = reg6",
      "31322 JUMP      31151",
      "31151 PUSH MEMORY ELEMENT IF INIT      1294 -> reg11",
      "31154 GREATER THAN OR EQUAL      reg11 >= 0 -> reg6",
      "31158 JUMP IF FALSE      reg6 TO: 31324 | 31161"
  ],
  "31303": [
      "31303 SET MEMORY ELEMENT IF INIT      1293 = reg6",
      "31306 SET      reg6 -> reg4",
      "31309 PUSH MEMORY ELEMENT IF INIT      1294 -> reg6",
      "31312 SET      reg6 -> reg4",
      "31315 SUBTRACT      reg6 - 1 -> reg6",
      "31319 SET MEMORY ELEMENT IF INIT      1294 = reg6",
      "31322 JUMP      31151",
      "31151 PUSH MEMORY ELEMENT IF INIT      1294 -> reg11",
      "31154 GREATER THAN OR EQUAL      reg11 >= 0 -> reg6",
      "31158 JUMP IF FALSE      reg6 TO: 31324 | 31161"
  ],
  "31309": [
      "31309 PUSH MEMORY ELEMENT IF INIT      1294 -> reg6",
      "31312 SET      reg6 -> reg4",
      "31315 SUBTRACT      reg6 - 1 -> reg6",
      "31319 SET MEMORY ELEMENT IF INIT      1294 = reg6",
      "31322 JUMP      31151",
      "31151 PUSH MEMORY ELEMENT IF INIT      1294 -> reg11",
      "31154 GREATER THAN OR EQUAL      reg11 >= 0 -> reg6",
      "31158 JUMP IF FALSE      reg6 TO: 31324 | 31161"
  ],
  "31324": [
      "31324 PUSH MEMORY ELEMENT IF INIT      1292 -> reg4",
      "31327 GREATER THAN      reg4 > 3 -> reg7",
      "31331 JUMP IF FALSE      reg7 TO: 31340 | 31334"
  ],
  "31334": [
      "31334 PUSH MEMORY ELEMENT IF INIT      1293 -> reg4",
      "31337 SET      reg4 -> reg7",
      "31340 JUMP IF FALSE      reg7 TO: 31388 | 31343"
  ],
  "31340": ["31340 JUMP IF FALSE      reg7 TO: 31388 | 31343"],
  "31343": [
      "31343 GET WINDOW PROP      Object -> reg6",
      "31348 GET      reg6[defineProperty] -> reg9",
      "31354 NEW ARRAY      3 -> reg10",
      "31357 PUSH MEMORY ELEMENT IF INIT      1288 -> reg11",
      "31360 PUT      reg10[0] = reg11",
      "31364 PUSH MEMORY ELEMENT IF INIT      1289 -> reg11",
      "31367 PUT      reg10[1] = reg11",
      "31371 PUSH MEMORY ELEMENT IF INIT      1293 -> reg13",
      "31374 PUT      reg10[2] = reg13",
      "31378 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg10",
      "31382 SET      reg2 -> reg4",
      "31385 SET      reg4 -> reg7",
      "31388 PUSH MEMORY ELEMENT IF INIT      1293 -> reg7",
      "31391 JUMP OR RETURN VAL      reg7"
  ],
  "31388": [
      "31388 PUSH MEMORY ELEMENT IF INIT      1293 -> reg7",
      "31391 JUMP OR RETURN VAL      reg7"
  ],
  "31498": [
      "31498 GET WINDOW PROP      Reflect -> reg5",
      "31503 GET      reg5[metadata] -> reg6",
      "31509 TYPEOF      reg6 -> reg5",
      "31512 EQUAL      function == reg5 -> reg6",
      "31518 SET      reg6 -> reg4",
      "31521 JUMP IF FALSE      reg4 TO: 31561 | 31524"
  ],
  "31521": ["31521 JUMP IF FALSE      reg4 TO: 31561 | 31524"],
  "31524": [
      "31524 GET WINDOW PROP      Reflect -> reg4",
      "31529 GET      reg4[metadata] -> reg6",
      "31535 NEW ARRAY      2 -> reg7",
      "31538 PUSH MEMORY ELEMENT IF INIT      1314 -> reg8",
      "31541 PUT      reg7[0] = reg8",
      "31545 PUSH MEMORY ELEMENT IF INIT      1315 -> reg8",
      "31548 PUT      reg7[1] = reg8",
      "31552 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "31556 SET      reg2 -> reg5",
      "31559 JUMP OR RETURN VAL      reg5"
  ],
  "31561": ["31561 JUMP OR RETURN"],
  "31592": [
      "31592 PROMISE      -> reg7",
      "31594 SET MEMORY ELEMENT IF INIT      1321 = reg7",
      "31597 SET      reg7 -> reg5",
      "31600 NEW ARRAY      1 -> reg6",
      "31603 INIT FUNCTION STATE      PTR: 31612 NAME:  LEN: 2 -> reg7",
      "31610 JUMP      32064",
      "32064 PUT      reg6[0] = reg7",
      "32068 BIND APPLY      reg5 reg6 -> 4",
      "32072 JUMP OR RETURN VAL      reg4"
  ],
  "31600": [
      "31600 NEW ARRAY      1 -> reg6",
      "31603 INIT FUNCTION STATE      PTR: 31612 NAME:  LEN: 2 -> reg7",
      "31610 JUMP      32064",
      "32064 PUT      reg6[0] = reg7",
      "32068 BIND APPLY      reg5 reg6 -> 4",
      "32072 JUMP OR RETURN VAL      reg4"
  ],
  "31686": [
      "31686 SET I      null",
      "31688 PUSH F.K      -> reg4",
      "31690 VOID F",
      "31691 SET MEMORY ELEMENT      0 = reg4",
      "31694 PUSH MEMORY ELEMENT IF INIT      1327 -> reg6",
      "31697 NEW ARRAY      1 -> reg8",
      "31700 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "31703 PUT      reg8[0] = reg5",
      "31707 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "31711 SET      reg2 -> reg4",
      "31714 SET I      null",
      "31716 JUMP OR RETURN"
  ],
  "31779": [
      "31779 SET I      null",
      "31781 PUSH F.K      -> reg4",
      "31783 VOID F",
      "31784 SET MEMORY ELEMENT      0 = reg4",
      "31787 PUSH MEMORY ELEMENT IF INIT      1327 -> reg5",
      "31790 NEW ARRAY      1 -> reg6",
      "31793 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "31796 PUT      reg6[0] = reg9",
      "31800 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "31804 SET      reg2 -> reg4",
      "31807 SET I      null",
      "31809 JUMP OR RETURN"
  ],
  "31839": [
      "31839 PUSH MEMORY ELEMENT IF INIT      1326 -> reg6",
      "31842 NEW ARRAY      1 -> reg7",
      "31845 PUSH MEMORY ELEMENT IF INIT      1338 -> reg8",
      "31848 GET      reg8[value] -> reg10",
      "31854 PUT      reg7[0] = reg10",
      "31858 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "31862 SET      reg2 -> reg5",
      "31865 SET      reg5 -> reg4",
      "31868 JUMP      31986",
      "31986 JUMP OR RETURN"
  ],
  "31870": [
      "31870 PUSH MEMORY ELEMENT IF INIT      1338 -> reg6",
      "31873 GET      reg6[value] -> reg7",
      "31879 SET MEMORY ELEMENT IF INIT      1339 = reg7",
      "31882 PUSH MEMORY ELEMENT IF INIT      1339 -> reg6",
      "31885 PUSH MEMORY ELEMENT IF INIT      1321 -> reg7",
      "31888 INSTANCEOF      reg6 instanceof reg7 -> reg8",
      "31892 JUMP IF FALSE      reg8 TO: 31903 | 31895"
  ],
  "31895": [
      "31895 PUSH MEMORY ELEMENT IF INIT      1339 -> reg7",
      "31898 SET      reg7 -> reg6",
      "31901 JUMP      31953",
      "31953 GET      reg6[then] -> reg7",
      "31959 NEW ARRAY      2 -> reg8",
      "31962 PUSH MEMORY ELEMENT IF INIT      1328 -> reg9",
      "31965 PUT      reg8[0] = reg9",
      "31969 PUSH MEMORY ELEMENT IF INIT      1329 -> reg10",
      "31972 PUT      reg8[1] = reg10",
      "31976 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "31980 SET      reg2 -> reg5",
      "31983 SET      reg5 -> reg4",
      "31986 JUMP OR RETURN"
  ],
  "31903": [
      "31903 PUSH MEMORY ELEMENT IF INIT      1321 -> reg7",
      "31906 NEW ARRAY      1 -> reg9",
      "31909 INIT FUNCTION STATE      PTR: 31918 NAME:  LEN: 1 -> reg11",
      "31916 JUMP      31942",
      "31942 PUT      reg9[0] = reg11",
      "31946 BIND APPLY      reg7 reg9 -> 8",
      "31950 SET      reg8 -> reg6",
      "31953 GET      reg6[then] -> reg7",
      "31959 NEW ARRAY      2 -> reg8",
      "31962 PUSH MEMORY ELEMENT IF INIT      1328 -> reg9",
      "31965 PUT      reg8[0] = reg9",
      "31969 PUSH MEMORY ELEMENT IF INIT      1329 -> reg10",
      "31972 PUT      reg8[1] = reg10",
      "31976 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "31980 SET      reg2 -> reg5",
      "31983 SET      reg5 -> reg4",
      "31986 JUMP OR RETURN"
  ],
  "32018": [
      "32018 EMPTY ARRAY      -> reg13",
      "32020 SET      reg13 -> reg12",
      "32023 PUT      reg11[1] = reg12",
      "32027 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg11",
      "32031 SET      reg2 -> reg7",
      "32034 SET MEMORY ELEMENT IF INIT      1322 = reg7",
      "32037 GET      reg7[next] -> reg10",
      "32043 EMPTY ARRAY      -> reg11",
      "32045 CALL FUNCTION      OBJ: reg7 FUNC: reg10 ARGS: reg11",
      "32049 SET      reg2 -> reg9",
      "32052 PUT      reg6[0] = reg9",
      "32056 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "32060 SET      reg2 -> reg4",
      "32063 JUMP OR RETURN"
  ],
  "32023": [
      "32023 PUT      reg11[1] = reg12",
      "32027 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg11",
      "32031 SET      reg2 -> reg7",
      "32034 SET MEMORY ELEMENT IF INIT      1322 = reg7",
      "32037 GET      reg7[next] -> reg10",
      "32043 EMPTY ARRAY      -> reg11",
      "32045 CALL FUNCTION      OBJ: reg7 FUNC: reg10 ARGS: reg11",
      "32049 SET      reg2 -> reg9",
      "32052 PUT      reg6[0] = reg9",
      "32056 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "32060 SET      reg2 -> reg4",
      "32063 JUMP OR RETURN"
  ],
  "32149": [
      "32149 GET WINDOW PROP      TypeError -> reg4",
      "32154 NEW ARRAY      1 -> reg7",
      "32157 PUT      reg7[0] = Generator is already executing.",
      "32163 BIND APPLY      reg4 reg7 -> 5",
      "32167 HANDLE ERROR      reg5",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "32169": [
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "32175": [
      "32175 SET I      33069",
      "32177 SET N      33097",
      "32179 SET MEMORY ELEMENT IF INIT      1349 = 1",
      "32182 PUSH MEMORY ELEMENT IF INIT      1350 -> reg4",
      "32185 JUMP IF FALSE      reg4 TO: 32311 | 32188"
  ],
  "32188": [
      "32188 PUSH MEMORY ELEMENT IF INIT      1362 -> reg6",
      "32191 GET      reg6[0] -> reg5",
      "32195 AND      2 & reg5 -> reg7",
      "32199 JUMP IF FALSE      reg7 TO: 32216 | 32202"
  ],
  "32202": [
      "32202 PUSH MEMORY ELEMENT IF INIT      1350 -> reg7",
      "32205 GET      reg7[return] -> reg6",
      "32211 SET      reg6 -> reg5",
      "32214 JUMP      32305",
      "32305 SET MEMORY ELEMENT IF INIT      1351 = reg5",
      "32308 SET      reg5 -> reg4",
      "32311 JUMP IF FALSE      reg4 TO: 32366 | 32314"
  ],
  "32216": [
      "32216 PUSH MEMORY ELEMENT IF INIT      1362 -> reg6",
      "32219 GET      reg6[0] -> reg7",
      "32223 JUMP IF FALSE      reg7 TO: 32290 | 32226"
  ],
  "32226": [
      "32226 PUSH MEMORY ELEMENT IF INIT      1350 -> reg7",
      "32229 GET      reg7[throw] -> reg9",
      "32235 JUMP IF TRUE      reg9 TO: 32285 | 32238"
  ],
  "32238": [
      "32238 PUSH MEMORY ELEMENT IF INIT      1350 -> reg8",
      "32241 GET      reg8[return] -> reg7",
      "32247 SET MEMORY ELEMENT IF INIT      1351 = reg7",
      "32250 JUMP IF FALSE      reg7 TO: 32282 | 32253"
  ],
  "32253": [
      "32253 PUSH MEMORY ELEMENT IF INIT      1351 -> reg8",
      "32256 GET      reg8[call] -> reg12",
      "32262 NEW ARRAY      1 -> reg11",
      "32265 PUSH MEMORY ELEMENT IF INIT      1350 -> reg13",
      "32268 PUT      reg11[0] = reg13",
      "32272 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg11",
      "32276 SET      reg2 -> reg10",
      "32279 SET      reg10 -> reg7",
      "32282 SET      0 -> reg9",
      "32285 SET      reg9 -> reg6",
      "32288 JUMP      32302",
      "32302 SET      reg6 -> reg5",
      "32305 SET MEMORY ELEMENT IF INIT      1351 = reg5",
      "32308 SET      reg5 -> reg4",
      "32311 JUMP IF FALSE      reg4 TO: 32366 | 32314"
  ],
  "32282": [
      "32282 SET      0 -> reg9",
      "32285 SET      reg9 -> reg6",
      "32288 JUMP      32302",
      "32302 SET      reg6 -> reg5",
      "32305 SET MEMORY ELEMENT IF INIT      1351 = reg5",
      "32308 SET      reg5 -> reg4",
      "32311 JUMP IF FALSE      reg4 TO: 32366 | 32314"
  ],
  "32285": [
      "32285 SET      reg9 -> reg6",
      "32288 JUMP      32302",
      "32302 SET      reg6 -> reg5",
      "32305 SET MEMORY ELEMENT IF INIT      1351 = reg5",
      "32308 SET      reg5 -> reg4",
      "32311 JUMP IF FALSE      reg4 TO: 32366 | 32314"
  ],
  "32290": [
      "32290 PUSH MEMORY ELEMENT IF INIT      1350 -> reg7",
      "32293 GET      reg7[next] -> reg10",
      "32299 SET      reg10 -> reg6",
      "32302 SET      reg6 -> reg5",
      "32305 SET MEMORY ELEMENT IF INIT      1351 = reg5",
      "32308 SET      reg5 -> reg4",
      "32311 JUMP IF FALSE      reg4 TO: 32366 | 32314"
  ],
  "32311": ["32311 JUMP IF FALSE      reg4 TO: 32366 | 32314"],
  "32314": [
      "32314 PUSH MEMORY ELEMENT IF INIT      1351 -> reg10",
      "32317 GET      reg10[call] -> reg6",
      "32323 NEW ARRAY      2 -> reg7",
      "32326 PUSH MEMORY ELEMENT IF INIT      1350 -> reg9",
      "32329 PUT      reg7[0] = reg9",
      "32333 PUSH MEMORY ELEMENT IF INIT      1362 -> reg9",
      "32336 GET      reg9[1] -> reg12",
      "32340 PUT      reg7[1] = reg12",
      "32344 CALL FUNCTION      OBJ: reg10 FUNC: reg6 ARGS: reg7",
      "32348 SET      reg2 -> reg5",
      "32351 SET MEMORY ELEMENT IF INIT      1351 = reg5",
      "32354 GET      reg5[done] -> reg6",
      "32360 NOT      reg6 -> reg5",
      "32363 SET      reg5 -> reg4",
      "32366 JUMP IF FALSE      reg4 TO: 32374 | 32369"
  ],
  "32366": ["32366 JUMP IF FALSE      reg4 TO: 32374 | 32369"],
  "32369": [
      "32369 PUSH MEMORY ELEMENT IF INIT      1351 -> reg4",
      "32372 JUMP OR RETURN VAL      reg4"
  ],
  "32374": [
      "32374 SET MEMORY ELEMENT IF INIT      1350 = 0",
      "32377 PUSH MEMORY ELEMENT IF INIT      1351 -> reg5",
      "32380 JUMP IF FALSE      reg5 TO: 32420 | 32383"
  ],
  "32383": [
      "32383 NEW ARRAY      2 -> reg4",
      "32386 PUSH MEMORY ELEMENT IF INIT      1362 -> reg6",
      "32389 GET      reg6[0] -> reg7",
      "32393 AND      2 & reg7 -> reg6",
      "32397 PUT      reg4[0] = reg6",
      "32401 PUSH MEMORY ELEMENT IF INIT      1351 -> reg11",
      "32404 GET      reg11[value] -> reg6",
      "32410 PUT      reg4[1] = reg6",
      "32414 SET MEMORY ELEMENT IF INIT      1362 = reg4",
      "32417 SET      reg4 -> reg5",
      "32420 PUSH MEMORY ELEMENT IF INIT      1362 -> reg4",
      "32423 GET      reg4[0] -> reg6",
      "32427 EQUAL      reg6 == 0 -> reg4",
      "32431 JUMP IF FALSE      reg4 TO: 32436 | 32434"
  ],
  "32420": [
      "32420 PUSH MEMORY ELEMENT IF INIT      1362 -> reg4",
      "32423 GET      reg4[0] -> reg6",
      "32427 EQUAL      reg6 == 0 -> reg4",
      "32431 JUMP IF FALSE      reg4 TO: 32436 | 32434"
  ],
  "32434": [
      "32434 JUMP      32443",
      "32443 PUSH MEMORY ELEMENT IF INIT      1362 -> reg4",
      "32446 SET MEMORY ELEMENT IF INIT      1351 = reg4",
      "32449 JUMP      33031",
      "33031 PUSH MEMORY ELEMENT IF INIT      1348 -> reg9",
      "33034 GET      reg9[call] -> reg6",
      "33040 NEW ARRAY      2 -> reg15",
      "33043 PUSH MEMORY ELEMENT IF INIT      1347 -> reg12",
      "33046 PUT      reg15[0] = reg12",
      "33050 PUSH MEMORY ELEMENT IF INIT      1353 -> reg12",
      "33053 PUT      reg15[1] = reg12",
      "33057 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg15",
      "33061 SET      reg2 -> reg4",
      "33064 SET MEMORY ELEMENT IF INIT      1362 = reg4",
      "33067 JUMP      33097",
      "33097 SET I      null",
      "33099 SET N      null",
      "33101 SET MEMORY ELEMENT IF INIT      1351 = 0",
      "33104 SET MEMORY ELEMENT IF INIT      1349 = 0",
      "33107 HANDLE TRACE OR JUMP OR RETURN C",
      "33108 SET I      null",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "32436": [
      "32436 EQUAL      reg6 == 1 -> reg4",
      "32440 JUMP IF FALSE      reg4 TO: 32453 | 32443"
  ],
  "32443": [
      "32443 PUSH MEMORY ELEMENT IF INIT      1362 -> reg4",
      "32446 SET MEMORY ELEMENT IF INIT      1351 = reg4",
      "32449 JUMP      33031",
      "33031 PUSH MEMORY ELEMENT IF INIT      1348 -> reg9",
      "33034 GET      reg9[call] -> reg6",
      "33040 NEW ARRAY      2 -> reg15",
      "33043 PUSH MEMORY ELEMENT IF INIT      1347 -> reg12",
      "33046 PUT      reg15[0] = reg12",
      "33050 PUSH MEMORY ELEMENT IF INIT      1353 -> reg12",
      "33053 PUT      reg15[1] = reg12",
      "33057 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg15",
      "33061 SET      reg2 -> reg4",
      "33064 SET MEMORY ELEMENT IF INIT      1362 = reg4",
      "33067 JUMP      33097",
      "33097 SET I      null",
      "33099 SET N      null",
      "33101 SET MEMORY ELEMENT IF INIT      1351 = 0",
      "33104 SET MEMORY ELEMENT IF INIT      1349 = 0",
      "33107 HANDLE TRACE OR JUMP OR RETURN C",
      "33108 SET I      null",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "32453": [
      "32453 EQUAL      reg6 == 4 -> reg4",
      "32457 JUMP IF FALSE      reg4 TO: 32513 | 32460"
  ],
  "32460": [
      "32460 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32463 GET      reg4[label] -> reg5",
      "32469 SET      reg5 -> reg7",
      "32472 ADD      reg51-> reg5",
      "32476 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32479 PUT      reg4[label] = reg5",
      "32485 EMPTY OBJECT      -> reg4",
      "32487 PUSH MEMORY ELEMENT IF INIT      1362 -> reg5",
      "32490 GET      reg5[1] -> reg7",
      "32494 PUT      reg4[value] = reg7",
      "32500 NOT      1 -> reg5",
      "32503 PUT      reg4[done] = reg5",
      "32509 JUMP OR RETURN VAL      reg4"
  ],
  "32513": [
      "32513 EQUAL      reg6 == 5 -> reg4",
      "32517 JUMP IF FALSE      reg4 TO: 32569 | 32520"
  ],
  "32520": [
      "32520 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32523 GET      reg4[label] -> reg7",
      "32529 SET      reg7 -> reg4",
      "32532 ADD      reg71-> reg7",
      "32536 PUSH MEMORY ELEMENT IF INIT      1353 -> reg5",
      "32539 PUT      reg5[label] = reg7",
      "32545 PUSH MEMORY ELEMENT IF INIT      1362 -> reg5",
      "32548 GET      reg5[1] -> reg7",
      "32552 SET MEMORY ELEMENT IF INIT      1350 = reg7",
      "32555 NEW ARRAY      1 -> reg5",
      "32558 PUT      reg5[0] = 0",
      "32562 SET MEMORY ELEMENT IF INIT      1362 = reg5",
      "32565 JUMP      33110",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "32569": [
      "32569 EQUAL      reg6 == 7 -> reg4",
      "32573 JUMP IF FALSE      reg4 TO: 32631 | 32576"
  ],
  "32576": [
      "32576 PUSH MEMORY ELEMENT IF INIT      1353 -> reg7",
      "32579 GET      reg7[ops] -> reg5",
      "32585 GET      reg5[pop] -> reg9",
      "32591 EMPTY ARRAY      -> reg7",
      "32593 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg7",
      "32597 SET      reg2 -> reg4",
      "32600 SET MEMORY ELEMENT IF INIT      1362 = reg4",
      "32603 PUSH MEMORY ELEMENT IF INIT      1353 -> reg7",
      "32606 GET      reg7[trys] -> reg11",
      "32612 GET      reg11[pop] -> reg12",
      "32618 EMPTY ARRAY      -> reg9",
      "32620 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg9",
      "32624 SET      reg2 -> reg4",
      "32627 JUMP      33110",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "32631": [
      "32631 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32634 GET      reg4[trys] -> reg7",
      "32640 SET MEMORY ELEMENT IF INIT      1351 = reg7",
      "32643 PUSH MEMORY ELEMENT IF INIT      1351 -> reg4",
      "32646 GET      reg4[length] -> reg9",
      "32652 GREATER THAN      reg9 > 0 -> reg4",
      "32656 JUMP IF FALSE      reg4 TO: 32682 | 32659"
  ],
  "32659": [
      "32659 PUSH MEMORY ELEMENT IF INIT      1351 -> reg7",
      "32662 PUSH MEMORY ELEMENT IF INIT      1351 -> reg9",
      "32665 GET      reg9[length] -> reg15",
      "32671 SUBTRACT      reg15 - 1 -> reg9",
      "32675 GET      reg7[reg9] -> reg12",
      "32679 SET      reg12 -> reg4",
      "32682 SET MEMORY ELEMENT IF INIT      1351 = reg4",
      "32685 JUMP IF TRUE      reg4 TO: 32719 | 32688"
  ],
  "32682": [
      "32682 SET MEMORY ELEMENT IF INIT      1351 = reg4",
      "32685 JUMP IF TRUE      reg4 TO: 32719 | 32688"
  ],
  "32688": [
      "32688 PUSH MEMORY ELEMENT IF INIT      1362 -> reg12",
      "32691 GET      reg12[0] -> reg7",
      "32695 STRICT NOT EQUAL      6 !== reg7 -> reg14",
      "32699 JUMP IF FALSE      reg14 TO: 32716 | 32702"
  ],
  "32702": [
      "32702 PUSH MEMORY ELEMENT IF INIT      1362 -> reg7",
      "32705 GET      reg7[0] -> reg17",
      "32709 STRICT NOT EQUAL      2 !== reg17 -> reg7",
      "32713 SET      reg7 -> reg14",
      "32716 SET      reg14 -> reg4",
      "32719 NOT      reg4 -> reg7",
      "32722 JUMP IF FALSE      reg7 TO: 32730 | 32725"
  ],
  "32716": [
      "32716 SET      reg14 -> reg4",
      "32719 NOT      reg4 -> reg7",
      "32722 JUMP IF FALSE      reg7 TO: 32730 | 32725"
  ],
  "32719": [
      "32719 NOT      reg4 -> reg7",
      "32722 JUMP IF FALSE      reg7 TO: 32730 | 32725"
  ],
  "32725": [
      "32725 SET MEMORY ELEMENT IF INIT      1353 = 0",
      "32728 JUMP      33110",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "32730": [
      "32730 PUSH MEMORY ELEMENT IF INIT      1362 -> reg4",
      "32733 GET      reg4[0] -> reg7",
      "32737 STRICT EQUAL      3 === reg7 -> reg4",
      "32741 JUMP IF FALSE      reg4 TO: 32801 | 32744"
  ],
  "32744": [
      "32744 PUSH MEMORY ELEMENT IF INIT      1351 -> reg7",
      "32747 NOT      reg7 -> reg9",
      "32750 JUMP IF TRUE      reg9 TO: 32798 | 32753"
  ],
  "32753": [
      "32753 PUSH MEMORY ELEMENT IF INIT      1362 -> reg7",
      "32756 GET      reg7[1] -> reg13",
      "32760 PUSH MEMORY ELEMENT IF INIT      1351 -> reg12",
      "32763 GET      reg12[0] -> reg7",
      "32767 GREATER THAN      reg13 > reg7 -> reg14",
      "32771 JUMP IF FALSE      reg14 TO: 32795 | 32774"
  ],
  "32774": [
      "32774 PUSH MEMORY ELEMENT IF INIT      1362 -> reg7",
      "32777 GET      reg7[1] -> reg12",
      "32781 PUSH MEMORY ELEMENT IF INIT      1351 -> reg7",
      "32784 GET      reg7[3] -> reg15",
      "32788 LESS THAN      reg12 < reg15 -> reg7",
      "32792 SET      reg7 -> reg14",
      "32795 SET      reg14 -> reg9",
      "32798 SET      reg9 -> reg4",
      "32801 JUMP IF FALSE      reg4 TO: 32822 | 32804"
  ],
  "32795": [
      "32795 SET      reg14 -> reg9",
      "32798 SET      reg9 -> reg4",
      "32801 JUMP IF FALSE      reg4 TO: 32822 | 32804"
  ],
  "32798": [
      "32798 SET      reg9 -> reg4",
      "32801 JUMP IF FALSE      reg4 TO: 32822 | 32804"
  ],
  "32801": ["32801 JUMP IF FALSE      reg4 TO: 32822 | 32804"],
  "32804": [
      "32804 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32807 PUSH MEMORY ELEMENT IF INIT      1362 -> reg7",
      "32810 GET      reg7[1] -> reg12",
      "32814 PUT      reg4[label] = reg12",
      "32820 JUMP      33031",
      "33031 PUSH MEMORY ELEMENT IF INIT      1348 -> reg9",
      "33034 GET      reg9[call] -> reg6",
      "33040 NEW ARRAY      2 -> reg15",
      "33043 PUSH MEMORY ELEMENT IF INIT      1347 -> reg12",
      "33046 PUT      reg15[0] = reg12",
      "33050 PUSH MEMORY ELEMENT IF INIT      1353 -> reg12",
      "33053 PUT      reg15[1] = reg12",
      "33057 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg15",
      "33061 SET      reg2 -> reg4",
      "33064 SET MEMORY ELEMENT IF INIT      1362 = reg4",
      "33067 JUMP      33097",
      "33097 SET I      null",
      "33099 SET N      null",
      "33101 SET MEMORY ELEMENT IF INIT      1351 = 0",
      "33104 SET MEMORY ELEMENT IF INIT      1349 = 0",
      "33107 HANDLE TRACE OR JUMP OR RETURN C",
      "33108 SET I      null",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "32822": [
      "32822 PUSH MEMORY ELEMENT IF INIT      1362 -> reg9",
      "32825 GET      reg9[0] -> reg4",
      "32829 STRICT EQUAL      6 === reg4 -> reg7",
      "32833 JUMP IF FALSE      reg7 TO: 32859 | 32836"
  ],
  "32836": [
      "32836 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32839 GET      reg4[label] -> reg9",
      "32845 PUSH MEMORY ELEMENT IF INIT      1351 -> reg4",
      "32848 GET      reg4[1] -> reg13",
      "32852 LESS THAN      reg9 < reg13 -> reg4",
      "32856 SET      reg4 -> reg7",
      "32859 JUMP IF FALSE      reg7 TO: 32886 | 32862"
  ],
  "32859": ["32859 JUMP IF FALSE      reg7 TO: 32886 | 32862"],
  "32862": [
      "32862 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32865 PUSH MEMORY ELEMENT IF INIT      1351 -> reg9",
      "32868 GET      reg9[1] -> reg7",
      "32872 PUT      reg4[label] = reg7",
      "32878 PUSH MEMORY ELEMENT IF INIT      1362 -> reg7",
      "32881 SET MEMORY ELEMENT IF INIT      1351 = reg7",
      "32884 JUMP      33031",
      "33031 PUSH MEMORY ELEMENT IF INIT      1348 -> reg9",
      "33034 GET      reg9[call] -> reg6",
      "33040 NEW ARRAY      2 -> reg15",
      "33043 PUSH MEMORY ELEMENT IF INIT      1347 -> reg12",
      "33046 PUT      reg15[0] = reg12",
      "33050 PUSH MEMORY ELEMENT IF INIT      1353 -> reg12",
      "33053 PUT      reg15[1] = reg12",
      "33057 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg15",
      "33061 SET      reg2 -> reg4",
      "33064 SET MEMORY ELEMENT IF INIT      1362 = reg4",
      "33067 JUMP      33097",
      "33097 SET I      null",
      "33099 SET N      null",
      "33101 SET MEMORY ELEMENT IF INIT      1351 = 0",
      "33104 SET MEMORY ELEMENT IF INIT      1349 = 0",
      "33107 HANDLE TRACE OR JUMP OR RETURN C",
      "33108 SET I      null",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "32886": [
      "32886 PUSH MEMORY ELEMENT IF INIT      1351 -> reg7",
      "32889 JUMP IF FALSE      reg7 TO: 32915 | 32892"
  ],
  "32892": [
      "32892 PUSH MEMORY ELEMENT IF INIT      1353 -> reg12",
      "32895 GET      reg12[label] -> reg4",
      "32901 PUSH MEMORY ELEMENT IF INIT      1351 -> reg9",
      "32904 GET      reg9[2] -> reg12",
      "32908 LESS THAN      reg4 < reg12 -> reg9",
      "32912 SET      reg9 -> reg7",
      "32915 JUMP IF FALSE      reg7 TO: 32968 | 32918"
  ],
  "32915": ["32915 JUMP IF FALSE      reg7 TO: 32968 | 32918"],
  "32918": [
      "32918 PUSH MEMORY ELEMENT IF INIT      1353 -> reg9",
      "32921 PUSH MEMORY ELEMENT IF INIT      1351 -> reg7",
      "32924 GET      reg7[2] -> reg12",
      "32928 PUT      reg9[label] = reg12",
      "32934 PUSH MEMORY ELEMENT IF INIT      1353 -> reg9",
      "32937 GET      reg9[ops] -> reg7",
      "32943 GET      reg7[push] -> reg9",
      "32949 NEW ARRAY      1 -> reg12",
      "32952 PUSH MEMORY ELEMENT IF INIT      1362 -> reg13",
      "32955 PUT      reg12[0] = reg13",
      "32959 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg12",
      "32963 SET      reg2 -> reg4",
      "32966 JUMP      33031",
      "33031 PUSH MEMORY ELEMENT IF INIT      1348 -> reg9",
      "33034 GET      reg9[call] -> reg6",
      "33040 NEW ARRAY      2 -> reg15",
      "33043 PUSH MEMORY ELEMENT IF INIT      1347 -> reg12",
      "33046 PUT      reg15[0] = reg12",
      "33050 PUSH MEMORY ELEMENT IF INIT      1353 -> reg12",
      "33053 PUT      reg15[1] = reg12",
      "33057 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg15",
      "33061 SET      reg2 -> reg4",
      "33064 SET MEMORY ELEMENT IF INIT      1362 = reg4",
      "33067 JUMP      33097",
      "33097 SET I      null",
      "33099 SET N      null",
      "33101 SET MEMORY ELEMENT IF INIT      1351 = 0",
      "33104 SET MEMORY ELEMENT IF INIT      1349 = 0",
      "33107 HANDLE TRACE OR JUMP OR RETURN C",
      "33108 SET I      null",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "32968": [
      "32968 PUSH MEMORY ELEMENT IF INIT      1351 -> reg4",
      "32971 GET      reg4[2] -> reg9",
      "32975 JUMP IF FALSE      reg9 TO: 33005 | 32978"
  ],
  "32978": [
      "32978 PUSH MEMORY ELEMENT IF INIT      1353 -> reg12",
      "32981 GET      reg12[ops] -> reg13",
      "32987 GET      reg13[pop] -> reg12",
      "32993 EMPTY ARRAY      -> reg14",
      "32995 CALL FUNCTION      OBJ: reg13 FUNC: reg12 ARGS: reg14",
      "32999 SET      reg2 -> reg4",
      "33002 SET      reg4 -> reg9",
      "33005 PUSH MEMORY ELEMENT IF INIT      1353 -> reg9",
      "33008 GET      reg9[trys] -> reg14",
      "33014 GET      reg14[pop] -> reg12",
      "33020 EMPTY ARRAY      -> reg9",
      "33022 CALL FUNCTION      OBJ: reg14 FUNC: reg12 ARGS: reg9",
      "33026 SET      reg2 -> reg4",
      "33029 JUMP      33110",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "33005": [
      "33005 PUSH MEMORY ELEMENT IF INIT      1353 -> reg9",
      "33008 GET      reg9[trys] -> reg14",
      "33014 GET      reg14[pop] -> reg12",
      "33020 EMPTY ARRAY      -> reg9",
      "33022 CALL FUNCTION      OBJ: reg14 FUNC: reg12 ARGS: reg9",
      "33026 SET      reg2 -> reg4",
      "33029 JUMP      33110",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "33069": [
      "33069 SET I      33097",
      "33071 PUSH F.K      -> reg6",
      "33073 VOID F",
      "33074 SET MEMORY ELEMENT      0 = reg6",
      "33077 NEW ARRAY      2 -> reg4",
      "33080 PUT      reg4[0] = 6",
      "33084 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "33087 PUT      reg4[1] = reg6",
      "33091 SET MEMORY ELEMENT IF INIT      1362 = reg4",
      "33094 SET MEMORY ELEMENT IF INIT      1350 = 0",
      "33097 SET I      null",
      "33099 SET N      null",
      "33101 SET MEMORY ELEMENT IF INIT      1351 = 0",
      "33104 SET MEMORY ELEMENT IF INIT      1349 = 0",
      "33107 HANDLE TRACE OR JUMP OR RETURN C",
      "33108 SET I      null",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "33097": [
      "33097 SET I      null",
      "33099 SET N      null",
      "33101 SET MEMORY ELEMENT IF INIT      1351 = 0",
      "33104 SET MEMORY ELEMENT IF INIT      1349 = 0",
      "33107 HANDLE TRACE OR JUMP OR RETURN C",
      "33108 SET I      null",
      "33110 JUMP      32169",
      "32169 PUSH MEMORY ELEMENT IF INIT      1353 -> reg4",
      "32172 JUMP IF FALSE      reg4 TO: 33112 | 32175"
  ],
  "33112": [
      "33112 PUSH MEMORY ELEMENT IF INIT      1362 -> reg6",
      "33115 GET      reg6[0] -> reg15",
      "33119 AND      5 & reg15 -> reg6",
      "33123 JUMP IF FALSE      reg6 TO: 33135 | 33126"
  ],
  "33126": [
      "33126 PUSH MEMORY ELEMENT IF INIT      1362 -> reg4",
      "33129 GET      reg4[1] -> reg6",
      "33133 HANDLE ERROR      reg6",
      "33135 EMPTY OBJECT      -> reg4",
      "33137 PUSH MEMORY ELEMENT IF INIT      1362 -> reg6",
      "33140 GET      reg6[0] -> reg12",
      "33144 JUMP IF FALSE      reg12 TO: 33159 | 33147"
  ],
  "33135": [
      "33135 EMPTY OBJECT      -> reg4",
      "33137 PUSH MEMORY ELEMENT IF INIT      1362 -> reg6",
      "33140 GET      reg6[0] -> reg12",
      "33144 JUMP IF FALSE      reg12 TO: 33159 | 33147"
  ],
  "33147": [
      "33147 PUSH MEMORY ELEMENT IF INIT      1362 -> reg12",
      "33150 GET      reg12[1] -> reg15",
      "33154 SET      reg15 -> reg6",
      "33157 JUMP      33165",
      "33165 PUT      reg4[value] = reg6",
      "33171 NOT      0 -> reg12",
      "33174 PUT      reg4[done] = reg12",
      "33180 JUMP OR RETURN VAL      reg4"
  ],
  "33159": [
      "33159 SET      undefined -> reg12",
      "33162 SET      reg12 -> reg6",
      "33165 PUT      reg4[value] = reg6",
      "33171 NOT      0 -> reg12",
      "33174 PUT      reg4[done] = reg12",
      "33180 JUMP OR RETURN VAL      reg4"
  ],
  "33250": [
      "33250 PUSH MEMORY ELEMENT IF INIT      1351 -> reg4",
      "33253 GET      reg4[1] -> reg5",
      "33257 HANDLE ERROR      reg5",
      "33259 PUSH MEMORY ELEMENT IF INIT      1351 -> reg4",
      "33262 GET      reg4[1] -> reg5",
      "33266 JUMP OR RETURN VAL      reg5"
  ],
  "33259": [
      "33259 PUSH MEMORY ELEMENT IF INIT      1351 -> reg4",
      "33262 GET      reg4[1] -> reg5",
      "33266 JUMP OR RETURN VAL      reg5"
  ],
  "33384": [
      "33384 PUSH MEMORY ELEMENT IF INIT      1352 -> reg4",
      "33387 GET WINDOW PROP      Symbol -> reg6",
      "33392 GET      reg6[iterator] -> reg7",
      "33398 INIT FUNCTION STATE      PTR: 33407 NAME:  LEN: 0 -> reg8",
      "33405 JUMP      33411",
      "33411 PUT      reg4[reg7] = reg8",
      "33415 SET      reg8 -> reg5",
      "33418 PUSH MEMORY ELEMENT IF INIT      1352 -> reg5",
      "33421 JUMP OR RETURN VAL      reg5"
  ],
  "33418": [
      "33418 PUSH MEMORY ELEMENT IF INIT      1352 -> reg5",
      "33421 JUMP OR RETURN VAL      reg5"
  ],
  "33463": [
      "33463 SET      0 -> reg7",
      "33466 GET      reg6[reg7] -> reg4",
      "33470 SET MEMORY ELEMENT IF INIT      1399 = reg4",
      "33473 PUSH MEMORY ELEMENT IF INIT      1399 -> reg9",
      "33476 STRICT EQUAL      default === reg9 -> reg8",
      "33482 JUMP IF TRUE      reg8 TO: 33535 | 33485"
  ],
  "33466": [
      "33466 GET      reg6[reg7] -> reg4",
      "33470 SET MEMORY ELEMENT IF INIT      1399 = reg4",
      "33473 PUSH MEMORY ELEMENT IF INIT      1399 -> reg9",
      "33476 STRICT EQUAL      default === reg9 -> reg8",
      "33482 JUMP IF TRUE      reg8 TO: 33535 | 33485"
  ],
  "33485": [
      "33485 GET WINDOW PROP      Object -> reg11",
      "33490 GET      reg11[prototype] -> reg10",
      "33496 GET      reg10[hasOwnProperty] -> reg11",
      "33502 GET      reg11[call] -> reg13",
      "33508 NEW ARRAY      2 -> reg10",
      "33511 PUSH MEMORY ELEMENT IF INIT      1398 -> reg14",
      "33514 PUT      reg10[0] = reg14",
      "33518 PUSH MEMORY ELEMENT IF INIT      1399 -> reg12",
      "33521 PUT      reg10[1] = reg12",
      "33525 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg10",
      "33529 SET      reg2 -> reg9",
      "33532 SET      reg9 -> reg8",
      "33535 JUMP IF TRUE      reg8 TO: 33575 | 33538"
  ],
  "33535": ["33535 JUMP IF TRUE      reg8 TO: 33575 | 33538"],
  "33538": [
      "33538 PUSH MEMORY ELEMENT IF INIT      1246 -> reg13",
      "33541 NEW ARRAY      3 -> reg10",
      "33544 PUSH MEMORY ELEMENT IF INIT      1398 -> reg12",
      "33547 PUT      reg10[0] = reg12",
      "33551 PUSH MEMORY ELEMENT IF INIT      1397 -> reg12",
      "33554 PUT      reg10[1] = reg12",
      "33558 PUSH MEMORY ELEMENT IF INIT      1399 -> reg14",
      "33561 PUT      reg10[2] = reg14",
      "33565 CALL FUNCTION      PTR: reg13 MEM: reg10",
      "33569 SET      reg2 -> reg9",
      "33572 SET      reg9 -> reg8",
      "33575 ADD      reg71-> reg7",
      "33579 LESS THAN      reg7 < reg5 -> reg8",
      "33583 JUMP IF TRUE      reg8 TO: 33466 | 33586"
  ],
  "33575": [
      "33575 ADD      reg71-> reg7",
      "33579 LESS THAN      reg7 < reg5 -> reg8",
      "33583 JUMP IF TRUE      reg8 TO: 33466 | 33586"
  ],
  "33586": ["33586 JUMP OR RETURN"],
  "33625": [
      "33625 GET WINDOW PROP      Symbol -> reg6",
      "33630 GET      reg6[iterator] -> reg4",
      "33636 SET      reg4 -> reg5",
      "33639 SET MEMORY ELEMENT IF INIT      1405 = reg5",
      "33642 PUSH MEMORY ELEMENT IF INIT      1405 -> reg5",
      "33645 JUMP IF FALSE      reg5 TO: 33661 | 33648"
  ],
  "33639": [
      "33639 SET MEMORY ELEMENT IF INIT      1405 = reg5",
      "33642 PUSH MEMORY ELEMENT IF INIT      1405 -> reg5",
      "33645 JUMP IF FALSE      reg5 TO: 33661 | 33648"
  ],
  "33648": [
      "33648 PUSH MEMORY ELEMENT IF INIT      1404 -> reg4",
      "33651 PUSH MEMORY ELEMENT IF INIT      1405 -> reg7",
      "33654 GET      reg4[reg7] -> reg6",
      "33658 SET      reg6 -> reg5",
      "33661 SET MEMORY ELEMENT IF INIT      1406 = reg5",
      "33664 SET MEMORY ELEMENT IF INIT      1407 = 0",
      "33667 PUSH MEMORY ELEMENT IF INIT      1406 -> reg4",
      "33670 JUMP IF FALSE      reg4 TO: 33701 | 33673"
  ],
  "33661": [
      "33661 SET MEMORY ELEMENT IF INIT      1406 = reg5",
      "33664 SET MEMORY ELEMENT IF INIT      1407 = 0",
      "33667 PUSH MEMORY ELEMENT IF INIT      1406 -> reg4",
      "33670 JUMP IF FALSE      reg4 TO: 33701 | 33673"
  ],
  "33673": [
      "33673 PUSH MEMORY ELEMENT IF INIT      1406 -> reg4",
      "33676 GET      reg4[call] -> reg6",
      "33682 NEW ARRAY      1 -> reg7",
      "33685 PUSH MEMORY ELEMENT IF INIT      1404 -> reg8",
      "33688 PUT      reg7[0] = reg8",
      "33692 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "33696 SET      reg2 -> reg5",
      "33699 JUMP OR RETURN VAL      reg5"
  ],
  "33701": [
      "33701 PUSH MEMORY ELEMENT IF INIT      1404 -> reg6",
      "33704 JUMP IF FALSE      reg6 TO: 33728 | 33707"
  ],
  "33707": [
      "33707 PUSH MEMORY ELEMENT IF INIT      1404 -> reg5",
      "33710 GET      reg5[length] -> reg8",
      "33716 TYPEOF      reg8 -> reg7",
      "33719 EQUAL      number == reg7 -> reg5",
      "33725 SET      reg5 -> reg6",
      "33728 JUMP IF FALSE      reg6 TO: 33840 | 33731"
  ],
  "33728": ["33728 JUMP IF FALSE      reg6 TO: 33840 | 33731"],
  "33731": [
      "33731 EMPTY OBJECT      -> reg5",
      "33733 INIT FUNCTION STATE      PTR: 33742 NAME:  LEN: 0 -> reg6",
      "33740 JUMP      33832",
      "33832 PUT      reg5[next] = reg6",
      "33838 JUMP OR RETURN VAL      reg5"
  ],
  "33750": [
      "33750 PUSH MEMORY ELEMENT IF INIT      1407 -> reg9",
      "33753 PUSH MEMORY ELEMENT IF INIT      1404 -> reg5",
      "33756 GET      reg5[length] -> reg6",
      "33762 GREATER THAN OR EQUAL      reg9 >= reg6 -> reg5",
      "33766 SET      reg5 -> reg4",
      "33769 JUMP IF FALSE      reg4 TO: 33781 | 33772"
  ],
  "33769": ["33769 JUMP IF FALSE      reg4 TO: 33781 | 33772"],
  "33772": [
      "33772 SET      undefined -> reg5",
      "33775 SET MEMORY ELEMENT IF INIT      1404 = reg5",
      "33778 SET      reg5 -> reg4",
      "33781 EMPTY OBJECT      -> reg4",
      "33783 PUSH MEMORY ELEMENT IF INIT      1404 -> reg10",
      "33786 JUMP IF FALSE      reg10 TO: 33812 | 33789"
  ],
  "33781": [
      "33781 EMPTY OBJECT      -> reg4",
      "33783 PUSH MEMORY ELEMENT IF INIT      1404 -> reg10",
      "33786 JUMP IF FALSE      reg10 TO: 33812 | 33789"
  ],
  "33789": [
      "33789 PUSH MEMORY ELEMENT IF INIT      1404 -> reg7",
      "33792 PUSH MEMORY ELEMENT IF INIT      1407 -> reg5",
      "33795 SET      reg5 -> reg8",
      "33798 ADD      reg51-> reg5",
      "33802 SET MEMORY ELEMENT IF INIT      1407 = reg5",
      "33805 GET      reg7[reg8] -> reg6",
      "33809 SET      reg6 -> reg10",
      "33812 PUT      reg4[value] = reg10",
      "33818 PUSH MEMORY ELEMENT IF INIT      1404 -> reg6",
      "33821 NOT      reg6 -> reg5",
      "33824 PUT      reg4[done] = reg5",
      "33830 JUMP OR RETURN VAL      reg4"
  ],
  "33812": [
      "33812 PUT      reg4[value] = reg10",
      "33818 PUSH MEMORY ELEMENT IF INIT      1404 -> reg6",
      "33821 NOT      reg6 -> reg5",
      "33824 PUT      reg4[done] = reg5",
      "33830 JUMP OR RETURN VAL      reg4"
  ],
  "33840": [
      "33840 GET WINDOW PROP      TypeError -> reg5",
      "33845 NEW ARRAY      1 -> reg8",
      "33848 PUSH MEMORY ELEMENT IF INIT      1405 -> reg7",
      "33851 JUMP IF FALSE      reg7 TO: 33861 | 33854"
  ],
  "33854": [
      "33854 SET      Object is not iterable. -> reg9",
      "33859 JUMP      33866",
      "33866 PUT      reg8[0] = reg9",
      "33870 BIND APPLY      reg5 reg8 -> 6",
      "33874 HANDLE ERROR      reg6",
      "33876 JUMP OR RETURN"
  ],
  "33861": [
      "33861 SET      Symbol.iterator is not defined. -> reg9",
      "33866 PUT      reg8[0] = reg9",
      "33870 BIND APPLY      reg5 reg8 -> 6",
      "33874 HANDLE ERROR      reg6",
      "33876 JUMP OR RETURN"
  ],
  "33922": [
      "33922 PUSH MEMORY ELEMENT IF INIT      1420 -> reg5",
      "33925 GET WINDOW PROP      Symbol -> reg7",
      "33930 GET      reg7[iterator] -> reg8",
      "33936 GET      reg5[reg8] -> reg6",
      "33940 SET      reg6 -> reg4",
      "33943 SET MEMORY ELEMENT IF INIT      1422 = reg4",
      "33946 PUSH MEMORY ELEMENT IF INIT      1422 -> reg5",
      "33949 NOT      reg5 -> reg4",
      "33952 JUMP IF FALSE      reg4 TO: 33960 | 33955"
  ],
  "33943": [
      "33943 SET MEMORY ELEMENT IF INIT      1422 = reg4",
      "33946 PUSH MEMORY ELEMENT IF INIT      1422 -> reg5",
      "33949 NOT      reg5 -> reg4",
      "33952 JUMP IF FALSE      reg4 TO: 33960 | 33955"
  ],
  "33955": [
      "33955 PUSH MEMORY ELEMENT IF INIT      1420 -> reg4",
      "33958 JUMP OR RETURN VAL      reg4"
  ],
  "33960": [
      "33960 PUSH MEMORY ELEMENT IF INIT      1422 -> reg10",
      "33963 GET      reg10[call] -> reg6",
      "33969 NEW ARRAY      1 -> reg5",
      "33972 PUSH MEMORY ELEMENT IF INIT      1420 -> reg7",
      "33975 PUT      reg5[0] = reg7",
      "33979 CALL FUNCTION      OBJ: reg10 FUNC: reg6 ARGS: reg5",
      "33983 SET      reg2 -> reg4",
      "33986 SET MEMORY ELEMENT IF INIT      1425 = reg4",
      "33989 EMPTY ARRAY      -> reg5",
      "33991 SET MEMORY ELEMENT IF INIT      1426 = reg5",
      "33994 SET I      34106",
      "33996 SET N      34128",
      "33998 SET      undefined -> reg4",
      "34001 PUSH MEMORY ELEMENT IF INIT      1421 -> reg5",
      "34004 STRICT EQUAL      reg4 === reg5 -> reg6",
      "34008 JUMP IF TRUE      reg6 TO: 34031 | 34011"
  ],
  "34011": [
      "34011 PUSH MEMORY ELEMENT IF INIT      1421 -> reg4",
      "34014 SET      reg4 -> reg5",
      "34017 SUBTRACT      reg4 - 1 -> reg4",
      "34021 SET MEMORY ELEMENT IF INIT      1421 = reg4",
      "34024 GREATER THAN      reg5 > 0 -> reg9",
      "34028 SET      reg9 -> reg6",
      "34031 JUMP IF FALSE      reg6 TO: 34067 | 34034"
  ],
  "34031": ["34031 JUMP IF FALSE      reg6 TO: 34067 | 34034"],
  "34034": [
      "34034 PUSH MEMORY ELEMENT IF INIT      1425 -> reg8",
      "34037 GET      reg8[next] -> reg9",
      "34043 EMPTY ARRAY      -> reg12",
      "34045 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg12",
      "34049 SET      reg2 -> reg4",
      "34052 SET MEMORY ELEMENT IF INIT      1423 = reg4",
      "34055 GET      reg4[done] -> reg5",
      "34061 NOT      reg5 -> reg4",
      "34064 SET      reg4 -> reg6",
      "34067 JUMP IF FALSE      reg6 TO: 34104 | 34070"
  ],
  "34067": ["34067 JUMP IF FALSE      reg6 TO: 34104 | 34070"],
  "34070": [
      "34070 PUSH MEMORY ELEMENT IF INIT      1426 -> reg7",
      "34073 GET      reg7[push] -> reg5",
      "34079 NEW ARRAY      1 -> reg6",
      "34082 PUSH MEMORY ELEMENT IF INIT      1423 -> reg11",
      "34085 GET      reg11[value] -> reg9",
      "34091 PUT      reg6[0] = reg9",
      "34095 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg6",
      "34099 SET      reg2 -> reg4",
      "34102 JUMP      33998",
      "33998 SET      undefined -> reg4",
      "34001 PUSH MEMORY ELEMENT IF INIT      1421 -> reg5",
      "34004 STRICT EQUAL      reg4 === reg5 -> reg6",
      "34008 JUMP IF TRUE      reg6 TO: 34031 | 34011"
  ],
  "34104": [
      "34104 JUMP      34128",
      "34128 SET I      null",
      "34130 SET N      null",
      "34132 SET I      34207",
      "34134 SET N      34207",
      "34136 PUSH MEMORY ELEMENT IF INIT      1423 -> reg4",
      "34139 JUMP IF FALSE      reg4 TO: 34157 | 34142"
  ],
  "34106": [
      "34106 SET I      34128",
      "34108 PUSH F.K      -> reg6",
      "34110 VOID F",
      "34111 SET MEMORY ELEMENT      0 = reg6",
      "34114 EMPTY OBJECT      -> reg4",
      "34116 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "34119 PUT      reg4[error] = reg6",
      "34125 SET MEMORY ELEMENT IF INIT      1424 = reg4",
      "34128 SET I      null",
      "34130 SET N      null",
      "34132 SET I      34207",
      "34134 SET N      34207",
      "34136 PUSH MEMORY ELEMENT IF INIT      1423 -> reg4",
      "34139 JUMP IF FALSE      reg4 TO: 34157 | 34142"
  ],
  "34128": [
      "34128 SET I      null",
      "34130 SET N      null",
      "34132 SET I      34207",
      "34134 SET N      34207",
      "34136 PUSH MEMORY ELEMENT IF INIT      1423 -> reg4",
      "34139 JUMP IF FALSE      reg4 TO: 34157 | 34142"
  ],
  "34142": [
      "34142 PUSH MEMORY ELEMENT IF INIT      1423 -> reg5",
      "34145 GET      reg5[done] -> reg6",
      "34151 NOT      reg6 -> reg5",
      "34154 SET      reg5 -> reg4",
      "34157 JUMP IF FALSE      reg4 TO: 34175 | 34160"
  ],
  "34157": ["34157 JUMP IF FALSE      reg4 TO: 34175 | 34160"],
  "34160": [
      "34160 PUSH MEMORY ELEMENT IF INIT      1425 -> reg5",
      "34163 GET      reg5[return] -> reg9",
      "34169 SET MEMORY ELEMENT IF INIT      1422 = reg9",
      "34172 SET      reg9 -> reg4",
      "34175 JUMP IF FALSE      reg4 TO: 34207 | 34178"
  ],
  "34175": ["34175 JUMP IF FALSE      reg4 TO: 34207 | 34178"],
  "34178": [
      "34178 PUSH MEMORY ELEMENT IF INIT      1422 -> reg6",
      "34181 GET      reg6[call] -> reg9",
      "34187 NEW ARRAY      1 -> reg11",
      "34190 PUSH MEMORY ELEMENT IF INIT      1425 -> reg13",
      "34193 PUT      reg11[0] = reg13",
      "34197 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg11",
      "34201 SET      reg2 -> reg5",
      "34204 SET      reg5 -> reg4",
      "34207 SET I      null",
      "34209 SET N      null",
      "34211 PUSH MEMORY ELEMENT IF INIT      1424 -> reg4",
      "34214 JUMP IF FALSE      reg4 TO: 34228 | 34217"
  ],
  "34207": [
      "34207 SET I      null",
      "34209 SET N      null",
      "34211 PUSH MEMORY ELEMENT IF INIT      1424 -> reg4",
      "34214 JUMP IF FALSE      reg4 TO: 34228 | 34217"
  ],
  "34217": [
      "34217 PUSH MEMORY ELEMENT IF INIT      1424 -> reg4",
      "34220 GET      reg4[error] -> reg5",
      "34226 HANDLE ERROR      reg5",
      "34228 HANDLE TRACE OR JUMP OR RETURN C",
      "34229 SET I      null",
      "34231 HANDLE TRACE OR JUMP OR RETURN C",
      "34232 SET I      null",
      "34234 PUSH MEMORY ELEMENT IF INIT      1426 -> reg4",
      "34237 JUMP OR RETURN VAL      reg4"
  ],
  "34228": [
      "34228 HANDLE TRACE OR JUMP OR RETURN C",
      "34229 SET I      null",
      "34231 HANDLE TRACE OR JUMP OR RETURN C",
      "34232 SET I      null",
      "34234 PUSH MEMORY ELEMENT IF INIT      1426 -> reg4",
      "34237 JUMP OR RETURN VAL      reg4"
  ],
  "34279": [
      "34279 PUSH MEMORY ELEMENT IF INIT      1439 -> reg5",
      "34282 GET      reg5[concat] -> reg6",
      "34288 NEW ARRAY      1 -> reg7",
      "34291 PUSH MEMORY ELEMENT IF INIT      1249 -> reg9",
      "34294 NEW ARRAY      1 -> reg10",
      "34297 PUSH MEMORY ELEMENT IF INIT      1440 -> reg12",
      "34300 GET      reg3[reg12] -> reg11",
      "34304 PUT      reg10[0] = reg11",
      "34308 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "34312 SET      reg2 -> reg8",
      "34315 PUT      reg7[0] = reg8",
      "34319 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "34323 SET      reg2 -> reg4",
      "34326 SET MEMORY ELEMENT IF INIT      1439 = reg4",
      "34329 PUSH MEMORY ELEMENT IF INIT      1440 -> reg4",
      "34332 SET      reg4 -> reg7",
      "34335 ADD      reg41-> reg4",
      "34339 SET MEMORY ELEMENT IF INIT      1440 = reg4",
      "34342 JUMP      34263",
      "34263 PUSH MEMORY ELEMENT IF INIT      1440 -> reg4",
      "34266 GET      reg3[length] -> reg6",
      "34272 LESS THAN      reg4 < reg6 -> reg5",
      "34276 JUMP IF FALSE      reg5 TO: 34344 | 34279"
  ],
  "34344": [
      "34344 PUSH MEMORY ELEMENT IF INIT      1439 -> reg4",
      "34347 JUMP OR RETURN VAL      reg4"
  ],
  "34405": [
      "34405 PUSH MEMORY ELEMENT IF INIT      1443 -> reg4",
      "34408 PUSH MEMORY ELEMENT IF INIT      1444 -> reg6",
      "34411 GET      reg3[reg6] -> reg5",
      "34415 GET      reg5[length] -> reg7",
      "34421 ADD      reg4NaN-> reg7",
      "34425 SET MEMORY ELEMENT IF INIT      1443 = reg7",
      "34428 PUSH MEMORY ELEMENT IF INIT      1444 -> reg4",
      "34431 SET      reg4 -> reg5",
      "34434 ADD      reg41-> reg4",
      "34438 SET MEMORY ELEMENT IF INIT      1444 = reg4",
      "34441 JUMP      34392",
      "34392 PUSH MEMORY ELEMENT IF INIT      1444 -> reg7",
      "34395 PUSH MEMORY ELEMENT IF INIT      1445 -> reg5",
      "34398 LESS THAN      reg7 < reg5 -> reg6",
      "34402 JUMP IF FALSE      reg6 TO: 34443 | 34405"
  ],
  "34443": [
      "34443 GET WINDOW PROP      Array -> reg5",
      "34448 NEW ARRAY      1 -> reg6",
      "34451 PUSH MEMORY ELEMENT IF INIT      1443 -> reg7",
      "34454 PUT      reg6[0] = reg7",
      "34458 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "34462 SET      reg2 -> reg4",
      "34465 SET MEMORY ELEMENT IF INIT      1446 = reg4",
      "34468 SET MEMORY ELEMENT IF INIT      1447 = 0",
      "34471 SET MEMORY ELEMENT IF INIT      1444 = 0",
      "34474 PUSH MEMORY ELEMENT IF INIT      1444 -> reg4",
      "34477 PUSH MEMORY ELEMENT IF INIT      1445 -> reg5",
      "34480 LESS THAN      reg4 < reg5 -> reg6",
      "34484 JUMP IF FALSE      reg6 TO: 34588 | 34487"
  ],
  "34487": [
      "34487 PUSH MEMORY ELEMENT IF INIT      1444 -> reg6",
      "34490 GET      reg3[reg6] -> reg4",
      "34494 SET MEMORY ELEMENT IF INIT      1448 = reg4",
      "34497 SET MEMORY ELEMENT IF INIT      1449 = 0",
      "34500 PUSH MEMORY ELEMENT IF INIT      1448 -> reg4",
      "34503 GET      reg4[length] -> reg5",
      "34509 SET MEMORY ELEMENT IF INIT      1450 = reg5",
      "34512 PUSH MEMORY ELEMENT IF INIT      1449 -> reg4",
      "34515 PUSH MEMORY ELEMENT IF INIT      1450 -> reg5",
      "34518 LESS THAN      reg4 < reg5 -> reg6",
      "34522 JUMP IF FALSE      reg6 TO: 34573 | 34525"
  ],
  "34525": [
      "34525 PUSH MEMORY ELEMENT IF INIT      1446 -> reg6",
      "34528 PUSH MEMORY ELEMENT IF INIT      1447 -> reg4",
      "34531 PUSH MEMORY ELEMENT IF INIT      1448 -> reg5",
      "34534 PUSH MEMORY ELEMENT IF INIT      1449 -> reg9",
      "34537 GET      reg5[reg9] -> reg7",
      "34541 PUT      reg6[reg4] = reg7",
      "34545 PUSH MEMORY ELEMENT IF INIT      1449 -> reg4",
      "34548 SET      reg4 -> reg5",
      "34551 ADD      reg41-> reg4",
      "34555 SET MEMORY ELEMENT IF INIT      1449 = reg4",
      "34558 PUSH MEMORY ELEMENT IF INIT      1447 -> reg4",
      "34561 SET      reg4 -> reg7",
      "34564 ADD      reg41-> reg4",
      "34568 SET MEMORY ELEMENT IF INIT      1447 = reg4",
      "34571 JUMP      34512",
      "34512 PUSH MEMORY ELEMENT IF INIT      1449 -> reg4",
      "34515 PUSH MEMORY ELEMENT IF INIT      1450 -> reg5",
      "34518 LESS THAN      reg4 < reg5 -> reg6",
      "34522 JUMP IF FALSE      reg6 TO: 34573 | 34525"
  ],
  "34573": [
      "34573 PUSH MEMORY ELEMENT IF INIT      1444 -> reg4",
      "34576 SET      reg4 -> reg5",
      "34579 ADD      reg41-> reg4",
      "34583 SET MEMORY ELEMENT IF INIT      1444 = reg4",
      "34586 JUMP      34474",
      "34474 PUSH MEMORY ELEMENT IF INIT      1444 -> reg4",
      "34477 PUSH MEMORY ELEMENT IF INIT      1445 -> reg5",
      "34480 LESS THAN      reg4 < reg5 -> reg6",
      "34484 JUMP IF FALSE      reg6 TO: 34588 | 34487"
  ],
  "34588": [
      "34588 PUSH MEMORY ELEMENT IF INIT      1446 -> reg4",
      "34591 JUMP OR RETURN VAL      reg4"
  ],
  "34626": [
      "34626 GET      reg3[length] -> reg5",
      "34632 STRICT EQUAL      2 === reg5 -> reg6",
      "34636 SET      reg6 -> reg4",
      "34639 JUMP IF FALSE      reg4 TO: 34796 | 34642"
  ],
  "34639": ["34639 JUMP IF FALSE      reg4 TO: 34796 | 34642"],
  "34642": [
      "34642 SET MEMORY ELEMENT IF INIT      1459 = 0",
      "34645 PUSH MEMORY ELEMENT IF INIT      1456 -> reg4",
      "34648 GET      reg4[length] -> reg5",
      "34654 SET MEMORY ELEMENT IF INIT      1460 = reg5",
      "34657 PUSH MEMORY ELEMENT IF INIT      1459 -> reg4",
      "34660 PUSH MEMORY ELEMENT IF INIT      1460 -> reg5",
      "34663 LESS THAN      reg4 < reg5 -> reg7",
      "34667 JUMP IF FALSE      reg7 TO: 34796 | 34670"
  ],
  "34670": [
      "34670 PUSH MEMORY ELEMENT IF INIT      1458 -> reg4",
      "34673 NOT      reg4 -> reg5",
      "34676 JUMP IF FALSE      reg5 TO: 34692 | 34679"
  ],
  "34679": [
      "34679 PUSH MEMORY ELEMENT IF INIT      1459 -> reg4",
      "34682 PUSH MEMORY ELEMENT IF INIT      1456 -> reg6",
      "34685 IN      reg4 inreg6 -> reg7",
      "34689 SET      reg7 -> reg5",
      "34692 JUMP IF TRUE      reg5 TO: 34781 | 34695"
  ],
  "34692": ["34692 JUMP IF TRUE      reg5 TO: 34781 | 34695"],
  "34695": [
      "34695 PUSH MEMORY ELEMENT IF INIT      1458 -> reg4",
      "34698 JUMP IF TRUE      reg4 TO: 34758 | 34701"
  ],
  "34701": [
      "34701 GET WINDOW PROP      Array -> reg8",
      "34706 GET      reg8[prototype] -> reg10",
      "34712 GET      reg10[slice] -> reg8",
      "34718 GET      reg8[call] -> reg6",
      "34724 NEW ARRAY      3 -> reg9",
      "34727 PUSH MEMORY ELEMENT IF INIT      1456 -> reg10",
      "34730 PUT      reg9[0] = reg10",
      "34734 PUT      reg9[1] = 0",
      "34738 PUSH MEMORY ELEMENT IF INIT      1459 -> reg10",
      "34741 PUT      reg9[2] = reg10",
      "34745 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg9",
      "34749 SET      reg2 -> reg7",
      "34752 SET MEMORY ELEMENT IF INIT      1458 = reg7",
      "34755 SET      reg7 -> reg4",
      "34758 PUSH MEMORY ELEMENT IF INIT      1458 -> reg7",
      "34761 PUSH MEMORY ELEMENT IF INIT      1459 -> reg4",
      "34764 PUSH MEMORY ELEMENT IF INIT      1456 -> reg6",
      "34767 PUSH MEMORY ELEMENT IF INIT      1459 -> reg10",
      "34770 GET      reg6[reg10] -> reg9",
      "34774 PUT      reg7[reg4] = reg9",
      "34778 SET      reg9 -> reg5",
      "34781 PUSH MEMORY ELEMENT IF INIT      1459 -> reg4",
      "34784 SET      reg4 -> reg5",
      "34787 ADD      reg41-> reg4",
      "34791 SET MEMORY ELEMENT IF INIT      1459 = reg4",
      "34794 JUMP      34657",
      "34657 PUSH MEMORY ELEMENT IF INIT      1459 -> reg4",
      "34660 PUSH MEMORY ELEMENT IF INIT      1460 -> reg5",
      "34663 LESS THAN      reg4 < reg5 -> reg7",
      "34667 JUMP IF FALSE      reg7 TO: 34796 | 34670"
  ],
  "34758": [
      "34758 PUSH MEMORY ELEMENT IF INIT      1458 -> reg7",
      "34761 PUSH MEMORY ELEMENT IF INIT      1459 -> reg4",
      "34764 PUSH MEMORY ELEMENT IF INIT      1456 -> reg6",
      "34767 PUSH MEMORY ELEMENT IF INIT      1459 -> reg10",
      "34770 GET      reg6[reg10] -> reg9",
      "34774 PUT      reg7[reg4] = reg9",
      "34778 SET      reg9 -> reg5",
      "34781 PUSH MEMORY ELEMENT IF INIT      1459 -> reg4",
      "34784 SET      reg4 -> reg5",
      "34787 ADD      reg41-> reg4",
      "34791 SET MEMORY ELEMENT IF INIT      1459 = reg4",
      "34794 JUMP      34657",
      "34657 PUSH MEMORY ELEMENT IF INIT      1459 -> reg4",
      "34660 PUSH MEMORY ELEMENT IF INIT      1460 -> reg5",
      "34663 LESS THAN      reg4 < reg5 -> reg7",
      "34667 JUMP IF FALSE      reg7 TO: 34796 | 34670"
  ],
  "34781": [
      "34781 PUSH MEMORY ELEMENT IF INIT      1459 -> reg4",
      "34784 SET      reg4 -> reg5",
      "34787 ADD      reg41-> reg4",
      "34791 SET MEMORY ELEMENT IF INIT      1459 = reg4",
      "34794 JUMP      34657",
      "34657 PUSH MEMORY ELEMENT IF INIT      1459 -> reg4",
      "34660 PUSH MEMORY ELEMENT IF INIT      1460 -> reg5",
      "34663 LESS THAN      reg4 < reg5 -> reg7",
      "34667 JUMP IF FALSE      reg7 TO: 34796 | 34670"
  ],
  "34796": [
      "34796 PUSH MEMORY ELEMENT IF INIT      1455 -> reg5",
      "34799 GET      reg5[concat] -> reg6",
      "34805 NEW ARRAY      1 -> reg7",
      "34808 PUSH MEMORY ELEMENT IF INIT      1458 -> reg10",
      "34811 JUMP IF TRUE      reg10 TO: 34857 | 34814"
  ],
  "34814": [
      "34814 GET WINDOW PROP      Array -> reg11",
      "34819 GET      reg11[prototype] -> reg13",
      "34825 GET      reg13[slice] -> reg11",
      "34831 GET      reg11[call] -> reg12",
      "34837 NEW ARRAY      1 -> reg13",
      "34840 PUSH MEMORY ELEMENT IF INIT      1456 -> reg14",
      "34843 PUT      reg13[0] = reg14",
      "34847 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg13",
      "34851 SET      reg2 -> reg9",
      "34854 SET      reg9 -> reg10",
      "34857 PUT      reg7[0] = reg10",
      "34861 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "34865 SET      reg2 -> reg4",
      "34868 JUMP OR RETURN VAL      reg4"
  ],
  "34857": [
      "34857 PUT      reg7[0] = reg10",
      "34861 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "34865 SET      reg2 -> reg4",
      "34868 JUMP OR RETURN VAL      reg4"
  ],
  "34897": [
      "34897 PUSH H       -> reg4",
      "34899 PUSH MEMORY ELEMENT IF INIT      1469 -> reg5",
      "34902 PUT      reg4[v] = reg5",
      "34908 PUSH H       -> reg5",
      "34910 SET      reg5 -> reg7",
      "34913 JUMP      34935",
      "34935 JUMP OR RETURN VAL      reg7"
  ],
  "34915": [
      "34915 PUSH MEMORY ELEMENT IF INIT      1253 -> reg5",
      "34918 NEW ARRAY      1 -> reg6",
      "34921 PUSH MEMORY ELEMENT IF INIT      1469 -> reg9",
      "34924 PUT      reg6[0] = reg9",
      "34928 BIND APPLY      reg5 reg6 -> 4",
      "34932 SET      reg4 -> reg7",
      "34935 JUMP OR RETURN VAL      reg7"
  ],
  "35002": [
      "35002 PUSH MEMORY ELEMENT IF INIT      1475 -> reg6",
      "35005 PUSH MEMORY ELEMENT IF INIT      1484 -> reg5",
      "35008 INIT FUNCTION STATE      PTR: 35017 NAME:  LEN: 1 -> reg7",
      "35015 JUMP      35142",
      "35142 PUT      reg6[reg5] = reg7",
      "35146 SET      reg7 -> reg4",
      "35149 JUMP OR RETURN"
  ],
  "35101": [
      "35101 PUSH MEMORY ELEMENT IF INIT      1479 -> reg6",
      "35104 NEW ARRAY      2 -> reg8",
      "35107 PUSH MEMORY ELEMENT IF INIT      1484 -> reg9",
      "35110 PUT      reg8[0] = reg9",
      "35114 PUSH MEMORY ELEMENT IF INIT      1488 -> reg9",
      "35117 PUT      reg8[1] = reg9",
      "35121 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "35125 SET      reg2 -> reg4",
      "35128 SET      reg4 -> reg7",
      "35131 JUMP OR RETURN"
  ],
  "35131": ["35131 JUMP OR RETURN"],
  "35149": ["35149 JUMP OR RETURN"],
  "35218": [
      "35218 PROMISE      -> reg9",
      "35220 GET      reg9[resolve] -> reg11",
      "35226 NEW ARRAY      1 -> reg8",
      "35229 PUSH MEMORY ELEMENT IF INIT      1497 -> reg10",
      "35232 GET      reg10[value] -> reg13",
      "35238 GET      reg13[v] -> reg10",
      "35244 PUT      reg8[0] = reg10",
      "35248 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg8",
      "35252 SET      reg2 -> reg7",
      "35255 GET      reg7[then] -> reg8",
      "35261 NEW ARRAY      2 -> reg11",
      "35264 PUSH MEMORY ELEMENT IF INIT      1480 -> reg10",
      "35267 PUT      reg11[0] = reg10",
      "35271 PUSH MEMORY ELEMENT IF INIT      1481 -> reg10",
      "35274 PUT      reg11[1] = reg10",
      "35278 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg11",
      "35282 SET      reg2 -> reg4",
      "35285 SET      reg4 -> reg6",
      "35288 JUMP      35328",
      "35328 SET      undefined -> reg4",
      "35331 JUMP      35376",
      "35376 SET I      null",
      "35378 JUMP OR RETURN"
  ],
  "35290": [
      "35290 PUSH MEMORY ELEMENT IF INIT      1482 -> reg8",
      "35293 NEW ARRAY      2 -> reg10",
      "35296 PUSH MEMORY ELEMENT IF INIT      1477 -> reg11",
      "35299 GET      reg11[0] -> reg12",
      "35303 GET      reg12[2] -> reg11",
      "35307 PUT      reg10[0] = reg11",
      "35311 PUSH MEMORY ELEMENT IF INIT      1497 -> reg11",
      "35314 PUT      reg10[1] = reg11",
      "35318 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "35322 SET      reg2 -> reg4",
      "35325 SET      reg4 -> reg6",
      "35328 SET      undefined -> reg4",
      "35331 JUMP      35376",
      "35376 SET I      null",
      "35378 JUMP OR RETURN"
  ],
  "35333": [
      "35333 SET I      null",
      "35335 PUSH F.K      -> reg8",
      "35337 VOID F",
      "35338 SET MEMORY ELEMENT      0 = reg8",
      "35341 PUSH MEMORY ELEMENT IF INIT      1482 -> reg4",
      "35344 NEW ARRAY      2 -> reg10",
      "35347 PUSH MEMORY ELEMENT IF INIT      1477 -> reg8",
      "35350 GET      reg8[0] -> reg13",
      "35354 GET      reg13[3] -> reg8",
      "35358 PUT      reg10[0] = reg8",
      "35362 PUSH MEMORY ELEMENT IF INIT      0 -> reg11",
      "35365 PUT      reg10[1] = reg11",
      "35369 CALL FUNCTION      PTR: reg4 MEM: reg10",
      "35373 SET      reg2 -> reg6",
      "35376 SET I      null",
      "35378 JUMP OR RETURN"
  ],
  "35531": [
      "35531 PUSH MEMORY ELEMENT IF INIT      1479 -> reg4",
      "35534 NEW ARRAY      2 -> reg6",
      "35537 PUSH MEMORY ELEMENT IF INIT      1477 -> reg9",
      "35540 GET      reg9[0] -> reg10",
      "35544 GET      reg10[0] -> reg11",
      "35548 PUT      reg6[0] = reg11",
      "35552 PUSH MEMORY ELEMENT IF INIT      1477 -> reg9",
      "35555 GET      reg9[0] -> reg10",
      "35559 GET      reg10[1] -> reg11",
      "35563 PUT      reg6[1] = reg11",
      "35567 CALL FUNCTION      PTR: reg4 MEM: reg6",
      "35571 SET      reg2 -> reg8",
      "35574 SET      reg8 -> reg5",
      "35577 JUMP OR RETURN"
  ],
  "35577": ["35577 JUMP OR RETURN"],
  "35595": [
      "35595 GET WINDOW PROP      TypeError -> reg5",
      "35600 NEW ARRAY      1 -> reg7",
      "35603 PUT      reg7[0] = Symbol.asyncIterator is not defined.",
      "35609 BIND APPLY      reg5 reg7 -> 4",
      "35613 HANDLE ERROR      reg4",
      "35615 PUSH MEMORY ELEMENT IF INIT      1474 -> reg5",
      "35618 GET      reg5[apply] -> reg7",
      "35624 NEW ARRAY      2 -> reg9",
      "35627 PUSH MEMORY ELEMENT IF INIT      1472 -> reg11",
      "35630 PUT      reg9[0] = reg11",
      "35634 PUSH MEMORY ELEMENT IF INIT      1473 -> reg11",
      "35637 JUMP IF TRUE      reg11 TO: 35645 | 35640"
  ],
  "35615": [
      "35615 PUSH MEMORY ELEMENT IF INIT      1474 -> reg5",
      "35618 GET      reg5[apply] -> reg7",
      "35624 NEW ARRAY      2 -> reg9",
      "35627 PUSH MEMORY ELEMENT IF INIT      1472 -> reg11",
      "35630 PUT      reg9[0] = reg11",
      "35634 PUSH MEMORY ELEMENT IF INIT      1473 -> reg11",
      "35637 JUMP IF TRUE      reg11 TO: 35645 | 35640"
  ],
  "35640": [
      "35640 EMPTY ARRAY      -> reg6",
      "35642 SET      reg6 -> reg11",
      "35645 PUT      reg9[1] = reg11",
      "35649 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg9",
      "35653 SET      reg2 -> reg4",
      "35656 SET MEMORY ELEMENT IF INIT      1476 = reg4",
      "35659 EMPTY ARRAY      -> reg4",
      "35661 SET MEMORY ELEMENT IF INIT      1477 = reg4",
      "35664 EMPTY OBJECT      -> reg4",
      "35666 SET MEMORY ELEMENT IF INIT      1475 = reg4",
      "35669 PUSH MEMORY ELEMENT IF INIT      1478 -> reg7",
      "35672 NEW ARRAY      1 -> reg8",
      "35675 PUT      reg8[0] = next",
      "35681 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "35685 SET      reg2 -> reg4",
      "35688 PUSH MEMORY ELEMENT IF INIT      1478 -> reg7",
      "35691 NEW ARRAY      1 -> reg6",
      "35694 PUT      reg6[0] = throw",
      "35700 CALL FUNCTION      PTR: reg7 MEM: reg6",
      "35704 SET      reg2 -> reg4",
      "35707 PUSH MEMORY ELEMENT IF INIT      1478 -> reg6",
      "35710 NEW ARRAY      1 -> reg7",
      "35713 PUT      reg7[0] = return",
      "35719 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "35723 SET      reg2 -> reg4",
      "35726 PUSH MEMORY ELEMENT IF INIT      1475 -> reg4",
      "35729 GET WINDOW PROP      Symbol -> reg6",
      "35734 GET      reg6[asyncIterator] -> reg7",
      "35740 INIT FUNCTION STATE      PTR: 35749 NAME:  LEN: 0 -> reg8",
      "35747 JUMP      35753",
      "35753 PUT      reg4[reg7] = reg8",
      "35757 PUSH MEMORY ELEMENT IF INIT      1475 -> reg6",
      "35760 JUMP OR RETURN VAL      reg6"
  ],
  "35645": [
      "35645 PUT      reg9[1] = reg11",
      "35649 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg9",
      "35653 SET      reg2 -> reg4",
      "35656 SET MEMORY ELEMENT IF INIT      1476 = reg4",
      "35659 EMPTY ARRAY      -> reg4",
      "35661 SET MEMORY ELEMENT IF INIT      1477 = reg4",
      "35664 EMPTY OBJECT      -> reg4",
      "35666 SET MEMORY ELEMENT IF INIT      1475 = reg4",
      "35669 PUSH MEMORY ELEMENT IF INIT      1478 -> reg7",
      "35672 NEW ARRAY      1 -> reg8",
      "35675 PUT      reg8[0] = next",
      "35681 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "35685 SET      reg2 -> reg4",
      "35688 PUSH MEMORY ELEMENT IF INIT      1478 -> reg7",
      "35691 NEW ARRAY      1 -> reg6",
      "35694 PUT      reg6[0] = throw",
      "35700 CALL FUNCTION      PTR: reg7 MEM: reg6",
      "35704 SET      reg2 -> reg4",
      "35707 PUSH MEMORY ELEMENT IF INIT      1478 -> reg6",
      "35710 NEW ARRAY      1 -> reg7",
      "35713 PUT      reg7[0] = return",
      "35719 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "35723 SET      reg2 -> reg4",
      "35726 PUSH MEMORY ELEMENT IF INIT      1475 -> reg4",
      "35729 GET WINDOW PROP      Symbol -> reg6",
      "35734 GET      reg6[asyncIterator] -> reg7",
      "35740 INIT FUNCTION STATE      PTR: 35749 NAME:  LEN: 0 -> reg8",
      "35747 JUMP      35753",
      "35753 PUT      reg4[reg7] = reg8",
      "35757 PUSH MEMORY ELEMENT IF INIT      1475 -> reg6",
      "35760 JUMP OR RETURN VAL      reg6"
  ],
  "35821": [
      "35821 INIT FUNCTION STATE      PTR: 35830 NAME:  LEN: 1 -> reg8",
      "35828 JUMP      35959",
      "35959 SET      reg8 -> reg6",
      "35962 JUMP      35970",
      "35970 PUT      reg4[reg5] = reg6",
      "35974 JUMP OR RETURN"
  ],
  "35845": [
      "35845 EMPTY OBJECT      -> reg5",
      "35847 PUSH MEMORY ELEMENT IF INIT      1253 -> reg7",
      "35850 NEW ARRAY      1 -> reg8",
      "35853 PUSH MEMORY ELEMENT IF INIT      1513 -> reg10",
      "35856 PUSH MEMORY ELEMENT IF INIT      1518 -> reg13",
      "35859 GET      reg10[reg13] -> reg12",
      "35863 NEW ARRAY      1 -> reg11",
      "35866 PUSH MEMORY ELEMENT IF INIT      1523 -> reg18",
      "35869 PUT      reg11[0] = reg18",
      "35873 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg11",
      "35877 SET      reg2 -> reg9",
      "35880 PUT      reg8[0] = reg9",
      "35884 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "35888 SET      reg2 -> reg6",
      "35891 PUT      reg5[value] = reg6",
      "35897 PUSH MEMORY ELEMENT IF INIT      1518 -> reg6",
      "35900 STRICT EQUAL      return === reg6 -> reg7",
      "35906 PUT      reg5[done] = reg7",
      "35912 SET      reg5 -> reg4",
      "35915 JUMP      35957",
      "35957 JUMP OR RETURN VAL      reg4"
  ],
  "35917": [
      "35917 PUSH MEMORY ELEMENT IF INIT      1519 -> reg6",
      "35920 JUMP IF FALSE      reg6 TO: 35948 | 35923"
  ],
  "35923": [
      "35923 PUSH MEMORY ELEMENT IF INIT      1519 -> reg6",
      "35926 NEW ARRAY      1 -> reg11",
      "35929 PUSH MEMORY ELEMENT IF INIT      1523 -> reg13",
      "35932 PUT      reg11[0] = reg13",
      "35936 CALL FUNCTION      PTR: reg6 MEM: reg11",
      "35940 SET      reg2 -> reg8",
      "35943 SET      reg8 -> reg5",
      "35946 JUMP      35954",
      "35954 SET      reg5 -> reg4",
      "35957 JUMP OR RETURN VAL      reg4"
  ],
  "35948": [
      "35948 PUSH MEMORY ELEMENT IF INIT      1523 -> reg7",
      "35951 SET      reg7 -> reg5",
      "35954 SET      reg5 -> reg4",
      "35957 JUMP OR RETURN VAL      reg4"
  ],
  "35964": [
      "35964 PUSH MEMORY ELEMENT IF INIT      1519 -> reg7",
      "35967 SET      reg7 -> reg6",
      "35970 PUT      reg4[reg5] = reg6",
      "35974 JUMP OR RETURN"
  ],
  "36151": [
      "36151 INIT FUNCTION STATE      PTR: 36160 NAME:  LEN: 1 -> reg7",
      "36158 JUMP      36395",
      "36395 SET      reg7 -> reg8",
      "36398 PUT      reg5[reg4] = reg8",
      "36402 JUMP OR RETURN"
  ],
  "36398": ["36398 PUT      reg5[reg4] = reg8", "36402 JUMP OR RETURN"],
  "36420": [
      "36420 GET WINDOW PROP      TypeError -> reg5",
      "36425 NEW ARRAY      1 -> reg6",
      "36428 PUT      reg6[0] = Symbol.asyncIterator is not defined.",
      "36434 BIND APPLY      reg5 reg6 -> 4",
      "36438 HANDLE ERROR      reg4",
      "36440 PUSH MEMORY ELEMENT IF INIT      1532 -> reg5",
      "36443 GET WINDOW PROP      Symbol -> reg6",
      "36448 GET      reg6[asyncIterator] -> reg7",
      "36454 GET      reg5[reg7] -> reg4",
      "36458 SET MEMORY ELEMENT IF INIT      1534 = reg4",
      "36461 PUSH MEMORY ELEMENT IF INIT      1534 -> reg4",
      "36464 JUMP IF FALSE      reg4 TO: 36498 | 36467"
  ],
  "36440": [
      "36440 PUSH MEMORY ELEMENT IF INIT      1532 -> reg5",
      "36443 GET WINDOW PROP      Symbol -> reg6",
      "36448 GET      reg6[asyncIterator] -> reg7",
      "36454 GET      reg5[reg7] -> reg4",
      "36458 SET MEMORY ELEMENT IF INIT      1534 = reg4",
      "36461 PUSH MEMORY ELEMENT IF INIT      1534 -> reg4",
      "36464 JUMP IF FALSE      reg4 TO: 36498 | 36467"
  ],
  "36467": [
      "36467 PUSH MEMORY ELEMENT IF INIT      1534 -> reg5",
      "36470 GET      reg5[call] -> reg8",
      "36476 NEW ARRAY      1 -> reg7",
      "36479 PUSH MEMORY ELEMENT IF INIT      1532 -> reg9",
      "36482 PUT      reg7[0] = reg9",
      "36486 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg7",
      "36490 SET      reg2 -> reg4",
      "36493 SET      reg4 -> reg6",
      "36496 JUMP      36620",
      "36620 JUMP OR RETURN VAL      reg6"
  ],
  "36498": [
      "36498 PUSH MEMORY ELEMENT IF INIT      1248 -> reg8",
      "36501 NEW ARRAY      1 -> reg9",
      "36504 PUSH MEMORY ELEMENT IF INIT      1532 -> reg7",
      "36507 PUT      reg9[0] = reg7",
      "36511 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "36515 SET      reg2 -> reg4",
      "36518 SET MEMORY ELEMENT IF INIT      1532 = reg4",
      "36521 EMPTY OBJECT      -> reg7",
      "36523 SET MEMORY ELEMENT IF INIT      1533 = reg7",
      "36526 PUSH MEMORY ELEMENT IF INIT      1535 -> reg8",
      "36529 NEW ARRAY      1 -> reg7",
      "36532 PUT      reg7[0] = next",
      "36538 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "36542 SET      reg2 -> reg4",
      "36545 PUSH MEMORY ELEMENT IF INIT      1535 -> reg4",
      "36548 NEW ARRAY      1 -> reg8",
      "36551 PUT      reg8[0] = throw",
      "36557 CALL FUNCTION      PTR: reg4 MEM: reg8",
      "36561 SET      reg2 -> reg9",
      "36564 PUSH MEMORY ELEMENT IF INIT      1535 -> reg7",
      "36567 NEW ARRAY      1 -> reg8",
      "36570 PUT      reg8[0] = return",
      "36576 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "36580 SET      reg2 -> reg4",
      "36583 PUSH MEMORY ELEMENT IF INIT      1533 -> reg4",
      "36586 GET WINDOW PROP      Symbol -> reg9",
      "36591 GET      reg9[asyncIterator] -> reg7",
      "36597 INIT FUNCTION STATE      PTR: 36606 NAME:  LEN: 0 -> reg8",
      "36604 JUMP      36610",
      "36610 PUT      reg4[reg7] = reg8",
      "36614 PUSH MEMORY ELEMENT IF INIT      1533 -> reg4",
      "36617 SET      reg4 -> reg6",
      "36620 JUMP OR RETURN VAL      reg6"
  ],
  "36655": [
      "36655 GET WINDOW PROP      Object -> reg6",
      "36660 GET      reg6[defineProperty] -> reg11",
      "36666 NEW ARRAY      3 -> reg7",
      "36669 PUSH MEMORY ELEMENT IF INIT      1560 -> reg8",
      "36672 PUT      reg7[0] = reg8",
      "36676 PUT      reg7[1] = raw",
      "36682 EMPTY OBJECT      -> reg8",
      "36684 PUSH MEMORY ELEMENT IF INIT      1561 -> reg10",
      "36687 PUT      reg8[value] = reg10",
      "36693 PUT      reg7[2] = reg8",
      "36697 CALL FUNCTION      OBJ: reg6 FUNC: reg11 ARGS: reg7",
      "36701 SET      reg2 -> reg5",
      "36704 SET      reg5 -> reg4",
      "36707 JUMP      36724",
      "36724 PUSH MEMORY ELEMENT IF INIT      1560 -> reg4",
      "36727 JUMP OR RETURN VAL      reg4"
  ],
  "36709": [
      "36709 PUSH MEMORY ELEMENT IF INIT      1560 -> reg5",
      "36712 PUSH MEMORY ELEMENT IF INIT      1561 -> reg7",
      "36715 PUT      reg5[raw] = reg7",
      "36721 SET      reg7 -> reg4",
      "36724 PUSH MEMORY ELEMENT IF INIT      1560 -> reg4",
      "36727 JUMP OR RETURN VAL      reg4"
  ],
  "36754": [
      "36754 PUSH MEMORY ELEMENT IF INIT      1564 -> reg5",
      "36757 GET      reg5[__esModule] -> reg8",
      "36763 SET      reg8 -> reg4",
      "36766 JUMP IF FALSE      reg4 TO: 36774 | 36769"
  ],
  "36766": ["36766 JUMP IF FALSE      reg4 TO: 36774 | 36769"],
  "36769": [
      "36769 PUSH MEMORY ELEMENT IF INIT      1564 -> reg4",
      "36772 JUMP OR RETURN VAL      reg4"
  ],
  "36774": [
      "36774 EMPTY OBJECT      -> reg6",
      "36776 SET MEMORY ELEMENT IF INIT      1565 = reg6",
      "36779 PUSH MEMORY ELEMENT IF INIT      1564 -> reg4",
      "36782 NOT EQUAL      null != reg4 -> reg5",
      "36786 JUMP IF FALSE      reg5 TO: 36931 | 36789"
  ],
  "36789": [
      "36789 PUSH MEMORY ELEMENT IF INIT      1564 -> reg4",
      "36792 COPY ENUMERABLE      reg4 -> reg5",
      "36795 GET      reg5[length] -> reg6",
      "36801 EQUAL      reg6 == 0 -> reg7",
      "36805 JUMP IF TRUE      reg7 TO: 36931 | 36808"
  ],
  "36808": [
      "36808 SET      0 -> reg7",
      "36811 GET      reg5[reg7] -> reg4",
      "36815 SET MEMORY ELEMENT IF INIT      1566 = reg4",
      "36818 PUSH MEMORY ELEMENT IF INIT      1566 -> reg8",
      "36821 STRICT NOT EQUAL      default !== reg8 -> reg9",
      "36827 JUMP IF FALSE      reg9 TO: 36880 | 36830"
  ],
  "36811": [
      "36811 GET      reg5[reg7] -> reg4",
      "36815 SET MEMORY ELEMENT IF INIT      1566 = reg4",
      "36818 PUSH MEMORY ELEMENT IF INIT      1566 -> reg8",
      "36821 STRICT NOT EQUAL      default !== reg8 -> reg9",
      "36827 JUMP IF FALSE      reg9 TO: 36880 | 36830"
  ],
  "36830": [
      "36830 GET WINDOW PROP      Object -> reg10",
      "36835 GET      reg10[prototype] -> reg11",
      "36841 GET      reg11[hasOwnProperty] -> reg12",
      "36847 GET      reg12[call] -> reg10",
      "36853 NEW ARRAY      2 -> reg13",
      "36856 PUSH MEMORY ELEMENT IF INIT      1564 -> reg14",
      "36859 PUT      reg13[0] = reg14",
      "36863 PUSH MEMORY ELEMENT IF INIT      1566 -> reg15",
      "36866 PUT      reg13[1] = reg15",
      "36870 CALL FUNCTION      OBJ: reg12 FUNC: reg10 ARGS: reg13",
      "36874 SET      reg2 -> reg8",
      "36877 SET      reg8 -> reg9",
      "36880 JUMP IF FALSE      reg9 TO: 36920 | 36883"
  ],
  "36880": ["36880 JUMP IF FALSE      reg9 TO: 36920 | 36883"],
  "36883": [
      "36883 PUSH MEMORY ELEMENT IF INIT      1246 -> reg8",
      "36886 NEW ARRAY      3 -> reg13",
      "36889 PUSH MEMORY ELEMENT IF INIT      1565 -> reg11",
      "36892 PUT      reg13[0] = reg11",
      "36896 PUSH MEMORY ELEMENT IF INIT      1564 -> reg11",
      "36899 PUT      reg13[1] = reg11",
      "36903 PUSH MEMORY ELEMENT IF INIT      1566 -> reg11",
      "36906 PUT      reg13[2] = reg11",
      "36910 CALL FUNCTION      PTR: reg8 MEM: reg13",
      "36914 SET      reg2 -> reg10",
      "36917 SET      reg10 -> reg9",
      "36920 ADD      reg71-> reg7",
      "36924 LESS THAN      reg7 < reg6 -> reg8",
      "36928 JUMP IF TRUE      reg8 TO: 36811 | 36931"
  ],
  "36920": [
      "36920 ADD      reg71-> reg7",
      "36924 LESS THAN      reg7 < reg6 -> reg8",
      "36928 JUMP IF TRUE      reg8 TO: 36811 | 36931"
  ],
  "36931": [
      "36931 PUSH MEMORY ELEMENT IF INIT      1258 -> reg5",
      "36934 NEW ARRAY      2 -> reg6",
      "36937 PUSH MEMORY ELEMENT IF INIT      1565 -> reg8",
      "36940 PUT      reg6[0] = reg8",
      "36944 PUSH MEMORY ELEMENT IF INIT      1564 -> reg7",
      "36947 PUT      reg6[1] = reg7",
      "36951 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "36955 SET      reg2 -> reg4",
      "36958 PUSH MEMORY ELEMENT IF INIT      1565 -> reg5",
      "36961 JUMP OR RETURN VAL      reg5"
  ],
  "36984": [
      "36984 PUSH MEMORY ELEMENT IF INIT      1574 -> reg7",
      "36987 GET      reg7[__esModule] -> reg5",
      "36993 SET      reg5 -> reg4",
      "36996 JUMP IF FALSE      reg4 TO: 37007 | 36999"
  ],
  "36996": ["36996 JUMP IF FALSE      reg4 TO: 37007 | 36999"],
  "36999": [
      "36999 PUSH MEMORY ELEMENT IF INIT      1574 -> reg4",
      "37002 SET      reg4 -> reg6",
      "37005 JUMP      37021",
      "37021 JUMP OR RETURN VAL      reg6"
  ],
  "37007": [
      "37007 EMPTY OBJECT      -> reg4",
      "37009 PUSH MEMORY ELEMENT IF INIT      1574 -> reg5",
      "37012 PUT      reg4[default] = reg5",
      "37018 SET      reg4 -> reg6",
      "37021 JUMP OR RETURN VAL      reg6"
  ],
  "37059": [
      "37059 PUSH MEMORY ELEMENT IF INIT      1581 -> reg4",
      "37062 NOT      reg4 -> reg6",
      "37065 SET      reg6 -> reg5",
      "37068 JUMP IF FALSE      reg5 TO: 37091 | 37071"
  ],
  "37068": ["37068 JUMP IF FALSE      reg5 TO: 37091 | 37071"],
  "37071": [
      "37071 GET WINDOW PROP      TypeError -> reg4",
      "37076 NEW ARRAY      1 -> reg7",
      "37079 PUT      reg7[0] = Private accessor was defined without a getter",
      "37085 BIND APPLY      reg4 reg7 -> 5",
      "37089 HANDLE ERROR      reg5",
      "37091 PUSH MEMORY ELEMENT IF INIT      1579 -> reg5",
      "37094 TYPEOF      reg5 -> reg4",
      "37097 EQUAL      function == reg4 -> reg5",
      "37103 JUMP IF FALSE      reg5 TO: 37133 | 37106"
  ],
  "37091": [
      "37091 PUSH MEMORY ELEMENT IF INIT      1579 -> reg5",
      "37094 TYPEOF      reg5 -> reg4",
      "37097 EQUAL      function == reg4 -> reg5",
      "37103 JUMP IF FALSE      reg5 TO: 37133 | 37106"
  ],
  "37106": [
      "37106 PUSH MEMORY ELEMENT IF INIT      1578 -> reg5",
      "37109 PUSH MEMORY ELEMENT IF INIT      1579 -> reg6",
      "37112 STRICT NOT EQUAL      reg5 !== reg6 -> reg7",
      "37116 JUMP IF TRUE      reg7 TO: 37128 | 37119"
  ],
  "37119": [
      "37119 PUSH MEMORY ELEMENT IF INIT      1581 -> reg6",
      "37122 NOT      reg6 -> reg8",
      "37125 SET      reg8 -> reg7",
      "37128 SET      reg7 -> reg4",
      "37131 JUMP      37165",
      "37165 JUMP IF FALSE      reg4 TO: 37188 | 37168"
  ],
  "37128": [
      "37128 SET      reg7 -> reg4",
      "37131 JUMP      37165",
      "37165 JUMP IF FALSE      reg4 TO: 37188 | 37168"
  ],
  "37133": [
      "37133 PUSH MEMORY ELEMENT IF INIT      1579 -> reg6",
      "37136 GET      reg6[has] -> reg7",
      "37142 NEW ARRAY      1 -> reg8",
      "37145 PUSH MEMORY ELEMENT IF INIT      1578 -> reg10",
      "37148 PUT      reg8[0] = reg10",
      "37152 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "37156 SET      reg2 -> reg5",
      "37159 NOT      reg5 -> reg7",
      "37162 SET      reg7 -> reg4",
      "37165 JUMP IF FALSE      reg4 TO: 37188 | 37168"
  ],
  "37168": [
      "37168 GET WINDOW PROP      TypeError -> reg4",
      "37173 NEW ARRAY      1 -> reg8",
      "37176 PUT      reg8[0] = Cannot read private member from an object whose class did not declare it",
      "37182 BIND APPLY      reg4 reg8 -> 7",
      "37186 HANDLE ERROR      reg7",
      "37188 PUSH MEMORY ELEMENT IF INIT      1580 -> reg4",
      "37191 STRICT EQUAL      m === reg4 -> reg5",
      "37197 JUMP IF FALSE      reg5 TO: 37208 | 37200"
  ],
  "37188": [
      "37188 PUSH MEMORY ELEMENT IF INIT      1580 -> reg4",
      "37191 STRICT EQUAL      m === reg4 -> reg5",
      "37197 JUMP IF FALSE      reg5 TO: 37208 | 37200"
  ],
  "37200": [
      "37200 PUSH MEMORY ELEMENT IF INIT      1581 -> reg7",
      "37203 SET      reg7 -> reg4",
      "37206 JUMP      37306",
      "37306 JUMP OR RETURN VAL      reg4"
  ],
  "37208": [
      "37208 PUSH MEMORY ELEMENT IF INIT      1580 -> reg5",
      "37211 STRICT EQUAL      a === reg5 -> reg7",
      "37217 JUMP IF FALSE      reg7 TO: 37251 | 37220"
  ],
  "37220": [
      "37220 PUSH MEMORY ELEMENT IF INIT      1581 -> reg9",
      "37223 GET      reg9[call] -> reg7",
      "37229 NEW ARRAY      1 -> reg11",
      "37232 PUSH MEMORY ELEMENT IF INIT      1578 -> reg10",
      "37235 PUT      reg11[0] = reg10",
      "37239 CALL FUNCTION      OBJ: reg9 FUNC: reg7 ARGS: reg11",
      "37243 SET      reg2 -> reg5",
      "37246 SET      reg5 -> reg8",
      "37249 JUMP      37303",
      "37303 SET      reg8 -> reg4",
      "37306 JUMP OR RETURN VAL      reg4"
  ],
  "37251": [
      "37251 PUSH MEMORY ELEMENT IF INIT      1581 -> reg5",
      "37254 JUMP IF FALSE      reg5 TO: 37271 | 37257"
  ],
  "37257": [
      "37257 PUSH MEMORY ELEMENT IF INIT      1581 -> reg5",
      "37260 GET      reg5[value] -> reg12",
      "37266 SET      reg12 -> reg7",
      "37269 JUMP      37300",
      "37300 SET      reg7 -> reg8",
      "37303 SET      reg8 -> reg4",
      "37306 JUMP OR RETURN VAL      reg4"
  ],
  "37271": [
      "37271 PUSH MEMORY ELEMENT IF INIT      1579 -> reg5",
      "37274 GET      reg5[get] -> reg11",
      "37280 NEW ARRAY      1 -> reg12",
      "37283 PUSH MEMORY ELEMENT IF INIT      1578 -> reg13",
      "37286 PUT      reg12[0] = reg13",
      "37290 CALL FUNCTION      OBJ: reg5 FUNC: reg11 ARGS: reg12",
      "37294 SET      reg2 -> reg10",
      "37297 SET      reg10 -> reg7",
      "37300 SET      reg7 -> reg8",
      "37303 SET      reg8 -> reg4",
      "37306 JUMP OR RETURN VAL      reg4"
  ],
  "37347": [
      "37347 GET WINDOW PROP      TypeError -> reg6",
      "37352 NEW ARRAY      1 -> reg5",
      "37355 PUT      reg5[0] = Private method is not writable",
      "37361 BIND APPLY      reg6 reg5 -> 4",
      "37365 HANDLE ERROR      reg4",
      "37367 PUSH MEMORY ELEMENT IF INIT      1594 -> reg5",
      "37370 STRICT EQUAL      a === reg5 -> reg4",
      "37376 JUMP IF FALSE      reg4 TO: 37388 | 37379"
  ],
  "37367": [
      "37367 PUSH MEMORY ELEMENT IF INIT      1594 -> reg5",
      "37370 STRICT EQUAL      a === reg5 -> reg4",
      "37376 JUMP IF FALSE      reg4 TO: 37388 | 37379"
  ],
  "37379": [
      "37379 PUSH MEMORY ELEMENT IF INIT      1595 -> reg5",
      "37382 NOT      reg5 -> reg6",
      "37385 SET      reg6 -> reg4",
      "37388 JUMP IF FALSE      reg4 TO: 37411 | 37391"
  ],
  "37388": ["37388 JUMP IF FALSE      reg4 TO: 37411 | 37391"],
  "37391": [
      "37391 GET WINDOW PROP      TypeError -> reg5",
      "37396 NEW ARRAY      1 -> reg7",
      "37399 PUT      reg7[0] = Private accessor was defined without a setter",
      "37405 BIND APPLY      reg5 reg7 -> 4",
      "37409 HANDLE ERROR      reg4",
      "37411 PUSH MEMORY ELEMENT IF INIT      1592 -> reg5",
      "37414 TYPEOF      reg5 -> reg6",
      "37417 EQUAL      function == reg6 -> reg5",
      "37423 JUMP IF FALSE      reg5 TO: 37453 | 37426"
  ],
  "37411": [
      "37411 PUSH MEMORY ELEMENT IF INIT      1592 -> reg5",
      "37414 TYPEOF      reg5 -> reg6",
      "37417 EQUAL      function == reg6 -> reg5",
      "37423 JUMP IF FALSE      reg5 TO: 37453 | 37426"
  ],
  "37426": [
      "37426 PUSH MEMORY ELEMENT IF INIT      1591 -> reg5",
      "37429 PUSH MEMORY ELEMENT IF INIT      1592 -> reg6",
      "37432 STRICT NOT EQUAL      reg5 !== reg6 -> reg7",
      "37436 JUMP IF TRUE      reg7 TO: 37448 | 37439"
  ],
  "37439": [
      "37439 PUSH MEMORY ELEMENT IF INIT      1595 -> reg6",
      "37442 NOT      reg6 -> reg8",
      "37445 SET      reg8 -> reg7",
      "37448 SET      reg7 -> reg4",
      "37451 JUMP      37485",
      "37485 JUMP IF FALSE      reg4 TO: 37508 | 37488"
  ],
  "37448": [
      "37448 SET      reg7 -> reg4",
      "37451 JUMP      37485",
      "37485 JUMP IF FALSE      reg4 TO: 37508 | 37488"
  ],
  "37453": [
      "37453 PUSH MEMORY ELEMENT IF INIT      1592 -> reg9",
      "37456 GET      reg9[has] -> reg6",
      "37462 NEW ARRAY      1 -> reg8",
      "37465 PUSH MEMORY ELEMENT IF INIT      1591 -> reg10",
      "37468 PUT      reg8[0] = reg10",
      "37472 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg8",
      "37476 SET      reg2 -> reg5",
      "37479 NOT      reg5 -> reg6",
      "37482 SET      reg6 -> reg4",
      "37485 JUMP IF FALSE      reg4 TO: 37508 | 37488"
  ],
  "37488": [
      "37488 GET WINDOW PROP      TypeError -> reg4",
      "37493 NEW ARRAY      1 -> reg6",
      "37496 PUT      reg6[0] = Cannot write private member to an object whose class did not declare it",
      "37502 BIND APPLY      reg4 reg6 -> 5",
      "37506 HANDLE ERROR      reg5",
      "37508 PUSH MEMORY ELEMENT IF INIT      1594 -> reg4",
      "37511 STRICT EQUAL      a === reg4 -> reg5",
      "37517 JUMP IF FALSE      reg5 TO: 37558 | 37520"
  ],
  "37508": [
      "37508 PUSH MEMORY ELEMENT IF INIT      1594 -> reg4",
      "37511 STRICT EQUAL      a === reg4 -> reg5",
      "37517 JUMP IF FALSE      reg5 TO: 37558 | 37520"
  ],
  "37520": [
      "37520 PUSH MEMORY ELEMENT IF INIT      1595 -> reg6",
      "37523 GET      reg6[call] -> reg10",
      "37529 NEW ARRAY      2 -> reg11",
      "37532 PUSH MEMORY ELEMENT IF INIT      1591 -> reg5",
      "37535 PUT      reg11[0] = reg5",
      "37539 PUSH MEMORY ELEMENT IF INIT      1593 -> reg5",
      "37542 PUT      reg11[1] = reg5",
      "37546 CALL FUNCTION      OBJ: reg6 FUNC: reg10 ARGS: reg11",
      "37550 SET      reg2 -> reg8",
      "37553 SET      reg8 -> reg4",
      "37556 JUMP      37620",
      "37620 PUSH MEMORY ELEMENT IF INIT      1593 -> reg4",
      "37623 JUMP OR RETURN VAL      reg4"
  ],
  "37558": [
      "37558 PUSH MEMORY ELEMENT IF INIT      1595 -> reg5",
      "37561 JUMP IF FALSE      reg5 TO: 37581 | 37564"
  ],
  "37564": [
      "37564 PUSH MEMORY ELEMENT IF INIT      1595 -> reg5",
      "37567 PUSH MEMORY ELEMENT IF INIT      1593 -> reg8",
      "37570 PUT      reg5[value] = reg8",
      "37576 SET      reg8 -> reg7",
      "37579 JUMP      37617",
      "37617 SET      reg7 -> reg4",
      "37620 PUSH MEMORY ELEMENT IF INIT      1593 -> reg4",
      "37623 JUMP OR RETURN VAL      reg4"
  ],
  "37581": [
      "37581 PUSH MEMORY ELEMENT IF INIT      1592 -> reg8",
      "37584 GET      reg8[set] -> reg10",
      "37590 NEW ARRAY      2 -> reg11",
      "37593 PUSH MEMORY ELEMENT IF INIT      1591 -> reg12",
      "37596 PUT      reg11[0] = reg12",
      "37600 PUSH MEMORY ELEMENT IF INIT      1593 -> reg13",
      "37603 PUT      reg11[1] = reg13",
      "37607 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg11",
      "37611 SET      reg2 -> reg5",
      "37614 SET      reg5 -> reg7",
      "37617 SET      reg7 -> reg4",
      "37620 PUSH MEMORY ELEMENT IF INIT      1593 -> reg4",
      "37623 JUMP OR RETURN VAL      reg4"
  ],
  "37653": [
      "37653 PUSH MEMORY ELEMENT IF INIT      1606 -> reg4",
      "37656 TYPEOF      reg4 -> reg6",
      "37659 NOT EQUAL      object != reg6 -> reg4",
      "37665 JUMP IF FALSE      reg4 TO: 37683 | 37668"
  ],
  "37668": [
      "37668 PUSH MEMORY ELEMENT IF INIT      1606 -> reg8",
      "37671 TYPEOF      reg8 -> reg6",
      "37674 NOT EQUAL      function != reg6 -> reg8",
      "37680 SET      reg8 -> reg4",
      "37683 SET      reg4 -> reg5",
      "37686 JUMP IF FALSE      reg5 TO: 37709 | 37689"
  ],
  "37683": [
      "37683 SET      reg4 -> reg5",
      "37686 JUMP IF FALSE      reg5 TO: 37709 | 37689"
  ],
  "37686": ["37686 JUMP IF FALSE      reg5 TO: 37709 | 37689"],
  "37689": [
      "37689 GET WINDOW PROP      TypeError -> reg4",
      "37694 NEW ARRAY      1 -> reg7",
      "37697 PUT      reg7[0] = Cannot use 'in' operator on non-object",
      "37703 BIND APPLY      reg4 reg7 -> 5",
      "37707 HANDLE ERROR      reg5",
      "37709 PUSH MEMORY ELEMENT IF INIT      1605 -> reg4",
      "37712 TYPEOF      reg4 -> reg5",
      "37715 EQUAL      function == reg5 -> reg4",
      "37721 JUMP IF FALSE      reg4 TO: 37739 | 37724"
  ],
  "37709": [
      "37709 PUSH MEMORY ELEMENT IF INIT      1605 -> reg4",
      "37712 TYPEOF      reg4 -> reg5",
      "37715 EQUAL      function == reg5 -> reg4",
      "37721 JUMP IF FALSE      reg4 TO: 37739 | 37724"
  ],
  "37724": [
      "37724 PUSH MEMORY ELEMENT IF INIT      1606 -> reg4",
      "37727 PUSH MEMORY ELEMENT IF INIT      1605 -> reg6",
      "37730 STRICT EQUAL      reg4 === reg6 -> reg9",
      "37734 SET      reg9 -> reg5",
      "37737 JUMP      37768",
      "37768 JUMP OR RETURN VAL      reg5"
  ],
  "37739": [
      "37739 PUSH MEMORY ELEMENT IF INIT      1605 -> reg4",
      "37742 GET      reg4[has] -> reg6",
      "37748 NEW ARRAY      1 -> reg8",
      "37751 PUSH MEMORY ELEMENT IF INIT      1606 -> reg9",
      "37754 PUT      reg8[0] = reg9",
      "37758 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg8",
      "37762 SET      reg2 -> reg7",
      "37765 SET      reg7 -> reg5",
      "37768 JUMP OR RETURN VAL      reg5"
  ],
  "38409": [
      "38409 EMPTY OBJECT      -> reg4",
      "38411 EMPTY ARRAY      -> reg8",
      "38413 PUT      reg4[__proto__] = reg8",
      "38419 GET WINDOW PROP      Array -> reg5",
      "38424 INSTANCEOF      reg4 instanceof reg5 -> reg7",
      "38428 JUMP IF FALSE      reg7 TO: 38462 | 38431"
  ],
  "38431": [
      "38431 INIT FUNCTION STATE      PTR: 38440 NAME:  LEN: 2 -> reg5",
      "38438 JUMP      38459",
      "38459 SET      reg5 -> reg7",
      "38462 SET      reg7 -> reg6",
      "38465 JUMP IF TRUE      reg6 TO: 38602 | 38468"
  ],
  "38462": [
      "38462 SET      reg7 -> reg6",
      "38465 JUMP IF TRUE      reg6 TO: 38602 | 38468"
  ],
  "38465": ["38465 JUMP IF TRUE      reg6 TO: 38602 | 38468"],
  "38468": [
      "38468 INIT FUNCTION STATE      PTR: 38477 NAME:  LEN: 2 -> reg4",
      "38475 JUMP      38599",
      "38599 SET      reg4 -> reg6",
      "38602 SET MEMORY ELEMENT IF INIT      1237 = reg6",
      "38605 PUSH MEMORY ELEMENT IF INIT      1237 -> reg6",
      "38608 NEW ARRAY      2 -> reg7",
      "38611 PUSH MEMORY ELEMENT IF INIT      1663 -> reg5",
      "38614 PUT      reg7[0] = reg5",
      "38618 PUSH MEMORY ELEMENT IF INIT      1664 -> reg5",
      "38621 PUT      reg7[1] = reg5",
      "38625 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "38629 SET      reg2 -> reg4",
      "38632 JUMP OR RETURN VAL      reg4"
  ],
  "38504": [
      "38504 SET      0 -> reg7",
      "38507 GET      reg4[reg7] -> reg6",
      "38511 SET MEMORY ELEMENT IF INIT      1676 = reg6",
      "38514 GET WINDOW PROP      Object -> reg9",
      "38519 GET      reg9[prototype] -> reg10",
      "38525 GET      reg10[hasOwnProperty] -> reg9",
      "38531 GET      reg9[call] -> reg10",
      "38537 NEW ARRAY      2 -> reg11",
      "38540 PUSH MEMORY ELEMENT IF INIT      1675 -> reg12",
      "38543 PUT      reg11[0] = reg12",
      "38547 PUSH MEMORY ELEMENT IF INIT      1676 -> reg12",
      "38550 PUT      reg11[1] = reg12",
      "38554 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "38558 SET      reg2 -> reg8",
      "38561 JUMP IF FALSE      reg8 TO: 38587 | 38564"
  ],
  "38507": [
      "38507 GET      reg4[reg7] -> reg6",
      "38511 SET MEMORY ELEMENT IF INIT      1676 = reg6",
      "38514 GET WINDOW PROP      Object -> reg9",
      "38519 GET      reg9[prototype] -> reg10",
      "38525 GET      reg10[hasOwnProperty] -> reg9",
      "38531 GET      reg9[call] -> reg10",
      "38537 NEW ARRAY      2 -> reg11",
      "38540 PUSH MEMORY ELEMENT IF INIT      1675 -> reg12",
      "38543 PUT      reg11[0] = reg12",
      "38547 PUSH MEMORY ELEMENT IF INIT      1676 -> reg12",
      "38550 PUT      reg11[1] = reg12",
      "38554 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "38558 SET      reg2 -> reg8",
      "38561 JUMP IF FALSE      reg8 TO: 38587 | 38564"
  ],
  "38564": [
      "38564 PUSH MEMORY ELEMENT IF INIT      1674 -> reg10",
      "38567 PUSH MEMORY ELEMENT IF INIT      1676 -> reg11",
      "38570 PUSH MEMORY ELEMENT IF INIT      1675 -> reg13",
      "38573 PUSH MEMORY ELEMENT IF INIT      1676 -> reg15",
      "38576 GET      reg13[reg15] -> reg12",
      "38580 PUT      reg10[reg11] = reg12",
      "38584 SET      reg12 -> reg8",
      "38587 ADD      reg71-> reg7",
      "38591 LESS THAN      reg7 < reg5 -> reg8",
      "38595 JUMP IF TRUE      reg8 TO: 38507 | 38598"
  ],
  "38587": [
      "38587 ADD      reg71-> reg7",
      "38591 LESS THAN      reg7 < reg5 -> reg8",
      "38595 JUMP IF TRUE      reg8 TO: 38507 | 38598"
  ],
  "38598": ["38598 JUMP OR RETURN"],
  "38602": [
      "38602 SET MEMORY ELEMENT IF INIT      1237 = reg6",
      "38605 PUSH MEMORY ELEMENT IF INIT      1237 -> reg6",
      "38608 NEW ARRAY      2 -> reg7",
      "38611 PUSH MEMORY ELEMENT IF INIT      1663 -> reg5",
      "38614 PUT      reg7[0] = reg5",
      "38618 PUSH MEMORY ELEMENT IF INIT      1664 -> reg5",
      "38621 PUT      reg7[1] = reg5",
      "38625 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "38629 SET      reg2 -> reg4",
      "38632 JUMP OR RETURN VAL      reg4"
  ],
  "38662": [
      "38662 INIT FUNCTION STATE      PTR: 38671 NAME:  LEN: 1 -> reg6",
      "38669 JUMP      38847",
      "38847 SET      reg6 -> reg4",
      "38850 SET MEMORY ELEMENT IF INIT      1239 = reg4",
      "38853 PUSH MEMORY ELEMENT IF INIT      1239 -> reg5",
      "38856 GET      reg5[apply] -> reg8",
      "38862 NEW ARRAY      2 -> reg7",
      "38865 PUSH H       -> reg6",
      "38867 PUT      reg7[0] = reg6",
      "38871 PUT      reg7[1] = reg3",
      "38875 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg7",
      "38879 SET      reg2 -> reg4",
      "38882 JUMP OR RETURN VAL      reg4"
  ],
  "38707": [
      "38707 PUSH MEMORY ELEMENT IF INIT      1686 -> reg5",
      "38710 GET      reg3[reg5] -> reg4",
      "38714 SET MEMORY ELEMENT IF INIT      1685 = reg4",
      "38717 COPY ENUMERABLE      reg4 -> reg5",
      "38720 GET      reg5[length] -> reg6",
      "38726 EQUAL      reg6 == 0 -> reg8",
      "38730 JUMP IF TRUE      reg8 TO: 38827 | 38733"
  ],
  "38733": [
      "38733 SET      0 -> reg8",
      "38736 GET      reg5[reg8] -> reg4",
      "38740 SET MEMORY ELEMENT IF INIT      1688 = reg4",
      "38743 GET WINDOW PROP      Object -> reg10",
      "38748 GET      reg10[prototype] -> reg9",
      "38754 GET      reg9[hasOwnProperty] -> reg10",
      "38760 GET      reg10[call] -> reg9",
      "38766 NEW ARRAY      2 -> reg11",
      "38769 PUSH MEMORY ELEMENT IF INIT      1685 -> reg13",
      "38772 PUT      reg11[0] = reg13",
      "38776 PUSH MEMORY ELEMENT IF INIT      1688 -> reg12",
      "38779 PUT      reg11[1] = reg12",
      "38783 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg11",
      "38787 SET      reg2 -> reg7",
      "38790 JUMP IF FALSE      reg7 TO: 38816 | 38793"
  ],
  "38736": [
      "38736 GET      reg5[reg8] -> reg4",
      "38740 SET MEMORY ELEMENT IF INIT      1688 = reg4",
      "38743 GET WINDOW PROP      Object -> reg10",
      "38748 GET      reg10[prototype] -> reg9",
      "38754 GET      reg9[hasOwnProperty] -> reg10",
      "38760 GET      reg10[call] -> reg9",
      "38766 NEW ARRAY      2 -> reg11",
      "38769 PUSH MEMORY ELEMENT IF INIT      1685 -> reg13",
      "38772 PUT      reg11[0] = reg13",
      "38776 PUSH MEMORY ELEMENT IF INIT      1688 -> reg12",
      "38779 PUT      reg11[1] = reg12",
      "38783 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg11",
      "38787 SET      reg2 -> reg7",
      "38790 JUMP IF FALSE      reg7 TO: 38816 | 38793"
  ],
  "38793": [
      "38793 PUSH MEMORY ELEMENT IF INIT      1684 -> reg9",
      "38796 PUSH MEMORY ELEMENT IF INIT      1688 -> reg11",
      "38799 PUSH MEMORY ELEMENT IF INIT      1685 -> reg14",
      "38802 PUSH MEMORY ELEMENT IF INIT      1688 -> reg13",
      "38805 GET      reg14[reg13] -> reg12",
      "38809 PUT      reg9[reg11] = reg12",
      "38813 SET      reg12 -> reg7",
      "38816 ADD      reg81-> reg8",
      "38820 LESS THAN      reg8 < reg6 -> reg7",
      "38824 JUMP IF TRUE      reg7 TO: 38736 | 38827"
  ],
  "38816": [
      "38816 ADD      reg81-> reg8",
      "38820 LESS THAN      reg8 < reg6 -> reg7",
      "38824 JUMP IF TRUE      reg7 TO: 38736 | 38827"
  ],
  "38827": [
      "38827 PUSH MEMORY ELEMENT IF INIT      1686 -> reg5",
      "38830 SET      reg5 -> reg4",
      "38833 ADD      reg51-> reg5",
      "38837 SET MEMORY ELEMENT IF INIT      1686 = reg5",
      "38840 JUMP      38694",
      "38694 PUSH MEMORY ELEMENT IF INIT      1686 -> reg4",
      "38697 PUSH MEMORY ELEMENT IF INIT      1687 -> reg5",
      "38700 LESS THAN      reg4 < reg5 -> reg7",
      "38704 JUMP IF FALSE      reg7 TO: 38842 | 38707"
  ],
  "38842": [
      "38842 PUSH MEMORY ELEMENT IF INIT      1684 -> reg4",
      "38845 JUMP OR RETURN VAL      reg4"
  ],
  "38850": [
      "38850 SET MEMORY ELEMENT IF INIT      1239 = reg4",
      "38853 PUSH MEMORY ELEMENT IF INIT      1239 -> reg5",
      "38856 GET      reg5[apply] -> reg8",
      "38862 NEW ARRAY      2 -> reg7",
      "38865 PUSH H       -> reg6",
      "38867 PUT      reg7[0] = reg6",
      "38871 PUT      reg7[1] = reg3",
      "38875 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg7",
      "38879 SET      reg2 -> reg4",
      "38882 JUMP OR RETURN VAL      reg4"
  ],
  "38901": [
      "38901 INIT FUNCTION STATE      PTR: 38910 NAME:  LEN: 4 -> reg4",
      "38908 JUMP      39144",
      "39144 SET      reg4 -> reg8",
      "39147 JUMP      39216",
      "39216 SET MEMORY ELEMENT IF INIT      1246 = reg8",
      "39219 GET WINDOW PROP      Object -> reg4",
      "39224 GET      reg4[create] -> reg9",
      "39230 JUMP IF FALSE      reg9 TO: 39312 | 39233"
  ],
  "38937": [
      "38937 PUSH MEMORY ELEMENT IF INIT      1697 -> reg4",
      "38940 SET MEMORY ELEMENT IF INIT      1698 = reg4",
      "38943 SET      reg4 -> reg7",
      "38946 GET WINDOW PROP      Object -> reg9",
      "38951 GET      reg9[getOwnPropertyDescriptor] -> reg6",
      "38957 NEW ARRAY      2 -> reg5",
      "38960 PUSH MEMORY ELEMENT IF INIT      1696 -> reg8",
      "38963 PUT      reg5[0] = reg8",
      "38967 PUSH MEMORY ELEMENT IF INIT      1697 -> reg8",
      "38970 PUT      reg5[1] = reg8",
      "38974 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg5",
      "38978 SET      reg2 -> reg4",
      "38981 SET MEMORY ELEMENT IF INIT      1699 = reg4",
      "38984 PUSH MEMORY ELEMENT IF INIT      1699 -> reg5",
      "38987 JUMP IF FALSE      reg5 TO: 39052 | 38990"
  ],
  "38946": [
      "38946 GET WINDOW PROP      Object -> reg9",
      "38951 GET      reg9[getOwnPropertyDescriptor] -> reg6",
      "38957 NEW ARRAY      2 -> reg5",
      "38960 PUSH MEMORY ELEMENT IF INIT      1696 -> reg8",
      "38963 PUT      reg5[0] = reg8",
      "38967 PUSH MEMORY ELEMENT IF INIT      1697 -> reg8",
      "38970 PUT      reg5[1] = reg8",
      "38974 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg5",
      "38978 SET      reg2 -> reg4",
      "38981 SET MEMORY ELEMENT IF INIT      1699 = reg4",
      "38984 PUSH MEMORY ELEMENT IF INIT      1699 -> reg5",
      "38987 JUMP IF FALSE      reg5 TO: 39052 | 38990"
  ],
  "38990": [
      "38990 PUSH MEMORY ELEMENT IF INIT      1699 -> reg4",
      "38993 IN      get inreg4 -> reg7",
      "38999 JUMP IF FALSE      reg7 TO: 39019 | 39002"
  ],
  "39002": [
      "39002 PUSH MEMORY ELEMENT IF INIT      1696 -> reg6",
      "39005 GET      reg6[__esModule] -> reg8",
      "39011 NOT      reg8 -> reg6",
      "39014 SET      reg6 -> reg4",
      "39017 JUMP      39046",
      "39046 NOT      reg4 -> reg7",
      "39049 SET      reg7 -> reg5",
      "39052 JUMP IF TRUE      reg5 TO: 39101 | 39055"
  ],
  "39019": [
      "39019 PUSH MEMORY ELEMENT IF INIT      1699 -> reg6",
      "39022 GET      reg6[writable] -> reg7",
      "39028 JUMP IF TRUE      reg7 TO: 39043 | 39031"
  ],
  "39031": [
      "39031 PUSH MEMORY ELEMENT IF INIT      1699 -> reg6",
      "39034 GET      reg6[configurable] -> reg8",
      "39040 SET      reg8 -> reg7",
      "39043 SET      reg7 -> reg4",
      "39046 NOT      reg4 -> reg7",
      "39049 SET      reg7 -> reg5",
      "39052 JUMP IF TRUE      reg5 TO: 39101 | 39055"
  ],
  "39043": [
      "39043 SET      reg7 -> reg4",
      "39046 NOT      reg4 -> reg7",
      "39049 SET      reg7 -> reg5",
      "39052 JUMP IF TRUE      reg5 TO: 39101 | 39055"
  ],
  "39052": ["39052 JUMP IF TRUE      reg5 TO: 39101 | 39055"],
  "39055": [
      "39055 EMPTY OBJECT      -> reg6",
      "39057 NOT      0 -> reg4",
      "39060 PUT      reg6[enumerable] = reg4",
      "39066 INIT FUNCTION STATE      PTR: 39075 NAME:  LEN: 0 -> reg4",
      "39073 JUMP      39089",
      "39089 PUT      reg6[get] = reg4",
      "39095 SET MEMORY ELEMENT IF INIT      1699 = reg6",
      "39098 SET      reg6 -> reg5",
      "39101 GET WINDOW PROP      Object -> reg7",
      "39106 GET      reg7[defineProperty] -> reg5",
      "39112 NEW ARRAY      3 -> reg6",
      "39115 PUSH MEMORY ELEMENT IF INIT      1695 -> reg8",
      "39118 PUT      reg6[0] = reg8",
      "39122 PUSH MEMORY ELEMENT IF INIT      1698 -> reg8",
      "39125 PUT      reg6[1] = reg8",
      "39129 PUSH MEMORY ELEMENT IF INIT      1699 -> reg10",
      "39132 PUT      reg6[2] = reg10",
      "39136 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg6",
      "39140 SET      reg2 -> reg4",
      "39143 JUMP OR RETURN"
  ],
  "39101": [
      "39101 GET WINDOW PROP      Object -> reg7",
      "39106 GET      reg7[defineProperty] -> reg5",
      "39112 NEW ARRAY      3 -> reg6",
      "39115 PUSH MEMORY ELEMENT IF INIT      1695 -> reg8",
      "39118 PUT      reg6[0] = reg8",
      "39122 PUSH MEMORY ELEMENT IF INIT      1698 -> reg8",
      "39125 PUT      reg6[1] = reg8",
      "39129 PUSH MEMORY ELEMENT IF INIT      1699 -> reg10",
      "39132 PUT      reg6[2] = reg10",
      "39136 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg6",
      "39140 SET      reg2 -> reg4",
      "39143 JUMP OR RETURN"
  ],
  "39149": [
      "39149 INIT FUNCTION STATE      PTR: 39158 NAME:  LEN: 4 -> reg4",
      "39156 JUMP      39213",
      "39213 SET      reg4 -> reg8",
      "39216 SET MEMORY ELEMENT IF INIT      1246 = reg8",
      "39219 GET WINDOW PROP      Object -> reg4",
      "39224 GET      reg4[create] -> reg9",
      "39230 JUMP IF FALSE      reg9 TO: 39312 | 39233"
  ],
  "39183": [
      "39183 PUSH MEMORY ELEMENT IF INIT      1711 -> reg6",
      "39186 SET MEMORY ELEMENT IF INIT      1712 = reg6",
      "39189 SET      reg6 -> reg4",
      "39192 PUSH MEMORY ELEMENT IF INIT      1709 -> reg4",
      "39195 PUSH MEMORY ELEMENT IF INIT      1712 -> reg5",
      "39198 PUSH MEMORY ELEMENT IF INIT      1710 -> reg6",
      "39201 PUSH MEMORY ELEMENT IF INIT      1711 -> reg7",
      "39204 GET      reg6[reg7] -> reg9",
      "39208 PUT      reg4[reg5] = reg9",
      "39212 JUMP OR RETURN"
  ],
  "39192": [
      "39192 PUSH MEMORY ELEMENT IF INIT      1709 -> reg4",
      "39195 PUSH MEMORY ELEMENT IF INIT      1712 -> reg5",
      "39198 PUSH MEMORY ELEMENT IF INIT      1710 -> reg6",
      "39201 PUSH MEMORY ELEMENT IF INIT      1711 -> reg7",
      "39204 GET      reg6[reg7] -> reg9",
      "39208 PUT      reg4[reg5] = reg9",
      "39212 JUMP OR RETURN"
  ],
  "39233": [
      "39233 INIT FUNCTION STATE      PTR: 39242 NAME:  LEN: 2 -> reg7",
      "39240 JUMP      39307",
      "39307 SET      reg7 -> reg4",
      "39310 JUMP      39343",
      "39343 SET MEMORY ELEMENT IF INIT      1258 = reg4",
      "39346 JUMP OR RETURN"
  ],
  "39312": [
      "39312 INIT FUNCTION STATE      PTR: 39321 NAME:  LEN: 2 -> reg7",
      "39319 JUMP      39340",
      "39340 SET      reg7 -> reg4",
      "39343 SET MEMORY ELEMENT IF INIT      1258 = reg4",
      "39346 JUMP OR RETURN"
  ],
  "39440": [
      "39440 SET      0 -> reg7",
      "39443 GET      reg5[reg7] -> reg4",
      "39447 SET MEMORY ELEMENT IF INIT      1732 = reg4",
      "39450 PUSH MEMORY ELEMENT IF INIT      303 -> reg8",
      "39453 GET      reg8[o] -> reg10",
      "39459 NEW ARRAY      2 -> reg12",
      "39462 PUSH MEMORY ELEMENT IF INIT      1731 -> reg11",
      "39465 PUT      reg12[0] = reg11",
      "39469 PUSH MEMORY ELEMENT IF INIT      1732 -> reg11",
      "39472 PUT      reg12[1] = reg11",
      "39476 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg12",
      "39480 SET      reg2 -> reg9",
      "39483 JUMP IF FALSE      reg9 TO: 39525 | 39486"
  ],
  "39443": [
      "39443 GET      reg5[reg7] -> reg4",
      "39447 SET MEMORY ELEMENT IF INIT      1732 = reg4",
      "39450 PUSH MEMORY ELEMENT IF INIT      303 -> reg8",
      "39453 GET      reg8[o] -> reg10",
      "39459 NEW ARRAY      2 -> reg12",
      "39462 PUSH MEMORY ELEMENT IF INIT      1731 -> reg11",
      "39465 PUT      reg12[0] = reg11",
      "39469 PUSH MEMORY ELEMENT IF INIT      1732 -> reg11",
      "39472 PUT      reg12[1] = reg11",
      "39476 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg12",
      "39480 SET      reg2 -> reg9",
      "39483 JUMP IF FALSE      reg9 TO: 39525 | 39486"
  ],
  "39486": [
      "39486 PUSH MEMORY ELEMENT IF INIT      303 -> reg11",
      "39489 GET      reg11[o] -> reg12",
      "39495 NEW ARRAY      2 -> reg13",
      "39498 PUSH MEMORY ELEMENT IF INIT      1730 -> reg14",
      "39501 PUT      reg13[0] = reg14",
      "39505 PUSH MEMORY ELEMENT IF INIT      1732 -> reg14",
      "39508 PUT      reg13[1] = reg14",
      "39512 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg13",
      "39516 SET      reg2 -> reg10",
      "39519 NOT      reg10 -> reg15",
      "39522 SET      reg15 -> reg9",
      "39525 JUMP IF FALSE      reg9 TO: 39597 | 39528"
  ],
  "39525": ["39525 JUMP IF FALSE      reg9 TO: 39597 | 39528"],
  "39528": [
      "39528 GET WINDOW PROP      Object -> reg13",
      "39533 GET      reg13[defineProperty] -> reg12",
      "39539 NEW ARRAY      3 -> reg14",
      "39542 PUSH MEMORY ELEMENT IF INIT      1730 -> reg15",
      "39545 PUT      reg14[0] = reg15",
      "39549 PUSH MEMORY ELEMENT IF INIT      1732 -> reg15",
      "39552 PUT      reg14[1] = reg15",
      "39556 EMPTY OBJECT      -> reg15",
      "39558 NOT      0 -> reg17",
      "39561 PUT      reg15[enumerable] = reg17",
      "39567 PUSH MEMORY ELEMENT IF INIT      1731 -> reg16",
      "39570 PUSH MEMORY ELEMENT IF INIT      1732 -> reg18",
      "39573 GET      reg16[reg18] -> reg17",
      "39577 PUT      reg15[get] = reg17",
      "39583 PUT      reg14[2] = reg15",
      "39587 CALL FUNCTION      OBJ: reg13 FUNC: reg12 ARGS: reg14",
      "39591 SET      reg2 -> reg10",
      "39594 SET      reg10 -> reg9",
      "39597 ADD      reg71-> reg7",
      "39601 LESS THAN      reg7 < reg6 -> reg9",
      "39605 JUMP IF TRUE      reg9 TO: 39443 | 39608"
  ],
  "39597": [
      "39597 ADD      reg71-> reg7",
      "39601 LESS THAN      reg7 < reg6 -> reg9",
      "39605 JUMP IF TRUE      reg9 TO: 39443 | 39608"
  ],
  "39608": ["39608 JUMP OR RETURN"],
  "39726": [
      "39726 GET WINDOW PROP      Symbol -> reg5",
      "39731 GET      reg5[toStringTag] -> reg6",
      "39737 SET      reg6 -> reg4",
      "39740 JUMP IF FALSE      reg4 TO: 39803 | 39743"
  ],
  "39740": ["39740 JUMP IF FALSE      reg4 TO: 39803 | 39743"],
  "39743": [
      "39743 GET WINDOW PROP      Object -> reg6",
      "39748 GET      reg6[defineProperty] -> reg5",
      "39754 NEW ARRAY      3 -> reg8",
      "39757 PUSH MEMORY ELEMENT IF INIT      1742 -> reg9",
      "39760 PUT      reg8[0] = reg9",
      "39764 GET WINDOW PROP      Symbol -> reg9",
      "39769 GET      reg9[toStringTag] -> reg10",
      "39775 PUT      reg8[1] = reg10",
      "39779 EMPTY OBJECT      -> reg9",
      "39781 PUT      reg9[value] = Module",
      "39789 PUT      reg8[2] = reg9",
      "39793 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "39797 SET      reg2 -> reg7",
      "39800 SET      reg7 -> reg4",
      "39803 GET WINDOW PROP      Object -> reg5",
      "39808 GET      reg5[defineProperty] -> reg7",
      "39814 NEW ARRAY      3 -> reg8",
      "39817 PUSH MEMORY ELEMENT IF INIT      1742 -> reg11",
      "39820 PUT      reg8[0] = reg11",
      "39824 PUT      reg8[1] = __esModule",
      "39830 EMPTY OBJECT      -> reg9",
      "39832 NOT      0 -> reg10",
      "39835 PUT      reg9[value] = reg10",
      "39841 PUT      reg8[2] = reg9",
      "39845 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "39849 SET      reg2 -> reg4",
      "39852 JUMP OR RETURN"
  ],
  "39803": [
      "39803 GET WINDOW PROP      Object -> reg5",
      "39808 GET      reg5[defineProperty] -> reg7",
      "39814 NEW ARRAY      3 -> reg8",
      "39817 PUSH MEMORY ELEMENT IF INIT      1742 -> reg11",
      "39820 PUT      reg8[0] = reg11",
      "39824 PUT      reg8[1] = __esModule",
      "39830 EMPTY OBJECT      -> reg9",
      "39832 NOT      0 -> reg10",
      "39835 PUT      reg9[value] = reg10",
      "39841 PUT      reg8[2] = reg9",
      "39845 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "39849 SET      reg2 -> reg4",
      "39852 JUMP OR RETURN"
  ],
  "41300": [
      "41300 PROMISE      -> reg10",
      "41302 GET      reg10[resolve] -> reg11",
      "41308 EMPTY ARRAY      -> reg12",
      "41310 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "41314 SET      reg2 -> reg8",
      "41317 SET      reg8 -> reg9",
      "41320 JUMP      41386",
      "41386 GET      reg9[then] -> reg8",
      "41392 NEW ARRAY      1 -> reg13",
      "41395 INIT FUNCTION STATE      PTR: 41404 NAME:  LEN: 0 -> reg11",
      "41402 JUMP      41485",
      "41485 PUT      reg13[0] = reg11",
      "41489 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg13",
      "41493 SET      reg2 -> reg5",
      "41496 GET      reg5[then] -> reg11",
      "41502 NEW ARRAY      1 -> reg8",
      "41505 PUSH MEMORY ELEMENT IF INIT      1756 -> reg12",
      "41508 GET      reg12[default] -> reg13",
      "41514 PUT      reg8[0] = reg13",
      "41518 CALL FUNCTION      OBJ: reg5 FUNC: reg11 ARGS: reg8",
      "41522 SET      reg2 -> reg7",
      "41525 GET      reg7[then] -> reg14",
      "41531 NEW ARRAY      1 -> reg8",
      "41534 INIT FUNCTION STATE      PTR: 41543 NAME:  LEN: 1 -> reg12",
      "41541 JUMP      41588",
      "41588 PUT      reg8[0] = reg12",
      "41592 CALL FUNCTION      OBJ: reg7 FUNC: reg14 ARGS: reg8",
      "41596 SET      reg2 -> reg6",
      "41599 GET      reg6[catch] -> reg8",
      "41605 NEW ARRAY      1 -> reg11",
      "41608 INIT FUNCTION STATE      PTR: 41617 NAME:  LEN: 1 -> reg12",
      "41615 JUMP      41716",
      "41716 PUT      reg11[0] = reg12",
      "41720 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg11",
      "41724 SET      reg2 -> reg4",
      "41727 JUMP OR RETURN"
  ],
  "41322": [
      "41322 PROMISE      -> reg8",
      "41324 NEW ARRAY      1 -> reg12",
      "41327 INIT FUNCTION STATE      PTR: 41336 NAME:  LEN: 1 -> reg13",
      "41334 JUMP      41375",
      "41375 PUT      reg12[0] = reg13",
      "41379 BIND APPLY      reg8 reg12 -> 11",
      "41383 SET      reg11 -> reg9",
      "41386 GET      reg9[then] -> reg8",
      "41392 NEW ARRAY      1 -> reg13",
      "41395 INIT FUNCTION STATE      PTR: 41404 NAME:  LEN: 0 -> reg11",
      "41402 JUMP      41485",
      "41485 PUT      reg13[0] = reg11",
      "41489 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg13",
      "41493 SET      reg2 -> reg5",
      "41496 GET      reg5[then] -> reg11",
      "41502 NEW ARRAY      1 -> reg8",
      "41505 PUSH MEMORY ELEMENT IF INIT      1756 -> reg12",
      "41508 GET      reg12[default] -> reg13",
      "41514 PUT      reg8[0] = reg13",
      "41518 CALL FUNCTION      OBJ: reg5 FUNC: reg11 ARGS: reg8",
      "41522 SET      reg2 -> reg7",
      "41525 GET      reg7[then] -> reg14",
      "41531 NEW ARRAY      1 -> reg8",
      "41534 INIT FUNCTION STATE      PTR: 41543 NAME:  LEN: 1 -> reg12",
      "41541 JUMP      41588",
      "41588 PUT      reg8[0] = reg12",
      "41592 CALL FUNCTION      OBJ: reg7 FUNC: reg14 ARGS: reg8",
      "41596 SET      reg2 -> reg6",
      "41599 GET      reg6[catch] -> reg8",
      "41605 NEW ARRAY      1 -> reg11",
      "41608 INIT FUNCTION STATE      PTR: 41617 NAME:  LEN: 1 -> reg12",
      "41615 JUMP      41716",
      "41716 PUT      reg11[0] = reg12",
      "41720 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg11",
      "41724 SET      reg2 -> reg4",
      "41727 JUMP OR RETURN"
  ],
  "41641": [
      "41641 PUSH MEMORY ELEMENT IF INIT      1751 -> reg10",
      "41644 GET      reg10[FrontendErrorCode] -> reg4",
      "41650 GET      reg4[WebClientDecodePairFunctionExecutionError] -> reg6",
      "41656 SET      reg6 -> reg5",
      "41659 JUMP      41679",
      "41679 SET MEMORY ELEMENT IF INIT      1786 = reg5",
      "41682 PUSH MEMORY ELEMENT IF INIT      1768 -> reg4",
      "41685 GET      reg4[report] -> reg7",
      "41691 NEW ARRAY      2 -> reg8",
      "41694 PUSH MEMORY ELEMENT IF INIT      1785 -> reg6",
      "41697 PUT      reg8[0] = reg6",
      "41701 PUSH MEMORY ELEMENT IF INIT      1786 -> reg6",
      "41704 PUT      reg8[1] = reg6",
      "41708 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg8",
      "41712 SET      reg2 -> reg5",
      "41715 JUMP OR RETURN"
  ],
  "41661": [
      "41661 PUSH MEMORY ELEMENT IF INIT      1751 -> reg4",
      "41664 GET      reg4[FrontendErrorCode] -> reg9",
      "41670 GET      reg9[WebClientSensorExecutionError] -> reg7",
      "41676 SET      reg7 -> reg5",
      "41679 SET MEMORY ELEMENT IF INIT      1786 = reg5",
      "41682 PUSH MEMORY ELEMENT IF INIT      1768 -> reg4",
      "41685 GET      reg4[report] -> reg7",
      "41691 NEW ARRAY      2 -> reg8",
      "41694 PUSH MEMORY ELEMENT IF INIT      1785 -> reg6",
      "41697 PUT      reg8[0] = reg6",
      "41701 PUSH MEMORY ELEMENT IF INIT      1786 -> reg6",
      "41704 PUT      reg8[1] = reg6",
      "41708 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg8",
      "41712 SET      reg2 -> reg5",
      "41715 JUMP OR RETURN"
  ],
  "41769": [
      "41769 PUSH MEMORY ELEMENT IF INIT      274 -> reg8",
      "41772 GET WINDOW PROP      KPSDK -> reg9",
      "41777 GET      reg9[now] -> reg10",
      "41783 EMPTY ARRAY      -> reg11",
      "41785 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "41789 SET      reg2 -> reg5",
      "41792 PUT      reg8[nmx] = reg5",
      "41798 PUSH MEMORY ELEMENT IF INIT      281 -> reg8",
      "41801 GET      reg8[attemptScripts] -> reg10",
      "41807 NEW ARRAY      1 -> reg11",
      "41810 INIT FUNCTION STATE      PTR: 41819 NAME:  LEN: 0 -> reg12",
      "41817 JUMP      149222",
      "149222 PUT      reg11[0] = reg12",
      "149226 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg11",
      "149230 SET      reg2 -> reg5",
      "149233 SET MEMORY ELEMENT IF INIT      282 = reg5",
      "149236 PUSH MEMORY ELEMENT IF INIT      272 -> reg5",
      "149239 JUMP IF FALSE      reg5 TO: 149271 | 149242"
  ],
  "41798": [
      "41798 PUSH MEMORY ELEMENT IF INIT      281 -> reg8",
      "41801 GET      reg8[attemptScripts] -> reg10",
      "41807 NEW ARRAY      1 -> reg11",
      "41810 INIT FUNCTION STATE      PTR: 41819 NAME:  LEN: 0 -> reg12",
      "41817 JUMP      149222",
      "149222 PUT      reg11[0] = reg12",
      "149226 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg11",
      "149230 SET      reg2 -> reg5",
      "149233 SET MEMORY ELEMENT IF INIT      282 = reg5",
      "149236 PUSH MEMORY ELEMENT IF INIT      272 -> reg5",
      "149239 JUMP IF FALSE      reg5 TO: 149271 | 149242"
  ],
  "41869": [
      "41869 INIT FUNCTION STATE      PTR: 41878 NAME:  LEN: 2 -> reg4",
      "41876 JUMP      42039",
      "42039 SET MEMORY ELEMENT IF INIT      1794 = reg4",
      "42042 INIT FUNCTION STATE      PTR: 42051 NAME:  LEN: 1 -> reg4",
      "42049 JUMP      42314",
      "42314 SET MEMORY ELEMENT IF INIT      1795 = reg4",
      "42317 INIT FUNCTION STATE      PTR: 42326 NAME:  LEN: 1 -> reg4",
      "42324 JUMP      42480",
      "42480 SET MEMORY ELEMENT IF INIT      1796 = reg4",
      "42483 INIT FUNCTION STATE      PTR: 42492 NAME:  LEN: 0 -> reg4",
      "42490 JUMP      42857",
      "42857 SET MEMORY ELEMENT IF INIT      1797 = reg4",
      "42860 EMPTY OBJECT      -> reg4",
      "42862 SET MEMORY ELEMENT IF INIT      1798 = reg4",
      "42865 PUSH MEMORY ELEMENT IF INIT      1798 -> reg4",
      "42868 PUT      reg4[sid] = nike-custom-aws-bot",
      "42876 PUSH MEMORY ELEMENT IF INIT      1798 -> reg4",
      "42879 PUT      reg4[type] = ab",
      "42887 PUSH MEMORY ELEMENT IF INIT      1798 -> reg4",
      "42890 PUT      reg4[action] = allow",
      "42898 PUSH MEMORY ELEMENT IF INIT      1798 -> reg6",
      "42901 GET WINDOW PROP      window -> reg4",
      "42906 GET      reg4[location] -> reg8",
      "42912 GET      reg8[origin] -> reg4",
      "42918 PUT      reg6[og] = reg4",
      "42924 PUSH MEMORY ELEMENT IF INIT      1798 -> reg6",
      "42927 PUSH MEMORY ELEMENT IF INIT      1796 -> reg7",
      "42930 NEW ARRAY      1 -> reg8",
      "42933 PUT      reg8[0] = 8",
      "42937 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "42941 SET      reg2 -> reg4",
      "42944 PUT      reg6[kid] = reg4",
      "42950 PUSH MEMORY ELEMENT IF INIT      1798 -> reg4",
      "42953 PUSH MEMORY ELEMENT IF INIT      1797 -> reg7",
      "42956 EMPTY ARRAY      -> reg8",
      "42958 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "42962 SET      reg2 -> reg6",
      "42965 PUT      reg4[modm] = reg6",
      "42971 PUSH MEMORY ELEMENT IF INIT      1798 -> reg6",
      "42974 GET      reg6[modm] -> reg7",
      "42980 GET      reg7[verdict] -> reg4",
      "42986 STRICT EQUAL      reg4 === true -> reg6",
      "42990 JUMP IF FALSE      reg6 TO: 43027 | 42993"
  ],
  "41915": [
      "41915 PUSH MEMORY ELEMENT IF INIT      1804 -> reg4",
      "41918 GET WINDOW PROP      String -> reg5",
      "41923 GET      reg5[fromCharCode] -> reg8",
      "41929 NEW ARRAY      1 -> reg9",
      "41932 PUSH MEMORY ELEMENT IF INIT      1802 -> reg10",
      "41935 GET      reg10[charCodeAt] -> reg11",
      "41941 NEW ARRAY      1 -> reg12",
      "41944 PUSH MEMORY ELEMENT IF INIT      1805 -> reg13",
      "41947 PUT      reg12[0] = reg13",
      "41951 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "41955 SET      reg2 -> reg7",
      "41958 PUSH MEMORY ELEMENT IF INIT      1803 -> reg12",
      "41961 GET      reg12[charCodeAt] -> reg13",
      "41967 NEW ARRAY      1 -> reg14",
      "41970 PUSH MEMORY ELEMENT IF INIT      1805 -> reg16",
      "41973 PUSH MEMORY ELEMENT IF INIT      1803 -> reg17",
      "41976 GET      reg17[length] -> reg15",
      "41982 MOD      reg16 % reg15 -> reg19",
      "41986 PUT      reg14[0] = reg19",
      "41990 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "41994 SET      reg2 -> reg11",
      "41997 XOR      reg7 ^ reg11 -> reg14",
      "42001 PUT      reg9[0] = reg14",
      "42005 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg9",
      "42009 SET      reg2 -> reg6",
      "42012 ADD      reg4NaN-> reg6",
      "42016 SET MEMORY ELEMENT IF INIT      1804 = reg6",
      "42019 PUSH MEMORY ELEMENT IF INIT      1805 -> reg4",
      "42022 SET      reg4 -> reg6",
      "42025 ADD      reg41-> reg4",
      "42029 SET MEMORY ELEMENT IF INIT      1805 = reg4",
      "42032 JUMP      41896",
      "41896 PUSH MEMORY ELEMENT IF INIT      1805 -> reg4",
      "41899 PUSH MEMORY ELEMENT IF INIT      1802 -> reg5",
      "41902 GET      reg5[length] -> reg6",
      "41908 LESS THAN      reg4 < reg6 -> reg5",
      "41912 JUMP IF FALSE      reg5 TO: 42034 | 41915"
  ],
  "42034": [
      "42034 PUSH MEMORY ELEMENT IF INIT      1804 -> reg4",
      "42037 JUMP OR RETURN VAL      reg4"
  ],
  "42375": [
      "42375 PUSH MEMORY ELEMENT IF INIT      1815 -> reg4",
      "42378 PUSH MEMORY ELEMENT IF INIT      1816 -> reg5",
      "42381 GET      reg5[charAt] -> reg6",
      "42387 NEW ARRAY      1 -> reg9",
      "42390 GET WINDOW PROP      Math -> reg8",
      "42395 GET      reg8[floor] -> reg11",
      "42401 NEW ARRAY      1 -> reg12",
      "42404 GET WINDOW PROP      Math -> reg13",
      "42409 GET      reg13[random] -> reg21",
      "42415 EMPTY ARRAY      -> reg15",
      "42417 CALL FUNCTION      OBJ: reg13 FUNC: reg21 ARGS: reg15",
      "42421 SET      reg2 -> reg14",
      "42424 PUSH MEMORY ELEMENT IF INIT      1817 -> reg15",
      "42427 MULTIPLY      reg14 * reg15 -> reg16",
      "42431 PUT      reg12[0] = reg16",
      "42435 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg12",
      "42439 SET      reg2 -> reg10",
      "42442 PUT      reg9[0] = reg10",
      "42446 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg9",
      "42450 SET      reg2 -> reg7",
      "42453 ADD      reg4NaN-> reg7",
      "42457 SET MEMORY ELEMENT IF INIT      1815 = reg7",
      "42460 PUSH MEMORY ELEMENT IF INIT      1818 -> reg4",
      "42463 SET      reg4 -> reg6",
      "42466 ADD      reg41-> reg4",
      "42470 SET MEMORY ELEMENT IF INIT      1818 = reg4",
      "42473 JUMP      42362",
      "42362 PUSH MEMORY ELEMENT IF INIT      1818 -> reg5",
      "42365 PUSH MEMORY ELEMENT IF INIT      1814 -> reg4",
      "42368 LESS THAN      reg5 < reg4 -> reg7",
      "42372 JUMP IF FALSE      reg7 TO: 42475 | 42375"
  ],
  "42475": [
      "42475 PUSH MEMORY ELEMENT IF INIT      1815 -> reg6",
      "42478 JUMP OR RETURN VAL      reg6"
  ],
  "42697": [
      "42697 PUSH MEMORY ELEMENT IF INIT      1822 -> reg11",
      "42700 GET      reg11[c] -> reg7",
      "42706 GET      reg7[ic] -> reg9",
      "42712 GREATER THAN      reg9 > 32 -> reg7",
      "42716 SET      reg7 -> reg8",
      "42719 PUT      reg4[verdict] = reg8",
      "42725 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "42728 GET      reg9[stringify] -> reg10",
      "42734 NEW ARRAY      1 -> reg8",
      "42737 PUSH MEMORY ELEMENT IF INIT      1822 -> reg11",
      "42740 PUT      reg8[0] = reg11",
      "42744 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg8",
      "42748 SET      reg2 -> reg7",
      "42751 PUT      reg4[raw] = reg7",
      "42757 PUT      reg4[error] = false",
      "42763 JUMP OR RETURN VAL      reg4"
  ],
  "42719": [
      "42719 PUT      reg4[verdict] = reg8",
      "42725 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "42728 GET      reg9[stringify] -> reg10",
      "42734 NEW ARRAY      1 -> reg8",
      "42737 PUSH MEMORY ELEMENT IF INIT      1822 -> reg11",
      "42740 PUT      reg8[0] = reg11",
      "42744 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg8",
      "42748 SET      reg2 -> reg7",
      "42751 PUT      reg4[raw] = reg7",
      "42757 PUT      reg4[error] = false",
      "42763 JUMP OR RETURN VAL      reg4"
  ],
  "42767": [
      "42767 SET I      42815",
      "42769 PUSH F.K      -> reg4",
      "42771 VOID F",
      "42772 SET MEMORY ELEMENT      0 = reg4",
      "42775 EMPTY OBJECT      -> reg4",
      "42777 PUT      reg4[verdict] = false",
      "42783 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "42786 GET      reg8[toString] -> reg10",
      "42792 EMPTY ARRAY      -> reg11",
      "42794 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg11",
      "42798 SET      reg2 -> reg7",
      "42801 PUT      reg4[raw] = reg7",
      "42807 PUT      reg4[error] = true",
      "42813 JUMP OR RETURN VAL      reg4"
  ],
  "42815": [
      "42815 SET I      null",
      "42817 SET N      null",
      "42819 GET WINDOW PROP      document -> reg10",
      "42824 GET      reg10[body] -> reg4",
      "42830 GET      reg4[removeChild] -> reg10",
      "42836 NEW ARRAY      1 -> reg12",
      "42839 PUSH MEMORY ELEMENT IF INIT      1821 -> reg11",
      "42842 PUT      reg12[0] = reg11",
      "42846 CALL FUNCTION      OBJ: reg4 FUNC: reg10 ARGS: reg12",
      "42850 SET      reg2 -> reg7",
      "42853 HANDLE TRACE OR JUMP OR RETURN C",
      "42854 SET I      null",
      "42856 JUMP OR RETURN"
  ],
  "42993": [
      "42993 PUSH MEMORY ELEMENT IF INIT      1798 -> reg4",
      "42996 PUT      reg4[action] = block",
      "43004 SET MEMORY ELEMENT IF INIT      275 = true",
      "43007 PUSH MEMORY ELEMENT IF INIT      1795 -> reg6",
      "43010 NEW ARRAY      1 -> reg7",
      "43013 PUSH MEMORY ELEMENT IF INIT      1798 -> reg8",
      "43016 PUT      reg7[0] = reg8",
      "43020 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "43024 SET      reg2 -> reg4",
      "43027 JUMP      43037",
      "43037 SET I      null",
      "43039 JUMP OR RETURN"
  ],
  "43027": [
      "43027 JUMP      43037",
      "43037 SET I      null",
      "43039 JUMP OR RETURN"
  ],
  "43029": [
      "43029 SET I      null",
      "43031 PUSH F.K      -> reg4",
      "43033 VOID F",
      "43034 SET MEMORY ELEMENT      0 = reg4",
      "43037 SET I      null",
      "43039 JUMP OR RETURN"
  ],
  "43156": [
      "43156 PUSH MEMORY ELEMENT IF INIT      1857 -> reg6",
      "43159 GET WINDOW PROP      String -> reg5",
      "43164 GET      reg5[fromCharCode] -> reg7",
      "43170 NEW ARRAY      1 -> reg10",
      "43173 PUSH MEMORY ELEMENT IF INIT      1855 -> reg9",
      "43176 GET      reg9[charCodeAt] -> reg11",
      "43182 NEW ARRAY      1 -> reg14",
      "43185 PUSH MEMORY ELEMENT IF INIT      1858 -> reg13",
      "43188 PUT      reg14[0] = reg13",
      "43192 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg14",
      "43196 SET      reg2 -> reg8",
      "43199 PUSH MEMORY ELEMENT IF INIT      1856 -> reg12",
      "43202 GET      reg12[charCodeAt] -> reg13",
      "43208 NEW ARRAY      1 -> reg14",
      "43211 PUSH MEMORY ELEMENT IF INIT      1858 -> reg15",
      "43214 PUSH MEMORY ELEMENT IF INIT      1856 -> reg16",
      "43217 GET      reg16[length] -> reg17",
      "43223 MOD      reg15 % reg17 -> reg16",
      "43227 PUT      reg14[0] = reg16",
      "43231 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "43235 SET      reg2 -> reg11",
      "43238 XOR      reg8 ^ reg11 -> reg13",
      "43242 PUT      reg10[0] = reg13",
      "43246 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg10",
      "43250 SET      reg2 -> reg4",
      "43253 ADD      reg6NaN-> reg4",
      "43257 SET MEMORY ELEMENT IF INIT      1857 = reg4",
      "43260 PUSH MEMORY ELEMENT IF INIT      1858 -> reg6",
      "43263 SET      reg6 -> reg4",
      "43266 ADD      reg61-> reg6",
      "43270 SET MEMORY ELEMENT IF INIT      1858 = reg6",
      "43273 JUMP      43137",
      "43137 PUSH MEMORY ELEMENT IF INIT      1858 -> reg4",
      "43140 PUSH MEMORY ELEMENT IF INIT      1855 -> reg5",
      "43143 GET      reg5[length] -> reg6",
      "43149 LESS THAN      reg4 < reg6 -> reg5",
      "43153 JUMP IF FALSE      reg5 TO: 43275 | 43156"
  ],
  "43275": [
      "43275 PUSH MEMORY ELEMENT IF INIT      1857 -> reg4",
      "43278 JUMP OR RETURN VAL      reg4"
  ],
  "43728": [
      "43728 PUSH MEMORY ELEMENT IF INIT      1872 -> reg4",
      "43731 COPY ENUMERABLE      reg4 -> reg6",
      "43734 GET      reg6[length] -> reg4",
      "43740 EQUAL      reg4 == 0 -> reg8",
      "43744 JUMP IF TRUE      reg8 TO: 43860 | 43747"
  ],
  "43747": [
      "43747 SET      0 -> reg8",
      "43750 GET      reg6[reg8] -> reg5",
      "43754 SET MEMORY ELEMENT IF INIT      1874 = reg5",
      "43757 PUSH MEMORY ELEMENT IF INIT      1872 -> reg7",
      "43760 PUSH MEMORY ELEMENT IF INIT      1874 -> reg11",
      "43763 GET      reg7[reg11] -> reg9",
      "43767 SET MEMORY ELEMENT IF INIT      1875 = reg9",
      "43770 PUSH MEMORY ELEMENT IF INIT      1875 -> reg7",
      "43773 TYPEOF      reg7 -> reg9",
      "43776 NOT EQUAL      reg9 != function -> reg10",
      "43782 JUMP IF FALSE      reg10 TO: 43800 | 43785"
  ],
  "43750": [
      "43750 GET      reg6[reg8] -> reg5",
      "43754 SET MEMORY ELEMENT IF INIT      1874 = reg5",
      "43757 PUSH MEMORY ELEMENT IF INIT      1872 -> reg7",
      "43760 PUSH MEMORY ELEMENT IF INIT      1874 -> reg11",
      "43763 GET      reg7[reg11] -> reg9",
      "43767 SET MEMORY ELEMENT IF INIT      1875 = reg9",
      "43770 PUSH MEMORY ELEMENT IF INIT      1875 -> reg7",
      "43773 TYPEOF      reg7 -> reg9",
      "43776 NOT EQUAL      reg9 != function -> reg10",
      "43782 JUMP IF FALSE      reg10 TO: 43800 | 43785"
  ],
  "43785": [
      "43785 PUSH MEMORY ELEMENT IF INIT      1875 -> reg11",
      "43788 TYPEOF      reg11 -> reg7",
      "43791 NOT EQUAL      reg7 != object -> reg9",
      "43797 SET      reg9 -> reg10",
      "43800 JUMP IF FALSE      reg10 TO: 43818 | 43803"
  ],
  "43800": ["43800 JUMP IF FALSE      reg10 TO: 43818 | 43803"],
  "43803": [
      "43803 PUSH MEMORY ELEMENT IF INIT      1875 -> reg7",
      "43806 TYPEOF      reg7 -> reg9",
      "43809 NOT EQUAL      reg9 != undefined -> reg7",
      "43815 SET      reg7 -> reg10",
      "43818 JUMP IF FALSE      reg10 TO: 43849 | 43821"
  ],
  "43818": ["43818 JUMP IF FALSE      reg10 TO: 43849 | 43821"],
  "43821": [
      "43821 PUSH MEMORY ELEMENT IF INIT      1873 -> reg7",
      "43824 PUSH MEMORY ELEMENT IF INIT      1874 -> reg10",
      "43827 GET      reg10[toString] -> reg11",
      "43833 EMPTY ARRAY      -> reg12",
      "43835 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "43839 SET      reg2 -> reg9",
      "43842 PUSH MEMORY ELEMENT IF INIT      1875 -> reg11",
      "43845 PUT      reg7[reg9] = reg11",
      "43849 ADD      reg81-> reg8",
      "43853 LESS THAN      reg8 < reg4 -> reg7",
      "43857 JUMP IF TRUE      reg7 TO: 43750 | 43860"
  ],
  "43849": [
      "43849 ADD      reg81-> reg8",
      "43853 LESS THAN      reg8 < reg4 -> reg7",
      "43857 JUMP IF TRUE      reg7 TO: 43750 | 43860"
  ],
  "43860": [
      "43860 PUSH MEMORY ELEMENT IF INIT      1873 -> reg4",
      "43863 JUMP OR RETURN VAL      reg4"
  ],
  "43865": ["43865 JUMP OR RETURN"],
  "43902": [
      "43902 GET WINDOW PROP      Object -> reg5",
      "43907 GET      reg5[getOwnPropertyNames] -> reg7",
      "43913 NEW ARRAY      1 -> reg6",
      "43916 PUSH MEMORY ELEMENT IF INIT      1882 -> reg8",
      "43919 PUT      reg6[0] = reg8",
      "43923 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg6",
      "43927 SET      reg2 -> reg4",
      "43930 SET MEMORY ELEMENT IF INIT      1884 = reg4",
      "43933 SET MEMORY ELEMENT IF INIT      1885 = 0",
      "43936 PUSH MEMORY ELEMENT IF INIT      1885 -> reg6",
      "43939 PUSH MEMORY ELEMENT IF INIT      1884 -> reg4",
      "43942 GET      reg4[length] -> reg7",
      "43948 LESS THAN      reg6 < reg7 -> reg8",
      "43952 JUMP IF FALSE      reg8 TO: 44047 | 43955"
  ],
  "43955": [
      "43955 PUSH MEMORY ELEMENT IF INIT      1883 -> reg6",
      "43958 GET      reg6[indexOf] -> reg7",
      "43964 NEW ARRAY      1 -> reg10",
      "43967 PUSH MEMORY ELEMENT IF INIT      1884 -> reg8",
      "43970 PUSH MEMORY ELEMENT IF INIT      1885 -> reg12",
      "43973 GET      reg8[reg12] -> reg9",
      "43977 PUT      reg10[0] = reg9",
      "43981 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg10",
      "43985 SET      reg2 -> reg4",
      "43988 SUBTRACT      0 - 1 -> reg7",
      "43992 EQUAL      reg4 == reg7 -> reg8",
      "43996 JUMP IF FALSE      reg8 TO: 44032 | 43999"
  ],
  "43999": [
      "43999 PUSH MEMORY ELEMENT IF INIT      1883 -> reg7",
      "44002 GET      reg7[push] -> reg8",
      "44008 NEW ARRAY      1 -> reg9",
      "44011 PUSH MEMORY ELEMENT IF INIT      1884 -> reg10",
      "44014 PUSH MEMORY ELEMENT IF INIT      1885 -> reg12",
      "44017 GET      reg10[reg12] -> reg11",
      "44021 PUT      reg9[0] = reg11",
      "44025 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "44029 SET      reg2 -> reg4",
      "44032 PUSH MEMORY ELEMENT IF INIT      1885 -> reg4",
      "44035 SET      reg4 -> reg9",
      "44038 ADD      reg41-> reg4",
      "44042 SET MEMORY ELEMENT IF INIT      1885 = reg4",
      "44045 JUMP      43936",
      "43936 PUSH MEMORY ELEMENT IF INIT      1885 -> reg6",
      "43939 PUSH MEMORY ELEMENT IF INIT      1884 -> reg4",
      "43942 GET      reg4[length] -> reg7",
      "43948 LESS THAN      reg6 < reg7 -> reg8",
      "43952 JUMP IF FALSE      reg8 TO: 44047 | 43955"
  ],
  "44032": [
      "44032 PUSH MEMORY ELEMENT IF INIT      1885 -> reg4",
      "44035 SET      reg4 -> reg9",
      "44038 ADD      reg41-> reg4",
      "44042 SET MEMORY ELEMENT IF INIT      1885 = reg4",
      "44045 JUMP      43936",
      "43936 PUSH MEMORY ELEMENT IF INIT      1885 -> reg6",
      "43939 PUSH MEMORY ELEMENT IF INIT      1884 -> reg4",
      "43942 GET      reg4[length] -> reg7",
      "43948 LESS THAN      reg6 < reg7 -> reg8",
      "43952 JUMP IF FALSE      reg8 TO: 44047 | 43955"
  ],
  "44047": [
      "44047 GET WINDOW PROP      Object -> reg4",
      "44052 GET      reg4[getPrototypeOf] -> reg9",
      "44058 NEW ARRAY      1 -> reg10",
      "44061 PUSH MEMORY ELEMENT IF INIT      1882 -> reg12",
      "44064 PUT      reg10[0] = reg12",
      "44068 CALL FUNCTION      OBJ: reg4 FUNC: reg9 ARGS: reg10",
      "44072 SET      reg2 -> reg8",
      "44075 SET MEMORY ELEMENT IF INIT      1882 = reg8",
      "44078 JUMP      43892",
      "43892 PUSH MEMORY ELEMENT IF INIT      1882 -> reg5",
      "43895 NOT EQUAL      reg5 != null -> reg4",
      "43899 JUMP IF FALSE      reg4 TO: 44080 | 43902"
  ],
  "44080": [
      "44080 PUSH MEMORY ELEMENT IF INIT      1883 -> reg8",
      "44083 JUMP OR RETURN VAL      reg8"
  ],
  "44157": [
      "44157 SET MEMORY ELEMENT IF INIT      1895 = ",
      "44162 PUSH MEMORY ELEMENT IF INIT      1833 -> reg4",
      "44165 NEW ARRAY      1 -> reg6",
      "44168 PUSH MEMORY ELEMENT IF INIT      1890 -> reg8",
      "44171 PUT      reg6[0] = reg8",
      "44175 CALL FUNCTION      PTR: reg4 MEM: reg6",
      "44179 SET      reg2 -> reg5",
      "44182 SET MEMORY ELEMENT IF INIT      1895 = reg5",
      "44185 PUSH MEMORY ELEMENT IF INIT      1892 -> reg8",
      "44188 GET      reg8[join] -> reg5",
      "44194 NEW ARRAY      1 -> reg6",
      "44197 PUT      reg6[0] = ",
      "44203 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg6",
      "44207 SET      reg2 -> reg4",
      "44210 PUSH MEMORY ELEMENT IF INIT      1895 -> reg6",
      "44213 GET      reg6[join] -> reg7",
      "44219 NEW ARRAY      1 -> reg9",
      "44222 PUT      reg9[0] = ",
      "44228 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "44232 SET      reg2 -> reg5",
      "44235 STRICT NOT EQUAL      reg4 !== reg5 -> reg7",
      "44239 JUMP IF FALSE      reg7 TO: 44245 | 44242"
  ],
  "44242": [
      "44242 SET MEMORY ELEMENT IF INIT      1893 = true",
      "44245 PUSH MEMORY ELEMENT IF INIT      1894 -> reg5",
      "44248 SET      reg5 -> reg4",
      "44251 ADD      reg51-> reg5",
      "44255 SET MEMORY ELEMENT IF INIT      1894 = reg5",
      "44258 JUMP      44144",
      "44144 PUSH MEMORY ELEMENT IF INIT      1894 -> reg5",
      "44147 PUSH MEMORY ELEMENT IF INIT      1891 -> reg4",
      "44150 LESS THAN      reg5 < reg4 -> reg6",
      "44154 JUMP IF FALSE      reg6 TO: 44260 | 44157"
  ],
  "44245": [
      "44245 PUSH MEMORY ELEMENT IF INIT      1894 -> reg5",
      "44248 SET      reg5 -> reg4",
      "44251 ADD      reg51-> reg5",
      "44255 SET MEMORY ELEMENT IF INIT      1894 = reg5",
      "44258 JUMP      44144",
      "44144 PUSH MEMORY ELEMENT IF INIT      1894 -> reg5",
      "44147 PUSH MEMORY ELEMENT IF INIT      1891 -> reg4",
      "44150 LESS THAN      reg5 < reg4 -> reg6",
      "44154 JUMP IF FALSE      reg6 TO: 44260 | 44157"
  ],
  "44260": [
      "44260 EMPTY OBJECT      -> reg4",
      "44262 PUSH MEMORY ELEMENT IF INIT      1893 -> reg5",
      "44265 JUMP IF FALSE      reg5 TO: 44291 | 44268"
  ],
  "44268": [
      "44268 PUSH MEMORY ELEMENT IF INIT      1892 -> reg9",
      "44271 GET      reg9[sort] -> reg10",
      "44277 EMPTY ARRAY      -> reg11",
      "44279 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "44283 SET      reg2 -> reg5",
      "44286 SET      reg5 -> reg7",
      "44289 JUMP      44297",
      "44297 PUT      reg4[props] = reg7",
      "44303 PUSH MEMORY ELEMENT IF INIT      1893 -> reg5",
      "44306 PUT      reg4[inconsistent] = reg5",
      "44312 SET MEMORY ELEMENT IF INIT      1896 = reg4",
      "44315 PUSH MEMORY ELEMENT IF INIT      1896 -> reg4",
      "44318 JUMP OR RETURN VAL      reg4"
  ],
  "44291": [
      "44291 PUSH MEMORY ELEMENT IF INIT      1892 -> reg10",
      "44294 SET      reg10 -> reg7",
      "44297 PUT      reg4[props] = reg7",
      "44303 PUSH MEMORY ELEMENT IF INIT      1893 -> reg5",
      "44306 PUT      reg4[inconsistent] = reg5",
      "44312 SET MEMORY ELEMENT IF INIT      1896 = reg4",
      "44315 PUSH MEMORY ELEMENT IF INIT      1896 -> reg4",
      "44318 JUMP OR RETURN VAL      reg4"
  ],
  "45613": [
      "45613 PUSH MEMORY ELEMENT IF INIT      1911 -> reg9",
      "45616 GET      reg9[getContext] -> reg10",
      "45622 NEW ARRAY      1 -> reg11",
      "45625 PUT      reg11[0] = experimental-webgl2",
      "45631 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "45635 SET      reg2 -> reg8",
      "45638 SET      reg8 -> reg4",
      "45641 JUMP IF TRUE      reg4 TO: 45672 | 45644"
  ],
  "45641": ["45641 JUMP IF TRUE      reg4 TO: 45672 | 45644"],
  "45644": [
      "45644 PUSH MEMORY ELEMENT IF INIT      1911 -> reg7",
      "45647 GET      reg7[getContext] -> reg11",
      "45653 NEW ARRAY      1 -> reg10",
      "45656 PUT      reg10[0] = webgl",
      "45662 CALL FUNCTION      OBJ: reg7 FUNC: reg11 ARGS: reg10",
      "45666 SET      reg2 -> reg8",
      "45669 SET      reg8 -> reg4",
      "45672 JUMP IF TRUE      reg4 TO: 45703 | 45675"
  ],
  "45672": ["45672 JUMP IF TRUE      reg4 TO: 45703 | 45675"],
  "45675": [
      "45675 PUSH MEMORY ELEMENT IF INIT      1911 -> reg10",
      "45678 GET      reg10[getContext] -> reg11",
      "45684 NEW ARRAY      1 -> reg12",
      "45687 PUT      reg12[0] = experimental-webgl",
      "45693 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "45697 SET      reg2 -> reg8",
      "45700 SET      reg8 -> reg4",
      "45703 JUMP IF TRUE      reg4 TO: 45734 | 45706"
  ],
  "45703": ["45703 JUMP IF TRUE      reg4 TO: 45734 | 45706"],
  "45706": [
      "45706 PUSH MEMORY ELEMENT IF INIT      1911 -> reg8",
      "45709 GET      reg8[getContext] -> reg13",
      "45715 NEW ARRAY      1 -> reg14",
      "45718 PUT      reg14[0] = moz-webgl",
      "45724 CALL FUNCTION      OBJ: reg8 FUNC: reg13 ARGS: reg14",
      "45728 SET      reg2 -> reg11",
      "45731 SET      reg11 -> reg4",
      "45734 SET MEMORY ELEMENT IF INIT      1912 = reg4",
      "45737 PUSH MEMORY ELEMENT IF INIT      1903 -> reg11",
      "45740 GET      reg11[WebGL2RenderingContext] -> reg12",
      "45746 JUMP IF TRUE      reg12 TO: 45761 | 45749"
  ],
  "45734": [
      "45734 SET MEMORY ELEMENT IF INIT      1912 = reg4",
      "45737 PUSH MEMORY ELEMENT IF INIT      1903 -> reg11",
      "45740 GET      reg11[WebGL2RenderingContext] -> reg12",
      "45746 JUMP IF TRUE      reg12 TO: 45761 | 45749"
  ],
  "45749": [
      "45749 PUSH MEMORY ELEMENT IF INIT      1903 -> reg4",
      "45752 GET      reg4[WebGLRenderingContext] -> reg13",
      "45758 SET      reg13 -> reg12",
      "45761 SET MEMORY ELEMENT IF INIT      1913 = reg12",
      "45764 PUSH MEMORY ELEMENT IF INIT      1912 -> reg4",
      "45767 JUMP IF FALSE      reg4 TO: 45776 | 45770"
  ],
  "45761": [
      "45761 SET MEMORY ELEMENT IF INIT      1913 = reg12",
      "45764 PUSH MEMORY ELEMENT IF INIT      1912 -> reg4",
      "45767 JUMP IF FALSE      reg4 TO: 45776 | 45770"
  ],
  "45770": [
      "45770 PUSH MEMORY ELEMENT IF INIT      1913 -> reg11",
      "45773 SET      reg11 -> reg4",
      "45776 JUMP IF FALSE      reg4 TO: 46912 | 45779"
  ],
  "45776": ["45776 JUMP IF FALSE      reg4 TO: 46912 | 45779"],
  "45779": [
      "45779 PUSH MEMORY ELEMENT IF INIT      1912 -> reg11",
      "45782 GET      reg11[getExtension] -> reg12",
      "45788 NEW ARRAY      1 -> reg13",
      "45791 PUT      reg13[0] = WEBGL_debug_renderer_info",
      "45797 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg13",
      "45801 SET      reg2 -> reg4",
      "45804 SET MEMORY ELEMENT IF INIT      1914 = reg4",
      "45807 PUSH MEMORY ELEMENT IF INIT      1912 -> reg12",
      "45810 GET      reg12[getExtension] -> reg13",
      "45816 NEW ARRAY      1 -> reg14",
      "45819 PUT      reg14[0] = EXT_texture_filter_anisotropic",
      "45825 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "45829 SET      reg2 -> reg4",
      "45832 JUMP IF TRUE      reg4 TO: 45863 | 45835"
  ],
  "45835": [
      "45835 PUSH MEMORY ELEMENT IF INIT      1912 -> reg15",
      "45838 GET      reg15[getExtension] -> reg14",
      "45844 NEW ARRAY      1 -> reg17",
      "45847 PUT      reg17[0] = WEBKIT_EXT_texture_filter_anisotropic",
      "45853 CALL FUNCTION      OBJ: reg15 FUNC: reg14 ARGS: reg17",
      "45857 SET      reg2 -> reg13",
      "45860 SET      reg13 -> reg4",
      "45863 JUMP IF TRUE      reg4 TO: 45894 | 45866"
  ],
  "45863": ["45863 JUMP IF TRUE      reg4 TO: 45894 | 45866"],
  "45866": [
      "45866 PUSH MEMORY ELEMENT IF INIT      1912 -> reg13",
      "45869 GET      reg13[getExtension] -> reg17",
      "45875 NEW ARRAY      1 -> reg18",
      "45878 PUT      reg18[0] = MOZ_EXT_texture_filter_anisotropic",
      "45884 CALL FUNCTION      OBJ: reg13 FUNC: reg17 ARGS: reg18",
      "45888 SET      reg2 -> reg14",
      "45891 SET      reg14 -> reg4",
      "45894 SET MEMORY ELEMENT IF INIT      1915 = reg4",
      "45897 PUSH MEMORY ELEMENT IF INIT      1912 -> reg14",
      "45900 GET      reg14[getSupportedExtensions] -> reg16",
      "45906 EMPTY ARRAY      -> reg17",
      "45908 CALL FUNCTION      OBJ: reg14 FUNC: reg16 ARGS: reg17",
      "45912 SET      reg2 -> reg4",
      "45915 SET MEMORY ELEMENT IF INIT      1916 = reg4",
      "45918 SET MEMORY ELEMENT IF INIT      1917 = null",
      "45921 SET MEMORY ELEMENT IF INIT      1918 = null",
      "45924 SET MEMORY ELEMENT IF INIT      1919 = null",
      "45927 PUSH MEMORY ELEMENT IF INIT      1914 -> reg4",
      "45930 STRICT NOT EQUAL      reg4 !== null -> reg16",
      "45934 JUMP IF FALSE      reg16 TO: 46007 | 45937"
  ],
  "45894": [
      "45894 SET MEMORY ELEMENT IF INIT      1915 = reg4",
      "45897 PUSH MEMORY ELEMENT IF INIT      1912 -> reg14",
      "45900 GET      reg14[getSupportedExtensions] -> reg16",
      "45906 EMPTY ARRAY      -> reg17",
      "45908 CALL FUNCTION      OBJ: reg14 FUNC: reg16 ARGS: reg17",
      "45912 SET      reg2 -> reg4",
      "45915 SET MEMORY ELEMENT IF INIT      1916 = reg4",
      "45918 SET MEMORY ELEMENT IF INIT      1917 = null",
      "45921 SET MEMORY ELEMENT IF INIT      1918 = null",
      "45924 SET MEMORY ELEMENT IF INIT      1919 = null",
      "45927 PUSH MEMORY ELEMENT IF INIT      1914 -> reg4",
      "45930 STRICT NOT EQUAL      reg4 !== null -> reg16",
      "45934 JUMP IF FALSE      reg16 TO: 46007 | 45937"
  ],
  "45937": [
      "45937 PUSH MEMORY ELEMENT IF INIT      1912 -> reg16",
      "45940 GET      reg16[getParameter] -> reg4",
      "45946 NEW ARRAY      1 -> reg17",
      "45949 PUSH MEMORY ELEMENT IF INIT      1914 -> reg20",
      "45952 GET      reg20[UNMASKED_VENDOR_WEBGL] -> reg21",
      "45958 PUT      reg17[0] = reg21",
      "45962 CALL FUNCTION      OBJ: reg16 FUNC: reg4 ARGS: reg17",
      "45966 SET      reg2 -> reg18",
      "45969 SET MEMORY ELEMENT IF INIT      1917 = reg18",
      "45972 PUSH MEMORY ELEMENT IF INIT      1912 -> reg17",
      "45975 GET      reg17[getParameter] -> reg19",
      "45981 NEW ARRAY      1 -> reg18",
      "45984 PUSH MEMORY ELEMENT IF INIT      1914 -> reg20",
      "45987 GET      reg20[UNMASKED_RENDERER_WEBGL] -> reg21",
      "45993 PUT      reg18[0] = reg21",
      "45997 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg18",
      "46001 SET      reg2 -> reg4",
      "46004 SET MEMORY ELEMENT IF INIT      1918 = reg4",
      "46007 PUSH MEMORY ELEMENT IF INIT      1915 -> reg19",
      "46010 STRICT NOT EQUAL      reg19 !== null -> reg18",
      "46014 JUMP IF FALSE      reg18 TO: 46052 | 46017"
  ],
  "46007": [
      "46007 PUSH MEMORY ELEMENT IF INIT      1915 -> reg19",
      "46010 STRICT NOT EQUAL      reg19 !== null -> reg18",
      "46014 JUMP IF FALSE      reg18 TO: 46052 | 46017"
  ],
  "46017": [
      "46017 PUSH MEMORY ELEMENT IF INIT      1912 -> reg18",
      "46020 GET      reg18[getParameter] -> reg19",
      "46026 NEW ARRAY      1 -> reg21",
      "46029 PUSH MEMORY ELEMENT IF INIT      1915 -> reg20",
      "46032 GET      reg20[MAX_TEXTURE_MAX_ANISOTROPY_EXT] -> reg22",
      "46038 PUT      reg21[0] = reg22",
      "46042 CALL FUNCTION      OBJ: reg18 FUNC: reg19 ARGS: reg21",
      "46046 SET      reg2 -> reg4",
      "46049 SET MEMORY ELEMENT IF INIT      1919 = reg4",
      "46052 PUSH MEMORY ELEMENT IF INIT      1916 -> reg4",
      "46055 STRICT NOT EQUAL      reg4 !== null -> reg19",
      "46059 JUMP IF FALSE      reg19 TO: 46083 | 46062"
  ],
  "46052": [
      "46052 PUSH MEMORY ELEMENT IF INIT      1916 -> reg4",
      "46055 STRICT NOT EQUAL      reg4 !== null -> reg19",
      "46059 JUMP IF FALSE      reg19 TO: 46083 | 46062"
  ],
  "46062": [
      "46062 PUSH MEMORY ELEMENT IF INIT      1916 -> reg19",
      "46065 GET      reg19[toString] -> reg20",
      "46071 EMPTY ARRAY      -> reg22",
      "46073 CALL FUNCTION      OBJ: reg19 FUNC: reg20 ARGS: reg22",
      "46077 SET      reg2 -> reg4",
      "46080 SET MEMORY ELEMENT IF INIT      1916 = reg4",
      "46083 EMPTY OBJECT      -> reg4",
      "46085 PUSH MEMORY ELEMENT IF INIT      1917 -> reg20",
      "46088 PUT      reg4[Unmasked Vendor] = reg20",
      "46094 PUSH MEMORY ELEMENT IF INIT      1918 -> reg21",
      "46097 PUT      reg4[Unmasked Renderer] = reg21",
      "46103 PUSH MEMORY ELEMENT IF INIT      1919 -> reg20",
      "46106 PUT      reg4[Max Anisotropy] = reg20",
      "46112 PUSH MEMORY ELEMENT IF INIT      1916 -> reg20",
      "46115 PUT      reg4[Supported WebGL Extensions] = reg20",
      "46121 SET MEMORY ELEMENT IF INIT      1910 = reg4",
      "46124 PUSH MEMORY ELEMENT IF INIT      1905 -> reg20",
      "46127 GET      reg20[concat] -> reg21",
      "46133 NEW ARRAY      1 -> reg22",
      "46136 PUSH MEMORY ELEMENT IF INIT      1906 -> reg23",
      "46139 PUT      reg22[0] = reg23",
      "46143 CALL FUNCTION      OBJ: reg20 FUNC: reg21 ARGS: reg22",
      "46147 SET      reg2 -> reg4",
      "46150 SET MEMORY ELEMENT IF INIT      1920 = reg4",
      "46153 PUSH MEMORY ELEMENT IF INIT      1920 -> reg23",
      "46156 GET      reg23[concat] -> reg22",
      "46162 NEW ARRAY      1 -> reg4",
      "46165 PUSH MEMORY ELEMENT IF INIT      1907 -> reg26",
      "46168 PUT      reg4[0] = reg26",
      "46172 CALL FUNCTION      OBJ: reg23 FUNC: reg22 ARGS: reg4",
      "46176 SET      reg2 -> reg21",
      "46179 SET MEMORY ELEMENT IF INIT      1920 = reg21",
      "46182 PUSH MEMORY ELEMENT IF INIT      1920 -> reg4",
      "46185 GET      reg4[forEach] -> reg21",
      "46191 NEW ARRAY      1 -> reg27",
      "46194 INIT FUNCTION STATE      PTR: 46203 NAME:  LEN: 1 -> reg24",
      "46201 JUMP      46901",
      "46901 PUT      reg27[0] = reg24",
      "46905 CALL FUNCTION      OBJ: reg4 FUNC: reg21 ARGS: reg27",
      "46909 SET      reg2 -> reg22",
      "46912 PUSH MEMORY ELEMENT IF INIT      1904 -> reg21",
      "46915 PUSH MEMORY ELEMENT IF INIT      280 -> reg25",
      "46918 GET      reg25[stringify] -> reg24",
      "46924 NEW ARRAY      1 -> reg28",
      "46927 PUSH MEMORY ELEMENT IF INIT      1910 -> reg26",
      "46930 PUT      reg28[0] = reg26",
      "46934 CALL FUNCTION      OBJ: reg25 FUNC: reg24 ARGS: reg28",
      "46938 SET      reg2 -> reg22",
      "46941 PUT      reg21[raw] = reg22",
      "46947 PUSH MEMORY ELEMENT IF INIT      1904 -> reg26",
      "46950 PUSH MEMORY ELEMENT IF INIT      1831 -> reg21",
      "46953 NEW ARRAY      1 -> reg27",
      "46956 PUSH MEMORY ELEMENT IF INIT      1904 -> reg24",
      "46959 GET      reg24[raw] -> reg29",
      "46965 PUT      reg27[0] = reg29",
      "46969 CALL FUNCTION      PTR: reg21 MEM: reg27",
      "46973 SET      reg2 -> reg22",
      "46976 PUT      reg26[hash] = reg22",
      "46982 PUSH MEMORY ELEMENT IF INIT      1904 -> reg21",
      "46985 JUMP OR RETURN VAL      reg21"
  ],
  "46083": [
      "46083 EMPTY OBJECT      -> reg4",
      "46085 PUSH MEMORY ELEMENT IF INIT      1917 -> reg20",
      "46088 PUT      reg4[Unmasked Vendor] = reg20",
      "46094 PUSH MEMORY ELEMENT IF INIT      1918 -> reg21",
      "46097 PUT      reg4[Unmasked Renderer] = reg21",
      "46103 PUSH MEMORY ELEMENT IF INIT      1919 -> reg20",
      "46106 PUT      reg4[Max Anisotropy] = reg20",
      "46112 PUSH MEMORY ELEMENT IF INIT      1916 -> reg20",
      "46115 PUT      reg4[Supported WebGL Extensions] = reg20",
      "46121 SET MEMORY ELEMENT IF INIT      1910 = reg4",
      "46124 PUSH MEMORY ELEMENT IF INIT      1905 -> reg20",
      "46127 GET      reg20[concat] -> reg21",
      "46133 NEW ARRAY      1 -> reg22",
      "46136 PUSH MEMORY ELEMENT IF INIT      1906 -> reg23",
      "46139 PUT      reg22[0] = reg23",
      "46143 CALL FUNCTION      OBJ: reg20 FUNC: reg21 ARGS: reg22",
      "46147 SET      reg2 -> reg4",
      "46150 SET MEMORY ELEMENT IF INIT      1920 = reg4",
      "46153 PUSH MEMORY ELEMENT IF INIT      1920 -> reg23",
      "46156 GET      reg23[concat] -> reg22",
      "46162 NEW ARRAY      1 -> reg4",
      "46165 PUSH MEMORY ELEMENT IF INIT      1907 -> reg26",
      "46168 PUT      reg4[0] = reg26",
      "46172 CALL FUNCTION      OBJ: reg23 FUNC: reg22 ARGS: reg4",
      "46176 SET      reg2 -> reg21",
      "46179 SET MEMORY ELEMENT IF INIT      1920 = reg21",
      "46182 PUSH MEMORY ELEMENT IF INIT      1920 -> reg4",
      "46185 GET      reg4[forEach] -> reg21",
      "46191 NEW ARRAY      1 -> reg27",
      "46194 INIT FUNCTION STATE      PTR: 46203 NAME:  LEN: 1 -> reg24",
      "46201 JUMP      46901",
      "46901 PUT      reg27[0] = reg24",
      "46905 CALL FUNCTION      OBJ: reg4 FUNC: reg21 ARGS: reg27",
      "46909 SET      reg2 -> reg22",
      "46912 PUSH MEMORY ELEMENT IF INIT      1904 -> reg21",
      "46915 PUSH MEMORY ELEMENT IF INIT      280 -> reg25",
      "46918 GET      reg25[stringify] -> reg24",
      "46924 NEW ARRAY      1 -> reg28",
      "46927 PUSH MEMORY ELEMENT IF INIT      1910 -> reg26",
      "46930 PUT      reg28[0] = reg26",
      "46934 CALL FUNCTION      OBJ: reg25 FUNC: reg24 ARGS: reg28",
      "46938 SET      reg2 -> reg22",
      "46941 PUT      reg21[raw] = reg22",
      "46947 PUSH MEMORY ELEMENT IF INIT      1904 -> reg26",
      "46950 PUSH MEMORY ELEMENT IF INIT      1831 -> reg21",
      "46953 NEW ARRAY      1 -> reg27",
      "46956 PUSH MEMORY ELEMENT IF INIT      1904 -> reg24",
      "46959 GET      reg24[raw] -> reg29",
      "46965 PUT      reg27[0] = reg29",
      "46969 CALL FUNCTION      PTR: reg21 MEM: reg27",
      "46973 SET      reg2 -> reg22",
      "46976 PUT      reg26[hash] = reg22",
      "46982 PUSH MEMORY ELEMENT IF INIT      1904 -> reg21",
      "46985 JUMP OR RETURN VAL      reg21"
  ],
  "46236": [
      "46236 EMPTY ARRAY      -> reg4",
      "46238 SET MEMORY ELEMENT IF INIT      1939 = reg4",
      "46241 PUSH MEMORY ELEMENT IF INIT      1937 -> reg4",
      "46244 GET      reg4[0] -> reg5",
      "46248 EQUAL      reg5 == RED_BITS -> reg6",
      "46254 JUMP IF FALSE      reg6 TO: 46452 | 46257"
  ],
  "46257": [
      "46257 SET MEMORY ELEMENT IF INIT      1940 = true",
      "46260 PUSH MEMORY ELEMENT IF INIT      1937 -> reg6",
      "46263 GET      reg6[forEach] -> reg5",
      "46269 NEW ARRAY      1 -> reg8",
      "46272 INIT FUNCTION STATE      PTR: 46281 NAME:  LEN: 1 -> reg10",
      "46279 JUMP      46391",
      "46391 PUT      reg8[0] = reg10",
      "46395 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "46399 SET      reg2 -> reg4",
      "46402 PUSH MEMORY ELEMENT IF INIT      1940 -> reg4",
      "46405 NOT      reg4 -> reg5",
      "46408 JUMP IF FALSE      reg5 TO: 46450 | 46411"
  ],
  "46300": [
      "46300 PUSH MEMORY ELEMENT IF INIT      1912 -> reg5",
      "46303 GET      reg5[getParameter] -> reg8",
      "46309 NEW ARRAY      1 -> reg6",
      "46312 PUSH MEMORY ELEMENT IF INIT      1912 -> reg7",
      "46315 PUSH MEMORY ELEMENT IF INIT      1947 -> reg10",
      "46318 GET      reg7[reg10] -> reg9",
      "46322 PUT      reg6[0] = reg9",
      "46326 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg6",
      "46330 SET      reg2 -> reg4",
      "46333 SET MEMORY ELEMENT IF INIT      1921 = reg4",
      "46336 PUSH MEMORY ELEMENT IF INIT      1921 -> reg4",
      "46339 STRICT NOT EQUAL      reg4 !== undefined -> reg7",
      "46345 JUMP IF FALSE      reg7 TO: 46358 | 46348"
  ],
  "46336": [
      "46336 PUSH MEMORY ELEMENT IF INIT      1921 -> reg4",
      "46339 STRICT NOT EQUAL      reg4 !== undefined -> reg7",
      "46345 JUMP IF FALSE      reg7 TO: 46358 | 46348"
  ],
  "46348": [
      "46348 PUSH MEMORY ELEMENT IF INIT      1921 -> reg4",
      "46351 STRICT NOT EQUAL      reg4 !== null -> reg8",
      "46355 SET      reg8 -> reg7",
      "46358 JUMP IF FALSE      reg7 TO: 46364 | 46361"
  ],
  "46358": ["46358 JUMP IF FALSE      reg7 TO: 46364 | 46361"],
  "46361": [
      "46361 SET MEMORY ELEMENT IF INIT      1940 = false",
      "46364 PUSH MEMORY ELEMENT IF INIT      1939 -> reg4",
      "46367 GET      reg4[push] -> reg6",
      "46373 NEW ARRAY      1 -> reg10",
      "46376 PUSH MEMORY ELEMENT IF INIT      1921 -> reg8",
      "46379 PUT      reg10[0] = reg8",
      "46383 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg10",
      "46387 SET      reg2 -> reg7",
      "46390 JUMP OR RETURN"
  ],
  "46364": [
      "46364 PUSH MEMORY ELEMENT IF INIT      1939 -> reg4",
      "46367 GET      reg4[push] -> reg6",
      "46373 NEW ARRAY      1 -> reg10",
      "46376 PUSH MEMORY ELEMENT IF INIT      1921 -> reg8",
      "46379 PUT      reg10[0] = reg8",
      "46383 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg10",
      "46387 SET      reg2 -> reg7",
      "46390 JUMP OR RETURN"
  ],
  "46411": [
      "46411 PUSH MEMORY ELEMENT IF INIT      1910 -> reg5",
      "46414 PUSH MEMORY ELEMENT IF INIT      1939 -> reg8",
      "46417 GET      reg8[toString] -> reg9",
      "46423 EMPTY ARRAY      -> reg7",
      "46425 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg7",
      "46429 SET      reg2 -> reg4",
      "46432 ADD      [NaN-> reg9",
      "46438 ADD      reg9NaN-> reg10",
      "46444 PUT      reg5[RGBA Bits] = reg10",
      "46450 JUMP      46624",
      "46624 JUMP      46900",
      "46900 JUMP OR RETURN"
  ],
  "46450": [
      "46450 JUMP      46624",
      "46624 JUMP      46900",
      "46900 JUMP OR RETURN"
  ],
  "46452": [
      "46452 PUSH MEMORY ELEMENT IF INIT      1937 -> reg5",
      "46455 GET      reg5[forEach] -> reg7",
      "46461 NEW ARRAY      1 -> reg9",
      "46464 INIT FUNCTION STATE      PTR: 46473 NAME:  LEN: 1 -> reg10",
      "46471 JUMP      46613",
      "46613 PUT      reg9[0] = reg10",
      "46617 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg9",
      "46621 SET      reg2 -> reg4",
      "46624 JUMP      46900",
      "46900 JUMP OR RETURN"
  ],
  "46492": [
      "46492 PUSH MEMORY ELEMENT IF INIT      1912 -> reg6",
      "46495 GET      reg6[getParameter] -> reg5",
      "46501 NEW ARRAY      1 -> reg8",
      "46504 PUSH MEMORY ELEMENT IF INIT      1912 -> reg9",
      "46507 PUSH MEMORY ELEMENT IF INIT      1954 -> reg7",
      "46510 GET      reg9[reg7] -> reg11",
      "46514 PUT      reg8[0] = reg11",
      "46518 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "46522 SET      reg2 -> reg4",
      "46525 SET MEMORY ELEMENT IF INIT      1921 = reg4",
      "46528 PUSH MEMORY ELEMENT IF INIT      1954 -> reg7",
      "46531 PUSH MEMORY ELEMENT IF INIT      1908 -> reg4",
      "46534 IN      reg7 inreg4 -> reg5",
      "46538 JUMP IF FALSE      reg5 TO: 46561 | 46541"
  ],
  "46528": [
      "46528 PUSH MEMORY ELEMENT IF INIT      1954 -> reg7",
      "46531 PUSH MEMORY ELEMENT IF INIT      1908 -> reg4",
      "46534 IN      reg7 inreg4 -> reg5",
      "46538 JUMP IF FALSE      reg5 TO: 46561 | 46541"
  ],
  "46541": [
      "46541 PUSH MEMORY ELEMENT IF INIT      1908 -> reg7",
      "46544 PUSH MEMORY ELEMENT IF INIT      1954 -> reg8",
      "46547 GET      reg7[reg8] -> reg4",
      "46551 PUSH WINDOW       -> reg5",
      "46553 PUT      reg5[name] = reg4",
      "46559 JUMP      46572",
      "46572 PUSH MEMORY ELEMENT IF INIT      1921 -> reg4",
      "46575 STRICT NOT EQUAL      reg4 !== undefined -> reg5",
      "46581 JUMP IF FALSE      reg5 TO: 46594 | 46584"
  ],
  "46561": [
      "46561 PUSH MEMORY ELEMENT IF INIT      1954 -> reg5",
      "46564 PUSH WINDOW       -> reg4",
      "46566 PUT      reg4[name] = reg5",
      "46572 PUSH MEMORY ELEMENT IF INIT      1921 -> reg4",
      "46575 STRICT NOT EQUAL      reg4 !== undefined -> reg5",
      "46581 JUMP IF FALSE      reg5 TO: 46594 | 46584"
  ],
  "46584": [
      "46584 PUSH MEMORY ELEMENT IF INIT      1921 -> reg4",
      "46587 STRICT NOT EQUAL      reg4 !== null -> reg8",
      "46591 SET      reg8 -> reg5",
      "46594 JUMP IF FALSE      reg5 TO: 46612 | 46597"
  ],
  "46594": ["46594 JUMP IF FALSE      reg5 TO: 46612 | 46597"],
  "46597": [
      "46597 PUSH MEMORY ELEMENT IF INIT      1910 -> reg4",
      "46600 GET WINDOW PROP      name -> reg7",
      "46605 PUSH MEMORY ELEMENT IF INIT      1921 -> reg5",
      "46608 PUT      reg4[reg7] = reg5",
      "46612 JUMP OR RETURN"
  ],
  "46612": ["46612 JUMP OR RETURN"],
  "46626": [
      "46626 SET MEMORY ELEMENT IF INIT      1921 = null",
      "46629 PUSH MEMORY ELEMENT IF INIT      1937 -> reg4",
      "46632 PUSH MEMORY ELEMENT IF INIT      1912 -> reg7",
      "46635 IN      reg4 inreg7 -> reg10",
      "46639 JUMP IF FALSE      reg10 TO: 46678 | 46642"
  ],
  "46642": [
      "46642 PUSH MEMORY ELEMENT IF INIT      1912 -> reg4",
      "46645 GET      reg4[getParameter] -> reg9",
      "46651 NEW ARRAY      1 -> reg10",
      "46654 PUSH MEMORY ELEMENT IF INIT      1912 -> reg12",
      "46657 PUSH MEMORY ELEMENT IF INIT      1937 -> reg13",
      "46660 GET      reg12[reg13] -> reg11",
      "46664 PUT      reg10[0] = reg11",
      "46668 CALL FUNCTION      OBJ: reg4 FUNC: reg9 ARGS: reg10",
      "46672 SET      reg2 -> reg7",
      "46675 SET MEMORY ELEMENT IF INIT      1921 = reg7",
      "46678 PUSH MEMORY ELEMENT IF INIT      1921 -> reg7",
      "46681 GET WINDOW PROP      Float32Array -> reg9",
      "46686 INSTANCEOF      reg7 instanceof reg9 -> reg11",
      "46690 JUMP IF TRUE      reg11 TO: 46708 | 46693"
  ],
  "46678": [
      "46678 PUSH MEMORY ELEMENT IF INIT      1921 -> reg7",
      "46681 GET WINDOW PROP      Float32Array -> reg9",
      "46686 INSTANCEOF      reg7 instanceof reg9 -> reg11",
      "46690 JUMP IF TRUE      reg11 TO: 46708 | 46693"
  ],
  "46693": [
      "46693 PUSH MEMORY ELEMENT IF INIT      1921 -> reg7",
      "46696 GET WINDOW PROP      Int32Array -> reg12",
      "46701 INSTANCEOF      reg7 instanceof reg12 -> reg9",
      "46705 SET      reg9 -> reg11",
      "46708 JUMP IF FALSE      reg11 TO: 46816 | 46711"
  ],
  "46708": ["46708 JUMP IF FALSE      reg11 TO: 46816 | 46711"],
  "46711": [
      "46711 EMPTY ARRAY      -> reg9",
      "46713 SET MEMORY ELEMENT IF INIT      1941 = reg9",
      "46716 SET MEMORY ELEMENT IF INIT      1942 = 0",
      "46719 PUSH MEMORY ELEMENT IF INIT      1942 -> reg7",
      "46722 PUSH MEMORY ELEMENT IF INIT      1921 -> reg9",
      "46725 GET      reg9[length] -> reg11",
      "46731 LESS THAN      reg7 < reg11 -> reg9",
      "46735 JUMP IF FALSE      reg9 TO: 46783 | 46738"
  ],
  "46738": [
      "46738 PUSH MEMORY ELEMENT IF INIT      1941 -> reg10",
      "46741 GET      reg10[push] -> reg9",
      "46747 NEW ARRAY      1 -> reg12",
      "46750 PUSH MEMORY ELEMENT IF INIT      1921 -> reg11",
      "46753 PUSH MEMORY ELEMENT IF INIT      1942 -> reg14",
      "46756 GET      reg11[reg14] -> reg13",
      "46760 PUT      reg12[0] = reg13",
      "46764 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg12",
      "46768 SET      reg2 -> reg7",
      "46771 PUSH MEMORY ELEMENT IF INIT      1942 -> reg7",
      "46774 ADD      reg71-> reg7",
      "46778 SET MEMORY ELEMENT IF INIT      1942 = reg7",
      "46781 JUMP      46719",
      "46719 PUSH MEMORY ELEMENT IF INIT      1942 -> reg7",
      "46722 PUSH MEMORY ELEMENT IF INIT      1921 -> reg9",
      "46725 GET      reg9[length] -> reg11",
      "46731 LESS THAN      reg7 < reg11 -> reg9",
      "46735 JUMP IF FALSE      reg9 TO: 46783 | 46738"
  ],
  "46783": [
      "46783 PUSH MEMORY ELEMENT IF INIT      1941 -> reg9",
      "46786 GET      reg9[toString] -> reg12",
      "46792 EMPTY ARRAY      -> reg11",
      "46794 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg11",
      "46798 SET      reg2 -> reg7",
      "46801 ADD      [NaN-> reg13",
      "46807 ADD      reg13NaN-> reg7",
      "46813 SET MEMORY ELEMENT IF INIT      1921 = reg7",
      "46816 PUSH MEMORY ELEMENT IF INIT      1937 -> reg7",
      "46819 PUSH MEMORY ELEMENT IF INIT      1908 -> reg11",
      "46822 IN      reg7 inreg11 -> reg12",
      "46826 JUMP IF FALSE      reg12 TO: 46849 | 46829"
  ],
  "46816": [
      "46816 PUSH MEMORY ELEMENT IF INIT      1937 -> reg7",
      "46819 PUSH MEMORY ELEMENT IF INIT      1908 -> reg11",
      "46822 IN      reg7 inreg11 -> reg12",
      "46826 JUMP IF FALSE      reg12 TO: 46849 | 46829"
  ],
  "46829": [
      "46829 PUSH MEMORY ELEMENT IF INIT      1908 -> reg7",
      "46832 PUSH MEMORY ELEMENT IF INIT      1937 -> reg13",
      "46835 GET      reg7[reg13] -> reg11",
      "46839 PUSH WINDOW       -> reg7",
      "46841 PUT      reg7[name] = reg11",
      "46847 JUMP      46860",
      "46860 PUSH MEMORY ELEMENT IF INIT      1921 -> reg11",
      "46863 STRICT NOT EQUAL      reg11 !== undefined -> reg7",
      "46869 JUMP IF FALSE      reg7 TO: 46882 | 46872"
  ],
  "46849": [
      "46849 PUSH MEMORY ELEMENT IF INIT      1937 -> reg7",
      "46852 PUSH WINDOW       -> reg11",
      "46854 PUT      reg11[name] = reg7",
      "46860 PUSH MEMORY ELEMENT IF INIT      1921 -> reg11",
      "46863 STRICT NOT EQUAL      reg11 !== undefined -> reg7",
      "46869 JUMP IF FALSE      reg7 TO: 46882 | 46872"
  ],
  "46872": [
      "46872 PUSH MEMORY ELEMENT IF INIT      1921 -> reg12",
      "46875 STRICT NOT EQUAL      reg12 !== null -> reg11",
      "46879 SET      reg11 -> reg7",
      "46882 JUMP IF FALSE      reg7 TO: 46900 | 46885"
  ],
  "46882": ["46882 JUMP IF FALSE      reg7 TO: 46900 | 46885"],
  "46885": [
      "46885 PUSH MEMORY ELEMENT IF INIT      1910 -> reg11",
      "46888 GET WINDOW PROP      name -> reg7",
      "46893 PUSH MEMORY ELEMENT IF INIT      1921 -> reg14",
      "46896 PUT      reg11[reg7] = reg14",
      "46900 JUMP OR RETURN"
  ],
  "46900": ["46900 JUMP OR RETURN"],
  "46912": [
      "46912 PUSH MEMORY ELEMENT IF INIT      1904 -> reg21",
      "46915 PUSH MEMORY ELEMENT IF INIT      280 -> reg25",
      "46918 GET      reg25[stringify] -> reg24",
      "46924 NEW ARRAY      1 -> reg28",
      "46927 PUSH MEMORY ELEMENT IF INIT      1910 -> reg26",
      "46930 PUT      reg28[0] = reg26",
      "46934 CALL FUNCTION      OBJ: reg25 FUNC: reg24 ARGS: reg28",
      "46938 SET      reg2 -> reg22",
      "46941 PUT      reg21[raw] = reg22",
      "46947 PUSH MEMORY ELEMENT IF INIT      1904 -> reg26",
      "46950 PUSH MEMORY ELEMENT IF INIT      1831 -> reg21",
      "46953 NEW ARRAY      1 -> reg27",
      "46956 PUSH MEMORY ELEMENT IF INIT      1904 -> reg24",
      "46959 GET      reg24[raw] -> reg29",
      "46965 PUT      reg27[0] = reg29",
      "46969 CALL FUNCTION      PTR: reg21 MEM: reg27",
      "46973 SET      reg2 -> reg22",
      "46976 PUT      reg26[hash] = reg22",
      "46982 PUSH MEMORY ELEMENT IF INIT      1904 -> reg21",
      "46985 JUMP OR RETURN VAL      reg21"
  ],
  "46989": [
      "46989 SET I      null",
      "46991 PUSH F.K      -> reg22",
      "46993 VOID F",
      "46994 SET MEMORY ELEMENT      0 = reg22",
      "46997 PUSH MEMORY ELEMENT IF INIT      1904 -> reg21",
      "47000 PUSH MEMORY ELEMENT IF INIT      0 -> reg22",
      "47003 PUT      reg21[raw] = reg22",
      "47009 PUSH MEMORY ELEMENT IF INIT      1904 -> reg22",
      "47012 PUSH MEMORY ELEMENT IF INIT      1831 -> reg21",
      "47015 NEW ARRAY      1 -> reg26",
      "47018 PUSH MEMORY ELEMENT IF INIT      280 -> reg29",
      "47021 GET      reg29[stringify] -> reg30",
      "47027 NEW ARRAY      1 -> reg28",
      "47030 PUSH MEMORY ELEMENT IF INIT      0 -> reg31",
      "47033 PUT      reg28[0] = reg31",
      "47037 CALL FUNCTION      OBJ: reg29 FUNC: reg30 ARGS: reg28",
      "47041 SET      reg2 -> reg27",
      "47044 PUT      reg26[0] = reg27",
      "47048 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "47052 SET      reg2 -> reg24",
      "47055 PUT      reg22[hash] = reg24",
      "47061 PUSH MEMORY ELEMENT IF INIT      1904 -> reg21",
      "47064 JUMP OR RETURN VAL      reg21"
  ],
  "47217": [
      "47217 SET I      null",
      "47219 PUSH F.K      -> reg4",
      "47221 VOID F",
      "47222 SET MEMORY ELEMENT      0 = reg4",
      "47225 PUSH MEMORY ELEMENT IF INIT      1968 -> reg4",
      "47228 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "47231 PUT      reg4[raw] = reg6",
      "47237 PUSH MEMORY ELEMENT IF INIT      1968 -> reg4",
      "47240 PUSH MEMORY ELEMENT IF INIT      1831 -> reg6",
      "47243 NEW ARRAY      1 -> reg7",
      "47246 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "47249 GET      reg8[stringify] -> reg12",
      "47255 NEW ARRAY      1 -> reg11",
      "47258 PUSH MEMORY ELEMENT IF INIT      0 -> reg13",
      "47261 PUT      reg11[0] = reg13",
      "47265 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg11",
      "47269 SET      reg2 -> reg9",
      "47272 PUT      reg7[0] = reg9",
      "47276 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "47280 SET      reg2 -> reg5",
      "47283 PUT      reg4[hash] = reg5",
      "47289 PUSH MEMORY ELEMENT IF INIT      1968 -> reg4",
      "47292 JUMP OR RETURN VAL      reg4"
  ],
  "47422": [
      "47422 PUSH MEMORY ELEMENT IF INIT      1977 -> reg9",
      "47425 ADD      : NaN-> reg10",
      "47431 SET      reg10 -> reg8",
      "47434 JUMP      47441",
      "47441 ADD      ( color-gamutNaN-> reg9",
      "47447 ADD      reg9NaN-> reg8",
      "47453 PUT      reg7[0] = reg8",
      "47457 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "47461 SET      reg2 -> reg5",
      "47464 GET      reg5[matches] -> reg6",
      "47470 JUMP OR RETURN VAL      reg6"
  ],
  "47436": [
      "47436 SET       -> reg8",
      "47441 ADD      ( color-gamutNaN-> reg9",
      "47447 ADD      reg9NaN-> reg8",
      "47453 PUT      reg7[0] = reg8",
      "47457 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "47461 SET      reg2 -> reg5",
      "47464 GET      reg5[matches] -> reg6",
      "47470 JUMP OR RETURN VAL      reg6"
  ],
  "47546": [
      "47546 SET I      null",
      "47548 PUSH F.K      -> reg4",
      "47550 VOID F",
      "47551 SET MEMORY ELEMENT      0 = reg4",
      "47554 PUSH MEMORY ELEMENT IF INIT      1972 -> reg5",
      "47557 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "47560 PUT      reg5[raw] = reg4",
      "47566 PUSH MEMORY ELEMENT IF INIT      1972 -> reg4",
      "47569 PUSH MEMORY ELEMENT IF INIT      1831 -> reg7",
      "47572 NEW ARRAY      1 -> reg8",
      "47575 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "47578 GET      reg10[stringify] -> reg12",
      "47584 NEW ARRAY      1 -> reg13",
      "47587 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "47590 PUT      reg13[0] = reg14",
      "47594 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg13",
      "47598 SET      reg2 -> reg9",
      "47601 PUT      reg8[0] = reg9",
      "47605 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "47609 SET      reg2 -> reg5",
      "47612 PUT      reg4[hash] = reg5",
      "47618 PUSH MEMORY ELEMENT IF INIT      1972 -> reg4",
      "47621 JUMP OR RETURN VAL      reg4"
  ],
  "47740": [
      "47740 SET      0 -> reg5",
      "47743 GET      reg7[reg5] -> reg4",
      "47747 SET MEMORY ELEMENT IF INIT      1983 = reg4",
      "47750 NEW REGEXP      ^([A-Za-z][a-z]*)[A-Z] ,  -> reg8",
      "47758 GET      reg8[exec] -> reg11",
      "47764 NEW ARRAY      1 -> reg12",
      "47767 PUSH MEMORY ELEMENT IF INIT      1983 -> reg13",
      "47770 PUT      reg12[0] = reg13",
      "47774 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg12",
      "47778 SET      reg2 -> reg10",
      "47781 JUMP IF TRUE      reg10 TO: 47789 | 47784"
  ],
  "47743": [
      "47743 GET      reg7[reg5] -> reg4",
      "47747 SET MEMORY ELEMENT IF INIT      1983 = reg4",
      "47750 NEW REGEXP      ^([A-Za-z][a-z]*)[A-Z] ,  -> reg8",
      "47758 GET      reg8[exec] -> reg11",
      "47764 NEW ARRAY      1 -> reg12",
      "47767 PUSH MEMORY ELEMENT IF INIT      1983 -> reg13",
      "47770 PUT      reg12[0] = reg13",
      "47774 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg12",
      "47778 SET      reg2 -> reg10",
      "47781 JUMP IF TRUE      reg10 TO: 47789 | 47784"
  ],
  "47784": [
      "47784 EMPTY ARRAY      -> reg12",
      "47786 SET      reg12 -> reg10",
      "47789 GET      reg10[1] -> reg11",
      "47793 SET MEMORY ELEMENT IF INIT      1982 = reg11",
      "47796 JUMP IF FALSE      reg11 TO: 47878 | 47799"
  ],
  "47789": [
      "47789 GET      reg10[1] -> reg11",
      "47793 SET MEMORY ELEMENT IF INIT      1982 = reg11",
      "47796 JUMP IF FALSE      reg11 TO: 47878 | 47799"
  ],
  "47799": [
      "47799 PUSH MEMORY ELEMENT IF INIT      1982 -> reg12",
      "47802 GET      reg12[toLowerCase] -> reg14",
      "47808 EMPTY ARRAY      -> reg13",
      "47810 CALL FUNCTION      OBJ: reg12 FUNC: reg14 ARGS: reg13",
      "47814 SET      reg2 -> reg10",
      "47817 SET MEMORY ELEMENT IF INIT      1982 = reg10",
      "47820 PUSH MEMORY ELEMENT IF INIT      1984 -> reg13",
      "47823 IN      reg10 inreg13 -> reg14",
      "47827 JUMP IF FALSE      reg14 TO: 47862 | 47830"
  ],
  "47830": [
      "47830 PUSH MEMORY ELEMENT IF INIT      1984 -> reg13",
      "47833 PUSH MEMORY ELEMENT IF INIT      1982 -> reg15",
      "47836 GET      reg13[reg15] -> reg14",
      "47840 SET      reg14 -> reg13",
      "47843 ADD      reg141-> reg14",
      "47847 PUSH MEMORY ELEMENT IF INIT      1984 -> reg16",
      "47850 PUSH MEMORY ELEMENT IF INIT      1982 -> reg15",
      "47853 PUT      reg16[reg15] = reg14",
      "47857 SET      reg13 -> reg10",
      "47860 JUMP      47875",
      "47875 SET      reg10 -> reg11",
      "47878 ADD      reg51-> reg5",
      "47882 LESS THAN      reg5 < reg9 -> reg10",
      "47886 JUMP IF TRUE      reg10 TO: 47743 | 47889"
  ],
  "47862": [
      "47862 PUSH MEMORY ELEMENT IF INIT      1984 -> reg13",
      "47865 PUSH MEMORY ELEMENT IF INIT      1982 -> reg14",
      "47868 PUT      reg13[reg14] = 1",
      "47872 SET      1 -> reg10",
      "47875 SET      reg10 -> reg11",
      "47878 ADD      reg51-> reg5",
      "47882 LESS THAN      reg5 < reg9 -> reg10",
      "47886 JUMP IF TRUE      reg10 TO: 47743 | 47889"
  ],
  "47878": [
      "47878 ADD      reg51-> reg5",
      "47882 LESS THAN      reg5 < reg9 -> reg10",
      "47886 JUMP IF TRUE      reg10 TO: 47743 | 47889"
  ],
  "47889": [
      "47889 PUSH MEMORY ELEMENT IF INIT      1981 -> reg5",
      "47892 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "47895 GET      reg13[stringify] -> reg9",
      "47901 NEW ARRAY      1 -> reg10",
      "47904 PUSH MEMORY ELEMENT IF INIT      1984 -> reg4",
      "47907 PUT      reg10[0] = reg4",
      "47911 CALL FUNCTION      OBJ: reg13 FUNC: reg9 ARGS: reg10",
      "47915 SET      reg2 -> reg7",
      "47918 PUT      reg5[raw] = reg7",
      "47924 PUSH MEMORY ELEMENT IF INIT      1981 -> reg4",
      "47927 PUSH MEMORY ELEMENT IF INIT      1831 -> reg7",
      "47930 NEW ARRAY      1 -> reg9",
      "47933 PUSH MEMORY ELEMENT IF INIT      1981 -> reg10",
      "47936 GET      reg10[raw] -> reg11",
      "47942 PUT      reg9[0] = reg11",
      "47946 CALL FUNCTION      PTR: reg7 MEM: reg9",
      "47950 SET      reg2 -> reg5",
      "47953 PUT      reg4[hash] = reg5",
      "47959 PUSH MEMORY ELEMENT IF INIT      1981 -> reg4",
      "47962 JUMP OR RETURN VAL      reg4"
  ],
  "47966": [
      "47966 SET I      null",
      "47968 PUSH F.K      -> reg5",
      "47970 VOID F",
      "47971 SET MEMORY ELEMENT      0 = reg5",
      "47974 PUSH MEMORY ELEMENT IF INIT      1981 -> reg4",
      "47977 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "47980 PUT      reg4[raw] = reg5",
      "47986 PUSH MEMORY ELEMENT IF INIT      1981 -> reg4",
      "47989 PUSH MEMORY ELEMENT IF INIT      1831 -> reg9",
      "47992 NEW ARRAY      1 -> reg7",
      "47995 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "47998 GET      reg11[stringify] -> reg14",
      "48004 NEW ARRAY      1 -> reg17",
      "48007 PUSH MEMORY ELEMENT IF INIT      0 -> reg16",
      "48010 PUT      reg17[0] = reg16",
      "48014 CALL FUNCTION      OBJ: reg11 FUNC: reg14 ARGS: reg17",
      "48018 SET      reg2 -> reg10",
      "48021 PUT      reg7[0] = reg10",
      "48025 CALL FUNCTION      PTR: reg9 MEM: reg7",
      "48029 SET      reg2 -> reg5",
      "48032 PUT      reg4[hash] = reg5",
      "48038 PUSH MEMORY ELEMENT IF INIT      1981 -> reg4",
      "48041 JUMP OR RETURN VAL      reg4"
  ],
  "48380": [
      "48380 SET      0 -> reg11",
      "48383 GET      reg7[reg11] -> reg9",
      "48387 SET MEMORY ELEMENT IF INIT      1998 = reg9",
      "48390 PUSH MEMORY ELEMENT IF INIT      1996 -> reg12",
      "48393 PUSH MEMORY ELEMENT IF INIT      1997 -> reg13",
      "48396 PUSH MEMORY ELEMENT IF INIT      1998 -> reg14",
      "48399 GET      reg13[reg14] -> reg16",
      "48403 ADD      reg12NaN-> reg16",
      "48407 SET MEMORY ELEMENT IF INIT      1996 = reg16",
      "48410 ADD      reg111-> reg11",
      "48414 LESS THAN      reg11 < reg8 -> reg12",
      "48418 JUMP IF TRUE      reg12 TO: 48383 | 48421"
  ],
  "48383": [
      "48383 GET      reg7[reg11] -> reg9",
      "48387 SET MEMORY ELEMENT IF INIT      1998 = reg9",
      "48390 PUSH MEMORY ELEMENT IF INIT      1996 -> reg12",
      "48393 PUSH MEMORY ELEMENT IF INIT      1997 -> reg13",
      "48396 PUSH MEMORY ELEMENT IF INIT      1998 -> reg14",
      "48399 GET      reg13[reg14] -> reg16",
      "48403 ADD      reg12NaN-> reg16",
      "48407 SET MEMORY ELEMENT IF INIT      1996 = reg16",
      "48410 ADD      reg111-> reg11",
      "48414 LESS THAN      reg11 < reg8 -> reg12",
      "48418 JUMP IF TRUE      reg12 TO: 48383 | 48421"
  ],
  "48421": [
      "48421 PUSH MEMORY ELEMENT IF INIT      1994 -> reg7",
      "48424 GET      reg7[remove] -> reg8",
      "48430 JUMP IF FALSE      reg8 TO: 48451 | 48433"
  ],
  "48433": [
      "48433 PUSH MEMORY ELEMENT IF INIT      1994 -> reg13",
      "48436 GET      reg13[remove] -> reg7",
      "48442 EMPTY ARRAY      -> reg9",
      "48444 CALL FUNCTION      OBJ: reg13 FUNC: reg7 ARGS: reg9",
      "48448 SET      reg2 -> reg8",
      "48451 PUSH MEMORY ELEMENT IF INIT      1993 -> reg8",
      "48454 PUSH MEMORY ELEMENT IF INIT      1997 -> reg7",
      "48457 PUT      reg8[raw] = reg7",
      "48463 PUSH MEMORY ELEMENT IF INIT      1993 -> reg7",
      "48466 PUSH MEMORY ELEMENT IF INIT      1831 -> reg8",
      "48469 NEW ARRAY      1 -> reg11",
      "48472 PUSH MEMORY ELEMENT IF INIT      1996 -> reg12",
      "48475 PUT      reg11[0] = reg12",
      "48479 CALL FUNCTION      PTR: reg8 MEM: reg11",
      "48483 SET      reg2 -> reg9",
      "48486 PUT      reg7[hash] = reg9",
      "48492 PUSH MEMORY ELEMENT IF INIT      1993 -> reg7",
      "48495 JUMP OR RETURN VAL      reg7"
  ],
  "48451": [
      "48451 PUSH MEMORY ELEMENT IF INIT      1993 -> reg8",
      "48454 PUSH MEMORY ELEMENT IF INIT      1997 -> reg7",
      "48457 PUT      reg8[raw] = reg7",
      "48463 PUSH MEMORY ELEMENT IF INIT      1993 -> reg7",
      "48466 PUSH MEMORY ELEMENT IF INIT      1831 -> reg8",
      "48469 NEW ARRAY      1 -> reg11",
      "48472 PUSH MEMORY ELEMENT IF INIT      1996 -> reg12",
      "48475 PUT      reg11[0] = reg12",
      "48479 CALL FUNCTION      PTR: reg8 MEM: reg11",
      "48483 SET      reg2 -> reg9",
      "48486 PUT      reg7[hash] = reg9",
      "48492 PUSH MEMORY ELEMENT IF INIT      1993 -> reg7",
      "48495 JUMP OR RETURN VAL      reg7"
  ],
  "48499": [
      "48499 SET I      null",
      "48501 PUSH F.K      -> reg7",
      "48503 VOID F",
      "48504 SET MEMORY ELEMENT      0 = reg7",
      "48507 PUSH MEMORY ELEMENT IF INIT      1993 -> reg7",
      "48510 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "48513 PUT      reg7[raw] = reg9",
      "48519 PUSH MEMORY ELEMENT IF INIT      1993 -> reg8",
      "48522 PUSH MEMORY ELEMENT IF INIT      1831 -> reg9",
      "48525 NEW ARRAY      1 -> reg11",
      "48528 PUSH MEMORY ELEMENT IF INIT      280 -> reg15",
      "48531 GET      reg15[stringify] -> reg16",
      "48537 NEW ARRAY      1 -> reg17",
      "48540 PUSH MEMORY ELEMENT IF INIT      0 -> reg12",
      "48543 PUT      reg17[0] = reg12",
      "48547 CALL FUNCTION      OBJ: reg15 FUNC: reg16 ARGS: reg17",
      "48551 SET      reg2 -> reg14",
      "48554 PUT      reg11[0] = reg14",
      "48558 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "48562 SET      reg2 -> reg7",
      "48565 PUT      reg8[hash] = reg7",
      "48571 PUSH MEMORY ELEMENT IF INIT      1993 -> reg7",
      "48574 JUMP OR RETURN VAL      reg7"
  ],
  "48673": [
      "48673 GET WINDOW PROP      getComputedStyle -> reg7",
      "48678 NEW ARRAY      1 -> reg5",
      "48681 PUSH MEMORY ELEMENT IF INIT      2005 -> reg8",
      "48684 PUT      reg5[0] = reg8",
      "48688 CALL FUNCTION      PTR: reg7 MEM: reg5",
      "48692 SET      reg2 -> reg4",
      "48695 SET MEMORY ELEMENT IF INIT      2006 = reg4",
      "48698 PUSH MEMORY ELEMENT IF INIT      2004 -> reg4",
      "48701 PUSH MEMORY ELEMENT IF INIT      2006 -> reg5",
      "48704 PUT      reg4[raw] = reg5",
      "48710 SET MEMORY ELEMENT IF INIT      2007 = ",
      "48715 SET MEMORY ELEMENT IF INIT      2008 = 0",
      "48718 PUSH MEMORY ELEMENT IF INIT      2008 -> reg7",
      "48721 PUSH MEMORY ELEMENT IF INIT      2006 -> reg8",
      "48724 GET      reg8[length] -> reg10",
      "48730 LESS THAN      reg7 < reg10 -> reg5",
      "48734 JUMP IF FALSE      reg5 TO: 48793 | 48737"
  ],
  "48737": [
      "48737 PUSH MEMORY ELEMENT IF INIT      2007 -> reg4",
      "48740 PUSH MEMORY ELEMENT IF INIT      2006 -> reg7",
      "48743 PUSH MEMORY ELEMENT IF INIT      2008 -> reg10",
      "48746 GET      reg7[reg10] -> reg11",
      "48750 GET      reg11[toString] -> reg7",
      "48756 EMPTY ARRAY      -> reg9",
      "48758 CALL FUNCTION      OBJ: reg11 FUNC: reg7 ARGS: reg9",
      "48762 SET      reg2 -> reg5",
      "48765 ADD      reg5NaN-> reg7",
      "48771 ADD      reg4NaN-> reg7",
      "48775 SET MEMORY ELEMENT IF INIT      2007 = reg7",
      "48778 PUSH MEMORY ELEMENT IF INIT      2008 -> reg4",
      "48781 SET      reg4 -> reg8",
      "48784 ADD      reg41-> reg4",
      "48788 SET MEMORY ELEMENT IF INIT      2008 = reg4",
      "48791 JUMP      48718",
      "48718 PUSH MEMORY ELEMENT IF INIT      2008 -> reg7",
      "48721 PUSH MEMORY ELEMENT IF INIT      2006 -> reg8",
      "48724 GET      reg8[length] -> reg10",
      "48730 LESS THAN      reg7 < reg10 -> reg5",
      "48734 JUMP IF FALSE      reg5 TO: 48793 | 48737"
  ],
  "48793": [
      "48793 PUSH MEMORY ELEMENT IF INIT      2004 -> reg5",
      "48796 PUSH MEMORY ELEMENT IF INIT      1831 -> reg8",
      "48799 NEW ARRAY      1 -> reg7",
      "48802 PUSH MEMORY ELEMENT IF INIT      2007 -> reg9",
      "48805 PUT      reg7[0] = reg9",
      "48809 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "48813 SET      reg2 -> reg4",
      "48816 PUT      reg5[hash] = reg4",
      "48822 PUSH MEMORY ELEMENT IF INIT      2004 -> reg7",
      "48825 PUT      reg7[raw] = null",
      "48831 PUSH MEMORY ELEMENT IF INIT      2004 -> reg4",
      "48834 JUMP OR RETURN VAL      reg4"
  ],
  "48838": [
      "48838 GET WINDOW PROP      Error -> reg5",
      "48843 NEW ARRAY      1 -> reg9",
      "48846 PUT      reg9[0] = Not Supported",
      "48852 BIND APPLY      reg5 reg9 -> 4",
      "48856 HANDLE ERROR      reg4",
      "48858 JUMP      48937",
      "48937 SET I      null",
      "48939 JUMP OR RETURN"
  ],
  "48860": [
      "48860 SET I      null",
      "48862 PUSH F.K      -> reg4",
      "48864 VOID F",
      "48865 SET MEMORY ELEMENT      0 = reg4",
      "48868 PUSH MEMORY ELEMENT IF INIT      2004 -> reg5",
      "48871 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "48874 PUT      reg5[raw] = reg4",
      "48880 PUSH MEMORY ELEMENT IF INIT      2004 -> reg5",
      "48883 PUSH MEMORY ELEMENT IF INIT      1831 -> reg8",
      "48886 NEW ARRAY      1 -> reg9",
      "48889 PUSH MEMORY ELEMENT IF INIT      280 -> reg4",
      "48892 GET      reg4[stringify] -> reg12",
      "48898 NEW ARRAY      1 -> reg13",
      "48901 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "48904 PUT      reg13[0] = reg14",
      "48908 CALL FUNCTION      OBJ: reg4 FUNC: reg12 ARGS: reg13",
      "48912 SET      reg2 -> reg10",
      "48915 PUT      reg9[0] = reg10",
      "48919 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "48923 SET      reg2 -> reg7",
      "48926 PUT      reg5[hash] = reg7",
      "48932 PUSH MEMORY ELEMENT IF INIT      2004 -> reg7",
      "48935 JUMP OR RETURN VAL      reg7"
  ],
  "49172": [
      "49172 SET I      null",
      "49174 PUSH F.K      -> reg5",
      "49176 VOID F",
      "49177 SET MEMORY ELEMENT      0 = reg5",
      "49180 PUSH MEMORY ELEMENT IF INIT      2013 -> reg5",
      "49183 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "49186 PUT      reg5[raw] = reg6",
      "49192 PUSH MEMORY ELEMENT IF INIT      2013 -> reg5",
      "49195 PUSH MEMORY ELEMENT IF INIT      1831 -> reg8",
      "49198 NEW ARRAY      1 -> reg11",
      "49201 PUSH MEMORY ELEMENT IF INIT      280 -> reg14",
      "49204 GET      reg14[stringify] -> reg9",
      "49210 NEW ARRAY      1 -> reg15",
      "49213 PUSH MEMORY ELEMENT IF INIT      0 -> reg12",
      "49216 PUT      reg15[0] = reg12",
      "49220 CALL FUNCTION      OBJ: reg14 FUNC: reg9 ARGS: reg15",
      "49224 SET      reg2 -> reg7",
      "49227 PUT      reg11[0] = reg7",
      "49231 CALL FUNCTION      PTR: reg8 MEM: reg11",
      "49235 SET      reg2 -> reg6",
      "49238 PUT      reg5[hash] = reg6",
      "49244 PUSH MEMORY ELEMENT IF INIT      2013 -> reg5",
      "49247 JUMP OR RETURN VAL      reg5"
  ],
  "49371": [
      "49371 SET I      null",
      "49373 PUSH F.K      -> reg7",
      "49375 VOID F",
      "49376 SET MEMORY ELEMENT      0 = reg7",
      "49379 SET I      null",
      "49381 JUMP OR RETURN"
  ],
  "49449": [
      "49449 EMPTY OBJECT      -> reg9",
      "49451 SET      reg9 -> reg4",
      "49454 SET MEMORY ELEMENT IF INIT      2024 = reg4",
      "49457 PUSH MEMORY ELEMENT IF INIT      2024 -> reg4",
      "49460 GET WINDOW PROP      Date -> reg8",
      "49465 GET      reg8[now] -> reg6",
      "49471 EMPTY ARRAY      -> reg10",
      "49473 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg10",
      "49477 SET      reg2 -> reg7",
      "49480 PUSH MEMORY ELEMENT IF INIT      2023 -> reg9",
      "49483 SUBTRACT      reg7 - reg9 -> reg6",
      "49487 PUT      reg4[time] = reg6",
      "49493 PUSH MEMORY ELEMENT IF INIT      2024 -> reg6",
      "49496 JUMP OR RETURN VAL      reg6"
  ],
  "49454": [
      "49454 SET MEMORY ELEMENT IF INIT      2024 = reg4",
      "49457 PUSH MEMORY ELEMENT IF INIT      2024 -> reg4",
      "49460 GET WINDOW PROP      Date -> reg8",
      "49465 GET      reg8[now] -> reg6",
      "49471 EMPTY ARRAY      -> reg10",
      "49473 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg10",
      "49477 SET      reg2 -> reg7",
      "49480 PUSH MEMORY ELEMENT IF INIT      2023 -> reg9",
      "49483 SUBTRACT      reg7 - reg9 -> reg6",
      "49487 PUT      reg4[time] = reg6",
      "49493 PUSH MEMORY ELEMENT IF INIT      2024 -> reg6",
      "49496 JUMP OR RETURN VAL      reg6"
  ],
  "50862": [
      "50862 NEW ARRAY      2 -> reg4",
      "50865 PUSH MEMORY ELEMENT IF INIT      2035 -> reg7",
      "50868 GET      reg7[1] -> reg5",
      "50872 PUT      reg4[0] = reg5",
      "50876 PUSH MEMORY ELEMENT IF INIT      2035 -> reg8",
      "50879 GET      reg8[0] -> reg9",
      "50883 PUT      reg4[1] = reg9",
      "50887 JUMP OR RETURN VAL      reg4"
  ],
  "50891": [
      "50891 PUSH MEMORY ELEMENT IF INIT      2036 -> reg4",
      "50894 LESS THAN      reg4 < 32 -> reg6",
      "50898 JUMP IF FALSE      reg6 TO: 50988 | 50901"
  ],
  "50901": [
      "50901 NEW ARRAY      2 -> reg6",
      "50904 PUSH MEMORY ELEMENT IF INIT      2035 -> reg7",
      "50907 GET      reg7[0] -> reg5",
      "50911 PUSH MEMORY ELEMENT IF INIT      2036 -> reg4",
      "50914 LSHIFT      reg5 << reg4 -> reg7",
      "50918 PUSH MEMORY ELEMENT IF INIT      2035 -> reg4",
      "50921 GET      reg4[1] -> reg5",
      "50925 PUSH MEMORY ELEMENT IF INIT      2036 -> reg4",
      "50928 SUBTRACT      32 - reg4 -> reg8",
      "50932 USHIFT      reg5 >>> reg8 -> reg4",
      "50936 OR      reg7 | reg4 -> reg5",
      "50940 PUT      reg6[0] = reg5",
      "50944 PUSH MEMORY ELEMENT IF INIT      2035 -> reg4",
      "50947 GET      reg4[1] -> reg8",
      "50951 PUSH MEMORY ELEMENT IF INIT      2036 -> reg4",
      "50954 LSHIFT      reg8 << reg4 -> reg5",
      "50958 PUSH MEMORY ELEMENT IF INIT      2035 -> reg4",
      "50961 GET      reg4[0] -> reg7",
      "50965 PUSH MEMORY ELEMENT IF INIT      2036 -> reg4",
      "50968 SUBTRACT      32 - reg4 -> reg9",
      "50972 USHIFT      reg7 >>> reg9 -> reg4",
      "50976 OR      reg5 | reg4 -> reg7",
      "50980 PUT      reg6[1] = reg7",
      "50984 JUMP OR RETURN VAL      reg6"
  ],
  "50988": [
      "50988 PUSH MEMORY ELEMENT IF INIT      2036 -> reg4",
      "50991 SET      32 -> reg5",
      "50994 SUBTRACT      reg4 - reg5 -> reg5",
      "50998 SET MEMORY ELEMENT IF INIT      2036 = reg5",
      "51001 NEW ARRAY      2 -> reg4",
      "51004 PUSH MEMORY ELEMENT IF INIT      2035 -> reg5",
      "51007 GET      reg5[1] -> reg6",
      "51011 PUSH MEMORY ELEMENT IF INIT      2036 -> reg5",
      "51014 LSHIFT      reg6 << reg5 -> reg8",
      "51018 PUSH MEMORY ELEMENT IF INIT      2035 -> reg5",
      "51021 GET      reg5[0] -> reg7",
      "51025 PUSH MEMORY ELEMENT IF INIT      2036 -> reg5",
      "51028 SUBTRACT      32 - reg5 -> reg6",
      "51032 USHIFT      reg7 >>> reg6 -> reg5",
      "51036 OR      reg8 | reg5 -> reg6",
      "51040 PUT      reg4[0] = reg6",
      "51044 PUSH MEMORY ELEMENT IF INIT      2035 -> reg5",
      "51047 GET      reg5[0] -> reg7",
      "51051 PUSH MEMORY ELEMENT IF INIT      2036 -> reg6",
      "51054 LSHIFT      reg7 << reg6 -> reg5",
      "51058 PUSH MEMORY ELEMENT IF INIT      2035 -> reg6",
      "51061 GET      reg6[1] -> reg7",
      "51065 PUSH MEMORY ELEMENT IF INIT      2036 -> reg6",
      "51068 SUBTRACT      32 - reg6 -> reg8",
      "51072 USHIFT      reg7 >>> reg8 -> reg11",
      "51076 OR      reg5 | reg11 -> reg6",
      "51080 PUT      reg4[1] = reg6",
      "51084 JUMP OR RETURN VAL      reg4"
  ],
  "51128": [
      "51128 PUSH MEMORY ELEMENT IF INIT      2040 -> reg6",
      "51131 JUMP OR RETURN VAL      reg6"
  ],
  "51135": [
      "51135 PUSH MEMORY ELEMENT IF INIT      2041 -> reg4",
      "51138 LESS THAN      reg4 < 32 -> reg5",
      "51142 JUMP IF FALSE      reg5 TO: 51210 | 51145"
  ],
  "51145": [
      "51145 NEW ARRAY      2 -> reg5",
      "51148 PUSH MEMORY ELEMENT IF INIT      2040 -> reg4",
      "51151 GET      reg4[0] -> reg6",
      "51155 PUSH MEMORY ELEMENT IF INIT      2041 -> reg7",
      "51158 LSHIFT      reg6 << reg7 -> reg4",
      "51162 PUSH MEMORY ELEMENT IF INIT      2040 -> reg6",
      "51165 GET      reg6[1] -> reg7",
      "51169 PUSH MEMORY ELEMENT IF INIT      2041 -> reg6",
      "51172 SUBTRACT      32 - reg6 -> reg8",
      "51176 USHIFT      reg7 >>> reg8 -> reg9",
      "51180 OR      reg4 | reg9 -> reg6",
      "51184 PUT      reg5[0] = reg6",
      "51188 PUSH MEMORY ELEMENT IF INIT      2040 -> reg4",
      "51191 GET      reg4[1] -> reg7",
      "51195 PUSH MEMORY ELEMENT IF INIT      2041 -> reg4",
      "51198 LSHIFT      reg7 << reg4 -> reg6",
      "51202 PUT      reg5[1] = reg6",
      "51206 JUMP OR RETURN VAL      reg5"
  ],
  "51210": [
      "51210 NEW ARRAY      2 -> reg4",
      "51213 PUSH MEMORY ELEMENT IF INIT      2040 -> reg5",
      "51216 GET      reg5[1] -> reg6",
      "51220 PUSH MEMORY ELEMENT IF INIT      2041 -> reg10",
      "51223 SUBTRACT      reg10 - 32 -> reg5",
      "51227 LSHIFT      reg6 << reg5 -> reg8",
      "51231 PUT      reg4[0] = reg8",
      "51235 PUT      reg4[1] = 0",
      "51239 JUMP OR RETURN VAL      reg4"
  ],
  "51600": [
      "51600 SET       -> reg4",
      "51605 SET MEMORY ELEMENT IF INIT      2050 = reg4",
      "51608 PUSH MEMORY ELEMENT IF INIT      2051 -> reg4",
      "51611 JUMP IF TRUE      reg4 TO: 51617 | 51614"
  ],
  "51605": [
      "51605 SET MEMORY ELEMENT IF INIT      2050 = reg4",
      "51608 PUSH MEMORY ELEMENT IF INIT      2051 -> reg4",
      "51611 JUMP IF TRUE      reg4 TO: 51617 | 51614"
  ],
  "51614": [
      "51614 SET      0 -> reg4",
      "51617 SET MEMORY ELEMENT IF INIT      2051 = reg4",
      "51620 PUSH MEMORY ELEMENT IF INIT      2050 -> reg4",
      "51623 GET      reg4[length] -> reg5",
      "51629 MOD      reg5 % 16 -> reg4",
      "51633 SET MEMORY ELEMENT IF INIT      2052 = reg4",
      "51636 PUSH MEMORY ELEMENT IF INIT      2050 -> reg4",
      "51639 GET      reg4[length] -> reg5",
      "51645 PUSH MEMORY ELEMENT IF INIT      2052 -> reg4",
      "51648 SUBTRACT      reg5 - reg4 -> reg6",
      "51652 SET MEMORY ELEMENT IF INIT      2053 = reg6",
      "51655 NEW ARRAY      2 -> reg6",
      "51658 PUT      reg6[0] = 0",
      "51662 PUSH MEMORY ELEMENT IF INIT      2051 -> reg4",
      "51665 PUT      reg6[1] = reg4",
      "51669 SET MEMORY ELEMENT IF INIT      2054 = reg6",
      "51672 NEW ARRAY      2 -> reg4",
      "51675 PUT      reg4[0] = 0",
      "51679 PUSH MEMORY ELEMENT IF INIT      2051 -> reg5",
      "51682 PUT      reg4[1] = reg5",
      "51686 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "51689 NEW ARRAY      2 -> reg4",
      "51692 PUT      reg4[0] = 0",
      "51696 PUT      reg4[1] = 0",
      "51700 SET MEMORY ELEMENT IF INIT      2056 = reg4",
      "51703 NEW ARRAY      2 -> reg6",
      "51706 PUT      reg6[0] = 0",
      "51710 PUT      reg6[1] = 0",
      "51714 SET MEMORY ELEMENT IF INIT      2057 = reg6",
      "51717 NEW ARRAY      2 -> reg4",
      "51720 PUT      reg4[0] = 2277735313",
      "51726 PUT      reg4[1] = 289559509",
      "51730 SET MEMORY ELEMENT IF INIT      2058 = reg4",
      "51733 NEW ARRAY      2 -> reg4",
      "51736 PUT      reg4[0] = 1291169091",
      "51742 PUT      reg4[1] = 658871167",
      "51746 SET MEMORY ELEMENT IF INIT      2059 = reg4",
      "51749 SET MEMORY ELEMENT IF INIT      2060 = 0",
      "51752 PUSH MEMORY ELEMENT IF INIT      2060 -> reg4",
      "51755 PUSH MEMORY ELEMENT IF INIT      2053 -> reg6",
      "51758 LESS THAN      reg4 < reg6 -> reg7",
      "51762 JUMP IF FALSE      reg7 TO: 52931 | 51765"
  ],
  "51617": [
      "51617 SET MEMORY ELEMENT IF INIT      2051 = reg4",
      "51620 PUSH MEMORY ELEMENT IF INIT      2050 -> reg4",
      "51623 GET      reg4[length] -> reg5",
      "51629 MOD      reg5 % 16 -> reg4",
      "51633 SET MEMORY ELEMENT IF INIT      2052 = reg4",
      "51636 PUSH MEMORY ELEMENT IF INIT      2050 -> reg4",
      "51639 GET      reg4[length] -> reg5",
      "51645 PUSH MEMORY ELEMENT IF INIT      2052 -> reg4",
      "51648 SUBTRACT      reg5 - reg4 -> reg6",
      "51652 SET MEMORY ELEMENT IF INIT      2053 = reg6",
      "51655 NEW ARRAY      2 -> reg6",
      "51658 PUT      reg6[0] = 0",
      "51662 PUSH MEMORY ELEMENT IF INIT      2051 -> reg4",
      "51665 PUT      reg6[1] = reg4",
      "51669 SET MEMORY ELEMENT IF INIT      2054 = reg6",
      "51672 NEW ARRAY      2 -> reg4",
      "51675 PUT      reg4[0] = 0",
      "51679 PUSH MEMORY ELEMENT IF INIT      2051 -> reg5",
      "51682 PUT      reg4[1] = reg5",
      "51686 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "51689 NEW ARRAY      2 -> reg4",
      "51692 PUT      reg4[0] = 0",
      "51696 PUT      reg4[1] = 0",
      "51700 SET MEMORY ELEMENT IF INIT      2056 = reg4",
      "51703 NEW ARRAY      2 -> reg6",
      "51706 PUT      reg6[0] = 0",
      "51710 PUT      reg6[1] = 0",
      "51714 SET MEMORY ELEMENT IF INIT      2057 = reg6",
      "51717 NEW ARRAY      2 -> reg4",
      "51720 PUT      reg4[0] = 2277735313",
      "51726 PUT      reg4[1] = 289559509",
      "51730 SET MEMORY ELEMENT IF INIT      2058 = reg4",
      "51733 NEW ARRAY      2 -> reg4",
      "51736 PUT      reg4[0] = 1291169091",
      "51742 PUT      reg4[1] = 658871167",
      "51746 SET MEMORY ELEMENT IF INIT      2059 = reg4",
      "51749 SET MEMORY ELEMENT IF INIT      2060 = 0",
      "51752 PUSH MEMORY ELEMENT IF INIT      2060 -> reg4",
      "51755 PUSH MEMORY ELEMENT IF INIT      2053 -> reg6",
      "51758 LESS THAN      reg4 < reg6 -> reg7",
      "51762 JUMP IF FALSE      reg7 TO: 52931 | 51765"
  ],
  "51765": [
      "51765 NEW ARRAY      2 -> reg4",
      "51768 PUSH MEMORY ELEMENT IF INIT      2050 -> reg5",
      "51771 GET      reg5[charCodeAt] -> reg7",
      "51777 NEW ARRAY      1 -> reg8",
      "51780 PUSH MEMORY ELEMENT IF INIT      2060 -> reg9",
      "51783 ADD      reg94-> reg10",
      "51787 PUT      reg8[0] = reg10",
      "51791 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "51795 SET      reg2 -> reg6",
      "51798 AND      reg6 & 255 -> reg7",
      "51802 PUSH MEMORY ELEMENT IF INIT      2050 -> reg8",
      "51805 GET      reg8[charCodeAt] -> reg9",
      "51811 NEW ARRAY      1 -> reg10",
      "51814 PUSH MEMORY ELEMENT IF INIT      2060 -> reg12",
      "51817 ADD      reg125-> reg11",
      "51821 PUT      reg10[0] = reg11",
      "51825 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "51829 SET      reg2 -> reg6",
      "51832 AND      reg6 & 255 -> reg9",
      "51836 LSHIFT      reg9 << 8 -> reg6",
      "51840 OR      reg7 | reg6 -> reg10",
      "51844 PUSH MEMORY ELEMENT IF INIT      2050 -> reg6",
      "51847 GET      reg6[charCodeAt] -> reg9",
      "51853 NEW ARRAY      1 -> reg11",
      "51856 PUSH MEMORY ELEMENT IF INIT      2060 -> reg14",
      "51859 ADD      reg146-> reg12",
      "51863 PUT      reg11[0] = reg12",
      "51867 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg11",
      "51871 SET      reg2 -> reg7",
      "51874 AND      reg7 & 255 -> reg9",
      "51878 LSHIFT      reg9 << 16 -> reg7",
      "51882 OR      reg10 | reg7 -> reg9",
      "51886 PUSH MEMORY ELEMENT IF INIT      2050 -> reg7",
      "51889 GET      reg7[charCodeAt] -> reg11",
      "51895 NEW ARRAY      1 -> reg12",
      "51898 PUSH MEMORY ELEMENT IF INIT      2060 -> reg13",
      "51901 ADD      reg137-> reg14",
      "51905 PUT      reg12[0] = reg14",
      "51909 CALL FUNCTION      OBJ: reg7 FUNC: reg11 ARGS: reg12",
      "51913 SET      reg2 -> reg10",
      "51916 AND      reg10 & 255 -> reg13",
      "51920 LSHIFT      reg13 << 24 -> reg10",
      "51924 OR      reg9 | reg10 -> reg12",
      "51928 PUT      reg4[0] = reg12",
      "51932 PUSH MEMORY ELEMENT IF INIT      2050 -> reg9",
      "51935 GET      reg9[charCodeAt] -> reg11",
      "51941 NEW ARRAY      1 -> reg13",
      "51944 PUSH MEMORY ELEMENT IF INIT      2060 -> reg12",
      "51947 PUT      reg13[0] = reg12",
      "51951 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg13",
      "51955 SET      reg2 -> reg10",
      "51958 AND      reg10 & 255 -> reg11",
      "51962 PUSH MEMORY ELEMENT IF INIT      2050 -> reg13",
      "51965 GET      reg13[charCodeAt] -> reg12",
      "51971 NEW ARRAY      1 -> reg14",
      "51974 PUSH MEMORY ELEMENT IF INIT      2060 -> reg15",
      "51977 ADD      reg151-> reg17",
      "51981 PUT      reg14[0] = reg17",
      "51985 CALL FUNCTION      OBJ: reg13 FUNC: reg12 ARGS: reg14",
      "51989 SET      reg2 -> reg10",
      "51992 AND      reg10 & 255 -> reg12",
      "51996 LSHIFT      reg12 << 8 -> reg10",
      "52000 OR      reg11 | reg10 -> reg12",
      "52004 PUSH MEMORY ELEMENT IF INIT      2050 -> reg15",
      "52007 GET      reg15[charCodeAt] -> reg11",
      "52013 NEW ARRAY      1 -> reg14",
      "52016 PUSH MEMORY ELEMENT IF INIT      2060 -> reg16",
      "52019 ADD      reg162-> reg19",
      "52023 PUT      reg14[0] = reg19",
      "52027 CALL FUNCTION      OBJ: reg15 FUNC: reg11 ARGS: reg14",
      "52031 SET      reg2 -> reg10",
      "52034 AND      reg10 & 255 -> reg11",
      "52038 LSHIFT      reg11 << 16 -> reg10",
      "52042 OR      reg12 | reg10 -> reg11",
      "52046 PUSH MEMORY ELEMENT IF INIT      2050 -> reg12",
      "52049 GET      reg12[charCodeAt] -> reg16",
      "52055 NEW ARRAY      1 -> reg17",
      "52058 PUSH MEMORY ELEMENT IF INIT      2060 -> reg20",
      "52061 ADD      reg203-> reg14",
      "52065 PUT      reg17[0] = reg14",
      "52069 CALL FUNCTION      OBJ: reg12 FUNC: reg16 ARGS: reg17",
      "52073 SET      reg2 -> reg10",
      "52076 AND      reg10 & 255 -> reg17",
      "52080 LSHIFT      reg17 << 24 -> reg16",
      "52084 OR      reg11 | reg16 -> reg10",
      "52088 PUT      reg4[1] = reg10",
      "52092 SET MEMORY ELEMENT IF INIT      2056 = reg4",
      "52095 NEW ARRAY      2 -> reg4",
      "52098 PUSH MEMORY ELEMENT IF INIT      2050 -> reg10",
      "52101 GET      reg10[charCodeAt] -> reg14",
      "52107 NEW ARRAY      1 -> reg17",
      "52110 PUSH MEMORY ELEMENT IF INIT      2060 -> reg16",
      "52113 ADD      reg1612-> reg18",
      "52117 PUT      reg17[0] = reg18",
      "52121 CALL FUNCTION      OBJ: reg10 FUNC: reg14 ARGS: reg17",
      "52125 SET      reg2 -> reg11",
      "52128 AND      reg11 & 255 -> reg14",
      "52132 PUSH MEMORY ELEMENT IF INIT      2050 -> reg11",
      "52135 GET      reg11[charCodeAt] -> reg18",
      "52141 NEW ARRAY      1 -> reg16",
      "52144 PUSH MEMORY ELEMENT IF INIT      2060 -> reg20",
      "52147 ADD      reg2013-> reg19",
      "52151 PUT      reg16[0] = reg19",
      "52155 CALL FUNCTION      OBJ: reg11 FUNC: reg18 ARGS: reg16",
      "52159 SET      reg2 -> reg17",
      "52162 AND      reg17 & 255 -> reg16",
      "52166 LSHIFT      reg16 << 8 -> reg17",
      "52170 OR      reg14 | reg17 -> reg18",
      "52174 PUSH MEMORY ELEMENT IF INIT      2050 -> reg16",
      "52177 GET      reg16[charCodeAt] -> reg21",
      "52183 NEW ARRAY      1 -> reg19",
      "52186 PUSH MEMORY ELEMENT IF INIT      2060 -> reg17",
      "52189 ADD      reg1714-> reg20",
      "52193 PUT      reg19[0] = reg20",
      "52197 CALL FUNCTION      OBJ: reg16 FUNC: reg21 ARGS: reg19",
      "52201 SET      reg2 -> reg14",
      "52204 AND      reg14 & 255 -> reg17",
      "52208 LSHIFT      reg17 << 16 -> reg14",
      "52212 OR      reg18 | reg14 -> reg19",
      "52216 PUSH MEMORY ELEMENT IF INIT      2050 -> reg14",
      "52219 GET      reg14[charCodeAt] -> reg18",
      "52225 NEW ARRAY      1 -> reg20",
      "52228 PUSH MEMORY ELEMENT IF INIT      2060 -> reg21",
      "52231 ADD      reg2115-> reg22",
      "52235 PUT      reg20[0] = reg22",
      "52239 CALL FUNCTION      OBJ: reg14 FUNC: reg18 ARGS: reg20",
      "52243 SET      reg2 -> reg17",
      "52246 AND      reg17 & 255 -> reg18",
      "52250 LSHIFT      reg18 << 24 -> reg17",
      "52254 OR      reg19 | reg17 -> reg18",
      "52258 PUT      reg4[0] = reg18",
      "52262 PUSH MEMORY ELEMENT IF INIT      2050 -> reg18",
      "52265 GET      reg18[charCodeAt] -> reg20",
      "52271 NEW ARRAY      1 -> reg19",
      "52274 PUSH MEMORY ELEMENT IF INIT      2060 -> reg22",
      "52277 ADD      reg228-> reg21",
      "52281 PUT      reg19[0] = reg21",
      "52285 CALL FUNCTION      OBJ: reg18 FUNC: reg20 ARGS: reg19",
      "52289 SET      reg2 -> reg17",
      "52292 AND      reg17 & 255 -> reg19",
      "52296 PUSH MEMORY ELEMENT IF INIT      2050 -> reg17",
      "52299 GET      reg17[charCodeAt] -> reg22",
      "52305 NEW ARRAY      1 -> reg24",
      "52308 PUSH MEMORY ELEMENT IF INIT      2060 -> reg23",
      "52311 ADD      reg239-> reg20",
      "52315 PUT      reg24[0] = reg20",
      "52319 CALL FUNCTION      OBJ: reg17 FUNC: reg22 ARGS: reg24",
      "52323 SET      reg2 -> reg21",
      "52326 AND      reg21 & 255 -> reg22",
      "52330 LSHIFT      reg22 << 8 -> reg20",
      "52334 OR      reg19 | reg20 -> reg21",
      "52338 PUSH MEMORY ELEMENT IF INIT      2050 -> reg20",
      "52341 GET      reg20[charCodeAt] -> reg22",
      "52347 NEW ARRAY      1 -> reg23",
      "52350 PUSH MEMORY ELEMENT IF INIT      2060 -> reg24",
      "52353 ADD      reg2410-> reg26",
      "52357 PUT      reg23[0] = reg26",
      "52361 CALL FUNCTION      OBJ: reg20 FUNC: reg22 ARGS: reg23",
      "52365 SET      reg2 -> reg19",
      "52368 AND      reg19 & 255 -> reg23",
      "52372 LSHIFT      reg23 << 16 -> reg19",
      "52376 OR      reg21 | reg19 -> reg22",
      "52380 PUSH MEMORY ELEMENT IF INIT      2050 -> reg24",
      "52383 GET      reg24[charCodeAt] -> reg21",
      "52389 NEW ARRAY      1 -> reg25",
      "52392 PUSH MEMORY ELEMENT IF INIT      2060 -> reg23",
      "52395 ADD      reg2311-> reg28",
      "52399 PUT      reg25[0] = reg28",
      "52403 CALL FUNCTION      OBJ: reg24 FUNC: reg21 ARGS: reg25",
      "52407 SET      reg2 -> reg19",
      "52410 AND      reg19 & 255 -> reg21",
      "52414 LSHIFT      reg21 << 24 -> reg19",
      "52418 OR      reg22 | reg19 -> reg21",
      "52422 PUT      reg4[1] = reg21",
      "52426 SET MEMORY ELEMENT IF INIT      2057 = reg4",
      "52429 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "52432 NEW ARRAY      2 -> reg22",
      "52435 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "52438 PUT      reg22[0] = reg23",
      "52442 PUSH MEMORY ELEMENT IF INIT      2058 -> reg21",
      "52445 PUT      reg22[1] = reg21",
      "52449 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "52453 SET      reg2 -> reg4",
      "52456 SET MEMORY ELEMENT IF INIT      2056 = reg4",
      "52459 PUSH MEMORY ELEMENT IF INIT      1847 -> reg19",
      "52462 NEW ARRAY      2 -> reg21",
      "52465 PUSH MEMORY ELEMENT IF INIT      2056 -> reg22",
      "52468 PUT      reg21[0] = reg22",
      "52472 PUT      reg21[1] = 31",
      "52476 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "52480 SET      reg2 -> reg4",
      "52483 SET MEMORY ELEMENT IF INIT      2056 = reg4",
      "52486 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "52489 NEW ARRAY      2 -> reg23",
      "52492 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "52495 PUT      reg23[0] = reg21",
      "52499 PUSH MEMORY ELEMENT IF INIT      2059 -> reg21",
      "52502 PUT      reg23[1] = reg21",
      "52506 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "52510 SET      reg2 -> reg4",
      "52513 SET MEMORY ELEMENT IF INIT      2056 = reg4",
      "52516 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "52519 NEW ARRAY      2 -> reg19",
      "52522 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "52525 PUT      reg19[0] = reg22",
      "52529 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "52532 PUT      reg19[1] = reg23",
      "52536 CALL FUNCTION      PTR: reg21 MEM: reg19",
      "52540 SET      reg2 -> reg4",
      "52543 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "52546 PUSH MEMORY ELEMENT IF INIT      1847 -> reg4",
      "52549 NEW ARRAY      2 -> reg21",
      "52552 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "52555 PUT      reg21[0] = reg22",
      "52559 PUT      reg21[1] = 27",
      "52563 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "52567 SET      reg2 -> reg19",
      "52570 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "52573 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "52576 NEW ARRAY      2 -> reg21",
      "52579 PUSH MEMORY ELEMENT IF INIT      2054 -> reg25",
      "52582 PUT      reg21[0] = reg25",
      "52586 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "52589 PUT      reg21[1] = reg22",
      "52593 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "52597 SET      reg2 -> reg19",
      "52600 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "52603 PUSH MEMORY ELEMENT IF INIT      1845 -> reg21",
      "52606 NEW ARRAY      2 -> reg19",
      "52609 PUSH MEMORY ELEMENT IF INIT      1846 -> reg23",
      "52612 NEW ARRAY      2 -> reg27",
      "52615 PUSH MEMORY ELEMENT IF INIT      2054 -> reg25",
      "52618 PUT      reg27[0] = reg25",
      "52622 NEW ARRAY      2 -> reg25",
      "52625 PUT      reg25[0] = 0",
      "52629 PUT      reg25[1] = 5",
      "52633 PUT      reg27[1] = reg25",
      "52637 CALL FUNCTION      PTR: reg23 MEM: reg27",
      "52641 SET      reg2 -> reg22",
      "52644 PUT      reg19[0] = reg22",
      "52648 NEW ARRAY      2 -> reg22",
      "52651 PUT      reg22[0] = 0",
      "52655 PUT      reg22[1] = 1390208809",
      "52661 PUT      reg19[1] = reg22",
      "52665 CALL FUNCTION      PTR: reg21 MEM: reg19",
      "52669 SET      reg2 -> reg4",
      "52672 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "52675 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "52678 NEW ARRAY      2 -> reg22",
      "52681 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "52684 PUT      reg22[0] = reg23",
      "52688 PUSH MEMORY ELEMENT IF INIT      2059 -> reg28",
      "52691 PUT      reg22[1] = reg28",
      "52695 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "52699 SET      reg2 -> reg4",
      "52702 SET MEMORY ELEMENT IF INIT      2057 = reg4",
      "52705 PUSH MEMORY ELEMENT IF INIT      1847 -> reg21",
      "52708 NEW ARRAY      2 -> reg19",
      "52711 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "52714 PUT      reg19[0] = reg22",
      "52718 PUT      reg19[1] = 33",
      "52722 CALL FUNCTION      PTR: reg21 MEM: reg19",
      "52726 SET      reg2 -> reg4",
      "52729 SET MEMORY ELEMENT IF INIT      2057 = reg4",
      "52732 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "52735 NEW ARRAY      2 -> reg21",
      "52738 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "52741 PUT      reg21[0] = reg22",
      "52745 PUSH MEMORY ELEMENT IF INIT      2058 -> reg22",
      "52748 PUT      reg21[1] = reg22",
      "52752 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "52756 SET      reg2 -> reg4",
      "52759 SET MEMORY ELEMENT IF INIT      2057 = reg4",
      "52762 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "52765 NEW ARRAY      2 -> reg22",
      "52768 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "52771 PUT      reg22[0] = reg21",
      "52775 PUSH MEMORY ELEMENT IF INIT      2057 -> reg21",
      "52778 PUT      reg22[1] = reg21",
      "52782 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "52786 SET      reg2 -> reg4",
      "52789 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "52792 PUSH MEMORY ELEMENT IF INIT      1847 -> reg19",
      "52795 NEW ARRAY      2 -> reg21",
      "52798 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "52801 PUT      reg21[0] = reg22",
      "52805 PUT      reg21[1] = 31",
      "52809 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "52813 SET      reg2 -> reg4",
      "52816 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "52819 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "52822 NEW ARRAY      2 -> reg21",
      "52825 PUSH MEMORY ELEMENT IF INIT      2055 -> reg23",
      "52828 PUT      reg21[0] = reg23",
      "52832 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "52835 PUT      reg21[1] = reg22",
      "52839 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "52843 SET      reg2 -> reg19",
      "52846 SET MEMORY ELEMENT IF INIT      2055 = reg19",
      "52849 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "52852 NEW ARRAY      2 -> reg19",
      "52855 PUSH MEMORY ELEMENT IF INIT      1846 -> reg23",
      "52858 NEW ARRAY      2 -> reg26",
      "52861 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "52864 PUT      reg26[0] = reg25",
      "52868 NEW ARRAY      2 -> reg25",
      "52871 PUT      reg25[0] = 0",
      "52875 PUT      reg25[1] = 5",
      "52879 PUT      reg26[1] = reg25",
      "52883 CALL FUNCTION      PTR: reg23 MEM: reg26",
      "52887 SET      reg2 -> reg21",
      "52890 PUT      reg19[0] = reg21",
      "52894 NEW ARRAY      2 -> reg21",
      "52897 PUT      reg21[0] = 0",
      "52901 PUT      reg21[1] = 944331445",
      "52905 PUT      reg19[1] = reg21",
      "52909 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "52913 SET      reg2 -> reg22",
      "52916 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "52919 PUSH MEMORY ELEMENT IF INIT      2060 -> reg4",
      "52922 ADD      reg416-> reg21",
      "52926 SET MEMORY ELEMENT IF INIT      2060 = reg21",
      "52929 JUMP      51752",
      "51752 PUSH MEMORY ELEMENT IF INIT      2060 -> reg4",
      "51755 PUSH MEMORY ELEMENT IF INIT      2053 -> reg6",
      "51758 LESS THAN      reg4 < reg6 -> reg7",
      "51762 JUMP IF FALSE      reg7 TO: 52931 | 51765"
  ],
  "52931": [
      "52931 NEW ARRAY      2 -> reg19",
      "52934 PUT      reg19[0] = 0",
      "52938 PUT      reg19[1] = 0",
      "52942 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "52945 NEW ARRAY      2 -> reg4",
      "52948 PUT      reg4[0] = 0",
      "52952 PUT      reg4[1] = 0",
      "52956 SET MEMORY ELEMENT IF INIT      2057 = reg4",
      "52959 PUSH MEMORY ELEMENT IF INIT      2052 -> reg4",
      "52962 EQUAL      reg4 == 15 -> reg19",
      "52966 JUMP IF FALSE      reg19 TO: 53060 | 52969"
  ],
  "52969": [
      "52969 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "52972 NEW ARRAY      2 -> reg22",
      "52975 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "52978 PUT      reg22[0] = reg23",
      "52982 PUSH MEMORY ELEMENT IF INIT      1848 -> reg26",
      "52985 NEW ARRAY      2 -> reg25",
      "52988 NEW ARRAY      2 -> reg28",
      "52991 PUT      reg28[0] = 0",
      "52995 PUSH MEMORY ELEMENT IF INIT      2050 -> reg31",
      "52998 GET      reg31[charCodeAt] -> reg32",
      "53004 NEW ARRAY      1 -> reg27",
      "53007 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53010 ADD      reg3314-> reg34",
      "53014 PUT      reg27[0] = reg34",
      "53018 CALL FUNCTION      OBJ: reg31 FUNC: reg32 ARGS: reg27",
      "53022 SET      reg2 -> reg30",
      "53025 PUT      reg28[1] = reg30",
      "53029 PUT      reg25[0] = reg28",
      "53033 PUT      reg25[1] = 48",
      "53037 CALL FUNCTION      PTR: reg26 MEM: reg25",
      "53041 SET      reg2 -> reg23",
      "53044 PUT      reg22[1] = reg23",
      "53048 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53052 SET      reg2 -> reg19",
      "53055 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53058 JUMP      53067",
      "53067 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53070 NEW ARRAY      2 -> reg23",
      "53073 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53076 PUT      reg23[0] = reg22",
      "53080 PUSH MEMORY ELEMENT IF INIT      1848 -> reg22",
      "53083 NEW ARRAY      2 -> reg26",
      "53086 NEW ARRAY      2 -> reg28",
      "53089 PUT      reg28[0] = 0",
      "53093 PUSH MEMORY ELEMENT IF INIT      2050 -> reg29",
      "53096 GET      reg29[charCodeAt] -> reg30",
      "53102 NEW ARRAY      1 -> reg32",
      "53105 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53108 ADD      reg3313-> reg34",
      "53112 PUT      reg32[0] = reg34",
      "53116 CALL FUNCTION      OBJ: reg29 FUNC: reg30 ARGS: reg32",
      "53120 SET      reg2 -> reg27",
      "53123 PUT      reg28[1] = reg27",
      "53127 PUT      reg26[0] = reg28",
      "53131 PUT      reg26[1] = 40",
      "53135 CALL FUNCTION      PTR: reg22 MEM: reg26",
      "53139 SET      reg2 -> reg25",
      "53142 PUT      reg23[1] = reg25",
      "53146 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53150 SET      reg2 -> reg19",
      "53153 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53156 JUMP      53165",
      "53165 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53168 NEW ARRAY      2 -> reg21",
      "53171 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53174 PUT      reg21[0] = reg26",
      "53178 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53181 NEW ARRAY      2 -> reg27",
      "53184 NEW ARRAY      2 -> reg26",
      "53187 PUT      reg26[0] = 0",
      "53191 PUSH MEMORY ELEMENT IF INIT      2050 -> reg28",
      "53194 GET      reg28[charCodeAt] -> reg30",
      "53200 NEW ARRAY      1 -> reg34",
      "53203 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53206 ADD      reg3312-> reg35",
      "53210 PUT      reg34[0] = reg35",
      "53214 CALL FUNCTION      OBJ: reg28 FUNC: reg30 ARGS: reg34",
      "53218 SET      reg2 -> reg32",
      "53221 PUT      reg26[1] = reg32",
      "53225 PUT      reg27[0] = reg26",
      "53229 PUT      reg27[1] = 32",
      "53233 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "53237 SET      reg2 -> reg23",
      "53240 PUT      reg21[1] = reg23",
      "53244 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "53248 SET      reg2 -> reg19",
      "53251 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53254 JUMP      53263",
      "53263 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "53266 NEW ARRAY      2 -> reg22",
      "53269 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53272 PUT      reg22[0] = reg23",
      "53276 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53279 NEW ARRAY      2 -> reg26",
      "53282 NEW ARRAY      2 -> reg30",
      "53285 PUT      reg30[0] = 0",
      "53289 PUSH MEMORY ELEMENT IF INIT      2050 -> reg34",
      "53292 GET      reg34[charCodeAt] -> reg27",
      "53298 NEW ARRAY      1 -> reg36",
      "53301 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53304 ADD      reg3311-> reg35",
      "53308 PUT      reg36[0] = reg35",
      "53312 CALL FUNCTION      OBJ: reg34 FUNC: reg27 ARGS: reg36",
      "53316 SET      reg2 -> reg32",
      "53319 PUT      reg30[1] = reg32",
      "53323 PUT      reg26[0] = reg30",
      "53327 PUT      reg26[1] = 24",
      "53331 CALL FUNCTION      PTR: reg25 MEM: reg26",
      "53335 SET      reg2 -> reg23",
      "53338 PUT      reg22[1] = reg23",
      "53342 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "53346 SET      reg2 -> reg21",
      "53349 SET MEMORY ELEMENT IF INIT      2057 = reg21",
      "53352 JUMP      53361",
      "53361 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53364 NEW ARRAY      2 -> reg25",
      "53367 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53370 PUT      reg25[0] = reg22",
      "53374 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53377 NEW ARRAY      2 -> reg26",
      "53380 NEW ARRAY      2 -> reg30",
      "53383 PUT      reg30[0] = 0",
      "53387 PUSH MEMORY ELEMENT IF INIT      2050 -> reg32",
      "53390 GET      reg32[charCodeAt] -> reg33",
      "53396 NEW ARRAY      1 -> reg35",
      "53399 PUSH MEMORY ELEMENT IF INIT      2060 -> reg37",
      "53402 ADD      reg3710-> reg39",
      "53406 PUT      reg35[0] = reg39",
      "53410 CALL FUNCTION      OBJ: reg32 FUNC: reg33 ARGS: reg35",
      "53414 SET      reg2 -> reg27",
      "53417 PUT      reg30[1] = reg27",
      "53421 PUT      reg26[0] = reg30",
      "53425 PUT      reg26[1] = 16",
      "53429 CALL FUNCTION      PTR: reg23 MEM: reg26",
      "53433 SET      reg2 -> reg22",
      "53436 PUT      reg25[1] = reg22",
      "53440 CALL FUNCTION      PTR: reg21 MEM: reg25",
      "53444 SET      reg2 -> reg19",
      "53447 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53450 JUMP      53459",
      "53459 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53462 NEW ARRAY      2 -> reg22",
      "53465 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53468 PUT      reg22[0] = reg26",
      "53472 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53475 NEW ARRAY      2 -> reg27",
      "53478 NEW ARRAY      2 -> reg26",
      "53481 PUT      reg26[0] = 0",
      "53485 PUSH MEMORY ELEMENT IF INIT      2050 -> reg30",
      "53488 GET      reg30[charCodeAt] -> reg37",
      "53494 NEW ARRAY      1 -> reg36",
      "53497 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53500 ADD      reg389-> reg35",
      "53504 PUT      reg36[0] = reg35",
      "53508 CALL FUNCTION      OBJ: reg30 FUNC: reg37 ARGS: reg36",
      "53512 SET      reg2 -> reg33",
      "53515 PUT      reg26[1] = reg33",
      "53519 PUT      reg27[0] = reg26",
      "53523 PUT      reg27[1] = 8",
      "53527 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "53531 SET      reg2 -> reg23",
      "53534 PUT      reg22[1] = reg23",
      "53538 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53542 SET      reg2 -> reg19",
      "53545 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53548 JUMP      53557",
      "53557 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53560 NEW ARRAY      2 -> reg23",
      "53563 PUSH MEMORY ELEMENT IF INIT      2057 -> reg21",
      "53566 PUT      reg23[0] = reg21",
      "53570 NEW ARRAY      2 -> reg21",
      "53573 PUT      reg21[0] = 0",
      "53577 PUSH MEMORY ELEMENT IF INIT      2050 -> reg27",
      "53580 GET      reg27[charCodeAt] -> reg25",
      "53586 NEW ARRAY      1 -> reg35",
      "53589 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53592 ADD      reg338-> reg36",
      "53596 PUT      reg35[0] = reg36",
      "53600 CALL FUNCTION      OBJ: reg27 FUNC: reg25 ARGS: reg35",
      "53604 SET      reg2 -> reg26",
      "53607 PUT      reg21[1] = reg26",
      "53611 PUT      reg23[1] = reg21",
      "53615 CALL FUNCTION      PTR: reg22 MEM: reg23",
      "53619 SET      reg2 -> reg19",
      "53622 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53625 PUSH MEMORY ELEMENT IF INIT      1846 -> reg22",
      "53628 NEW ARRAY      2 -> reg19",
      "53631 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53634 PUT      reg19[0] = reg23",
      "53638 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "53641 PUT      reg19[1] = reg23",
      "53645 CALL FUNCTION      PTR: reg22 MEM: reg19",
      "53649 SET      reg2 -> reg21",
      "53652 SET MEMORY ELEMENT IF INIT      2057 = reg21",
      "53655 PUSH MEMORY ELEMENT IF INIT      1847 -> reg21",
      "53658 NEW ARRAY      2 -> reg22",
      "53661 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53664 PUT      reg22[0] = reg26",
      "53668 PUT      reg22[1] = 33",
      "53672 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53676 SET      reg2 -> reg19",
      "53679 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53682 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "53685 NEW ARRAY      2 -> reg23",
      "53688 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53691 PUT      reg23[0] = reg22",
      "53695 PUSH MEMORY ELEMENT IF INIT      2058 -> reg26",
      "53698 PUT      reg23[1] = reg26",
      "53702 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53706 SET      reg2 -> reg19",
      "53709 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53712 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53715 NEW ARRAY      2 -> reg19",
      "53718 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "53721 PUT      reg19[0] = reg25",
      "53725 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53728 PUT      reg19[1] = reg23",
      "53732 CALL FUNCTION      PTR: reg21 MEM: reg19",
      "53736 SET      reg2 -> reg22",
      "53739 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "53742 JUMP      53751",
      "53751 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53754 NEW ARRAY      2 -> reg23",
      "53757 PUSH MEMORY ELEMENT IF INIT      2056 -> reg22",
      "53760 PUT      reg23[0] = reg22",
      "53764 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "53767 NEW ARRAY      2 -> reg25",
      "53770 NEW ARRAY      2 -> reg26",
      "53773 PUT      reg26[0] = 0",
      "53777 PUSH MEMORY ELEMENT IF INIT      2050 -> reg36",
      "53780 GET      reg36[charCodeAt] -> reg37",
      "53786 NEW ARRAY      1 -> reg40",
      "53789 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53792 ADD      reg387-> reg39",
      "53796 PUT      reg40[0] = reg39",
      "53800 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg40",
      "53804 SET      reg2 -> reg35",
      "53807 PUT      reg26[1] = reg35",
      "53811 PUT      reg25[0] = reg26",
      "53815 PUT      reg25[1] = 56",
      "53819 CALL FUNCTION      PTR: reg33 MEM: reg25",
      "53823 SET      reg2 -> reg22",
      "53826 PUT      reg23[1] = reg22",
      "53830 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53834 SET      reg2 -> reg19",
      "53837 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53840 JUMP      53849",
      "53849 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53852 NEW ARRAY      2 -> reg26",
      "53855 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53858 PUT      reg26[0] = reg23",
      "53862 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53865 NEW ARRAY      2 -> reg25",
      "53868 NEW ARRAY      2 -> reg33",
      "53871 PUT      reg33[0] = 0",
      "53875 PUSH MEMORY ELEMENT IF INIT      2050 -> reg37",
      "53878 GET      reg37[charCodeAt] -> reg39",
      "53884 NEW ARRAY      1 -> reg38",
      "53887 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "53890 ADD      reg406-> reg42",
      "53894 PUT      reg38[0] = reg42",
      "53898 CALL FUNCTION      OBJ: reg37 FUNC: reg39 ARGS: reg38",
      "53902 SET      reg2 -> reg35",
      "53905 PUT      reg33[1] = reg35",
      "53909 PUT      reg25[0] = reg33",
      "53913 PUT      reg25[1] = 48",
      "53917 CALL FUNCTION      PTR: reg23 MEM: reg25",
      "53921 SET      reg2 -> reg22",
      "53924 PUT      reg26[1] = reg22",
      "53928 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "53932 SET      reg2 -> reg19",
      "53935 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53938 JUMP      53947",
      "53947 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53950 NEW ARRAY      2 -> reg21",
      "53953 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53956 PUT      reg21[0] = reg23",
      "53960 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53963 NEW ARRAY      2 -> reg33",
      "53966 NEW ARRAY      2 -> reg38",
      "53969 PUT      reg38[0] = 0",
      "53973 PUSH MEMORY ELEMENT IF INIT      2050 -> reg26",
      "53976 GET      reg26[charCodeAt] -> reg40",
      "53982 NEW ARRAY      1 -> reg35",
      "53985 PUSH MEMORY ELEMENT IF INIT      2060 -> reg44",
      "53988 ADD      reg445-> reg42",
      "53992 PUT      reg35[0] = reg42",
      "53996 CALL FUNCTION      OBJ: reg26 FUNC: reg40 ARGS: reg35",
      "54000 SET      reg2 -> reg39",
      "54003 PUT      reg38[1] = reg39",
      "54007 PUT      reg33[0] = reg38",
      "54011 PUT      reg33[1] = 40",
      "54015 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54019 SET      reg2 -> reg23",
      "54022 PUT      reg21[1] = reg23",
      "54026 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54030 SET      reg2 -> reg19",
      "54033 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54036 JUMP      54045",
      "54045 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "54048 NEW ARRAY      2 -> reg21",
      "54051 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54054 PUT      reg21[0] = reg23",
      "54058 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54061 NEW ARRAY      2 -> reg33",
      "54064 NEW ARRAY      2 -> reg38",
      "54067 PUT      reg38[0] = 0",
      "54071 PUSH MEMORY ELEMENT IF INIT      2050 -> reg39",
      "54074 GET      reg39[charCodeAt] -> reg42",
      "54080 NEW ARRAY      1 -> reg41",
      "54083 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "54086 ADD      reg404-> reg43",
      "54090 PUT      reg41[0] = reg43",
      "54094 CALL FUNCTION      OBJ: reg39 FUNC: reg42 ARGS: reg41",
      "54098 SET      reg2 -> reg35",
      "54101 PUT      reg38[1] = reg35",
      "54105 PUT      reg33[0] = reg38",
      "54109 PUT      reg33[1] = 32",
      "54113 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54117 SET      reg2 -> reg23",
      "54120 PUT      reg21[1] = reg23",
      "54124 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54128 SET      reg2 -> reg19",
      "54131 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54134 JUMP      54143",
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "53060": [
      "53060 EQUAL      reg4 == 14 -> reg21",
      "53064 JUMP IF FALSE      reg21 TO: 53158 | 53067"
  ],
  "53067": [
      "53067 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53070 NEW ARRAY      2 -> reg23",
      "53073 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53076 PUT      reg23[0] = reg22",
      "53080 PUSH MEMORY ELEMENT IF INIT      1848 -> reg22",
      "53083 NEW ARRAY      2 -> reg26",
      "53086 NEW ARRAY      2 -> reg28",
      "53089 PUT      reg28[0] = 0",
      "53093 PUSH MEMORY ELEMENT IF INIT      2050 -> reg29",
      "53096 GET      reg29[charCodeAt] -> reg30",
      "53102 NEW ARRAY      1 -> reg32",
      "53105 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53108 ADD      reg3313-> reg34",
      "53112 PUT      reg32[0] = reg34",
      "53116 CALL FUNCTION      OBJ: reg29 FUNC: reg30 ARGS: reg32",
      "53120 SET      reg2 -> reg27",
      "53123 PUT      reg28[1] = reg27",
      "53127 PUT      reg26[0] = reg28",
      "53131 PUT      reg26[1] = 40",
      "53135 CALL FUNCTION      PTR: reg22 MEM: reg26",
      "53139 SET      reg2 -> reg25",
      "53142 PUT      reg23[1] = reg25",
      "53146 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53150 SET      reg2 -> reg19",
      "53153 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53156 JUMP      53165",
      "53165 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53168 NEW ARRAY      2 -> reg21",
      "53171 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53174 PUT      reg21[0] = reg26",
      "53178 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53181 NEW ARRAY      2 -> reg27",
      "53184 NEW ARRAY      2 -> reg26",
      "53187 PUT      reg26[0] = 0",
      "53191 PUSH MEMORY ELEMENT IF INIT      2050 -> reg28",
      "53194 GET      reg28[charCodeAt] -> reg30",
      "53200 NEW ARRAY      1 -> reg34",
      "53203 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53206 ADD      reg3312-> reg35",
      "53210 PUT      reg34[0] = reg35",
      "53214 CALL FUNCTION      OBJ: reg28 FUNC: reg30 ARGS: reg34",
      "53218 SET      reg2 -> reg32",
      "53221 PUT      reg26[1] = reg32",
      "53225 PUT      reg27[0] = reg26",
      "53229 PUT      reg27[1] = 32",
      "53233 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "53237 SET      reg2 -> reg23",
      "53240 PUT      reg21[1] = reg23",
      "53244 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "53248 SET      reg2 -> reg19",
      "53251 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53254 JUMP      53263",
      "53263 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "53266 NEW ARRAY      2 -> reg22",
      "53269 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53272 PUT      reg22[0] = reg23",
      "53276 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53279 NEW ARRAY      2 -> reg26",
      "53282 NEW ARRAY      2 -> reg30",
      "53285 PUT      reg30[0] = 0",
      "53289 PUSH MEMORY ELEMENT IF INIT      2050 -> reg34",
      "53292 GET      reg34[charCodeAt] -> reg27",
      "53298 NEW ARRAY      1 -> reg36",
      "53301 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53304 ADD      reg3311-> reg35",
      "53308 PUT      reg36[0] = reg35",
      "53312 CALL FUNCTION      OBJ: reg34 FUNC: reg27 ARGS: reg36",
      "53316 SET      reg2 -> reg32",
      "53319 PUT      reg30[1] = reg32",
      "53323 PUT      reg26[0] = reg30",
      "53327 PUT      reg26[1] = 24",
      "53331 CALL FUNCTION      PTR: reg25 MEM: reg26",
      "53335 SET      reg2 -> reg23",
      "53338 PUT      reg22[1] = reg23",
      "53342 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "53346 SET      reg2 -> reg21",
      "53349 SET MEMORY ELEMENT IF INIT      2057 = reg21",
      "53352 JUMP      53361",
      "53361 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53364 NEW ARRAY      2 -> reg25",
      "53367 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53370 PUT      reg25[0] = reg22",
      "53374 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53377 NEW ARRAY      2 -> reg26",
      "53380 NEW ARRAY      2 -> reg30",
      "53383 PUT      reg30[0] = 0",
      "53387 PUSH MEMORY ELEMENT IF INIT      2050 -> reg32",
      "53390 GET      reg32[charCodeAt] -> reg33",
      "53396 NEW ARRAY      1 -> reg35",
      "53399 PUSH MEMORY ELEMENT IF INIT      2060 -> reg37",
      "53402 ADD      reg3710-> reg39",
      "53406 PUT      reg35[0] = reg39",
      "53410 CALL FUNCTION      OBJ: reg32 FUNC: reg33 ARGS: reg35",
      "53414 SET      reg2 -> reg27",
      "53417 PUT      reg30[1] = reg27",
      "53421 PUT      reg26[0] = reg30",
      "53425 PUT      reg26[1] = 16",
      "53429 CALL FUNCTION      PTR: reg23 MEM: reg26",
      "53433 SET      reg2 -> reg22",
      "53436 PUT      reg25[1] = reg22",
      "53440 CALL FUNCTION      PTR: reg21 MEM: reg25",
      "53444 SET      reg2 -> reg19",
      "53447 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53450 JUMP      53459",
      "53459 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53462 NEW ARRAY      2 -> reg22",
      "53465 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53468 PUT      reg22[0] = reg26",
      "53472 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53475 NEW ARRAY      2 -> reg27",
      "53478 NEW ARRAY      2 -> reg26",
      "53481 PUT      reg26[0] = 0",
      "53485 PUSH MEMORY ELEMENT IF INIT      2050 -> reg30",
      "53488 GET      reg30[charCodeAt] -> reg37",
      "53494 NEW ARRAY      1 -> reg36",
      "53497 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53500 ADD      reg389-> reg35",
      "53504 PUT      reg36[0] = reg35",
      "53508 CALL FUNCTION      OBJ: reg30 FUNC: reg37 ARGS: reg36",
      "53512 SET      reg2 -> reg33",
      "53515 PUT      reg26[1] = reg33",
      "53519 PUT      reg27[0] = reg26",
      "53523 PUT      reg27[1] = 8",
      "53527 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "53531 SET      reg2 -> reg23",
      "53534 PUT      reg22[1] = reg23",
      "53538 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53542 SET      reg2 -> reg19",
      "53545 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53548 JUMP      53557",
      "53557 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53560 NEW ARRAY      2 -> reg23",
      "53563 PUSH MEMORY ELEMENT IF INIT      2057 -> reg21",
      "53566 PUT      reg23[0] = reg21",
      "53570 NEW ARRAY      2 -> reg21",
      "53573 PUT      reg21[0] = 0",
      "53577 PUSH MEMORY ELEMENT IF INIT      2050 -> reg27",
      "53580 GET      reg27[charCodeAt] -> reg25",
      "53586 NEW ARRAY      1 -> reg35",
      "53589 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53592 ADD      reg338-> reg36",
      "53596 PUT      reg35[0] = reg36",
      "53600 CALL FUNCTION      OBJ: reg27 FUNC: reg25 ARGS: reg35",
      "53604 SET      reg2 -> reg26",
      "53607 PUT      reg21[1] = reg26",
      "53611 PUT      reg23[1] = reg21",
      "53615 CALL FUNCTION      PTR: reg22 MEM: reg23",
      "53619 SET      reg2 -> reg19",
      "53622 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53625 PUSH MEMORY ELEMENT IF INIT      1846 -> reg22",
      "53628 NEW ARRAY      2 -> reg19",
      "53631 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53634 PUT      reg19[0] = reg23",
      "53638 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "53641 PUT      reg19[1] = reg23",
      "53645 CALL FUNCTION      PTR: reg22 MEM: reg19",
      "53649 SET      reg2 -> reg21",
      "53652 SET MEMORY ELEMENT IF INIT      2057 = reg21",
      "53655 PUSH MEMORY ELEMENT IF INIT      1847 -> reg21",
      "53658 NEW ARRAY      2 -> reg22",
      "53661 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53664 PUT      reg22[0] = reg26",
      "53668 PUT      reg22[1] = 33",
      "53672 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53676 SET      reg2 -> reg19",
      "53679 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53682 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "53685 NEW ARRAY      2 -> reg23",
      "53688 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53691 PUT      reg23[0] = reg22",
      "53695 PUSH MEMORY ELEMENT IF INIT      2058 -> reg26",
      "53698 PUT      reg23[1] = reg26",
      "53702 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53706 SET      reg2 -> reg19",
      "53709 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53712 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53715 NEW ARRAY      2 -> reg19",
      "53718 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "53721 PUT      reg19[0] = reg25",
      "53725 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53728 PUT      reg19[1] = reg23",
      "53732 CALL FUNCTION      PTR: reg21 MEM: reg19",
      "53736 SET      reg2 -> reg22",
      "53739 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "53742 JUMP      53751",
      "53751 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53754 NEW ARRAY      2 -> reg23",
      "53757 PUSH MEMORY ELEMENT IF INIT      2056 -> reg22",
      "53760 PUT      reg23[0] = reg22",
      "53764 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "53767 NEW ARRAY      2 -> reg25",
      "53770 NEW ARRAY      2 -> reg26",
      "53773 PUT      reg26[0] = 0",
      "53777 PUSH MEMORY ELEMENT IF INIT      2050 -> reg36",
      "53780 GET      reg36[charCodeAt] -> reg37",
      "53786 NEW ARRAY      1 -> reg40",
      "53789 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53792 ADD      reg387-> reg39",
      "53796 PUT      reg40[0] = reg39",
      "53800 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg40",
      "53804 SET      reg2 -> reg35",
      "53807 PUT      reg26[1] = reg35",
      "53811 PUT      reg25[0] = reg26",
      "53815 PUT      reg25[1] = 56",
      "53819 CALL FUNCTION      PTR: reg33 MEM: reg25",
      "53823 SET      reg2 -> reg22",
      "53826 PUT      reg23[1] = reg22",
      "53830 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53834 SET      reg2 -> reg19",
      "53837 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53840 JUMP      53849",
      "53849 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53852 NEW ARRAY      2 -> reg26",
      "53855 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53858 PUT      reg26[0] = reg23",
      "53862 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53865 NEW ARRAY      2 -> reg25",
      "53868 NEW ARRAY      2 -> reg33",
      "53871 PUT      reg33[0] = 0",
      "53875 PUSH MEMORY ELEMENT IF INIT      2050 -> reg37",
      "53878 GET      reg37[charCodeAt] -> reg39",
      "53884 NEW ARRAY      1 -> reg38",
      "53887 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "53890 ADD      reg406-> reg42",
      "53894 PUT      reg38[0] = reg42",
      "53898 CALL FUNCTION      OBJ: reg37 FUNC: reg39 ARGS: reg38",
      "53902 SET      reg2 -> reg35",
      "53905 PUT      reg33[1] = reg35",
      "53909 PUT      reg25[0] = reg33",
      "53913 PUT      reg25[1] = 48",
      "53917 CALL FUNCTION      PTR: reg23 MEM: reg25",
      "53921 SET      reg2 -> reg22",
      "53924 PUT      reg26[1] = reg22",
      "53928 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "53932 SET      reg2 -> reg19",
      "53935 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53938 JUMP      53947",
      "53947 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53950 NEW ARRAY      2 -> reg21",
      "53953 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53956 PUT      reg21[0] = reg23",
      "53960 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53963 NEW ARRAY      2 -> reg33",
      "53966 NEW ARRAY      2 -> reg38",
      "53969 PUT      reg38[0] = 0",
      "53973 PUSH MEMORY ELEMENT IF INIT      2050 -> reg26",
      "53976 GET      reg26[charCodeAt] -> reg40",
      "53982 NEW ARRAY      1 -> reg35",
      "53985 PUSH MEMORY ELEMENT IF INIT      2060 -> reg44",
      "53988 ADD      reg445-> reg42",
      "53992 PUT      reg35[0] = reg42",
      "53996 CALL FUNCTION      OBJ: reg26 FUNC: reg40 ARGS: reg35",
      "54000 SET      reg2 -> reg39",
      "54003 PUT      reg38[1] = reg39",
      "54007 PUT      reg33[0] = reg38",
      "54011 PUT      reg33[1] = 40",
      "54015 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54019 SET      reg2 -> reg23",
      "54022 PUT      reg21[1] = reg23",
      "54026 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54030 SET      reg2 -> reg19",
      "54033 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54036 JUMP      54045",
      "54045 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "54048 NEW ARRAY      2 -> reg21",
      "54051 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54054 PUT      reg21[0] = reg23",
      "54058 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54061 NEW ARRAY      2 -> reg33",
      "54064 NEW ARRAY      2 -> reg38",
      "54067 PUT      reg38[0] = 0",
      "54071 PUSH MEMORY ELEMENT IF INIT      2050 -> reg39",
      "54074 GET      reg39[charCodeAt] -> reg42",
      "54080 NEW ARRAY      1 -> reg41",
      "54083 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "54086 ADD      reg404-> reg43",
      "54090 PUT      reg41[0] = reg43",
      "54094 CALL FUNCTION      OBJ: reg39 FUNC: reg42 ARGS: reg41",
      "54098 SET      reg2 -> reg35",
      "54101 PUT      reg38[1] = reg35",
      "54105 PUT      reg33[0] = reg38",
      "54109 PUT      reg33[1] = 32",
      "54113 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54117 SET      reg2 -> reg23",
      "54120 PUT      reg21[1] = reg23",
      "54124 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54128 SET      reg2 -> reg19",
      "54131 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54134 JUMP      54143",
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "53158": [
      "53158 EQUAL      reg4 == 13 -> reg19",
      "53162 JUMP IF FALSE      reg19 TO: 53256 | 53165"
  ],
  "53165": [
      "53165 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53168 NEW ARRAY      2 -> reg21",
      "53171 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53174 PUT      reg21[0] = reg26",
      "53178 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53181 NEW ARRAY      2 -> reg27",
      "53184 NEW ARRAY      2 -> reg26",
      "53187 PUT      reg26[0] = 0",
      "53191 PUSH MEMORY ELEMENT IF INIT      2050 -> reg28",
      "53194 GET      reg28[charCodeAt] -> reg30",
      "53200 NEW ARRAY      1 -> reg34",
      "53203 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53206 ADD      reg3312-> reg35",
      "53210 PUT      reg34[0] = reg35",
      "53214 CALL FUNCTION      OBJ: reg28 FUNC: reg30 ARGS: reg34",
      "53218 SET      reg2 -> reg32",
      "53221 PUT      reg26[1] = reg32",
      "53225 PUT      reg27[0] = reg26",
      "53229 PUT      reg27[1] = 32",
      "53233 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "53237 SET      reg2 -> reg23",
      "53240 PUT      reg21[1] = reg23",
      "53244 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "53248 SET      reg2 -> reg19",
      "53251 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53254 JUMP      53263",
      "53263 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "53266 NEW ARRAY      2 -> reg22",
      "53269 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53272 PUT      reg22[0] = reg23",
      "53276 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53279 NEW ARRAY      2 -> reg26",
      "53282 NEW ARRAY      2 -> reg30",
      "53285 PUT      reg30[0] = 0",
      "53289 PUSH MEMORY ELEMENT IF INIT      2050 -> reg34",
      "53292 GET      reg34[charCodeAt] -> reg27",
      "53298 NEW ARRAY      1 -> reg36",
      "53301 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53304 ADD      reg3311-> reg35",
      "53308 PUT      reg36[0] = reg35",
      "53312 CALL FUNCTION      OBJ: reg34 FUNC: reg27 ARGS: reg36",
      "53316 SET      reg2 -> reg32",
      "53319 PUT      reg30[1] = reg32",
      "53323 PUT      reg26[0] = reg30",
      "53327 PUT      reg26[1] = 24",
      "53331 CALL FUNCTION      PTR: reg25 MEM: reg26",
      "53335 SET      reg2 -> reg23",
      "53338 PUT      reg22[1] = reg23",
      "53342 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "53346 SET      reg2 -> reg21",
      "53349 SET MEMORY ELEMENT IF INIT      2057 = reg21",
      "53352 JUMP      53361",
      "53361 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53364 NEW ARRAY      2 -> reg25",
      "53367 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53370 PUT      reg25[0] = reg22",
      "53374 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53377 NEW ARRAY      2 -> reg26",
      "53380 NEW ARRAY      2 -> reg30",
      "53383 PUT      reg30[0] = 0",
      "53387 PUSH MEMORY ELEMENT IF INIT      2050 -> reg32",
      "53390 GET      reg32[charCodeAt] -> reg33",
      "53396 NEW ARRAY      1 -> reg35",
      "53399 PUSH MEMORY ELEMENT IF INIT      2060 -> reg37",
      "53402 ADD      reg3710-> reg39",
      "53406 PUT      reg35[0] = reg39",
      "53410 CALL FUNCTION      OBJ: reg32 FUNC: reg33 ARGS: reg35",
      "53414 SET      reg2 -> reg27",
      "53417 PUT      reg30[1] = reg27",
      "53421 PUT      reg26[0] = reg30",
      "53425 PUT      reg26[1] = 16",
      "53429 CALL FUNCTION      PTR: reg23 MEM: reg26",
      "53433 SET      reg2 -> reg22",
      "53436 PUT      reg25[1] = reg22",
      "53440 CALL FUNCTION      PTR: reg21 MEM: reg25",
      "53444 SET      reg2 -> reg19",
      "53447 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53450 JUMP      53459",
      "53459 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53462 NEW ARRAY      2 -> reg22",
      "53465 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53468 PUT      reg22[0] = reg26",
      "53472 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53475 NEW ARRAY      2 -> reg27",
      "53478 NEW ARRAY      2 -> reg26",
      "53481 PUT      reg26[0] = 0",
      "53485 PUSH MEMORY ELEMENT IF INIT      2050 -> reg30",
      "53488 GET      reg30[charCodeAt] -> reg37",
      "53494 NEW ARRAY      1 -> reg36",
      "53497 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53500 ADD      reg389-> reg35",
      "53504 PUT      reg36[0] = reg35",
      "53508 CALL FUNCTION      OBJ: reg30 FUNC: reg37 ARGS: reg36",
      "53512 SET      reg2 -> reg33",
      "53515 PUT      reg26[1] = reg33",
      "53519 PUT      reg27[0] = reg26",
      "53523 PUT      reg27[1] = 8",
      "53527 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "53531 SET      reg2 -> reg23",
      "53534 PUT      reg22[1] = reg23",
      "53538 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53542 SET      reg2 -> reg19",
      "53545 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53548 JUMP      53557",
      "53557 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53560 NEW ARRAY      2 -> reg23",
      "53563 PUSH MEMORY ELEMENT IF INIT      2057 -> reg21",
      "53566 PUT      reg23[0] = reg21",
      "53570 NEW ARRAY      2 -> reg21",
      "53573 PUT      reg21[0] = 0",
      "53577 PUSH MEMORY ELEMENT IF INIT      2050 -> reg27",
      "53580 GET      reg27[charCodeAt] -> reg25",
      "53586 NEW ARRAY      1 -> reg35",
      "53589 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53592 ADD      reg338-> reg36",
      "53596 PUT      reg35[0] = reg36",
      "53600 CALL FUNCTION      OBJ: reg27 FUNC: reg25 ARGS: reg35",
      "53604 SET      reg2 -> reg26",
      "53607 PUT      reg21[1] = reg26",
      "53611 PUT      reg23[1] = reg21",
      "53615 CALL FUNCTION      PTR: reg22 MEM: reg23",
      "53619 SET      reg2 -> reg19",
      "53622 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53625 PUSH MEMORY ELEMENT IF INIT      1846 -> reg22",
      "53628 NEW ARRAY      2 -> reg19",
      "53631 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53634 PUT      reg19[0] = reg23",
      "53638 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "53641 PUT      reg19[1] = reg23",
      "53645 CALL FUNCTION      PTR: reg22 MEM: reg19",
      "53649 SET      reg2 -> reg21",
      "53652 SET MEMORY ELEMENT IF INIT      2057 = reg21",
      "53655 PUSH MEMORY ELEMENT IF INIT      1847 -> reg21",
      "53658 NEW ARRAY      2 -> reg22",
      "53661 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53664 PUT      reg22[0] = reg26",
      "53668 PUT      reg22[1] = 33",
      "53672 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53676 SET      reg2 -> reg19",
      "53679 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53682 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "53685 NEW ARRAY      2 -> reg23",
      "53688 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53691 PUT      reg23[0] = reg22",
      "53695 PUSH MEMORY ELEMENT IF INIT      2058 -> reg26",
      "53698 PUT      reg23[1] = reg26",
      "53702 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53706 SET      reg2 -> reg19",
      "53709 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53712 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53715 NEW ARRAY      2 -> reg19",
      "53718 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "53721 PUT      reg19[0] = reg25",
      "53725 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53728 PUT      reg19[1] = reg23",
      "53732 CALL FUNCTION      PTR: reg21 MEM: reg19",
      "53736 SET      reg2 -> reg22",
      "53739 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "53742 JUMP      53751",
      "53751 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53754 NEW ARRAY      2 -> reg23",
      "53757 PUSH MEMORY ELEMENT IF INIT      2056 -> reg22",
      "53760 PUT      reg23[0] = reg22",
      "53764 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "53767 NEW ARRAY      2 -> reg25",
      "53770 NEW ARRAY      2 -> reg26",
      "53773 PUT      reg26[0] = 0",
      "53777 PUSH MEMORY ELEMENT IF INIT      2050 -> reg36",
      "53780 GET      reg36[charCodeAt] -> reg37",
      "53786 NEW ARRAY      1 -> reg40",
      "53789 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53792 ADD      reg387-> reg39",
      "53796 PUT      reg40[0] = reg39",
      "53800 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg40",
      "53804 SET      reg2 -> reg35",
      "53807 PUT      reg26[1] = reg35",
      "53811 PUT      reg25[0] = reg26",
      "53815 PUT      reg25[1] = 56",
      "53819 CALL FUNCTION      PTR: reg33 MEM: reg25",
      "53823 SET      reg2 -> reg22",
      "53826 PUT      reg23[1] = reg22",
      "53830 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53834 SET      reg2 -> reg19",
      "53837 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53840 JUMP      53849",
      "53849 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53852 NEW ARRAY      2 -> reg26",
      "53855 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53858 PUT      reg26[0] = reg23",
      "53862 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53865 NEW ARRAY      2 -> reg25",
      "53868 NEW ARRAY      2 -> reg33",
      "53871 PUT      reg33[0] = 0",
      "53875 PUSH MEMORY ELEMENT IF INIT      2050 -> reg37",
      "53878 GET      reg37[charCodeAt] -> reg39",
      "53884 NEW ARRAY      1 -> reg38",
      "53887 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "53890 ADD      reg406-> reg42",
      "53894 PUT      reg38[0] = reg42",
      "53898 CALL FUNCTION      OBJ: reg37 FUNC: reg39 ARGS: reg38",
      "53902 SET      reg2 -> reg35",
      "53905 PUT      reg33[1] = reg35",
      "53909 PUT      reg25[0] = reg33",
      "53913 PUT      reg25[1] = 48",
      "53917 CALL FUNCTION      PTR: reg23 MEM: reg25",
      "53921 SET      reg2 -> reg22",
      "53924 PUT      reg26[1] = reg22",
      "53928 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "53932 SET      reg2 -> reg19",
      "53935 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53938 JUMP      53947",
      "53947 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53950 NEW ARRAY      2 -> reg21",
      "53953 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53956 PUT      reg21[0] = reg23",
      "53960 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53963 NEW ARRAY      2 -> reg33",
      "53966 NEW ARRAY      2 -> reg38",
      "53969 PUT      reg38[0] = 0",
      "53973 PUSH MEMORY ELEMENT IF INIT      2050 -> reg26",
      "53976 GET      reg26[charCodeAt] -> reg40",
      "53982 NEW ARRAY      1 -> reg35",
      "53985 PUSH MEMORY ELEMENT IF INIT      2060 -> reg44",
      "53988 ADD      reg445-> reg42",
      "53992 PUT      reg35[0] = reg42",
      "53996 CALL FUNCTION      OBJ: reg26 FUNC: reg40 ARGS: reg35",
      "54000 SET      reg2 -> reg39",
      "54003 PUT      reg38[1] = reg39",
      "54007 PUT      reg33[0] = reg38",
      "54011 PUT      reg33[1] = 40",
      "54015 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54019 SET      reg2 -> reg23",
      "54022 PUT      reg21[1] = reg23",
      "54026 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54030 SET      reg2 -> reg19",
      "54033 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54036 JUMP      54045",
      "54045 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "54048 NEW ARRAY      2 -> reg21",
      "54051 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54054 PUT      reg21[0] = reg23",
      "54058 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54061 NEW ARRAY      2 -> reg33",
      "54064 NEW ARRAY      2 -> reg38",
      "54067 PUT      reg38[0] = 0",
      "54071 PUSH MEMORY ELEMENT IF INIT      2050 -> reg39",
      "54074 GET      reg39[charCodeAt] -> reg42",
      "54080 NEW ARRAY      1 -> reg41",
      "54083 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "54086 ADD      reg404-> reg43",
      "54090 PUT      reg41[0] = reg43",
      "54094 CALL FUNCTION      OBJ: reg39 FUNC: reg42 ARGS: reg41",
      "54098 SET      reg2 -> reg35",
      "54101 PUT      reg38[1] = reg35",
      "54105 PUT      reg33[0] = reg38",
      "54109 PUT      reg33[1] = 32",
      "54113 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54117 SET      reg2 -> reg23",
      "54120 PUT      reg21[1] = reg23",
      "54124 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54128 SET      reg2 -> reg19",
      "54131 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54134 JUMP      54143",
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "53256": [
      "53256 EQUAL      reg4 == 12 -> reg19",
      "53260 JUMP IF FALSE      reg19 TO: 53354 | 53263"
  ],
  "53263": [
      "53263 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "53266 NEW ARRAY      2 -> reg22",
      "53269 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53272 PUT      reg22[0] = reg23",
      "53276 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53279 NEW ARRAY      2 -> reg26",
      "53282 NEW ARRAY      2 -> reg30",
      "53285 PUT      reg30[0] = 0",
      "53289 PUSH MEMORY ELEMENT IF INIT      2050 -> reg34",
      "53292 GET      reg34[charCodeAt] -> reg27",
      "53298 NEW ARRAY      1 -> reg36",
      "53301 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53304 ADD      reg3311-> reg35",
      "53308 PUT      reg36[0] = reg35",
      "53312 CALL FUNCTION      OBJ: reg34 FUNC: reg27 ARGS: reg36",
      "53316 SET      reg2 -> reg32",
      "53319 PUT      reg30[1] = reg32",
      "53323 PUT      reg26[0] = reg30",
      "53327 PUT      reg26[1] = 24",
      "53331 CALL FUNCTION      PTR: reg25 MEM: reg26",
      "53335 SET      reg2 -> reg23",
      "53338 PUT      reg22[1] = reg23",
      "53342 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "53346 SET      reg2 -> reg21",
      "53349 SET MEMORY ELEMENT IF INIT      2057 = reg21",
      "53352 JUMP      53361",
      "53361 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53364 NEW ARRAY      2 -> reg25",
      "53367 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53370 PUT      reg25[0] = reg22",
      "53374 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53377 NEW ARRAY      2 -> reg26",
      "53380 NEW ARRAY      2 -> reg30",
      "53383 PUT      reg30[0] = 0",
      "53387 PUSH MEMORY ELEMENT IF INIT      2050 -> reg32",
      "53390 GET      reg32[charCodeAt] -> reg33",
      "53396 NEW ARRAY      1 -> reg35",
      "53399 PUSH MEMORY ELEMENT IF INIT      2060 -> reg37",
      "53402 ADD      reg3710-> reg39",
      "53406 PUT      reg35[0] = reg39",
      "53410 CALL FUNCTION      OBJ: reg32 FUNC: reg33 ARGS: reg35",
      "53414 SET      reg2 -> reg27",
      "53417 PUT      reg30[1] = reg27",
      "53421 PUT      reg26[0] = reg30",
      "53425 PUT      reg26[1] = 16",
      "53429 CALL FUNCTION      PTR: reg23 MEM: reg26",
      "53433 SET      reg2 -> reg22",
      "53436 PUT      reg25[1] = reg22",
      "53440 CALL FUNCTION      PTR: reg21 MEM: reg25",
      "53444 SET      reg2 -> reg19",
      "53447 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53450 JUMP      53459",
      "53459 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53462 NEW ARRAY      2 -> reg22",
      "53465 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53468 PUT      reg22[0] = reg26",
      "53472 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53475 NEW ARRAY      2 -> reg27",
      "53478 NEW ARRAY      2 -> reg26",
      "53481 PUT      reg26[0] = 0",
      "53485 PUSH MEMORY ELEMENT IF INIT      2050 -> reg30",
      "53488 GET      reg30[charCodeAt] -> reg37",
      "53494 NEW ARRAY      1 -> reg36",
      "53497 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53500 ADD      reg389-> reg35",
      "53504 PUT      reg36[0] = reg35",
      "53508 CALL FUNCTION      OBJ: reg30 FUNC: reg37 ARGS: reg36",
      "53512 SET      reg2 -> reg33",
      "53515 PUT      reg26[1] = reg33",
      "53519 PUT      reg27[0] = reg26",
      "53523 PUT      reg27[1] = 8",
      "53527 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "53531 SET      reg2 -> reg23",
      "53534 PUT      reg22[1] = reg23",
      "53538 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53542 SET      reg2 -> reg19",
      "53545 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53548 JUMP      53557",
      "53557 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53560 NEW ARRAY      2 -> reg23",
      "53563 PUSH MEMORY ELEMENT IF INIT      2057 -> reg21",
      "53566 PUT      reg23[0] = reg21",
      "53570 NEW ARRAY      2 -> reg21",
      "53573 PUT      reg21[0] = 0",
      "53577 PUSH MEMORY ELEMENT IF INIT      2050 -> reg27",
      "53580 GET      reg27[charCodeAt] -> reg25",
      "53586 NEW ARRAY      1 -> reg35",
      "53589 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53592 ADD      reg338-> reg36",
      "53596 PUT      reg35[0] = reg36",
      "53600 CALL FUNCTION      OBJ: reg27 FUNC: reg25 ARGS: reg35",
      "53604 SET      reg2 -> reg26",
      "53607 PUT      reg21[1] = reg26",
      "53611 PUT      reg23[1] = reg21",
      "53615 CALL FUNCTION      PTR: reg22 MEM: reg23",
      "53619 SET      reg2 -> reg19",
      "53622 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53625 PUSH MEMORY ELEMENT IF INIT      1846 -> reg22",
      "53628 NEW ARRAY      2 -> reg19",
      "53631 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53634 PUT      reg19[0] = reg23",
      "53638 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "53641 PUT      reg19[1] = reg23",
      "53645 CALL FUNCTION      PTR: reg22 MEM: reg19",
      "53649 SET      reg2 -> reg21",
      "53652 SET MEMORY ELEMENT IF INIT      2057 = reg21",
      "53655 PUSH MEMORY ELEMENT IF INIT      1847 -> reg21",
      "53658 NEW ARRAY      2 -> reg22",
      "53661 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53664 PUT      reg22[0] = reg26",
      "53668 PUT      reg22[1] = 33",
      "53672 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53676 SET      reg2 -> reg19",
      "53679 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53682 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "53685 NEW ARRAY      2 -> reg23",
      "53688 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53691 PUT      reg23[0] = reg22",
      "53695 PUSH MEMORY ELEMENT IF INIT      2058 -> reg26",
      "53698 PUT      reg23[1] = reg26",
      "53702 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53706 SET      reg2 -> reg19",
      "53709 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53712 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53715 NEW ARRAY      2 -> reg19",
      "53718 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "53721 PUT      reg19[0] = reg25",
      "53725 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53728 PUT      reg19[1] = reg23",
      "53732 CALL FUNCTION      PTR: reg21 MEM: reg19",
      "53736 SET      reg2 -> reg22",
      "53739 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "53742 JUMP      53751",
      "53751 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53754 NEW ARRAY      2 -> reg23",
      "53757 PUSH MEMORY ELEMENT IF INIT      2056 -> reg22",
      "53760 PUT      reg23[0] = reg22",
      "53764 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "53767 NEW ARRAY      2 -> reg25",
      "53770 NEW ARRAY      2 -> reg26",
      "53773 PUT      reg26[0] = 0",
      "53777 PUSH MEMORY ELEMENT IF INIT      2050 -> reg36",
      "53780 GET      reg36[charCodeAt] -> reg37",
      "53786 NEW ARRAY      1 -> reg40",
      "53789 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53792 ADD      reg387-> reg39",
      "53796 PUT      reg40[0] = reg39",
      "53800 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg40",
      "53804 SET      reg2 -> reg35",
      "53807 PUT      reg26[1] = reg35",
      "53811 PUT      reg25[0] = reg26",
      "53815 PUT      reg25[1] = 56",
      "53819 CALL FUNCTION      PTR: reg33 MEM: reg25",
      "53823 SET      reg2 -> reg22",
      "53826 PUT      reg23[1] = reg22",
      "53830 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53834 SET      reg2 -> reg19",
      "53837 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53840 JUMP      53849",
      "53849 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53852 NEW ARRAY      2 -> reg26",
      "53855 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53858 PUT      reg26[0] = reg23",
      "53862 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53865 NEW ARRAY      2 -> reg25",
      "53868 NEW ARRAY      2 -> reg33",
      "53871 PUT      reg33[0] = 0",
      "53875 PUSH MEMORY ELEMENT IF INIT      2050 -> reg37",
      "53878 GET      reg37[charCodeAt] -> reg39",
      "53884 NEW ARRAY      1 -> reg38",
      "53887 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "53890 ADD      reg406-> reg42",
      "53894 PUT      reg38[0] = reg42",
      "53898 CALL FUNCTION      OBJ: reg37 FUNC: reg39 ARGS: reg38",
      "53902 SET      reg2 -> reg35",
      "53905 PUT      reg33[1] = reg35",
      "53909 PUT      reg25[0] = reg33",
      "53913 PUT      reg25[1] = 48",
      "53917 CALL FUNCTION      PTR: reg23 MEM: reg25",
      "53921 SET      reg2 -> reg22",
      "53924 PUT      reg26[1] = reg22",
      "53928 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "53932 SET      reg2 -> reg19",
      "53935 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53938 JUMP      53947",
      "53947 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53950 NEW ARRAY      2 -> reg21",
      "53953 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53956 PUT      reg21[0] = reg23",
      "53960 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53963 NEW ARRAY      2 -> reg33",
      "53966 NEW ARRAY      2 -> reg38",
      "53969 PUT      reg38[0] = 0",
      "53973 PUSH MEMORY ELEMENT IF INIT      2050 -> reg26",
      "53976 GET      reg26[charCodeAt] -> reg40",
      "53982 NEW ARRAY      1 -> reg35",
      "53985 PUSH MEMORY ELEMENT IF INIT      2060 -> reg44",
      "53988 ADD      reg445-> reg42",
      "53992 PUT      reg35[0] = reg42",
      "53996 CALL FUNCTION      OBJ: reg26 FUNC: reg40 ARGS: reg35",
      "54000 SET      reg2 -> reg39",
      "54003 PUT      reg38[1] = reg39",
      "54007 PUT      reg33[0] = reg38",
      "54011 PUT      reg33[1] = 40",
      "54015 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54019 SET      reg2 -> reg23",
      "54022 PUT      reg21[1] = reg23",
      "54026 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54030 SET      reg2 -> reg19",
      "54033 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54036 JUMP      54045",
      "54045 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "54048 NEW ARRAY      2 -> reg21",
      "54051 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54054 PUT      reg21[0] = reg23",
      "54058 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54061 NEW ARRAY      2 -> reg33",
      "54064 NEW ARRAY      2 -> reg38",
      "54067 PUT      reg38[0] = 0",
      "54071 PUSH MEMORY ELEMENT IF INIT      2050 -> reg39",
      "54074 GET      reg39[charCodeAt] -> reg42",
      "54080 NEW ARRAY      1 -> reg41",
      "54083 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "54086 ADD      reg404-> reg43",
      "54090 PUT      reg41[0] = reg43",
      "54094 CALL FUNCTION      OBJ: reg39 FUNC: reg42 ARGS: reg41",
      "54098 SET      reg2 -> reg35",
      "54101 PUT      reg38[1] = reg35",
      "54105 PUT      reg33[0] = reg38",
      "54109 PUT      reg33[1] = 32",
      "54113 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54117 SET      reg2 -> reg23",
      "54120 PUT      reg21[1] = reg23",
      "54124 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54128 SET      reg2 -> reg19",
      "54131 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54134 JUMP      54143",
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "53354": [
      "53354 EQUAL      reg4 == 11 -> reg19",
      "53358 JUMP IF FALSE      reg19 TO: 53452 | 53361"
  ],
  "53361": [
      "53361 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53364 NEW ARRAY      2 -> reg25",
      "53367 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53370 PUT      reg25[0] = reg22",
      "53374 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53377 NEW ARRAY      2 -> reg26",
      "53380 NEW ARRAY      2 -> reg30",
      "53383 PUT      reg30[0] = 0",
      "53387 PUSH MEMORY ELEMENT IF INIT      2050 -> reg32",
      "53390 GET      reg32[charCodeAt] -> reg33",
      "53396 NEW ARRAY      1 -> reg35",
      "53399 PUSH MEMORY ELEMENT IF INIT      2060 -> reg37",
      "53402 ADD      reg3710-> reg39",
      "53406 PUT      reg35[0] = reg39",
      "53410 CALL FUNCTION      OBJ: reg32 FUNC: reg33 ARGS: reg35",
      "53414 SET      reg2 -> reg27",
      "53417 PUT      reg30[1] = reg27",
      "53421 PUT      reg26[0] = reg30",
      "53425 PUT      reg26[1] = 16",
      "53429 CALL FUNCTION      PTR: reg23 MEM: reg26",
      "53433 SET      reg2 -> reg22",
      "53436 PUT      reg25[1] = reg22",
      "53440 CALL FUNCTION      PTR: reg21 MEM: reg25",
      "53444 SET      reg2 -> reg19",
      "53447 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53450 JUMP      53459",
      "53459 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53462 NEW ARRAY      2 -> reg22",
      "53465 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53468 PUT      reg22[0] = reg26",
      "53472 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53475 NEW ARRAY      2 -> reg27",
      "53478 NEW ARRAY      2 -> reg26",
      "53481 PUT      reg26[0] = 0",
      "53485 PUSH MEMORY ELEMENT IF INIT      2050 -> reg30",
      "53488 GET      reg30[charCodeAt] -> reg37",
      "53494 NEW ARRAY      1 -> reg36",
      "53497 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53500 ADD      reg389-> reg35",
      "53504 PUT      reg36[0] = reg35",
      "53508 CALL FUNCTION      OBJ: reg30 FUNC: reg37 ARGS: reg36",
      "53512 SET      reg2 -> reg33",
      "53515 PUT      reg26[1] = reg33",
      "53519 PUT      reg27[0] = reg26",
      "53523 PUT      reg27[1] = 8",
      "53527 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "53531 SET      reg2 -> reg23",
      "53534 PUT      reg22[1] = reg23",
      "53538 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53542 SET      reg2 -> reg19",
      "53545 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53548 JUMP      53557",
      "53557 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53560 NEW ARRAY      2 -> reg23",
      "53563 PUSH MEMORY ELEMENT IF INIT      2057 -> reg21",
      "53566 PUT      reg23[0] = reg21",
      "53570 NEW ARRAY      2 -> reg21",
      "53573 PUT      reg21[0] = 0",
      "53577 PUSH MEMORY ELEMENT IF INIT      2050 -> reg27",
      "53580 GET      reg27[charCodeAt] -> reg25",
      "53586 NEW ARRAY      1 -> reg35",
      "53589 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53592 ADD      reg338-> reg36",
      "53596 PUT      reg35[0] = reg36",
      "53600 CALL FUNCTION      OBJ: reg27 FUNC: reg25 ARGS: reg35",
      "53604 SET      reg2 -> reg26",
      "53607 PUT      reg21[1] = reg26",
      "53611 PUT      reg23[1] = reg21",
      "53615 CALL FUNCTION      PTR: reg22 MEM: reg23",
      "53619 SET      reg2 -> reg19",
      "53622 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53625 PUSH MEMORY ELEMENT IF INIT      1846 -> reg22",
      "53628 NEW ARRAY      2 -> reg19",
      "53631 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53634 PUT      reg19[0] = reg23",
      "53638 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "53641 PUT      reg19[1] = reg23",
      "53645 CALL FUNCTION      PTR: reg22 MEM: reg19",
      "53649 SET      reg2 -> reg21",
      "53652 SET MEMORY ELEMENT IF INIT      2057 = reg21",
      "53655 PUSH MEMORY ELEMENT IF INIT      1847 -> reg21",
      "53658 NEW ARRAY      2 -> reg22",
      "53661 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53664 PUT      reg22[0] = reg26",
      "53668 PUT      reg22[1] = 33",
      "53672 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53676 SET      reg2 -> reg19",
      "53679 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53682 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "53685 NEW ARRAY      2 -> reg23",
      "53688 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53691 PUT      reg23[0] = reg22",
      "53695 PUSH MEMORY ELEMENT IF INIT      2058 -> reg26",
      "53698 PUT      reg23[1] = reg26",
      "53702 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53706 SET      reg2 -> reg19",
      "53709 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53712 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53715 NEW ARRAY      2 -> reg19",
      "53718 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "53721 PUT      reg19[0] = reg25",
      "53725 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53728 PUT      reg19[1] = reg23",
      "53732 CALL FUNCTION      PTR: reg21 MEM: reg19",
      "53736 SET      reg2 -> reg22",
      "53739 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "53742 JUMP      53751",
      "53751 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53754 NEW ARRAY      2 -> reg23",
      "53757 PUSH MEMORY ELEMENT IF INIT      2056 -> reg22",
      "53760 PUT      reg23[0] = reg22",
      "53764 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "53767 NEW ARRAY      2 -> reg25",
      "53770 NEW ARRAY      2 -> reg26",
      "53773 PUT      reg26[0] = 0",
      "53777 PUSH MEMORY ELEMENT IF INIT      2050 -> reg36",
      "53780 GET      reg36[charCodeAt] -> reg37",
      "53786 NEW ARRAY      1 -> reg40",
      "53789 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53792 ADD      reg387-> reg39",
      "53796 PUT      reg40[0] = reg39",
      "53800 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg40",
      "53804 SET      reg2 -> reg35",
      "53807 PUT      reg26[1] = reg35",
      "53811 PUT      reg25[0] = reg26",
      "53815 PUT      reg25[1] = 56",
      "53819 CALL FUNCTION      PTR: reg33 MEM: reg25",
      "53823 SET      reg2 -> reg22",
      "53826 PUT      reg23[1] = reg22",
      "53830 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53834 SET      reg2 -> reg19",
      "53837 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53840 JUMP      53849",
      "53849 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53852 NEW ARRAY      2 -> reg26",
      "53855 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53858 PUT      reg26[0] = reg23",
      "53862 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53865 NEW ARRAY      2 -> reg25",
      "53868 NEW ARRAY      2 -> reg33",
      "53871 PUT      reg33[0] = 0",
      "53875 PUSH MEMORY ELEMENT IF INIT      2050 -> reg37",
      "53878 GET      reg37[charCodeAt] -> reg39",
      "53884 NEW ARRAY      1 -> reg38",
      "53887 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "53890 ADD      reg406-> reg42",
      "53894 PUT      reg38[0] = reg42",
      "53898 CALL FUNCTION      OBJ: reg37 FUNC: reg39 ARGS: reg38",
      "53902 SET      reg2 -> reg35",
      "53905 PUT      reg33[1] = reg35",
      "53909 PUT      reg25[0] = reg33",
      "53913 PUT      reg25[1] = 48",
      "53917 CALL FUNCTION      PTR: reg23 MEM: reg25",
      "53921 SET      reg2 -> reg22",
      "53924 PUT      reg26[1] = reg22",
      "53928 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "53932 SET      reg2 -> reg19",
      "53935 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53938 JUMP      53947",
      "53947 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53950 NEW ARRAY      2 -> reg21",
      "53953 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53956 PUT      reg21[0] = reg23",
      "53960 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53963 NEW ARRAY      2 -> reg33",
      "53966 NEW ARRAY      2 -> reg38",
      "53969 PUT      reg38[0] = 0",
      "53973 PUSH MEMORY ELEMENT IF INIT      2050 -> reg26",
      "53976 GET      reg26[charCodeAt] -> reg40",
      "53982 NEW ARRAY      1 -> reg35",
      "53985 PUSH MEMORY ELEMENT IF INIT      2060 -> reg44",
      "53988 ADD      reg445-> reg42",
      "53992 PUT      reg35[0] = reg42",
      "53996 CALL FUNCTION      OBJ: reg26 FUNC: reg40 ARGS: reg35",
      "54000 SET      reg2 -> reg39",
      "54003 PUT      reg38[1] = reg39",
      "54007 PUT      reg33[0] = reg38",
      "54011 PUT      reg33[1] = 40",
      "54015 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54019 SET      reg2 -> reg23",
      "54022 PUT      reg21[1] = reg23",
      "54026 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54030 SET      reg2 -> reg19",
      "54033 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54036 JUMP      54045",
      "54045 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "54048 NEW ARRAY      2 -> reg21",
      "54051 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54054 PUT      reg21[0] = reg23",
      "54058 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54061 NEW ARRAY      2 -> reg33",
      "54064 NEW ARRAY      2 -> reg38",
      "54067 PUT      reg38[0] = 0",
      "54071 PUSH MEMORY ELEMENT IF INIT      2050 -> reg39",
      "54074 GET      reg39[charCodeAt] -> reg42",
      "54080 NEW ARRAY      1 -> reg41",
      "54083 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "54086 ADD      reg404-> reg43",
      "54090 PUT      reg41[0] = reg43",
      "54094 CALL FUNCTION      OBJ: reg39 FUNC: reg42 ARGS: reg41",
      "54098 SET      reg2 -> reg35",
      "54101 PUT      reg38[1] = reg35",
      "54105 PUT      reg33[0] = reg38",
      "54109 PUT      reg33[1] = 32",
      "54113 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54117 SET      reg2 -> reg23",
      "54120 PUT      reg21[1] = reg23",
      "54124 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54128 SET      reg2 -> reg19",
      "54131 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54134 JUMP      54143",
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "53452": [
      "53452 EQUAL      reg4 == 10 -> reg19",
      "53456 JUMP IF FALSE      reg19 TO: 53550 | 53459"
  ],
  "53459": [
      "53459 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53462 NEW ARRAY      2 -> reg22",
      "53465 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53468 PUT      reg22[0] = reg26",
      "53472 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53475 NEW ARRAY      2 -> reg27",
      "53478 NEW ARRAY      2 -> reg26",
      "53481 PUT      reg26[0] = 0",
      "53485 PUSH MEMORY ELEMENT IF INIT      2050 -> reg30",
      "53488 GET      reg30[charCodeAt] -> reg37",
      "53494 NEW ARRAY      1 -> reg36",
      "53497 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53500 ADD      reg389-> reg35",
      "53504 PUT      reg36[0] = reg35",
      "53508 CALL FUNCTION      OBJ: reg30 FUNC: reg37 ARGS: reg36",
      "53512 SET      reg2 -> reg33",
      "53515 PUT      reg26[1] = reg33",
      "53519 PUT      reg27[0] = reg26",
      "53523 PUT      reg27[1] = 8",
      "53527 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "53531 SET      reg2 -> reg23",
      "53534 PUT      reg22[1] = reg23",
      "53538 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53542 SET      reg2 -> reg19",
      "53545 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53548 JUMP      53557",
      "53557 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53560 NEW ARRAY      2 -> reg23",
      "53563 PUSH MEMORY ELEMENT IF INIT      2057 -> reg21",
      "53566 PUT      reg23[0] = reg21",
      "53570 NEW ARRAY      2 -> reg21",
      "53573 PUT      reg21[0] = 0",
      "53577 PUSH MEMORY ELEMENT IF INIT      2050 -> reg27",
      "53580 GET      reg27[charCodeAt] -> reg25",
      "53586 NEW ARRAY      1 -> reg35",
      "53589 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53592 ADD      reg338-> reg36",
      "53596 PUT      reg35[0] = reg36",
      "53600 CALL FUNCTION      OBJ: reg27 FUNC: reg25 ARGS: reg35",
      "53604 SET      reg2 -> reg26",
      "53607 PUT      reg21[1] = reg26",
      "53611 PUT      reg23[1] = reg21",
      "53615 CALL FUNCTION      PTR: reg22 MEM: reg23",
      "53619 SET      reg2 -> reg19",
      "53622 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53625 PUSH MEMORY ELEMENT IF INIT      1846 -> reg22",
      "53628 NEW ARRAY      2 -> reg19",
      "53631 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53634 PUT      reg19[0] = reg23",
      "53638 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "53641 PUT      reg19[1] = reg23",
      "53645 CALL FUNCTION      PTR: reg22 MEM: reg19",
      "53649 SET      reg2 -> reg21",
      "53652 SET MEMORY ELEMENT IF INIT      2057 = reg21",
      "53655 PUSH MEMORY ELEMENT IF INIT      1847 -> reg21",
      "53658 NEW ARRAY      2 -> reg22",
      "53661 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53664 PUT      reg22[0] = reg26",
      "53668 PUT      reg22[1] = 33",
      "53672 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53676 SET      reg2 -> reg19",
      "53679 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53682 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "53685 NEW ARRAY      2 -> reg23",
      "53688 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53691 PUT      reg23[0] = reg22",
      "53695 PUSH MEMORY ELEMENT IF INIT      2058 -> reg26",
      "53698 PUT      reg23[1] = reg26",
      "53702 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53706 SET      reg2 -> reg19",
      "53709 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53712 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53715 NEW ARRAY      2 -> reg19",
      "53718 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "53721 PUT      reg19[0] = reg25",
      "53725 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53728 PUT      reg19[1] = reg23",
      "53732 CALL FUNCTION      PTR: reg21 MEM: reg19",
      "53736 SET      reg2 -> reg22",
      "53739 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "53742 JUMP      53751",
      "53751 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53754 NEW ARRAY      2 -> reg23",
      "53757 PUSH MEMORY ELEMENT IF INIT      2056 -> reg22",
      "53760 PUT      reg23[0] = reg22",
      "53764 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "53767 NEW ARRAY      2 -> reg25",
      "53770 NEW ARRAY      2 -> reg26",
      "53773 PUT      reg26[0] = 0",
      "53777 PUSH MEMORY ELEMENT IF INIT      2050 -> reg36",
      "53780 GET      reg36[charCodeAt] -> reg37",
      "53786 NEW ARRAY      1 -> reg40",
      "53789 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53792 ADD      reg387-> reg39",
      "53796 PUT      reg40[0] = reg39",
      "53800 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg40",
      "53804 SET      reg2 -> reg35",
      "53807 PUT      reg26[1] = reg35",
      "53811 PUT      reg25[0] = reg26",
      "53815 PUT      reg25[1] = 56",
      "53819 CALL FUNCTION      PTR: reg33 MEM: reg25",
      "53823 SET      reg2 -> reg22",
      "53826 PUT      reg23[1] = reg22",
      "53830 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53834 SET      reg2 -> reg19",
      "53837 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53840 JUMP      53849",
      "53849 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53852 NEW ARRAY      2 -> reg26",
      "53855 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53858 PUT      reg26[0] = reg23",
      "53862 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53865 NEW ARRAY      2 -> reg25",
      "53868 NEW ARRAY      2 -> reg33",
      "53871 PUT      reg33[0] = 0",
      "53875 PUSH MEMORY ELEMENT IF INIT      2050 -> reg37",
      "53878 GET      reg37[charCodeAt] -> reg39",
      "53884 NEW ARRAY      1 -> reg38",
      "53887 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "53890 ADD      reg406-> reg42",
      "53894 PUT      reg38[0] = reg42",
      "53898 CALL FUNCTION      OBJ: reg37 FUNC: reg39 ARGS: reg38",
      "53902 SET      reg2 -> reg35",
      "53905 PUT      reg33[1] = reg35",
      "53909 PUT      reg25[0] = reg33",
      "53913 PUT      reg25[1] = 48",
      "53917 CALL FUNCTION      PTR: reg23 MEM: reg25",
      "53921 SET      reg2 -> reg22",
      "53924 PUT      reg26[1] = reg22",
      "53928 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "53932 SET      reg2 -> reg19",
      "53935 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53938 JUMP      53947",
      "53947 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53950 NEW ARRAY      2 -> reg21",
      "53953 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53956 PUT      reg21[0] = reg23",
      "53960 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53963 NEW ARRAY      2 -> reg33",
      "53966 NEW ARRAY      2 -> reg38",
      "53969 PUT      reg38[0] = 0",
      "53973 PUSH MEMORY ELEMENT IF INIT      2050 -> reg26",
      "53976 GET      reg26[charCodeAt] -> reg40",
      "53982 NEW ARRAY      1 -> reg35",
      "53985 PUSH MEMORY ELEMENT IF INIT      2060 -> reg44",
      "53988 ADD      reg445-> reg42",
      "53992 PUT      reg35[0] = reg42",
      "53996 CALL FUNCTION      OBJ: reg26 FUNC: reg40 ARGS: reg35",
      "54000 SET      reg2 -> reg39",
      "54003 PUT      reg38[1] = reg39",
      "54007 PUT      reg33[0] = reg38",
      "54011 PUT      reg33[1] = 40",
      "54015 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54019 SET      reg2 -> reg23",
      "54022 PUT      reg21[1] = reg23",
      "54026 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54030 SET      reg2 -> reg19",
      "54033 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54036 JUMP      54045",
      "54045 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "54048 NEW ARRAY      2 -> reg21",
      "54051 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54054 PUT      reg21[0] = reg23",
      "54058 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54061 NEW ARRAY      2 -> reg33",
      "54064 NEW ARRAY      2 -> reg38",
      "54067 PUT      reg38[0] = 0",
      "54071 PUSH MEMORY ELEMENT IF INIT      2050 -> reg39",
      "54074 GET      reg39[charCodeAt] -> reg42",
      "54080 NEW ARRAY      1 -> reg41",
      "54083 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "54086 ADD      reg404-> reg43",
      "54090 PUT      reg41[0] = reg43",
      "54094 CALL FUNCTION      OBJ: reg39 FUNC: reg42 ARGS: reg41",
      "54098 SET      reg2 -> reg35",
      "54101 PUT      reg38[1] = reg35",
      "54105 PUT      reg33[0] = reg38",
      "54109 PUT      reg33[1] = 32",
      "54113 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54117 SET      reg2 -> reg23",
      "54120 PUT      reg21[1] = reg23",
      "54124 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54128 SET      reg2 -> reg19",
      "54131 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54134 JUMP      54143",
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "53550": [
      "53550 EQUAL      reg4 == 9 -> reg19",
      "53554 JUMP IF FALSE      reg19 TO: 53744 | 53557"
  ],
  "53557": [
      "53557 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53560 NEW ARRAY      2 -> reg23",
      "53563 PUSH MEMORY ELEMENT IF INIT      2057 -> reg21",
      "53566 PUT      reg23[0] = reg21",
      "53570 NEW ARRAY      2 -> reg21",
      "53573 PUT      reg21[0] = 0",
      "53577 PUSH MEMORY ELEMENT IF INIT      2050 -> reg27",
      "53580 GET      reg27[charCodeAt] -> reg25",
      "53586 NEW ARRAY      1 -> reg35",
      "53589 PUSH MEMORY ELEMENT IF INIT      2060 -> reg33",
      "53592 ADD      reg338-> reg36",
      "53596 PUT      reg35[0] = reg36",
      "53600 CALL FUNCTION      OBJ: reg27 FUNC: reg25 ARGS: reg35",
      "53604 SET      reg2 -> reg26",
      "53607 PUT      reg21[1] = reg26",
      "53611 PUT      reg23[1] = reg21",
      "53615 CALL FUNCTION      PTR: reg22 MEM: reg23",
      "53619 SET      reg2 -> reg19",
      "53622 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53625 PUSH MEMORY ELEMENT IF INIT      1846 -> reg22",
      "53628 NEW ARRAY      2 -> reg19",
      "53631 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53634 PUT      reg19[0] = reg23",
      "53638 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "53641 PUT      reg19[1] = reg23",
      "53645 CALL FUNCTION      PTR: reg22 MEM: reg19",
      "53649 SET      reg2 -> reg21",
      "53652 SET MEMORY ELEMENT IF INIT      2057 = reg21",
      "53655 PUSH MEMORY ELEMENT IF INIT      1847 -> reg21",
      "53658 NEW ARRAY      2 -> reg22",
      "53661 PUSH MEMORY ELEMENT IF INIT      2057 -> reg26",
      "53664 PUT      reg22[0] = reg26",
      "53668 PUT      reg22[1] = 33",
      "53672 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "53676 SET      reg2 -> reg19",
      "53679 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53682 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "53685 NEW ARRAY      2 -> reg23",
      "53688 PUSH MEMORY ELEMENT IF INIT      2057 -> reg22",
      "53691 PUT      reg23[0] = reg22",
      "53695 PUSH MEMORY ELEMENT IF INIT      2058 -> reg26",
      "53698 PUT      reg23[1] = reg26",
      "53702 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53706 SET      reg2 -> reg19",
      "53709 SET MEMORY ELEMENT IF INIT      2057 = reg19",
      "53712 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53715 NEW ARRAY      2 -> reg19",
      "53718 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "53721 PUT      reg19[0] = reg25",
      "53725 PUSH MEMORY ELEMENT IF INIT      2057 -> reg23",
      "53728 PUT      reg19[1] = reg23",
      "53732 CALL FUNCTION      PTR: reg21 MEM: reg19",
      "53736 SET      reg2 -> reg22",
      "53739 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "53742 JUMP      53751",
      "53751 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53754 NEW ARRAY      2 -> reg23",
      "53757 PUSH MEMORY ELEMENT IF INIT      2056 -> reg22",
      "53760 PUT      reg23[0] = reg22",
      "53764 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "53767 NEW ARRAY      2 -> reg25",
      "53770 NEW ARRAY      2 -> reg26",
      "53773 PUT      reg26[0] = 0",
      "53777 PUSH MEMORY ELEMENT IF INIT      2050 -> reg36",
      "53780 GET      reg36[charCodeAt] -> reg37",
      "53786 NEW ARRAY      1 -> reg40",
      "53789 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53792 ADD      reg387-> reg39",
      "53796 PUT      reg40[0] = reg39",
      "53800 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg40",
      "53804 SET      reg2 -> reg35",
      "53807 PUT      reg26[1] = reg35",
      "53811 PUT      reg25[0] = reg26",
      "53815 PUT      reg25[1] = 56",
      "53819 CALL FUNCTION      PTR: reg33 MEM: reg25",
      "53823 SET      reg2 -> reg22",
      "53826 PUT      reg23[1] = reg22",
      "53830 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53834 SET      reg2 -> reg19",
      "53837 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53840 JUMP      53849",
      "53849 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53852 NEW ARRAY      2 -> reg26",
      "53855 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53858 PUT      reg26[0] = reg23",
      "53862 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53865 NEW ARRAY      2 -> reg25",
      "53868 NEW ARRAY      2 -> reg33",
      "53871 PUT      reg33[0] = 0",
      "53875 PUSH MEMORY ELEMENT IF INIT      2050 -> reg37",
      "53878 GET      reg37[charCodeAt] -> reg39",
      "53884 NEW ARRAY      1 -> reg38",
      "53887 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "53890 ADD      reg406-> reg42",
      "53894 PUT      reg38[0] = reg42",
      "53898 CALL FUNCTION      OBJ: reg37 FUNC: reg39 ARGS: reg38",
      "53902 SET      reg2 -> reg35",
      "53905 PUT      reg33[1] = reg35",
      "53909 PUT      reg25[0] = reg33",
      "53913 PUT      reg25[1] = 48",
      "53917 CALL FUNCTION      PTR: reg23 MEM: reg25",
      "53921 SET      reg2 -> reg22",
      "53924 PUT      reg26[1] = reg22",
      "53928 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "53932 SET      reg2 -> reg19",
      "53935 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53938 JUMP      53947",
      "53947 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53950 NEW ARRAY      2 -> reg21",
      "53953 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53956 PUT      reg21[0] = reg23",
      "53960 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53963 NEW ARRAY      2 -> reg33",
      "53966 NEW ARRAY      2 -> reg38",
      "53969 PUT      reg38[0] = 0",
      "53973 PUSH MEMORY ELEMENT IF INIT      2050 -> reg26",
      "53976 GET      reg26[charCodeAt] -> reg40",
      "53982 NEW ARRAY      1 -> reg35",
      "53985 PUSH MEMORY ELEMENT IF INIT      2060 -> reg44",
      "53988 ADD      reg445-> reg42",
      "53992 PUT      reg35[0] = reg42",
      "53996 CALL FUNCTION      OBJ: reg26 FUNC: reg40 ARGS: reg35",
      "54000 SET      reg2 -> reg39",
      "54003 PUT      reg38[1] = reg39",
      "54007 PUT      reg33[0] = reg38",
      "54011 PUT      reg33[1] = 40",
      "54015 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54019 SET      reg2 -> reg23",
      "54022 PUT      reg21[1] = reg23",
      "54026 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54030 SET      reg2 -> reg19",
      "54033 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54036 JUMP      54045",
      "54045 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "54048 NEW ARRAY      2 -> reg21",
      "54051 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54054 PUT      reg21[0] = reg23",
      "54058 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54061 NEW ARRAY      2 -> reg33",
      "54064 NEW ARRAY      2 -> reg38",
      "54067 PUT      reg38[0] = 0",
      "54071 PUSH MEMORY ELEMENT IF INIT      2050 -> reg39",
      "54074 GET      reg39[charCodeAt] -> reg42",
      "54080 NEW ARRAY      1 -> reg41",
      "54083 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "54086 ADD      reg404-> reg43",
      "54090 PUT      reg41[0] = reg43",
      "54094 CALL FUNCTION      OBJ: reg39 FUNC: reg42 ARGS: reg41",
      "54098 SET      reg2 -> reg35",
      "54101 PUT      reg38[1] = reg35",
      "54105 PUT      reg33[0] = reg38",
      "54109 PUT      reg33[1] = 32",
      "54113 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54117 SET      reg2 -> reg23",
      "54120 PUT      reg21[1] = reg23",
      "54124 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54128 SET      reg2 -> reg19",
      "54131 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54134 JUMP      54143",
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "53744": [
      "53744 EQUAL      reg4 == 8 -> reg22",
      "53748 JUMP IF FALSE      reg22 TO: 53842 | 53751"
  ],
  "53751": [
      "53751 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53754 NEW ARRAY      2 -> reg23",
      "53757 PUSH MEMORY ELEMENT IF INIT      2056 -> reg22",
      "53760 PUT      reg23[0] = reg22",
      "53764 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "53767 NEW ARRAY      2 -> reg25",
      "53770 NEW ARRAY      2 -> reg26",
      "53773 PUT      reg26[0] = 0",
      "53777 PUSH MEMORY ELEMENT IF INIT      2050 -> reg36",
      "53780 GET      reg36[charCodeAt] -> reg37",
      "53786 NEW ARRAY      1 -> reg40",
      "53789 PUSH MEMORY ELEMENT IF INIT      2060 -> reg38",
      "53792 ADD      reg387-> reg39",
      "53796 PUT      reg40[0] = reg39",
      "53800 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg40",
      "53804 SET      reg2 -> reg35",
      "53807 PUT      reg26[1] = reg35",
      "53811 PUT      reg25[0] = reg26",
      "53815 PUT      reg25[1] = 56",
      "53819 CALL FUNCTION      PTR: reg33 MEM: reg25",
      "53823 SET      reg2 -> reg22",
      "53826 PUT      reg23[1] = reg22",
      "53830 CALL FUNCTION      PTR: reg21 MEM: reg23",
      "53834 SET      reg2 -> reg19",
      "53837 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53840 JUMP      53849",
      "53849 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53852 NEW ARRAY      2 -> reg26",
      "53855 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53858 PUT      reg26[0] = reg23",
      "53862 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53865 NEW ARRAY      2 -> reg25",
      "53868 NEW ARRAY      2 -> reg33",
      "53871 PUT      reg33[0] = 0",
      "53875 PUSH MEMORY ELEMENT IF INIT      2050 -> reg37",
      "53878 GET      reg37[charCodeAt] -> reg39",
      "53884 NEW ARRAY      1 -> reg38",
      "53887 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "53890 ADD      reg406-> reg42",
      "53894 PUT      reg38[0] = reg42",
      "53898 CALL FUNCTION      OBJ: reg37 FUNC: reg39 ARGS: reg38",
      "53902 SET      reg2 -> reg35",
      "53905 PUT      reg33[1] = reg35",
      "53909 PUT      reg25[0] = reg33",
      "53913 PUT      reg25[1] = 48",
      "53917 CALL FUNCTION      PTR: reg23 MEM: reg25",
      "53921 SET      reg2 -> reg22",
      "53924 PUT      reg26[1] = reg22",
      "53928 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "53932 SET      reg2 -> reg19",
      "53935 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53938 JUMP      53947",
      "53947 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53950 NEW ARRAY      2 -> reg21",
      "53953 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53956 PUT      reg21[0] = reg23",
      "53960 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53963 NEW ARRAY      2 -> reg33",
      "53966 NEW ARRAY      2 -> reg38",
      "53969 PUT      reg38[0] = 0",
      "53973 PUSH MEMORY ELEMENT IF INIT      2050 -> reg26",
      "53976 GET      reg26[charCodeAt] -> reg40",
      "53982 NEW ARRAY      1 -> reg35",
      "53985 PUSH MEMORY ELEMENT IF INIT      2060 -> reg44",
      "53988 ADD      reg445-> reg42",
      "53992 PUT      reg35[0] = reg42",
      "53996 CALL FUNCTION      OBJ: reg26 FUNC: reg40 ARGS: reg35",
      "54000 SET      reg2 -> reg39",
      "54003 PUT      reg38[1] = reg39",
      "54007 PUT      reg33[0] = reg38",
      "54011 PUT      reg33[1] = 40",
      "54015 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54019 SET      reg2 -> reg23",
      "54022 PUT      reg21[1] = reg23",
      "54026 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54030 SET      reg2 -> reg19",
      "54033 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54036 JUMP      54045",
      "54045 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "54048 NEW ARRAY      2 -> reg21",
      "54051 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54054 PUT      reg21[0] = reg23",
      "54058 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54061 NEW ARRAY      2 -> reg33",
      "54064 NEW ARRAY      2 -> reg38",
      "54067 PUT      reg38[0] = 0",
      "54071 PUSH MEMORY ELEMENT IF INIT      2050 -> reg39",
      "54074 GET      reg39[charCodeAt] -> reg42",
      "54080 NEW ARRAY      1 -> reg41",
      "54083 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "54086 ADD      reg404-> reg43",
      "54090 PUT      reg41[0] = reg43",
      "54094 CALL FUNCTION      OBJ: reg39 FUNC: reg42 ARGS: reg41",
      "54098 SET      reg2 -> reg35",
      "54101 PUT      reg38[1] = reg35",
      "54105 PUT      reg33[0] = reg38",
      "54109 PUT      reg33[1] = 32",
      "54113 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54117 SET      reg2 -> reg23",
      "54120 PUT      reg21[1] = reg23",
      "54124 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54128 SET      reg2 -> reg19",
      "54131 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54134 JUMP      54143",
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "53842": [
      "53842 EQUAL      reg4 == 7 -> reg25",
      "53846 JUMP IF FALSE      reg25 TO: 53940 | 53849"
  ],
  "53849": [
      "53849 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "53852 NEW ARRAY      2 -> reg26",
      "53855 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53858 PUT      reg26[0] = reg23",
      "53862 PUSH MEMORY ELEMENT IF INIT      1848 -> reg23",
      "53865 NEW ARRAY      2 -> reg25",
      "53868 NEW ARRAY      2 -> reg33",
      "53871 PUT      reg33[0] = 0",
      "53875 PUSH MEMORY ELEMENT IF INIT      2050 -> reg37",
      "53878 GET      reg37[charCodeAt] -> reg39",
      "53884 NEW ARRAY      1 -> reg38",
      "53887 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "53890 ADD      reg406-> reg42",
      "53894 PUT      reg38[0] = reg42",
      "53898 CALL FUNCTION      OBJ: reg37 FUNC: reg39 ARGS: reg38",
      "53902 SET      reg2 -> reg35",
      "53905 PUT      reg33[1] = reg35",
      "53909 PUT      reg25[0] = reg33",
      "53913 PUT      reg25[1] = 48",
      "53917 CALL FUNCTION      PTR: reg23 MEM: reg25",
      "53921 SET      reg2 -> reg22",
      "53924 PUT      reg26[1] = reg22",
      "53928 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "53932 SET      reg2 -> reg19",
      "53935 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "53938 JUMP      53947",
      "53947 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53950 NEW ARRAY      2 -> reg21",
      "53953 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53956 PUT      reg21[0] = reg23",
      "53960 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53963 NEW ARRAY      2 -> reg33",
      "53966 NEW ARRAY      2 -> reg38",
      "53969 PUT      reg38[0] = 0",
      "53973 PUSH MEMORY ELEMENT IF INIT      2050 -> reg26",
      "53976 GET      reg26[charCodeAt] -> reg40",
      "53982 NEW ARRAY      1 -> reg35",
      "53985 PUSH MEMORY ELEMENT IF INIT      2060 -> reg44",
      "53988 ADD      reg445-> reg42",
      "53992 PUT      reg35[0] = reg42",
      "53996 CALL FUNCTION      OBJ: reg26 FUNC: reg40 ARGS: reg35",
      "54000 SET      reg2 -> reg39",
      "54003 PUT      reg38[1] = reg39",
      "54007 PUT      reg33[0] = reg38",
      "54011 PUT      reg33[1] = 40",
      "54015 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54019 SET      reg2 -> reg23",
      "54022 PUT      reg21[1] = reg23",
      "54026 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54030 SET      reg2 -> reg19",
      "54033 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54036 JUMP      54045",
      "54045 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "54048 NEW ARRAY      2 -> reg21",
      "54051 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54054 PUT      reg21[0] = reg23",
      "54058 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54061 NEW ARRAY      2 -> reg33",
      "54064 NEW ARRAY      2 -> reg38",
      "54067 PUT      reg38[0] = 0",
      "54071 PUSH MEMORY ELEMENT IF INIT      2050 -> reg39",
      "54074 GET      reg39[charCodeAt] -> reg42",
      "54080 NEW ARRAY      1 -> reg41",
      "54083 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "54086 ADD      reg404-> reg43",
      "54090 PUT      reg41[0] = reg43",
      "54094 CALL FUNCTION      OBJ: reg39 FUNC: reg42 ARGS: reg41",
      "54098 SET      reg2 -> reg35",
      "54101 PUT      reg38[1] = reg35",
      "54105 PUT      reg33[0] = reg38",
      "54109 PUT      reg33[1] = 32",
      "54113 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54117 SET      reg2 -> reg23",
      "54120 PUT      reg21[1] = reg23",
      "54124 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54128 SET      reg2 -> reg19",
      "54131 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54134 JUMP      54143",
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "53940": [
      "53940 EQUAL      reg4 == 6 -> reg19",
      "53944 JUMP IF FALSE      reg19 TO: 54038 | 53947"
  ],
  "53947": [
      "53947 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "53950 NEW ARRAY      2 -> reg21",
      "53953 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "53956 PUT      reg21[0] = reg23",
      "53960 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "53963 NEW ARRAY      2 -> reg33",
      "53966 NEW ARRAY      2 -> reg38",
      "53969 PUT      reg38[0] = 0",
      "53973 PUSH MEMORY ELEMENT IF INIT      2050 -> reg26",
      "53976 GET      reg26[charCodeAt] -> reg40",
      "53982 NEW ARRAY      1 -> reg35",
      "53985 PUSH MEMORY ELEMENT IF INIT      2060 -> reg44",
      "53988 ADD      reg445-> reg42",
      "53992 PUT      reg35[0] = reg42",
      "53996 CALL FUNCTION      OBJ: reg26 FUNC: reg40 ARGS: reg35",
      "54000 SET      reg2 -> reg39",
      "54003 PUT      reg38[1] = reg39",
      "54007 PUT      reg33[0] = reg38",
      "54011 PUT      reg33[1] = 40",
      "54015 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54019 SET      reg2 -> reg23",
      "54022 PUT      reg21[1] = reg23",
      "54026 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54030 SET      reg2 -> reg19",
      "54033 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54036 JUMP      54045",
      "54045 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "54048 NEW ARRAY      2 -> reg21",
      "54051 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54054 PUT      reg21[0] = reg23",
      "54058 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54061 NEW ARRAY      2 -> reg33",
      "54064 NEW ARRAY      2 -> reg38",
      "54067 PUT      reg38[0] = 0",
      "54071 PUSH MEMORY ELEMENT IF INIT      2050 -> reg39",
      "54074 GET      reg39[charCodeAt] -> reg42",
      "54080 NEW ARRAY      1 -> reg41",
      "54083 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "54086 ADD      reg404-> reg43",
      "54090 PUT      reg41[0] = reg43",
      "54094 CALL FUNCTION      OBJ: reg39 FUNC: reg42 ARGS: reg41",
      "54098 SET      reg2 -> reg35",
      "54101 PUT      reg38[1] = reg35",
      "54105 PUT      reg33[0] = reg38",
      "54109 PUT      reg33[1] = 32",
      "54113 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54117 SET      reg2 -> reg23",
      "54120 PUT      reg21[1] = reg23",
      "54124 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54128 SET      reg2 -> reg19",
      "54131 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54134 JUMP      54143",
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "54038": [
      "54038 EQUAL      reg4 == 5 -> reg19",
      "54042 JUMP IF FALSE      reg19 TO: 54136 | 54045"
  ],
  "54045": [
      "54045 PUSH MEMORY ELEMENT IF INIT      1849 -> reg22",
      "54048 NEW ARRAY      2 -> reg21",
      "54051 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54054 PUT      reg21[0] = reg23",
      "54058 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54061 NEW ARRAY      2 -> reg33",
      "54064 NEW ARRAY      2 -> reg38",
      "54067 PUT      reg38[0] = 0",
      "54071 PUSH MEMORY ELEMENT IF INIT      2050 -> reg39",
      "54074 GET      reg39[charCodeAt] -> reg42",
      "54080 NEW ARRAY      1 -> reg41",
      "54083 PUSH MEMORY ELEMENT IF INIT      2060 -> reg40",
      "54086 ADD      reg404-> reg43",
      "54090 PUT      reg41[0] = reg43",
      "54094 CALL FUNCTION      OBJ: reg39 FUNC: reg42 ARGS: reg41",
      "54098 SET      reg2 -> reg35",
      "54101 PUT      reg38[1] = reg35",
      "54105 PUT      reg33[0] = reg38",
      "54109 PUT      reg33[1] = 32",
      "54113 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54117 SET      reg2 -> reg23",
      "54120 PUT      reg21[1] = reg23",
      "54124 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54128 SET      reg2 -> reg19",
      "54131 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54134 JUMP      54143",
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "54136": [
      "54136 EQUAL      reg4 == 4 -> reg21",
      "54140 JUMP IF FALSE      reg21 TO: 54234 | 54143"
  ],
  "54143": [
      "54143 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54146 NEW ARRAY      2 -> reg23",
      "54149 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54152 PUT      reg23[0] = reg35",
      "54156 PUSH MEMORY ELEMENT IF INIT      1848 -> reg33",
      "54159 NEW ARRAY      2 -> reg35",
      "54162 NEW ARRAY      2 -> reg25",
      "54165 PUT      reg25[0] = 0",
      "54169 PUSH MEMORY ELEMENT IF INIT      2050 -> reg38",
      "54172 GET      reg38[charCodeAt] -> reg41",
      "54178 NEW ARRAY      1 -> reg42",
      "54181 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54184 ADD      reg433-> reg45",
      "54188 PUT      reg42[0] = reg45",
      "54192 CALL FUNCTION      OBJ: reg38 FUNC: reg41 ARGS: reg42",
      "54196 SET      reg2 -> reg40",
      "54199 PUT      reg25[1] = reg40",
      "54203 PUT      reg35[0] = reg25",
      "54207 PUT      reg35[1] = 24",
      "54211 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "54215 SET      reg2 -> reg22",
      "54218 PUT      reg23[1] = reg22",
      "54222 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54226 SET      reg2 -> reg21",
      "54229 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54232 JUMP      54241",
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "54234": [
      "54234 EQUAL      reg4 == 3 -> reg19",
      "54238 JUMP IF FALSE      reg19 TO: 54332 | 54241"
  ],
  "54241": [
      "54241 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54244 NEW ARRAY      2 -> reg22",
      "54247 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54250 PUT      reg22[0] = reg23",
      "54254 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54257 NEW ARRAY      2 -> reg33",
      "54260 NEW ARRAY      2 -> reg35",
      "54263 PUT      reg35[0] = 0",
      "54267 PUSH MEMORY ELEMENT IF INIT      2050 -> reg41",
      "54270 GET      reg41[charCodeAt] -> reg42",
      "54276 NEW ARRAY      1 -> reg44",
      "54279 PUSH MEMORY ELEMENT IF INIT      2060 -> reg43",
      "54282 ADD      reg432-> reg46",
      "54286 PUT      reg44[0] = reg46",
      "54290 CALL FUNCTION      OBJ: reg41 FUNC: reg42 ARGS: reg44",
      "54294 SET      reg2 -> reg40",
      "54297 PUT      reg35[1] = reg40",
      "54301 PUT      reg33[0] = reg35",
      "54305 PUT      reg33[1] = 16",
      "54309 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54313 SET      reg2 -> reg23",
      "54316 PUT      reg22[1] = reg23",
      "54320 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54324 SET      reg2 -> reg19",
      "54327 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54330 JUMP      54339",
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "54332": [
      "54332 EQUAL      reg4 == 2 -> reg21",
      "54336 JUMP IF FALSE      reg21 TO: 54430 | 54339"
  ],
  "54339": [
      "54339 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54342 NEW ARRAY      2 -> reg21",
      "54345 PUSH MEMORY ELEMENT IF INIT      2056 -> reg25",
      "54348 PUT      reg21[0] = reg25",
      "54352 PUSH MEMORY ELEMENT IF INIT      1848 -> reg25",
      "54355 NEW ARRAY      2 -> reg33",
      "54358 NEW ARRAY      2 -> reg40",
      "54361 PUT      reg40[0] = 0",
      "54365 PUSH MEMORY ELEMENT IF INIT      2050 -> reg42",
      "54368 GET      reg42[charCodeAt] -> reg43",
      "54374 NEW ARRAY      1 -> reg44",
      "54377 PUSH MEMORY ELEMENT IF INIT      2060 -> reg46",
      "54380 ADD      reg461-> reg48",
      "54384 PUT      reg44[0] = reg48",
      "54388 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "54392 SET      reg2 -> reg35",
      "54395 PUT      reg40[1] = reg35",
      "54399 PUT      reg33[0] = reg40",
      "54403 PUT      reg33[1] = 8",
      "54407 CALL FUNCTION      PTR: reg25 MEM: reg33",
      "54411 SET      reg2 -> reg23",
      "54414 PUT      reg21[1] = reg23",
      "54418 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54422 SET      reg2 -> reg22",
      "54425 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54428 JUMP      54437",
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "54430": [
      "54430 EQUAL      reg4 == 1 -> reg21",
      "54434 JUMP IF FALSE      reg21 TO: 54618 | 54437"
  ],
  "54437": [
      "54437 PUSH MEMORY ELEMENT IF INIT      1849 -> reg23",
      "54440 NEW ARRAY      2 -> reg19",
      "54443 PUSH MEMORY ELEMENT IF INIT      2056 -> reg21",
      "54446 PUT      reg19[0] = reg21",
      "54450 NEW ARRAY      2 -> reg21",
      "54453 PUT      reg21[0] = 0",
      "54457 PUSH MEMORY ELEMENT IF INIT      2050 -> reg33",
      "54460 GET      reg33[charCodeAt] -> reg40",
      "54466 NEW ARRAY      1 -> reg43",
      "54469 PUSH MEMORY ELEMENT IF INIT      2060 -> reg35",
      "54472 PUT      reg43[0] = reg35",
      "54476 CALL FUNCTION      OBJ: reg33 FUNC: reg40 ARGS: reg43",
      "54480 SET      reg2 -> reg25",
      "54483 PUT      reg21[1] = reg25",
      "54487 PUT      reg19[1] = reg21",
      "54491 CALL FUNCTION      PTR: reg23 MEM: reg19",
      "54495 SET      reg2 -> reg22",
      "54498 SET MEMORY ELEMENT IF INIT      2056 = reg22",
      "54501 PUSH MEMORY ELEMENT IF INIT      1846 -> reg21",
      "54504 NEW ARRAY      2 -> reg22",
      "54507 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54510 PUT      reg22[0] = reg23",
      "54514 PUSH MEMORY ELEMENT IF INIT      2058 -> reg23",
      "54517 PUT      reg22[1] = reg23",
      "54521 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54525 SET      reg2 -> reg19",
      "54528 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54531 PUSH MEMORY ELEMENT IF INIT      1847 -> reg22",
      "54534 NEW ARRAY      2 -> reg21",
      "54537 PUSH MEMORY ELEMENT IF INIT      2056 -> reg35",
      "54540 PUT      reg21[0] = reg35",
      "54544 PUT      reg21[1] = 31",
      "54548 CALL FUNCTION      PTR: reg22 MEM: reg21",
      "54552 SET      reg2 -> reg19",
      "54555 SET MEMORY ELEMENT IF INIT      2056 = reg19",
      "54558 PUSH MEMORY ELEMENT IF INIT      1846 -> reg19",
      "54561 NEW ARRAY      2 -> reg22",
      "54564 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54567 PUT      reg22[0] = reg23",
      "54571 PUSH MEMORY ELEMENT IF INIT      2059 -> reg23",
      "54574 PUT      reg22[1] = reg23",
      "54578 CALL FUNCTION      PTR: reg19 MEM: reg22",
      "54582 SET      reg2 -> reg21",
      "54585 SET MEMORY ELEMENT IF INIT      2056 = reg21",
      "54588 PUSH MEMORY ELEMENT IF INIT      1849 -> reg21",
      "54591 NEW ARRAY      2 -> reg22",
      "54594 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54597 PUT      reg22[0] = reg23",
      "54601 PUSH MEMORY ELEMENT IF INIT      2056 -> reg23",
      "54604 PUT      reg22[1] = reg23",
      "54608 CALL FUNCTION      PTR: reg21 MEM: reg22",
      "54612 SET      reg2 -> reg19",
      "54615 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "54618": [
      "54618 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54621 NEW ARRAY      2 -> reg21",
      "54624 PUSH MEMORY ELEMENT IF INIT      2054 -> reg23",
      "54627 PUT      reg21[0] = reg23",
      "54631 NEW ARRAY      2 -> reg22",
      "54634 PUT      reg22[0] = 0",
      "54638 PUSH MEMORY ELEMENT IF INIT      2050 -> reg23",
      "54641 GET      reg23[length] -> reg25",
      "54647 PUT      reg22[1] = reg25",
      "54651 PUT      reg21[1] = reg22",
      "54655 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54659 SET      reg2 -> reg4",
      "54662 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54665 PUSH MEMORY ELEMENT IF INIT      1849 -> reg19",
      "54668 NEW ARRAY      2 -> reg23",
      "54671 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54674 PUT      reg23[0] = reg21",
      "54678 NEW ARRAY      2 -> reg21",
      "54681 PUT      reg21[0] = 0",
      "54685 PUSH MEMORY ELEMENT IF INIT      2050 -> reg25",
      "54688 GET      reg25[length] -> reg35",
      "54694 PUT      reg21[1] = reg35",
      "54698 PUT      reg23[1] = reg21",
      "54702 CALL FUNCTION      PTR: reg19 MEM: reg23",
      "54706 SET      reg2 -> reg4",
      "54709 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54712 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54715 NEW ARRAY      2 -> reg25",
      "54718 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54721 PUT      reg25[0] = reg21",
      "54725 PUSH MEMORY ELEMENT IF INIT      2055 -> reg21",
      "54728 PUT      reg25[1] = reg21",
      "54732 CALL FUNCTION      PTR: reg19 MEM: reg25",
      "54736 SET      reg2 -> reg4",
      "54739 SET MEMORY ELEMENT IF INIT      2054 = reg4",
      "54742 PUSH MEMORY ELEMENT IF INIT      1845 -> reg19",
      "54745 NEW ARRAY      2 -> reg21",
      "54748 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54751 PUT      reg21[0] = reg22",
      "54755 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54758 PUT      reg21[1] = reg22",
      "54762 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54766 SET      reg2 -> reg4",
      "54769 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54772 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54775 NEW ARRAY      1 -> reg4",
      "54778 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54781 PUT      reg4[0] = reg22",
      "54785 CALL FUNCTION      PTR: reg19 MEM: reg4",
      "54789 SET      reg2 -> reg21",
      "54792 SET MEMORY ELEMENT IF INIT      2054 = reg21",
      "54795 PUSH MEMORY ELEMENT IF INIT      1850 -> reg19",
      "54798 NEW ARRAY      1 -> reg21",
      "54801 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54804 PUT      reg21[0] = reg22",
      "54808 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "54812 SET      reg2 -> reg4",
      "54815 SET MEMORY ELEMENT IF INIT      2055 = reg4",
      "54818 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54821 NEW ARRAY      2 -> reg21",
      "54824 PUSH MEMORY ELEMENT IF INIT      2054 -> reg22",
      "54827 PUT      reg21[0] = reg22",
      "54831 PUSH MEMORY ELEMENT IF INIT      2055 -> reg22",
      "54834 PUT      reg21[1] = reg22",
      "54838 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "54842 SET      reg2 -> reg19",
      "54845 SET MEMORY ELEMENT IF INIT      2054 = reg19",
      "54848 PUSH MEMORY ELEMENT IF INIT      1845 -> reg4",
      "54851 NEW ARRAY      2 -> reg19",
      "54854 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "54857 PUT      reg19[0] = reg25",
      "54861 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54864 PUT      reg19[1] = reg21",
      "54868 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "54872 SET      reg2 -> reg22",
      "54875 SET MEMORY ELEMENT IF INIT      2055 = reg22",
      "54878 PUSH MEMORY ELEMENT IF INIT      2054 -> reg21",
      "54881 GET      reg21[0] -> reg22",
      "54885 USHIFT      reg22 >>> 0 -> reg21",
      "54889 GET      reg21[toString] -> reg22",
      "54895 NEW ARRAY      1 -> reg23",
      "54898 PUT      reg23[0] = 16",
      "54902 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg23",
      "54906 SET      reg2 -> reg19",
      "54909 ADD      00000000NaN-> reg22",
      "54915 GET      reg22[slice] -> reg19",
      "54921 NEW ARRAY      1 -> reg23",
      "54924 SUBTRACT      0 - 8 -> reg35",
      "54928 PUT      reg23[0] = reg35",
      "54932 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg23",
      "54936 SET      reg2 -> reg4",
      "54939 PUSH MEMORY ELEMENT IF INIT      2054 -> reg35",
      "54942 GET      reg35[1] -> reg40",
      "54946 USHIFT      reg40 >>> 0 -> reg23",
      "54950 GET      reg23[toString] -> reg35",
      "54956 NEW ARRAY      1 -> reg40",
      "54959 PUT      reg40[0] = 16",
      "54963 CALL FUNCTION      OBJ: reg23 FUNC: reg35 ARGS: reg40",
      "54967 SET      reg2 -> reg25",
      "54970 ADD      00000000NaN-> reg35",
      "54976 GET      reg35[slice] -> reg40",
      "54982 NEW ARRAY      1 -> reg43",
      "54985 SUBTRACT      0 - 8 -> reg25",
      "54989 PUT      reg43[0] = reg25",
      "54993 CALL FUNCTION      OBJ: reg35 FUNC: reg40 ARGS: reg43",
      "54997 SET      reg2 -> reg19",
      "55000 ADD      reg4NaN-> reg40",
      "55004 PUSH MEMORY ELEMENT IF INIT      2055 -> reg25",
      "55007 GET      reg25[0] -> reg43",
      "55011 USHIFT      reg43 >>> 0 -> reg45",
      "55015 GET      reg45[toString] -> reg25",
      "55021 NEW ARRAY      1 -> reg43",
      "55024 PUT      reg43[0] = 16",
      "55028 CALL FUNCTION      OBJ: reg45 FUNC: reg25 ARGS: reg43",
      "55032 SET      reg2 -> reg19",
      "55035 ADD      00000000NaN-> reg43",
      "55041 GET      reg43[slice] -> reg19",
      "55047 NEW ARRAY      1 -> reg25",
      "55050 SUBTRACT      0 - 8 -> reg44",
      "55054 PUT      reg25[0] = reg44",
      "55058 CALL FUNCTION      OBJ: reg43 FUNC: reg19 ARGS: reg25",
      "55062 SET      reg2 -> reg4",
      "55065 ADD      reg40NaN-> reg19",
      "55069 PUSH MEMORY ELEMENT IF INIT      2055 -> reg44",
      "55072 GET      reg44[1] -> reg46",
      "55076 USHIFT      reg46 >>> 0 -> reg25",
      "55080 GET      reg25[toString] -> reg44",
      "55086 NEW ARRAY      1 -> reg46",
      "55089 PUT      reg46[0] = 16",
      "55093 CALL FUNCTION      OBJ: reg25 FUNC: reg44 ARGS: reg46",
      "55097 SET      reg2 -> reg40",
      "55100 ADD      00000000NaN-> reg44",
      "55106 GET      reg44[slice] -> reg40",
      "55112 NEW ARRAY      1 -> reg46",
      "55115 SUBTRACT      0 - 8 -> reg47",
      "55119 PUT      reg46[0] = reg47",
      "55123 CALL FUNCTION      OBJ: reg44 FUNC: reg40 ARGS: reg46",
      "55127 SET      reg2 -> reg4",
      "55130 ADD      reg19NaN-> reg40",
      "55134 JUMP OR RETURN VAL      reg40"
  ],
  "55474": [
      "55474 PUSH MEMORY ELEMENT IF INIT      1852 -> reg7",
      "55477 GET      reg7[nvg] -> reg4",
      "55483 GET      reg4[hash] -> reg6",
      "55489 EQUAL      reg6 == 5a2b7fc15f7d5ab396ee7f42c5d513bc -> reg8",
      "55495 SET      reg8 -> reg5",
      "55498 JUMP IF TRUE      reg5 TO: 55687 | 55501"
  ],
  "55498": ["55498 JUMP IF TRUE      reg5 TO: 55687 | 55501"],
  "55501": [
      "55501 PUSH MEMORY ELEMENT IF INIT      1852 -> reg4",
      "55504 GET      reg4[hst] -> reg6",
      "55510 GET      reg6[hash] -> reg4",
      "55516 EQUAL      reg4 == c13c28666a519efe6cdb8da3741f8721 -> reg6",
      "55522 JUMP IF FALSE      reg6 TO: 55549 | 55525"
  ],
  "55525": [
      "55525 PUSH MEMORY ELEMENT IF INIT      1852 -> reg7",
      "55528 GET      reg7[st] -> reg4",
      "55534 GET      reg4[hash] -> reg7",
      "55540 EQUAL      reg7 == 2584e44fc176e5531e2aadf39de57873 -> reg8",
      "55546 SET      reg8 -> reg6",
      "55549 JUMP IF FALSE      reg6 TO: 55576 | 55552"
  ],
  "55549": ["55549 JUMP IF FALSE      reg6 TO: 55576 | 55552"],
  "55552": [
      "55552 PUSH MEMORY ELEMENT IF INIT      1852 -> reg4",
      "55555 GET      reg4[wg] -> reg7",
      "55561 GET      reg7[hash] -> reg8",
      "55567 EQUAL      reg8 == 2beaef54a533d01dba30613085c6477b -> reg4",
      "55573 SET      reg4 -> reg6",
      "55576 JUMP IF FALSE      reg6 TO: 55603 | 55579"
  ],
  "55576": ["55576 JUMP IF FALSE      reg6 TO: 55603 | 55579"],
  "55579": [
      "55579 PUSH MEMORY ELEMENT IF INIT      1852 -> reg4",
      "55582 GET      reg4[csr] -> reg7",
      "55588 GET      reg7[hash] -> reg8",
      "55594 EQUAL      reg8 == 80bc183ecddf6caa9766c4d888785a6c -> reg4",
      "55600 SET      reg4 -> reg6",
      "55603 JUMP IF FALSE      reg6 TO: 55630 | 55606"
  ],
  "55603": ["55603 JUMP IF FALSE      reg6 TO: 55630 | 55606"],
  "55606": [
      "55606 PUSH MEMORY ELEMENT IF INIT      1852 -> reg4",
      "55609 GET      reg4[lang] -> reg11",
      "55615 GET      reg11[hash] -> reg4",
      "55621 EQUAL      reg4 == 3f6ed0597ef61c22e164558d7d87f7d1 -> reg7",
      "55627 SET      reg7 -> reg6",
      "55630 JUMP IF FALSE      reg6 TO: 55657 | 55633"
  ],
  "55630": ["55630 JUMP IF FALSE      reg6 TO: 55657 | 55633"],
  "55633": [
      "55633 PUSH MEMORY ELEMENT IF INIT      1852 -> reg7",
      "55636 GET      reg7[clg] -> reg4",
      "55642 GET      reg4[hash] -> reg7",
      "55648 EQUAL      reg7 == 3ea93b79ed4fb5f24a42a31db6e276f1 -> reg8",
      "55654 SET      reg8 -> reg6",
      "55657 JUMP IF FALSE      reg6 TO: 55684 | 55660"
  ],
  "55657": ["55657 JUMP IF FALSE      reg6 TO: 55684 | 55660"],
  "55660": [
      "55660 PUSH MEMORY ELEMENT IF INIT      1852 -> reg7",
      "55663 GET      reg7[nvg] -> reg8",
      "55669 GET      reg8[hash] -> reg4",
      "55675 EQUAL      reg4 == 5e8a02e72a6a1cae435ae7f93b569939 -> reg8",
      "55681 SET      reg8 -> reg6",
      "55684 SET      reg6 -> reg5",
      "55687 JUMP IF TRUE      reg5 TO: 55741 | 55690"
  ],
  "55684": [
      "55684 SET      reg6 -> reg5",
      "55687 JUMP IF TRUE      reg5 TO: 55741 | 55690"
  ],
  "55687": ["55687 JUMP IF TRUE      reg5 TO: 55741 | 55690"],
  "55690": [
      "55690 PUSH MEMORY ELEMENT IF INIT      1852 -> reg4",
      "55693 GET      reg4[nvg] -> reg6",
      "55699 GET      reg6[hash] -> reg4",
      "55705 EQUAL      reg4 == 5e8a02e72a6a1cae435ae7f93b569939 -> reg7",
      "55711 JUMP IF FALSE      reg7 TO: 55738 | 55714"
  ],
  "55714": [
      "55714 PUSH MEMORY ELEMENT IF INIT      1852 -> reg4",
      "55717 GET      reg4[csr] -> reg8",
      "55723 GET      reg8[hash] -> reg4",
      "55729 EQUAL      reg4 == 80bc183ecddf6caa9766c4d888785a6c -> reg6",
      "55735 SET      reg6 -> reg7",
      "55738 SET      reg7 -> reg5",
      "55741 JUMP IF FALSE      reg5 TO: 55778 | 55744"
  ],
  "55738": [
      "55738 SET      reg7 -> reg5",
      "55741 JUMP IF FALSE      reg5 TO: 55778 | 55744"
  ],
  "55741": ["55741 JUMP IF FALSE      reg5 TO: 55778 | 55744"],
  "55744": [
      "55744 PUSH MEMORY ELEMENT IF INIT      1852 -> reg5",
      "55747 PUT      reg5[action] = block",
      "55755 SET MEMORY ELEMENT IF INIT      275 = true",
      "55758 PUSH MEMORY ELEMENT IF INIT      1829 -> reg4",
      "55761 NEW ARRAY      1 -> reg7",
      "55764 PUSH MEMORY ELEMENT IF INIT      1852 -> reg5",
      "55767 PUT      reg7[0] = reg5",
      "55771 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "55775 SET      reg2 -> reg6",
      "55778 JUMP      55788",
      "55788 SET I      null",
      "55790 JUMP OR RETURN"
  ],
  "55778": [
      "55778 JUMP      55788",
      "55788 SET I      null",
      "55790 JUMP OR RETURN"
  ],
  "55780": [
      "55780 SET I      null",
      "55782 PUSH F.K      -> reg5",
      "55784 VOID F",
      "55785 SET MEMORY ELEMENT      0 = reg5",
      "55788 SET I      null",
      "55790 JUMP OR RETURN"
  ],
  "55939": [
      "55939 PUSH MEMORY ELEMENT IF INIT      2123 -> reg4",
      "55942 GET WINDOW PROP      String -> reg5",
      "55947 GET      reg5[fromCharCode] -> reg7",
      "55953 NEW ARRAY      1 -> reg8",
      "55956 PUSH MEMORY ELEMENT IF INIT      2121 -> reg9",
      "55959 GET      reg9[charCodeAt] -> reg11",
      "55965 NEW ARRAY      1 -> reg13",
      "55968 PUSH MEMORY ELEMENT IF INIT      2124 -> reg12",
      "55971 PUT      reg13[0] = reg12",
      "55975 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg13",
      "55979 SET      reg2 -> reg10",
      "55982 PUSH MEMORY ELEMENT IF INIT      2122 -> reg13",
      "55985 GET      reg13[charCodeAt] -> reg12",
      "55991 NEW ARRAY      1 -> reg15",
      "55994 PUSH MEMORY ELEMENT IF INIT      2124 -> reg14",
      "55997 PUSH MEMORY ELEMENT IF INIT      2122 -> reg17",
      "56000 GET      reg17[length] -> reg16",
      "56006 MOD      reg14 % reg16 -> reg17",
      "56010 PUT      reg15[0] = reg17",
      "56014 CALL FUNCTION      OBJ: reg13 FUNC: reg12 ARGS: reg15",
      "56018 SET      reg2 -> reg11",
      "56021 XOR      reg10 ^ reg11 -> reg16",
      "56025 PUT      reg8[0] = reg16",
      "56029 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "56033 SET      reg2 -> reg6",
      "56036 ADD      reg4NaN-> reg6",
      "56040 SET MEMORY ELEMENT IF INIT      2123 = reg6",
      "56043 PUSH MEMORY ELEMENT IF INIT      2124 -> reg7",
      "56046 SET      reg7 -> reg4",
      "56049 ADD      reg71-> reg7",
      "56053 SET MEMORY ELEMENT IF INIT      2124 = reg7",
      "56056 JUMP      55920",
      "55920 PUSH MEMORY ELEMENT IF INIT      2124 -> reg6",
      "55923 PUSH MEMORY ELEMENT IF INIT      2121 -> reg5",
      "55926 GET      reg5[length] -> reg4",
      "55932 LESS THAN      reg6 < reg4 -> reg5",
      "55936 JUMP IF FALSE      reg5 TO: 56058 | 55939"
  ],
  "56058": [
      "56058 PUSH MEMORY ELEMENT IF INIT      2123 -> reg4",
      "56061 JUMP OR RETURN VAL      reg4"
  ],
  "56493": [
      "56493 PUSH MEMORY ELEMENT IF INIT      2138 -> reg4",
      "56496 COPY ENUMERABLE      reg4 -> reg6",
      "56499 GET      reg6[length] -> reg5",
      "56505 EQUAL      reg5 == 0 -> reg7",
      "56509 JUMP IF TRUE      reg7 TO: 56625 | 56512"
  ],
  "56512": [
      "56512 SET      0 -> reg7",
      "56515 GET      reg6[reg7] -> reg4",
      "56519 SET MEMORY ELEMENT IF INIT      2140 = reg4",
      "56522 PUSH MEMORY ELEMENT IF INIT      2138 -> reg9",
      "56525 PUSH MEMORY ELEMENT IF INIT      2140 -> reg10",
      "56528 GET      reg9[reg10] -> reg8",
      "56532 SET MEMORY ELEMENT IF INIT      2141 = reg8",
      "56535 PUSH MEMORY ELEMENT IF INIT      2141 -> reg8",
      "56538 TYPEOF      reg8 -> reg9",
      "56541 NOT EQUAL      reg9 != function -> reg8",
      "56547 JUMP IF FALSE      reg8 TO: 56565 | 56550"
  ],
  "56515": [
      "56515 GET      reg6[reg7] -> reg4",
      "56519 SET MEMORY ELEMENT IF INIT      2140 = reg4",
      "56522 PUSH MEMORY ELEMENT IF INIT      2138 -> reg9",
      "56525 PUSH MEMORY ELEMENT IF INIT      2140 -> reg10",
      "56528 GET      reg9[reg10] -> reg8",
      "56532 SET MEMORY ELEMENT IF INIT      2141 = reg8",
      "56535 PUSH MEMORY ELEMENT IF INIT      2141 -> reg8",
      "56538 TYPEOF      reg8 -> reg9",
      "56541 NOT EQUAL      reg9 != function -> reg8",
      "56547 JUMP IF FALSE      reg8 TO: 56565 | 56550"
  ],
  "56550": [
      "56550 PUSH MEMORY ELEMENT IF INIT      2141 -> reg10",
      "56553 TYPEOF      reg10 -> reg9",
      "56556 NOT EQUAL      reg9 != object -> reg10",
      "56562 SET      reg10 -> reg8",
      "56565 JUMP IF FALSE      reg8 TO: 56583 | 56568"
  ],
  "56565": ["56565 JUMP IF FALSE      reg8 TO: 56583 | 56568"],
  "56568": [
      "56568 PUSH MEMORY ELEMENT IF INIT      2141 -> reg13",
      "56571 TYPEOF      reg13 -> reg9",
      "56574 NOT EQUAL      reg9 != undefined -> reg10",
      "56580 SET      reg10 -> reg8",
      "56583 JUMP IF FALSE      reg8 TO: 56614 | 56586"
  ],
  "56583": ["56583 JUMP IF FALSE      reg8 TO: 56614 | 56586"],
  "56586": [
      "56586 PUSH MEMORY ELEMENT IF INIT      2139 -> reg8",
      "56589 PUSH MEMORY ELEMENT IF INIT      2140 -> reg10",
      "56592 GET      reg10[toString] -> reg13",
      "56598 EMPTY ARRAY      -> reg11",
      "56600 CALL FUNCTION      OBJ: reg10 FUNC: reg13 ARGS: reg11",
      "56604 SET      reg2 -> reg9",
      "56607 PUSH MEMORY ELEMENT IF INIT      2141 -> reg13",
      "56610 PUT      reg8[reg9] = reg13",
      "56614 ADD      reg71-> reg7",
      "56618 LESS THAN      reg7 < reg5 -> reg8",
      "56622 JUMP IF TRUE      reg8 TO: 56515 | 56625"
  ],
  "56614": [
      "56614 ADD      reg71-> reg7",
      "56618 LESS THAN      reg7 < reg5 -> reg8",
      "56622 JUMP IF TRUE      reg8 TO: 56515 | 56625"
  ],
  "56625": [
      "56625 PUSH MEMORY ELEMENT IF INIT      2139 -> reg4",
      "56628 JUMP OR RETURN VAL      reg4"
  ],
  "56630": ["56630 JUMP OR RETURN"],
  "56667": [
      "56667 GET WINDOW PROP      Object -> reg5",
      "56672 GET      reg5[getOwnPropertyNames] -> reg7",
      "56678 NEW ARRAY      1 -> reg6",
      "56681 PUSH MEMORY ELEMENT IF INIT      2148 -> reg9",
      "56684 PUT      reg6[0] = reg9",
      "56688 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg6",
      "56692 SET      reg2 -> reg4",
      "56695 SET MEMORY ELEMENT IF INIT      2150 = reg4",
      "56698 SET MEMORY ELEMENT IF INIT      2151 = 0",
      "56701 PUSH MEMORY ELEMENT IF INIT      2151 -> reg6",
      "56704 PUSH MEMORY ELEMENT IF INIT      2150 -> reg4",
      "56707 GET      reg4[length] -> reg7",
      "56713 LESS THAN      reg6 < reg7 -> reg4",
      "56717 JUMP IF FALSE      reg4 TO: 56812 | 56720"
  ],
  "56720": [
      "56720 PUSH MEMORY ELEMENT IF INIT      2149 -> reg6",
      "56723 GET      reg6[indexOf] -> reg7",
      "56729 NEW ARRAY      1 -> reg9",
      "56732 PUSH MEMORY ELEMENT IF INIT      2150 -> reg8",
      "56735 PUSH MEMORY ELEMENT IF INIT      2151 -> reg11",
      "56738 GET      reg8[reg11] -> reg10",
      "56742 PUT      reg9[0] = reg10",
      "56746 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "56750 SET      reg2 -> reg4",
      "56753 SUBTRACT      0 - 1 -> reg7",
      "56757 EQUAL      reg4 == reg7 -> reg9",
      "56761 JUMP IF FALSE      reg9 TO: 56797 | 56764"
  ],
  "56764": [
      "56764 PUSH MEMORY ELEMENT IF INIT      2149 -> reg7",
      "56767 GET      reg7[push] -> reg8",
      "56773 NEW ARRAY      1 -> reg9",
      "56776 PUSH MEMORY ELEMENT IF INIT      2150 -> reg10",
      "56779 PUSH MEMORY ELEMENT IF INIT      2151 -> reg12",
      "56782 GET      reg10[reg12] -> reg11",
      "56786 PUT      reg9[0] = reg11",
      "56790 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "56794 SET      reg2 -> reg4",
      "56797 PUSH MEMORY ELEMENT IF INIT      2151 -> reg4",
      "56800 SET      reg4 -> reg9",
      "56803 ADD      reg41-> reg4",
      "56807 SET MEMORY ELEMENT IF INIT      2151 = reg4",
      "56810 JUMP      56701",
      "56701 PUSH MEMORY ELEMENT IF INIT      2151 -> reg6",
      "56704 PUSH MEMORY ELEMENT IF INIT      2150 -> reg4",
      "56707 GET      reg4[length] -> reg7",
      "56713 LESS THAN      reg6 < reg7 -> reg4",
      "56717 JUMP IF FALSE      reg4 TO: 56812 | 56720"
  ],
  "56797": [
      "56797 PUSH MEMORY ELEMENT IF INIT      2151 -> reg4",
      "56800 SET      reg4 -> reg9",
      "56803 ADD      reg41-> reg4",
      "56807 SET MEMORY ELEMENT IF INIT      2151 = reg4",
      "56810 JUMP      56701",
      "56701 PUSH MEMORY ELEMENT IF INIT      2151 -> reg6",
      "56704 PUSH MEMORY ELEMENT IF INIT      2150 -> reg4",
      "56707 GET      reg4[length] -> reg7",
      "56713 LESS THAN      reg6 < reg7 -> reg4",
      "56717 JUMP IF FALSE      reg4 TO: 56812 | 56720"
  ],
  "56812": [
      "56812 GET WINDOW PROP      Object -> reg4",
      "56817 GET      reg4[getPrototypeOf] -> reg10",
      "56823 NEW ARRAY      1 -> reg9",
      "56826 PUSH MEMORY ELEMENT IF INIT      2148 -> reg11",
      "56829 PUT      reg9[0] = reg11",
      "56833 CALL FUNCTION      OBJ: reg4 FUNC: reg10 ARGS: reg9",
      "56837 SET      reg2 -> reg8",
      "56840 SET MEMORY ELEMENT IF INIT      2148 = reg8",
      "56843 JUMP      56657",
      "56657 PUSH MEMORY ELEMENT IF INIT      2148 -> reg4",
      "56660 NOT EQUAL      reg4 != null -> reg5",
      "56664 JUMP IF FALSE      reg5 TO: 56845 | 56667"
  ],
  "56845": [
      "56845 PUSH MEMORY ELEMENT IF INIT      2149 -> reg8",
      "56848 JUMP OR RETURN VAL      reg8"
  ],
  "56922": [
      "56922 SET MEMORY ELEMENT IF INIT      2161 = ",
      "56927 PUSH MEMORY ELEMENT IF INIT      2083 -> reg5",
      "56930 NEW ARRAY      1 -> reg8",
      "56933 PUSH MEMORY ELEMENT IF INIT      2156 -> reg7",
      "56936 PUT      reg8[0] = reg7",
      "56940 CALL FUNCTION      PTR: reg5 MEM: reg8",
      "56944 SET      reg2 -> reg4",
      "56947 SET MEMORY ELEMENT IF INIT      2161 = reg4",
      "56950 PUSH MEMORY ELEMENT IF INIT      2158 -> reg7",
      "56953 GET      reg7[join] -> reg5",
      "56959 NEW ARRAY      1 -> reg6",
      "56962 PUT      reg6[0] = ",
      "56968 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg6",
      "56972 SET      reg2 -> reg4",
      "56975 PUSH MEMORY ELEMENT IF INIT      2161 -> reg6",
      "56978 GET      reg6[join] -> reg8",
      "56984 NEW ARRAY      1 -> reg9",
      "56987 PUT      reg9[0] = ",
      "56993 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "56997 SET      reg2 -> reg5",
      "57000 STRICT NOT EQUAL      reg4 !== reg5 -> reg8",
      "57004 JUMP IF FALSE      reg8 TO: 57010 | 57007"
  ],
  "57007": [
      "57007 SET MEMORY ELEMENT IF INIT      2159 = true",
      "57010 PUSH MEMORY ELEMENT IF INIT      2160 -> reg4",
      "57013 SET      reg4 -> reg5",
      "57016 ADD      reg41-> reg4",
      "57020 SET MEMORY ELEMENT IF INIT      2160 = reg4",
      "57023 JUMP      56909",
      "56909 PUSH MEMORY ELEMENT IF INIT      2160 -> reg4",
      "56912 PUSH MEMORY ELEMENT IF INIT      2157 -> reg5",
      "56915 LESS THAN      reg4 < reg5 -> reg6",
      "56919 JUMP IF FALSE      reg6 TO: 57025 | 56922"
  ],
  "57010": [
      "57010 PUSH MEMORY ELEMENT IF INIT      2160 -> reg4",
      "57013 SET      reg4 -> reg5",
      "57016 ADD      reg41-> reg4",
      "57020 SET MEMORY ELEMENT IF INIT      2160 = reg4",
      "57023 JUMP      56909",
      "56909 PUSH MEMORY ELEMENT IF INIT      2160 -> reg4",
      "56912 PUSH MEMORY ELEMENT IF INIT      2157 -> reg5",
      "56915 LESS THAN      reg4 < reg5 -> reg6",
      "56919 JUMP IF FALSE      reg6 TO: 57025 | 56922"
  ],
  "57025": [
      "57025 EMPTY OBJECT      -> reg5",
      "57027 PUSH MEMORY ELEMENT IF INIT      2159 -> reg8",
      "57030 JUMP IF FALSE      reg8 TO: 57056 | 57033"
  ],
  "57033": [
      "57033 PUSH MEMORY ELEMENT IF INIT      2158 -> reg9",
      "57036 GET      reg9[sort] -> reg13",
      "57042 EMPTY ARRAY      -> reg10",
      "57044 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg10",
      "57048 SET      reg2 -> reg8",
      "57051 SET      reg8 -> reg4",
      "57054 JUMP      57062",
      "57062 PUT      reg5[props] = reg4",
      "57068 PUSH MEMORY ELEMENT IF INIT      2159 -> reg4",
      "57071 PUT      reg5[inconsistent] = reg4",
      "57077 SET MEMORY ELEMENT IF INIT      2162 = reg5",
      "57080 PUSH MEMORY ELEMENT IF INIT      2162 -> reg4",
      "57083 JUMP OR RETURN VAL      reg4"
  ],
  "57056": [
      "57056 PUSH MEMORY ELEMENT IF INIT      2158 -> reg8",
      "57059 SET      reg8 -> reg4",
      "57062 PUT      reg5[props] = reg4",
      "57068 PUSH MEMORY ELEMENT IF INIT      2159 -> reg4",
      "57071 PUT      reg5[inconsistent] = reg4",
      "57077 SET MEMORY ELEMENT IF INIT      2162 = reg5",
      "57080 PUSH MEMORY ELEMENT IF INIT      2162 -> reg4",
      "57083 JUMP OR RETURN VAL      reg4"
  ],
  "58369": [
      "58369 PUSH MEMORY ELEMENT IF INIT      2176 -> reg8",
      "58372 GET      reg8[getContext] -> reg9",
      "58378 NEW ARRAY      1 -> reg11",
      "58381 PUT      reg11[0] = experimental-webgl2",
      "58387 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg11",
      "58391 SET      reg2 -> reg6",
      "58394 SET      reg6 -> reg4",
      "58397 JUMP IF TRUE      reg4 TO: 58428 | 58400"
  ],
  "58397": ["58397 JUMP IF TRUE      reg4 TO: 58428 | 58400"],
  "58400": [
      "58400 PUSH MEMORY ELEMENT IF INIT      2176 -> reg9",
      "58403 GET      reg9[getContext] -> reg6",
      "58409 NEW ARRAY      1 -> reg11",
      "58412 PUT      reg11[0] = webgl",
      "58418 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg11",
      "58422 SET      reg2 -> reg10",
      "58425 SET      reg10 -> reg4",
      "58428 JUMP IF TRUE      reg4 TO: 58459 | 58431"
  ],
  "58428": ["58428 JUMP IF TRUE      reg4 TO: 58459 | 58431"],
  "58431": [
      "58431 PUSH MEMORY ELEMENT IF INIT      2176 -> reg10",
      "58434 GET      reg10[getContext] -> reg11",
      "58440 NEW ARRAY      1 -> reg12",
      "58443 PUT      reg12[0] = experimental-webgl",
      "58449 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "58453 SET      reg2 -> reg6",
      "58456 SET      reg6 -> reg4",
      "58459 JUMP IF TRUE      reg4 TO: 58490 | 58462"
  ],
  "58459": ["58459 JUMP IF TRUE      reg4 TO: 58490 | 58462"],
  "58462": [
      "58462 PUSH MEMORY ELEMENT IF INIT      2176 -> reg6",
      "58465 GET      reg6[getContext] -> reg11",
      "58471 NEW ARRAY      1 -> reg13",
      "58474 PUT      reg13[0] = moz-webgl",
      "58480 CALL FUNCTION      OBJ: reg6 FUNC: reg11 ARGS: reg13",
      "58484 SET      reg2 -> reg12",
      "58487 SET      reg12 -> reg4",
      "58490 SET MEMORY ELEMENT IF INIT      2177 = reg4",
      "58493 PUSH MEMORY ELEMENT IF INIT      2169 -> reg4",
      "58496 GET      reg4[WebGL2RenderingContext] -> reg11",
      "58502 JUMP IF TRUE      reg11 TO: 58517 | 58505"
  ],
  "58490": [
      "58490 SET MEMORY ELEMENT IF INIT      2177 = reg4",
      "58493 PUSH MEMORY ELEMENT IF INIT      2169 -> reg4",
      "58496 GET      reg4[WebGL2RenderingContext] -> reg11",
      "58502 JUMP IF TRUE      reg11 TO: 58517 | 58505"
  ],
  "58505": [
      "58505 PUSH MEMORY ELEMENT IF INIT      2169 -> reg13",
      "58508 GET      reg13[WebGLRenderingContext] -> reg4",
      "58514 SET      reg4 -> reg11",
      "58517 SET MEMORY ELEMENT IF INIT      2178 = reg11",
      "58520 PUSH MEMORY ELEMENT IF INIT      2177 -> reg4",
      "58523 JUMP IF FALSE      reg4 TO: 58532 | 58526"
  ],
  "58517": [
      "58517 SET MEMORY ELEMENT IF INIT      2178 = reg11",
      "58520 PUSH MEMORY ELEMENT IF INIT      2177 -> reg4",
      "58523 JUMP IF FALSE      reg4 TO: 58532 | 58526"
  ],
  "58526": [
      "58526 PUSH MEMORY ELEMENT IF INIT      2178 -> reg11",
      "58529 SET      reg11 -> reg4",
      "58532 JUMP IF FALSE      reg4 TO: 59667 | 58535"
  ],
  "58532": ["58532 JUMP IF FALSE      reg4 TO: 59667 | 58535"],
  "58535": [
      "58535 PUSH MEMORY ELEMENT IF INIT      2177 -> reg12",
      "58538 GET      reg12[getExtension] -> reg13",
      "58544 NEW ARRAY      1 -> reg4",
      "58547 PUT      reg4[0] = WEBGL_debug_renderer_info",
      "58553 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg4",
      "58557 SET      reg2 -> reg11",
      "58560 SET MEMORY ELEMENT IF INIT      2179 = reg11",
      "58563 PUSH MEMORY ELEMENT IF INIT      2177 -> reg4",
      "58566 GET      reg4[getExtension] -> reg14",
      "58572 NEW ARRAY      1 -> reg13",
      "58575 PUT      reg13[0] = EXT_texture_filter_anisotropic",
      "58581 CALL FUNCTION      OBJ: reg4 FUNC: reg14 ARGS: reg13",
      "58585 SET      reg2 -> reg11",
      "58588 JUMP IF TRUE      reg11 TO: 58619 | 58591"
  ],
  "58591": [
      "58591 PUSH MEMORY ELEMENT IF INIT      2177 -> reg14",
      "58594 GET      reg14[getExtension] -> reg15",
      "58600 NEW ARRAY      1 -> reg16",
      "58603 PUT      reg16[0] = WEBKIT_EXT_texture_filter_anisotropic",
      "58609 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg16",
      "58613 SET      reg2 -> reg13",
      "58616 SET      reg13 -> reg11",
      "58619 JUMP IF TRUE      reg11 TO: 58650 | 58622"
  ],
  "58619": ["58619 JUMP IF TRUE      reg11 TO: 58650 | 58622"],
  "58622": [
      "58622 PUSH MEMORY ELEMENT IF INIT      2177 -> reg16",
      "58625 GET      reg16[getExtension] -> reg15",
      "58631 NEW ARRAY      1 -> reg21",
      "58634 PUT      reg21[0] = MOZ_EXT_texture_filter_anisotropic",
      "58640 CALL FUNCTION      OBJ: reg16 FUNC: reg15 ARGS: reg21",
      "58644 SET      reg2 -> reg13",
      "58647 SET      reg13 -> reg11",
      "58650 SET MEMORY ELEMENT IF INIT      2180 = reg11",
      "58653 PUSH MEMORY ELEMENT IF INIT      2177 -> reg11",
      "58656 GET      reg11[getSupportedExtensions] -> reg13",
      "58662 EMPTY ARRAY      -> reg17",
      "58664 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg17",
      "58668 SET      reg2 -> reg15",
      "58671 SET MEMORY ELEMENT IF INIT      2181 = reg15",
      "58674 SET MEMORY ELEMENT IF INIT      2182 = null",
      "58677 SET MEMORY ELEMENT IF INIT      2183 = null",
      "58680 SET MEMORY ELEMENT IF INIT      2184 = null",
      "58683 PUSH MEMORY ELEMENT IF INIT      2179 -> reg15",
      "58686 STRICT NOT EQUAL      reg15 !== null -> reg13",
      "58690 JUMP IF FALSE      reg13 TO: 58763 | 58693"
  ],
  "58650": [
      "58650 SET MEMORY ELEMENT IF INIT      2180 = reg11",
      "58653 PUSH MEMORY ELEMENT IF INIT      2177 -> reg11",
      "58656 GET      reg11[getSupportedExtensions] -> reg13",
      "58662 EMPTY ARRAY      -> reg17",
      "58664 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg17",
      "58668 SET      reg2 -> reg15",
      "58671 SET MEMORY ELEMENT IF INIT      2181 = reg15",
      "58674 SET MEMORY ELEMENT IF INIT      2182 = null",
      "58677 SET MEMORY ELEMENT IF INIT      2183 = null",
      "58680 SET MEMORY ELEMENT IF INIT      2184 = null",
      "58683 PUSH MEMORY ELEMENT IF INIT      2179 -> reg15",
      "58686 STRICT NOT EQUAL      reg15 !== null -> reg13",
      "58690 JUMP IF FALSE      reg13 TO: 58763 | 58693"
  ],
  "58693": [
      "58693 PUSH MEMORY ELEMENT IF INIT      2177 -> reg15",
      "58696 GET      reg15[getParameter] -> reg17",
      "58702 NEW ARRAY      1 -> reg18",
      "58705 PUSH MEMORY ELEMENT IF INIT      2179 -> reg22",
      "58708 GET      reg22[UNMASKED_VENDOR_WEBGL] -> reg23",
      "58714 PUT      reg18[0] = reg23",
      "58718 CALL FUNCTION      OBJ: reg15 FUNC: reg17 ARGS: reg18",
      "58722 SET      reg2 -> reg13",
      "58725 SET MEMORY ELEMENT IF INIT      2182 = reg13",
      "58728 PUSH MEMORY ELEMENT IF INIT      2177 -> reg13",
      "58731 GET      reg13[getParameter] -> reg18",
      "58737 NEW ARRAY      1 -> reg19",
      "58740 PUSH MEMORY ELEMENT IF INIT      2179 -> reg21",
      "58743 GET      reg21[UNMASKED_RENDERER_WEBGL] -> reg20",
      "58749 PUT      reg19[0] = reg20",
      "58753 CALL FUNCTION      OBJ: reg13 FUNC: reg18 ARGS: reg19",
      "58757 SET      reg2 -> reg17",
      "58760 SET MEMORY ELEMENT IF INIT      2183 = reg17",
      "58763 PUSH MEMORY ELEMENT IF INIT      2180 -> reg17",
      "58766 STRICT NOT EQUAL      reg17 !== null -> reg18",
      "58770 JUMP IF FALSE      reg18 TO: 58808 | 58773"
  ],
  "58763": [
      "58763 PUSH MEMORY ELEMENT IF INIT      2180 -> reg17",
      "58766 STRICT NOT EQUAL      reg17 !== null -> reg18",
      "58770 JUMP IF FALSE      reg18 TO: 58808 | 58773"
  ],
  "58773": [
      "58773 PUSH MEMORY ELEMENT IF INIT      2177 -> reg19",
      "58776 GET      reg19[getParameter] -> reg17",
      "58782 NEW ARRAY      1 -> reg20",
      "58785 PUSH MEMORY ELEMENT IF INIT      2180 -> reg21",
      "58788 GET      reg21[MAX_TEXTURE_MAX_ANISOTROPY_EXT] -> reg22",
      "58794 PUT      reg20[0] = reg22",
      "58798 CALL FUNCTION      OBJ: reg19 FUNC: reg17 ARGS: reg20",
      "58802 SET      reg2 -> reg18",
      "58805 SET MEMORY ELEMENT IF INIT      2184 = reg18",
      "58808 PUSH MEMORY ELEMENT IF INIT      2181 -> reg17",
      "58811 STRICT NOT EQUAL      reg17 !== null -> reg18",
      "58815 JUMP IF FALSE      reg18 TO: 58839 | 58818"
  ],
  "58808": [
      "58808 PUSH MEMORY ELEMENT IF INIT      2181 -> reg17",
      "58811 STRICT NOT EQUAL      reg17 !== null -> reg18",
      "58815 JUMP IF FALSE      reg18 TO: 58839 | 58818"
  ],
  "58818": [
      "58818 PUSH MEMORY ELEMENT IF INIT      2181 -> reg18",
      "58821 GET      reg18[toString] -> reg20",
      "58827 EMPTY ARRAY      -> reg21",
      "58829 CALL FUNCTION      OBJ: reg18 FUNC: reg20 ARGS: reg21",
      "58833 SET      reg2 -> reg17",
      "58836 SET MEMORY ELEMENT IF INIT      2181 = reg17",
      "58839 EMPTY OBJECT      -> reg17",
      "58841 PUSH MEMORY ELEMENT IF INIT      2182 -> reg20",
      "58844 PUT      reg17[Unmasked Vendor] = reg20",
      "58850 PUSH MEMORY ELEMENT IF INIT      2183 -> reg21",
      "58853 PUT      reg17[Unmasked Renderer] = reg21",
      "58859 PUSH MEMORY ELEMENT IF INIT      2184 -> reg20",
      "58862 PUT      reg17[Max Anisotropy] = reg20",
      "58868 PUSH MEMORY ELEMENT IF INIT      2181 -> reg20",
      "58871 PUT      reg17[Supported WebGL Extensions] = reg20",
      "58877 SET MEMORY ELEMENT IF INIT      2175 = reg17",
      "58880 PUSH MEMORY ELEMENT IF INIT      2171 -> reg17",
      "58883 GET      reg17[concat] -> reg21",
      "58889 NEW ARRAY      1 -> reg23",
      "58892 PUSH MEMORY ELEMENT IF INIT      2172 -> reg22",
      "58895 PUT      reg23[0] = reg22",
      "58899 CALL FUNCTION      OBJ: reg17 FUNC: reg21 ARGS: reg23",
      "58903 SET      reg2 -> reg20",
      "58906 SET MEMORY ELEMENT IF INIT      2185 = reg20",
      "58909 PUSH MEMORY ELEMENT IF INIT      2185 -> reg22",
      "58912 GET      reg22[concat] -> reg21",
      "58918 NEW ARRAY      1 -> reg23",
      "58921 PUSH MEMORY ELEMENT IF INIT      2173 -> reg27",
      "58924 PUT      reg23[0] = reg27",
      "58928 CALL FUNCTION      OBJ: reg22 FUNC: reg21 ARGS: reg23",
      "58932 SET      reg2 -> reg20",
      "58935 SET MEMORY ELEMENT IF INIT      2185 = reg20",
      "58938 PUSH MEMORY ELEMENT IF INIT      2185 -> reg21",
      "58941 GET      reg21[forEach] -> reg24",
      "58947 NEW ARRAY      1 -> reg23",
      "58950 INIT FUNCTION STATE      PTR: 58959 NAME:  LEN: 1 -> reg27",
      "58957 JUMP      59656",
      "59656 PUT      reg23[0] = reg27",
      "59660 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg23",
      "59664 SET      reg2 -> reg20",
      "59667 PUSH MEMORY ELEMENT IF INIT      2170 -> reg20",
      "59670 PUSH MEMORY ELEMENT IF INIT      280 -> reg23",
      "59673 GET      reg23[stringify] -> reg27",
      "59679 NEW ARRAY      1 -> reg25",
      "59682 PUSH MEMORY ELEMENT IF INIT      2175 -> reg26",
      "59685 PUT      reg25[0] = reg26",
      "59689 CALL FUNCTION      OBJ: reg23 FUNC: reg27 ARGS: reg25",
      "59693 SET      reg2 -> reg24",
      "59696 PUT      reg20[raw] = reg24",
      "59702 PUSH MEMORY ELEMENT IF INIT      2170 -> reg20",
      "59705 PUSH MEMORY ELEMENT IF INIT      2081 -> reg24",
      "59708 NEW ARRAY      1 -> reg27",
      "59711 PUSH MEMORY ELEMENT IF INIT      2170 -> reg26",
      "59714 GET      reg26[raw] -> reg28",
      "59720 PUT      reg27[0] = reg28",
      "59724 CALL FUNCTION      PTR: reg24 MEM: reg27",
      "59728 SET      reg2 -> reg25",
      "59731 PUT      reg20[hash] = reg25",
      "59737 PUSH MEMORY ELEMENT IF INIT      2170 -> reg20",
      "59740 JUMP OR RETURN VAL      reg20"
  ],
  "58839": [
      "58839 EMPTY OBJECT      -> reg17",
      "58841 PUSH MEMORY ELEMENT IF INIT      2182 -> reg20",
      "58844 PUT      reg17[Unmasked Vendor] = reg20",
      "58850 PUSH MEMORY ELEMENT IF INIT      2183 -> reg21",
      "58853 PUT      reg17[Unmasked Renderer] = reg21",
      "58859 PUSH MEMORY ELEMENT IF INIT      2184 -> reg20",
      "58862 PUT      reg17[Max Anisotropy] = reg20",
      "58868 PUSH MEMORY ELEMENT IF INIT      2181 -> reg20",
      "58871 PUT      reg17[Supported WebGL Extensions] = reg20",
      "58877 SET MEMORY ELEMENT IF INIT      2175 = reg17",
      "58880 PUSH MEMORY ELEMENT IF INIT      2171 -> reg17",
      "58883 GET      reg17[concat] -> reg21",
      "58889 NEW ARRAY      1 -> reg23",
      "58892 PUSH MEMORY ELEMENT IF INIT      2172 -> reg22",
      "58895 PUT      reg23[0] = reg22",
      "58899 CALL FUNCTION      OBJ: reg17 FUNC: reg21 ARGS: reg23",
      "58903 SET      reg2 -> reg20",
      "58906 SET MEMORY ELEMENT IF INIT      2185 = reg20",
      "58909 PUSH MEMORY ELEMENT IF INIT      2185 -> reg22",
      "58912 GET      reg22[concat] -> reg21",
      "58918 NEW ARRAY      1 -> reg23",
      "58921 PUSH MEMORY ELEMENT IF INIT      2173 -> reg27",
      "58924 PUT      reg23[0] = reg27",
      "58928 CALL FUNCTION      OBJ: reg22 FUNC: reg21 ARGS: reg23",
      "58932 SET      reg2 -> reg20",
      "58935 SET MEMORY ELEMENT IF INIT      2185 = reg20",
      "58938 PUSH MEMORY ELEMENT IF INIT      2185 -> reg21",
      "58941 GET      reg21[forEach] -> reg24",
      "58947 NEW ARRAY      1 -> reg23",
      "58950 INIT FUNCTION STATE      PTR: 58959 NAME:  LEN: 1 -> reg27",
      "58957 JUMP      59656",
      "59656 PUT      reg23[0] = reg27",
      "59660 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg23",
      "59664 SET      reg2 -> reg20",
      "59667 PUSH MEMORY ELEMENT IF INIT      2170 -> reg20",
      "59670 PUSH MEMORY ELEMENT IF INIT      280 -> reg23",
      "59673 GET      reg23[stringify] -> reg27",
      "59679 NEW ARRAY      1 -> reg25",
      "59682 PUSH MEMORY ELEMENT IF INIT      2175 -> reg26",
      "59685 PUT      reg25[0] = reg26",
      "59689 CALL FUNCTION      OBJ: reg23 FUNC: reg27 ARGS: reg25",
      "59693 SET      reg2 -> reg24",
      "59696 PUT      reg20[raw] = reg24",
      "59702 PUSH MEMORY ELEMENT IF INIT      2170 -> reg20",
      "59705 PUSH MEMORY ELEMENT IF INIT      2081 -> reg24",
      "59708 NEW ARRAY      1 -> reg27",
      "59711 PUSH MEMORY ELEMENT IF INIT      2170 -> reg26",
      "59714 GET      reg26[raw] -> reg28",
      "59720 PUT      reg27[0] = reg28",
      "59724 CALL FUNCTION      PTR: reg24 MEM: reg27",
      "59728 SET      reg2 -> reg25",
      "59731 PUT      reg20[hash] = reg25",
      "59737 PUSH MEMORY ELEMENT IF INIT      2170 -> reg20",
      "59740 JUMP OR RETURN VAL      reg20"
  ],
  "58987": [
      "58987 EMPTY ARRAY      -> reg5",
      "58989 SET MEMORY ELEMENT IF INIT      2202 = reg5",
      "58992 PUSH MEMORY ELEMENT IF INIT      2201 -> reg5",
      "58995 GET      reg5[0] -> reg4",
      "58999 EQUAL      reg4 == RED_BITS -> reg5",
      "59005 JUMP IF FALSE      reg5 TO: 59205 | 59008"
  ],
  "59008": [
      "59008 SET MEMORY ELEMENT IF INIT      2203 = true",
      "59011 PUSH MEMORY ELEMENT IF INIT      2201 -> reg6",
      "59014 GET      reg6[forEach] -> reg5",
      "59020 NEW ARRAY      1 -> reg8",
      "59023 INIT FUNCTION STATE      PTR: 59032 NAME:  LEN: 1 -> reg7",
      "59030 JUMP      59144",
      "59144 PUT      reg8[0] = reg7",
      "59148 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "59152 SET      reg2 -> reg4",
      "59155 PUSH MEMORY ELEMENT IF INIT      2203 -> reg5",
      "59158 NOT      reg5 -> reg4",
      "59161 JUMP IF FALSE      reg4 TO: 59203 | 59164"
  ],
  "59053": [
      "59053 PUSH MEMORY ELEMENT IF INIT      2177 -> reg4",
      "59056 GET      reg4[getParameter] -> reg7",
      "59062 NEW ARRAY      1 -> reg6",
      "59065 PUSH MEMORY ELEMENT IF INIT      2177 -> reg9",
      "59068 PUSH MEMORY ELEMENT IF INIT      2211 -> reg10",
      "59071 GET      reg9[reg10] -> reg8",
      "59075 PUT      reg6[0] = reg8",
      "59079 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg6",
      "59083 SET      reg2 -> reg5",
      "59086 SET MEMORY ELEMENT IF INIT      2212 = reg5",
      "59089 PUSH MEMORY ELEMENT IF INIT      2212 -> reg7",
      "59092 STRICT NOT EQUAL      reg7 !== undefined -> reg5",
      "59098 JUMP IF FALSE      reg5 TO: 59111 | 59101"
  ],
  "59089": [
      "59089 PUSH MEMORY ELEMENT IF INIT      2212 -> reg7",
      "59092 STRICT NOT EQUAL      reg7 !== undefined -> reg5",
      "59098 JUMP IF FALSE      reg5 TO: 59111 | 59101"
  ],
  "59101": [
      "59101 PUSH MEMORY ELEMENT IF INIT      2212 -> reg7",
      "59104 STRICT NOT EQUAL      reg7 !== null -> reg6",
      "59108 SET      reg6 -> reg5",
      "59111 JUMP IF FALSE      reg5 TO: 59117 | 59114"
  ],
  "59111": ["59111 JUMP IF FALSE      reg5 TO: 59117 | 59114"],
  "59114": [
      "59114 SET MEMORY ELEMENT IF INIT      2203 = false",
      "59117 PUSH MEMORY ELEMENT IF INIT      2202 -> reg8",
      "59120 GET      reg8[push] -> reg5",
      "59126 NEW ARRAY      1 -> reg7",
      "59129 PUSH MEMORY ELEMENT IF INIT      2212 -> reg9",
      "59132 PUT      reg7[0] = reg9",
      "59136 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg7",
      "59140 SET      reg2 -> reg6",
      "59143 JUMP OR RETURN"
  ],
  "59117": [
      "59117 PUSH MEMORY ELEMENT IF INIT      2202 -> reg8",
      "59120 GET      reg8[push] -> reg5",
      "59126 NEW ARRAY      1 -> reg7",
      "59129 PUSH MEMORY ELEMENT IF INIT      2212 -> reg9",
      "59132 PUT      reg7[0] = reg9",
      "59136 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg7",
      "59140 SET      reg2 -> reg6",
      "59143 JUMP OR RETURN"
  ],
  "59164": [
      "59164 PUSH MEMORY ELEMENT IF INIT      2175 -> reg4",
      "59167 PUSH MEMORY ELEMENT IF INIT      2202 -> reg7",
      "59170 GET      reg7[toString] -> reg8",
      "59176 EMPTY ARRAY      -> reg9",
      "59178 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "59182 SET      reg2 -> reg5",
      "59185 ADD      [NaN-> reg8",
      "59191 ADD      reg8NaN-> reg9",
      "59197 PUT      reg4[RGBA Bits] = reg9",
      "59203 JUMP      59379",
      "59379 JUMP      59655",
      "59655 JUMP OR RETURN"
  ],
  "59203": [
      "59203 JUMP      59379",
      "59379 JUMP      59655",
      "59655 JUMP OR RETURN"
  ],
  "59205": [
      "59205 PUSH MEMORY ELEMENT IF INIT      2201 -> reg5",
      "59208 GET      reg5[forEach] -> reg8",
      "59214 NEW ARRAY      1 -> reg9",
      "59217 INIT FUNCTION STATE      PTR: 59226 NAME:  LEN: 1 -> reg10",
      "59224 JUMP      59368",
      "59368 PUT      reg9[0] = reg10",
      "59372 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg9",
      "59376 SET      reg2 -> reg4",
      "59379 JUMP      59655",
      "59655 JUMP OR RETURN"
  ],
  "59247": [
      "59247 PUSH MEMORY ELEMENT IF INIT      2177 -> reg5",
      "59250 GET      reg5[getParameter] -> reg6",
      "59256 NEW ARRAY      1 -> reg11",
      "59259 PUSH MEMORY ELEMENT IF INIT      2177 -> reg8",
      "59262 PUSH MEMORY ELEMENT IF INIT      2219 -> reg9",
      "59265 GET      reg8[reg9] -> reg7",
      "59269 PUT      reg11[0] = reg7",
      "59273 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg11",
      "59277 SET      reg2 -> reg4",
      "59280 SET MEMORY ELEMENT IF INIT      2220 = reg4",
      "59283 PUSH MEMORY ELEMENT IF INIT      2219 -> reg4",
      "59286 PUSH MEMORY ELEMENT IF INIT      2174 -> reg6",
      "59289 IN      reg4 inreg6 -> reg9",
      "59293 JUMP IF FALSE      reg9 TO: 59316 | 59296"
  ],
  "59283": [
      "59283 PUSH MEMORY ELEMENT IF INIT      2219 -> reg4",
      "59286 PUSH MEMORY ELEMENT IF INIT      2174 -> reg6",
      "59289 IN      reg4 inreg6 -> reg9",
      "59293 JUMP IF FALSE      reg9 TO: 59316 | 59296"
  ],
  "59296": [
      "59296 PUSH MEMORY ELEMENT IF INIT      2174 -> reg4",
      "59299 PUSH MEMORY ELEMENT IF INIT      2219 -> reg7",
      "59302 GET      reg4[reg7] -> reg6",
      "59306 PUSH WINDOW       -> reg7",
      "59308 PUT      reg7[name] = reg6",
      "59314 JUMP      59327",
      "59327 PUSH MEMORY ELEMENT IF INIT      2220 -> reg4",
      "59330 STRICT NOT EQUAL      reg4 !== undefined -> reg6",
      "59336 JUMP IF FALSE      reg6 TO: 59349 | 59339"
  ],
  "59316": [
      "59316 PUSH MEMORY ELEMENT IF INIT      2219 -> reg7",
      "59319 PUSH WINDOW       -> reg4",
      "59321 PUT      reg4[name] = reg7",
      "59327 PUSH MEMORY ELEMENT IF INIT      2220 -> reg4",
      "59330 STRICT NOT EQUAL      reg4 !== undefined -> reg6",
      "59336 JUMP IF FALSE      reg6 TO: 59349 | 59339"
  ],
  "59339": [
      "59339 PUSH MEMORY ELEMENT IF INIT      2220 -> reg7",
      "59342 STRICT NOT EQUAL      reg7 !== null -> reg10",
      "59346 SET      reg10 -> reg6",
      "59349 JUMP IF FALSE      reg6 TO: 59367 | 59352"
  ],
  "59349": ["59349 JUMP IF FALSE      reg6 TO: 59367 | 59352"],
  "59352": [
      "59352 PUSH MEMORY ELEMENT IF INIT      2175 -> reg4",
      "59355 GET WINDOW PROP      name -> reg6",
      "59360 PUSH MEMORY ELEMENT IF INIT      2220 -> reg7",
      "59363 PUT      reg4[reg6] = reg7",
      "59367 JUMP OR RETURN"
  ],
  "59367": ["59367 JUMP OR RETURN"],
  "59381": [
      "59381 SET MEMORY ELEMENT IF INIT      2204 = null",
      "59384 PUSH MEMORY ELEMENT IF INIT      2201 -> reg4",
      "59387 PUSH MEMORY ELEMENT IF INIT      2177 -> reg8",
      "59390 IN      reg4 inreg8 -> reg11",
      "59394 JUMP IF FALSE      reg11 TO: 59433 | 59397"
  ],
  "59397": [
      "59397 PUSH MEMORY ELEMENT IF INIT      2177 -> reg4",
      "59400 GET      reg4[getParameter] -> reg12",
      "59406 NEW ARRAY      1 -> reg13",
      "59409 PUSH MEMORY ELEMENT IF INIT      2177 -> reg10",
      "59412 PUSH MEMORY ELEMENT IF INIT      2201 -> reg14",
      "59415 GET      reg10[reg14] -> reg11",
      "59419 PUT      reg13[0] = reg11",
      "59423 CALL FUNCTION      OBJ: reg4 FUNC: reg12 ARGS: reg13",
      "59427 SET      reg2 -> reg8",
      "59430 SET MEMORY ELEMENT IF INIT      2204 = reg8",
      "59433 PUSH MEMORY ELEMENT IF INIT      2204 -> reg8",
      "59436 GET WINDOW PROP      Float32Array -> reg9",
      "59441 INSTANCEOF      reg8 instanceof reg9 -> reg10",
      "59445 JUMP IF TRUE      reg10 TO: 59463 | 59448"
  ],
  "59433": [
      "59433 PUSH MEMORY ELEMENT IF INIT      2204 -> reg8",
      "59436 GET WINDOW PROP      Float32Array -> reg9",
      "59441 INSTANCEOF      reg8 instanceof reg9 -> reg10",
      "59445 JUMP IF TRUE      reg10 TO: 59463 | 59448"
  ],
  "59448": [
      "59448 PUSH MEMORY ELEMENT IF INIT      2204 -> reg12",
      "59451 GET WINDOW PROP      Int32Array -> reg9",
      "59456 INSTANCEOF      reg12 instanceof reg9 -> reg8",
      "59460 SET      reg8 -> reg10",
      "59463 JUMP IF FALSE      reg10 TO: 59571 | 59466"
  ],
  "59463": ["59463 JUMP IF FALSE      reg10 TO: 59571 | 59466"],
  "59466": [
      "59466 EMPTY ARRAY      -> reg9",
      "59468 SET MEMORY ELEMENT IF INIT      2205 = reg9",
      "59471 SET MEMORY ELEMENT IF INIT      2206 = 0",
      "59474 PUSH MEMORY ELEMENT IF INIT      2206 -> reg9",
      "59477 PUSH MEMORY ELEMENT IF INIT      2204 -> reg8",
      "59480 GET      reg8[length] -> reg12",
      "59486 LESS THAN      reg9 < reg12 -> reg10",
      "59490 JUMP IF FALSE      reg10 TO: 59538 | 59493"
  ],
  "59493": [
      "59493 PUSH MEMORY ELEMENT IF INIT      2205 -> reg10",
      "59496 GET      reg10[push] -> reg9",
      "59502 NEW ARRAY      1 -> reg11",
      "59505 PUSH MEMORY ELEMENT IF INIT      2204 -> reg12",
      "59508 PUSH MEMORY ELEMENT IF INIT      2206 -> reg14",
      "59511 GET      reg12[reg14] -> reg13",
      "59515 PUT      reg11[0] = reg13",
      "59519 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg11",
      "59523 SET      reg2 -> reg8",
      "59526 PUSH MEMORY ELEMENT IF INIT      2206 -> reg8",
      "59529 ADD      reg81-> reg8",
      "59533 SET MEMORY ELEMENT IF INIT      2206 = reg8",
      "59536 JUMP      59474",
      "59474 PUSH MEMORY ELEMENT IF INIT      2206 -> reg9",
      "59477 PUSH MEMORY ELEMENT IF INIT      2204 -> reg8",
      "59480 GET      reg8[length] -> reg12",
      "59486 LESS THAN      reg9 < reg12 -> reg10",
      "59490 JUMP IF FALSE      reg10 TO: 59538 | 59493"
  ],
  "59538": [
      "59538 PUSH MEMORY ELEMENT IF INIT      2205 -> reg8",
      "59541 GET      reg8[toString] -> reg11",
      "59547 EMPTY ARRAY      -> reg12",
      "59549 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg12",
      "59553 SET      reg2 -> reg9",
      "59556 ADD      [NaN-> reg12",
      "59562 ADD      reg12NaN-> reg9",
      "59568 SET MEMORY ELEMENT IF INIT      2204 = reg9",
      "59571 PUSH MEMORY ELEMENT IF INIT      2201 -> reg9",
      "59574 PUSH MEMORY ELEMENT IF INIT      2174 -> reg11",
      "59577 IN      reg9 inreg11 -> reg12",
      "59581 JUMP IF FALSE      reg12 TO: 59604 | 59584"
  ],
  "59571": [
      "59571 PUSH MEMORY ELEMENT IF INIT      2201 -> reg9",
      "59574 PUSH MEMORY ELEMENT IF INIT      2174 -> reg11",
      "59577 IN      reg9 inreg11 -> reg12",
      "59581 JUMP IF FALSE      reg12 TO: 59604 | 59584"
  ],
  "59584": [
      "59584 PUSH MEMORY ELEMENT IF INIT      2174 -> reg9",
      "59587 PUSH MEMORY ELEMENT IF INIT      2201 -> reg12",
      "59590 GET      reg9[reg12] -> reg11",
      "59594 PUSH WINDOW       -> reg9",
      "59596 PUT      reg9[name] = reg11",
      "59602 JUMP      59615",
      "59615 PUSH MEMORY ELEMENT IF INIT      2204 -> reg9",
      "59618 STRICT NOT EQUAL      reg9 !== undefined -> reg13",
      "59624 JUMP IF FALSE      reg13 TO: 59637 | 59627"
  ],
  "59604": [
      "59604 PUSH MEMORY ELEMENT IF INIT      2201 -> reg9",
      "59607 PUSH WINDOW       -> reg11",
      "59609 PUT      reg11[name] = reg9",
      "59615 PUSH MEMORY ELEMENT IF INIT      2204 -> reg9",
      "59618 STRICT NOT EQUAL      reg9 !== undefined -> reg13",
      "59624 JUMP IF FALSE      reg13 TO: 59637 | 59627"
  ],
  "59627": [
      "59627 PUSH MEMORY ELEMENT IF INIT      2204 -> reg9",
      "59630 STRICT NOT EQUAL      reg9 !== null -> reg11",
      "59634 SET      reg11 -> reg13",
      "59637 JUMP IF FALSE      reg13 TO: 59655 | 59640"
  ],
  "59637": ["59637 JUMP IF FALSE      reg13 TO: 59655 | 59640"],
  "59640": [
      "59640 PUSH MEMORY ELEMENT IF INIT      2175 -> reg9",
      "59643 GET WINDOW PROP      name -> reg11",
      "59648 PUSH MEMORY ELEMENT IF INIT      2204 -> reg12",
      "59651 PUT      reg9[reg11] = reg12",
      "59655 JUMP OR RETURN"
  ],
  "59655": ["59655 JUMP OR RETURN"],
  "59667": [
      "59667 PUSH MEMORY ELEMENT IF INIT      2170 -> reg20",
      "59670 PUSH MEMORY ELEMENT IF INIT      280 -> reg23",
      "59673 GET      reg23[stringify] -> reg27",
      "59679 NEW ARRAY      1 -> reg25",
      "59682 PUSH MEMORY ELEMENT IF INIT      2175 -> reg26",
      "59685 PUT      reg25[0] = reg26",
      "59689 CALL FUNCTION      OBJ: reg23 FUNC: reg27 ARGS: reg25",
      "59693 SET      reg2 -> reg24",
      "59696 PUT      reg20[raw] = reg24",
      "59702 PUSH MEMORY ELEMENT IF INIT      2170 -> reg20",
      "59705 PUSH MEMORY ELEMENT IF INIT      2081 -> reg24",
      "59708 NEW ARRAY      1 -> reg27",
      "59711 PUSH MEMORY ELEMENT IF INIT      2170 -> reg26",
      "59714 GET      reg26[raw] -> reg28",
      "59720 PUT      reg27[0] = reg28",
      "59724 CALL FUNCTION      PTR: reg24 MEM: reg27",
      "59728 SET      reg2 -> reg25",
      "59731 PUT      reg20[hash] = reg25",
      "59737 PUSH MEMORY ELEMENT IF INIT      2170 -> reg20",
      "59740 JUMP OR RETURN VAL      reg20"
  ],
  "59744": [
      "59744 SET I      null",
      "59746 PUSH F.K      -> reg24",
      "59748 VOID F",
      "59749 SET MEMORY ELEMENT      0 = reg24",
      "59752 PUSH MEMORY ELEMENT IF INIT      2170 -> reg20",
      "59755 PUSH MEMORY ELEMENT IF INIT      0 -> reg24",
      "59758 PUT      reg20[raw] = reg24",
      "59764 PUSH MEMORY ELEMENT IF INIT      2170 -> reg20",
      "59767 PUSH MEMORY ELEMENT IF INIT      2081 -> reg25",
      "59770 NEW ARRAY      1 -> reg26",
      "59773 PUSH MEMORY ELEMENT IF INIT      280 -> reg29",
      "59776 GET      reg29[stringify] -> reg27",
      "59782 NEW ARRAY      1 -> reg32",
      "59785 PUSH MEMORY ELEMENT IF INIT      0 -> reg30",
      "59788 PUT      reg32[0] = reg30",
      "59792 CALL FUNCTION      OBJ: reg29 FUNC: reg27 ARGS: reg32",
      "59796 SET      reg2 -> reg28",
      "59799 PUT      reg26[0] = reg28",
      "59803 CALL FUNCTION      PTR: reg25 MEM: reg26",
      "59807 SET      reg2 -> reg24",
      "59810 PUT      reg20[hash] = reg24",
      "59816 PUSH MEMORY ELEMENT IF INIT      2170 -> reg24",
      "59819 JUMP OR RETURN VAL      reg24"
  ],
  "59914": [
      "59914 PUSH MEMORY ELEMENT IF INIT      2234 -> reg4",
      "59917 EMPTY OBJECT      -> reg7",
      "59919 PUSH MEMORY ELEMENT IF INIT      2235 -> reg8",
      "59922 GET      reg8[canPlayType] -> reg9",
      "59928 NEW ARRAY      1 -> reg10",
      "59931 PUT      reg10[0] = audio/ogg; codecs=\"vorbis\"",
      "59937 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "59941 SET      reg2 -> reg5",
      "59944 PUT      reg7[ogg] = reg5",
      "59950 PUSH MEMORY ELEMENT IF INIT      2235 -> reg10",
      "59953 GET      reg10[canPlayType] -> reg9",
      "59959 NEW ARRAY      1 -> reg12",
      "59962 PUT      reg12[0] = audio/mpeg;",
      "59968 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg12",
      "59972 SET      reg2 -> reg5",
      "59975 PUT      reg7[mp3] = reg5",
      "59981 PUSH MEMORY ELEMENT IF INIT      2235 -> reg9",
      "59984 GET      reg9[canPlayType] -> reg11",
      "59990 NEW ARRAY      1 -> reg12",
      "59993 PUT      reg12[0] = audio/wav;",
      "59999 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg12",
      "60003 SET      reg2 -> reg5",
      "60006 PUT      reg7[wav] = reg5",
      "60012 PUSH MEMORY ELEMENT IF INIT      2235 -> reg11",
      "60015 GET      reg11[canPlayType] -> reg12",
      "60021 NEW ARRAY      1 -> reg13",
      "60024 PUT      reg13[0] = audio/wav; codecs=\"0\"",
      "60030 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg13",
      "60034 SET      reg2 -> reg5",
      "60037 PUT      reg7[wav0] = reg5",
      "60043 PUSH MEMORY ELEMENT IF INIT      2235 -> reg5",
      "60046 GET      reg5[canPlayType] -> reg13",
      "60052 NEW ARRAY      1 -> reg14",
      "60055 PUT      reg14[0] = audio/wav; codecs=\"1\"",
      "60061 CALL FUNCTION      OBJ: reg5 FUNC: reg13 ARGS: reg14",
      "60065 SET      reg2 -> reg12",
      "60068 PUT      reg7[wav1] = reg12",
      "60074 PUSH MEMORY ELEMENT IF INIT      2235 -> reg13",
      "60077 GET      reg13[canPlayType] -> reg14",
      "60083 NEW ARRAY      1 -> reg15",
      "60086 PUT      reg15[0] = audio/wav; codecs=\"2\"",
      "60092 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg15",
      "60096 SET      reg2 -> reg12",
      "60099 PUT      reg7[wav2] = reg12",
      "60105 PUSH MEMORY ELEMENT IF INIT      2235 -> reg14",
      "60108 GET      reg14[canPlayType] -> reg18",
      "60114 NEW ARRAY      1 -> reg15",
      "60117 PUT      reg15[0] = audio/wave;",
      "60123 CALL FUNCTION      OBJ: reg14 FUNC: reg18 ARGS: reg15",
      "60127 SET      reg2 -> reg12",
      "60130 PUT      reg7[wave] = reg12",
      "60136 PUSH MEMORY ELEMENT IF INIT      2235 -> reg15",
      "60139 GET      reg15[canPlayType] -> reg17",
      "60145 NEW ARRAY      1 -> reg16",
      "60148 PUT      reg16[0] = audio/wave; codecs=0",
      "60154 CALL FUNCTION      OBJ: reg15 FUNC: reg17 ARGS: reg16",
      "60158 SET      reg2 -> reg12",
      "60161 PUT      reg7[wave0] = reg12",
      "60167 PUSH MEMORY ELEMENT IF INIT      2235 -> reg18",
      "60170 GET      reg18[canPlayType] -> reg16",
      "60176 NEW ARRAY      1 -> reg17",
      "60179 PUT      reg17[0] = audio/wave; codecs=1",
      "60185 CALL FUNCTION      OBJ: reg18 FUNC: reg16 ARGS: reg17",
      "60189 SET      reg2 -> reg12",
      "60192 PUT      reg7[wave1] = reg12",
      "60198 PUSH MEMORY ELEMENT IF INIT      2235 -> reg17",
      "60201 GET      reg17[canPlayType] -> reg20",
      "60207 NEW ARRAY      1 -> reg16",
      "60210 PUT      reg16[0] = audio/wave; codecs=2",
      "60216 CALL FUNCTION      OBJ: reg17 FUNC: reg20 ARGS: reg16",
      "60220 SET      reg2 -> reg12",
      "60223 PUT      reg7[wave2] = reg12",
      "60229 PUSH MEMORY ELEMENT IF INIT      2235 -> reg20",
      "60232 GET      reg20[canPlayType] -> reg21",
      "60238 NEW ARRAY      1 -> reg19",
      "60241 PUT      reg19[0] = audio/x-m4a;",
      "60247 CALL FUNCTION      OBJ: reg20 FUNC: reg21 ARGS: reg19",
      "60251 SET      reg2 -> reg16",
      "60254 PUT      reg7[m4a] = reg16",
      "60260 PUSH MEMORY ELEMENT IF INIT      2235 -> reg19",
      "60263 GET      reg19[canPlayType] -> reg22",
      "60269 NEW ARRAY      1 -> reg16",
      "60272 PUT      reg16[0] = audio/aac;",
      "60278 CALL FUNCTION      OBJ: reg19 FUNC: reg22 ARGS: reg16",
      "60282 SET      reg2 -> reg12",
      "60285 PUT      reg7[aac] = reg12",
      "60291 PUSH MEMORY ELEMENT IF INIT      2235 -> reg21",
      "60294 GET      reg21[canPlayType] -> reg22",
      "60300 NEW ARRAY      1 -> reg16",
      "60303 PUT      reg16[0] = audio/webm;",
      "60309 CALL FUNCTION      OBJ: reg21 FUNC: reg22 ARGS: reg16",
      "60313 SET      reg2 -> reg12",
      "60316 PUT      reg7[webm] = reg12",
      "60322 PUSH MEMORY ELEMENT IF INIT      2235 -> reg16",
      "60325 GET      reg16[canPlayType] -> reg22",
      "60331 NEW ARRAY      1 -> reg23",
      "60334 PUT      reg23[0] = audio/mp4; codecs=\"mp4a.40.2\"",
      "60340 CALL FUNCTION      OBJ: reg16 FUNC: reg22 ARGS: reg23",
      "60344 SET      reg2 -> reg12",
      "60347 PUT      reg7[mp4] = reg12",
      "60353 PUSH MEMORY ELEMENT IF INIT      2235 -> reg12",
      "60356 GET      reg12[canPlayType] -> reg23",
      "60362 NEW ARRAY      1 -> reg26",
      "60365 PUT      reg26[0] = audio/x-mpeg",
      "60371 CALL FUNCTION      OBJ: reg12 FUNC: reg23 ARGS: reg26",
      "60375 SET      reg2 -> reg22",
      "60378 PUT      reg7[xmpeg] = reg22",
      "60384 PUSH MEMORY ELEMENT IF INIT      2235 -> reg27",
      "60387 GET      reg27[canPlayType] -> reg24",
      "60393 NEW ARRAY      1 -> reg25",
      "60396 PUT      reg25[0] = audio/x-mpegurl",
      "60402 CALL FUNCTION      OBJ: reg27 FUNC: reg24 ARGS: reg25",
      "60406 SET      reg2 -> reg23",
      "60409 PUT      reg7[xmpegUrl] = reg23",
      "60415 PUT      reg4[raw] = reg7",
      "60421 PUSH MEMORY ELEMENT IF INIT      2234 -> reg4",
      "60424 PUSH MEMORY ELEMENT IF INIT      2081 -> reg24",
      "60427 NEW ARRAY      1 -> reg22",
      "60430 PUSH MEMORY ELEMENT IF INIT      280 -> reg25",
      "60433 GET      reg25[stringify] -> reg26",
      "60439 NEW ARRAY      1 -> reg28",
      "60442 PUSH MEMORY ELEMENT IF INIT      2234 -> reg29",
      "60445 GET      reg29[raw] -> reg32",
      "60451 PUT      reg28[0] = reg32",
      "60455 CALL FUNCTION      OBJ: reg25 FUNC: reg26 ARGS: reg28",
      "60459 SET      reg2 -> reg23",
      "60462 PUT      reg22[0] = reg23",
      "60466 CALL FUNCTION      PTR: reg24 MEM: reg22",
      "60470 SET      reg2 -> reg7",
      "60473 PUT      reg4[hash] = reg7",
      "60479 PUSH MEMORY ELEMENT IF INIT      2234 -> reg4",
      "60482 JUMP OR RETURN VAL      reg4"
  ],
  "60486": [
      "60486 GET WINDOW PROP      Error -> reg4",
      "60491 NEW ARRAY      1 -> reg24",
      "60494 PUT      reg24[0] = Not Supported",
      "60500 BIND APPLY      reg4 reg24 -> 7",
      "60504 HANDLE ERROR      reg7",
      "60506 JUMP      60585",
      "60585 SET I      null",
      "60587 JUMP OR RETURN"
  ],
  "60508": [
      "60508 SET I      null",
      "60510 PUSH F.K      -> reg22",
      "60512 VOID F",
      "60513 SET MEMORY ELEMENT      0 = reg22",
      "60516 PUSH MEMORY ELEMENT IF INIT      2234 -> reg4",
      "60519 PUSH MEMORY ELEMENT IF INIT      0 -> reg22",
      "60522 PUT      reg4[raw] = reg22",
      "60528 PUSH MEMORY ELEMENT IF INIT      2234 -> reg4",
      "60531 PUSH MEMORY ELEMENT IF INIT      2081 -> reg23",
      "60534 NEW ARRAY      1 -> reg22",
      "60537 PUSH MEMORY ELEMENT IF INIT      280 -> reg28",
      "60540 GET      reg28[stringify] -> reg30",
      "60546 NEW ARRAY      1 -> reg29",
      "60549 PUSH MEMORY ELEMENT IF INIT      0 -> reg33",
      "60552 PUT      reg29[0] = reg33",
      "60556 CALL FUNCTION      OBJ: reg28 FUNC: reg30 ARGS: reg29",
      "60560 SET      reg2 -> reg24",
      "60563 PUT      reg22[0] = reg24",
      "60567 CALL FUNCTION      PTR: reg23 MEM: reg22",
      "60571 SET      reg2 -> reg7",
      "60574 PUT      reg4[hash] = reg7",
      "60580 PUSH MEMORY ELEMENT IF INIT      2234 -> reg26",
      "60583 JUMP OR RETURN VAL      reg26"
  ],
  "60678": [
      "60678 PUSH MEMORY ELEMENT IF INIT      2240 -> reg6",
      "60681 EMPTY OBJECT      -> reg4",
      "60683 PUSH MEMORY ELEMENT IF INIT      2241 -> reg8",
      "60686 GET      reg8[canPlayType] -> reg9",
      "60692 NEW ARRAY      1 -> reg10",
      "60695 PUT      reg10[0] = video/ogg; codecs=\"theora\"",
      "60701 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "60705 SET      reg2 -> reg7",
      "60708 PUT      reg4[ogg] = reg7",
      "60714 PUSH MEMORY ELEMENT IF INIT      2241 -> reg9",
      "60717 GET      reg9[canPlayType] -> reg12",
      "60723 NEW ARRAY      1 -> reg10",
      "60726 PUT      reg10[0] = video/mp4; codecs=\"avc1.42E01E\"",
      "60732 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg10",
      "60736 SET      reg2 -> reg7",
      "60739 PUT      reg4[h264] = reg7",
      "60745 PUSH MEMORY ELEMENT IF INIT      2241 -> reg11",
      "60748 GET      reg11[canPlayType] -> reg12",
      "60754 NEW ARRAY      1 -> reg10",
      "60757 PUT      reg10[0] = video/mp4; codecs=\"mp4v.20.8, mp4a.40.2\"",
      "60763 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg10",
      "60767 SET      reg2 -> reg7",
      "60770 PUT      reg4[mpeg4v] = reg7",
      "60776 PUSH MEMORY ELEMENT IF INIT      2241 -> reg10",
      "60779 GET      reg10[canPlayType] -> reg12",
      "60785 NEW ARRAY      1 -> reg13",
      "60788 PUT      reg13[0] = video/mp4; codecs=\"mp4v.20.240, mp4a.40.2\"",
      "60794 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg13",
      "60798 SET      reg2 -> reg7",
      "60801 PUT      reg4[mpeg4a] = reg7",
      "60807 PUSH MEMORY ELEMENT IF INIT      2241 -> reg12",
      "60810 GET      reg12[canPlayType] -> reg15",
      "60816 NEW ARRAY      1 -> reg13",
      "60819 PUT      reg13[0] = video/x-matroska; codecs=\"theora, vorbis\"",
      "60825 CALL FUNCTION      OBJ: reg12 FUNC: reg15 ARGS: reg13",
      "60829 SET      reg2 -> reg7",
      "60832 PUT      reg4[theora] = reg7",
      "60838 PUSH MEMORY ELEMENT IF INIT      2241 -> reg14",
      "60841 GET      reg14[canPlayType] -> reg13",
      "60847 NEW ARRAY      1 -> reg15",
      "60850 PUT      reg15[0] = video/3gpp; codecs=\"mp4v.20.8, samr\"",
      "60856 CALL FUNCTION      OBJ: reg14 FUNC: reg13 ARGS: reg15",
      "60860 SET      reg2 -> reg7",
      "60863 PUT      reg4[3gpp] = reg7",
      "60869 PUSH MEMORY ELEMENT IF INIT      2241 -> reg13",
      "60872 GET      reg13[canPlayType] -> reg15",
      "60878 NEW ARRAY      1 -> reg16",
      "60881 PUT      reg16[0] = video/mp2t; codecs=\"avc1.42E01E,mp4a.40.2\"",
      "60887 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg16",
      "60891 SET      reg2 -> reg7",
      "60894 PUT      reg4[mp2t] = reg7",
      "60900 PUSH MEMORY ELEMENT IF INIT      2241 -> reg16",
      "60903 GET      reg16[canPlayType] -> reg17",
      "60909 NEW ARRAY      1 -> reg15",
      "60912 PUT      reg15[0] = video/mp4;",
      "60918 CALL FUNCTION      OBJ: reg16 FUNC: reg17 ARGS: reg15",
      "60922 SET      reg2 -> reg7",
      "60925 PUT      reg4[mp4] = reg7",
      "60931 PUSH MEMORY ELEMENT IF INIT      2241 -> reg7",
      "60934 GET      reg7[canPlayType] -> reg19",
      "60940 NEW ARRAY      1 -> reg17",
      "60943 PUT      reg17[0] = video/mp4; codecs=\"avc1.42c00d\"",
      "60949 CALL FUNCTION      OBJ: reg7 FUNC: reg19 ARGS: reg17",
      "60953 SET      reg2 -> reg15",
      "60956 PUT      reg4[mp4avc42] = reg15",
      "60962 PUSH MEMORY ELEMENT IF INIT      2241 -> reg15",
      "60965 GET      reg15[canPlayType] -> reg18",
      "60971 NEW ARRAY      1 -> reg21",
      "60974 PUT      reg21[0] = video/mp4; codecs=\"avc1.64001E, mp4a.40.2\"",
      "60980 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg21",
      "60984 SET      reg2 -> reg17",
      "60987 PUT      reg4[mp4avc64] = reg17",
      "60993 PUSH MEMORY ELEMENT IF INIT      2241 -> reg21",
      "60996 GET      reg21[canPlayType] -> reg18",
      "61002 NEW ARRAY      1 -> reg19",
      "61005 PUT      reg19[0] = video/mp4; codecs=bogus",
      "61011 CALL FUNCTION      OBJ: reg21 FUNC: reg18 ARGS: reg19",
      "61015 SET      reg2 -> reg17",
      "61018 PUT      reg4[mp4bogus] = reg17",
      "61024 PUSH MEMORY ELEMENT IF INIT      2241 -> reg17",
      "61027 GET      reg17[canPlayType] -> reg19",
      "61033 NEW ARRAY      1 -> reg20",
      "61036 PUT      reg20[0] = video/mp4; codecs=mp4a.40.2",
      "61042 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg20",
      "61046 SET      reg2 -> reg18",
      "61049 PUT      reg4[mp4a] = reg18",
      "61055 PUSH MEMORY ELEMENT IF INIT      2241 -> reg19",
      "61058 GET      reg19[canPlayType] -> reg20",
      "61064 NEW ARRAY      1 -> reg22",
      "61067 PUT      reg22[0] = video/mpeg;",
      "61073 CALL FUNCTION      OBJ: reg19 FUNC: reg20 ARGS: reg22",
      "61077 SET      reg2 -> reg18",
      "61080 PUT      reg4[mpeg] = reg18",
      "61086 PUSH MEMORY ELEMENT IF INIT      2241 -> reg22",
      "61089 GET      reg22[canPlayType] -> reg23",
      "61095 NEW ARRAY      1 -> reg27",
      "61098 PUT      reg27[0] = video/ogg; codecs=\"theora, speex\"",
      "61104 CALL FUNCTION      OBJ: reg22 FUNC: reg23 ARGS: reg27",
      "61108 SET      reg2 -> reg18",
      "61111 PUT      reg4[oggTS] = reg18",
      "61117 PUSH MEMORY ELEMENT IF INIT      2241 -> reg18",
      "61120 GET      reg18[canPlayType] -> reg23",
      "61126 NEW ARRAY      1 -> reg24",
      "61129 PUT      reg24[0] = video/ogg; codecs=opus",
      "61135 CALL FUNCTION      OBJ: reg18 FUNC: reg23 ARGS: reg24",
      "61139 SET      reg2 -> reg20",
      "61142 PUT      reg4[oggO] = reg20",
      "61148 PUSH MEMORY ELEMENT IF INIT      2241 -> reg23",
      "61151 GET      reg23[canPlayType] -> reg24",
      "61157 NEW ARRAY      1 -> reg25",
      "61160 PUT      reg25[0] = video/ogg; codecs=speex",
      "61166 CALL FUNCTION      OBJ: reg23 FUNC: reg24 ARGS: reg25",
      "61170 SET      reg2 -> reg20",
      "61173 PUT      reg4[oggS] = reg20",
      "61179 PUSH MEMORY ELEMENT IF INIT      2241 -> reg24",
      "61182 GET      reg24[canPlayType] -> reg25",
      "61188 NEW ARRAY      1 -> reg26",
      "61191 PUT      reg26[0] = video/webm; codecs=vorbis",
      "61197 CALL FUNCTION      OBJ: reg24 FUNC: reg25 ARGS: reg26",
      "61201 SET      reg2 -> reg20",
      "61204 PUT      reg4[webm] = reg20",
      "61210 PUSH MEMORY ELEMENT IF INIT      2241 -> reg25",
      "61213 GET      reg25[canPlayType] -> reg29",
      "61219 NEW ARRAY      1 -> reg26",
      "61222 PUT      reg26[0] = video/webm; codecs=\"vorbis,vp9\"",
      "61228 CALL FUNCTION      OBJ: reg25 FUNC: reg29 ARGS: reg26",
      "61232 SET      reg2 -> reg20",
      "61235 PUT      reg4[webmVo] = reg20",
      "61241 PUSH MEMORY ELEMENT IF INIT      2241 -> reg26",
      "61244 GET      reg26[canPlayType] -> reg27",
      "61250 NEW ARRAY      1 -> reg29",
      "61253 PUT      reg29[0] = video/webm; codecs=\"vp8, vorbis\"",
      "61259 CALL FUNCTION      OBJ: reg26 FUNC: reg27 ARGS: reg29",
      "61263 SET      reg2 -> reg20",
      "61266 PUT      reg4[webMVp] = reg20",
      "61272 PUSH MEMORY ELEMENT IF INIT      2241 -> reg29",
      "61275 GET      reg29[canPlayType] -> reg27",
      "61281 NEW ARRAY      1 -> reg32",
      "61284 PUT      reg32[0] = video/x-mpeg",
      "61290 CALL FUNCTION      OBJ: reg29 FUNC: reg27 ARGS: reg32",
      "61294 SET      reg2 -> reg20",
      "61297 PUT      reg4[xmpeg] = reg20",
      "61303 PUT      reg6[raw] = reg4",
      "61309 PUSH MEMORY ELEMENT IF INIT      2240 -> reg6",
      "61312 PUSH MEMORY ELEMENT IF INIT      2081 -> reg4",
      "61315 NEW ARRAY      1 -> reg27",
      "61318 PUSH MEMORY ELEMENT IF INIT      280 -> reg30",
      "61321 GET      reg30[stringify] -> reg31",
      "61327 NEW ARRAY      1 -> reg32",
      "61330 PUSH MEMORY ELEMENT IF INIT      2240 -> reg33",
      "61333 GET      reg33[raw] -> reg34",
      "61339 PUT      reg32[0] = reg34",
      "61343 CALL FUNCTION      OBJ: reg30 FUNC: reg31 ARGS: reg32",
      "61347 SET      reg2 -> reg28",
      "61350 PUT      reg27[0] = reg28",
      "61354 CALL FUNCTION      PTR: reg4 MEM: reg27",
      "61358 SET      reg2 -> reg20",
      "61361 PUT      reg6[hash] = reg20",
      "61367 PUSH MEMORY ELEMENT IF INIT      2240 -> reg6",
      "61370 JUMP OR RETURN VAL      reg6"
  ],
  "61374": [
      "61374 GET WINDOW PROP      Error -> reg20",
      "61379 NEW ARRAY      1 -> reg6",
      "61382 PUT      reg6[0] = Not Supported",
      "61388 BIND APPLY      reg20 reg6 -> 4",
      "61392 HANDLE ERROR      reg4",
      "61394 JUMP      61473",
      "61473 SET I      null",
      "61475 JUMP OR RETURN"
  ],
  "61396": [
      "61396 SET I      null",
      "61398 PUSH F.K      -> reg6",
      "61400 VOID F",
      "61401 SET MEMORY ELEMENT      0 = reg6",
      "61404 PUSH MEMORY ELEMENT IF INIT      2240 -> reg6",
      "61407 PUSH MEMORY ELEMENT IF INIT      0 -> reg20",
      "61410 PUT      reg6[raw] = reg20",
      "61416 PUSH MEMORY ELEMENT IF INIT      2240 -> reg4",
      "61419 PUSH MEMORY ELEMENT IF INIT      2081 -> reg20",
      "61422 NEW ARRAY      1 -> reg27",
      "61425 PUSH MEMORY ELEMENT IF INIT      280 -> reg32",
      "61428 GET      reg32[stringify] -> reg31",
      "61434 NEW ARRAY      1 -> reg34",
      "61437 PUSH MEMORY ELEMENT IF INIT      0 -> reg33",
      "61440 PUT      reg34[0] = reg33",
      "61444 CALL FUNCTION      OBJ: reg32 FUNC: reg31 ARGS: reg34",
      "61448 SET      reg2 -> reg28",
      "61451 PUT      reg27[0] = reg28",
      "61455 CALL FUNCTION      PTR: reg20 MEM: reg27",
      "61459 SET      reg2 -> reg6",
      "61462 PUT      reg4[hash] = reg6",
      "61468 PUSH MEMORY ELEMENT IF INIT      2240 -> reg4",
      "61471 JUMP OR RETURN VAL      reg4"
  ],
  "61731": [
      "61731 PUSH MEMORY ELEMENT IF INIT      2245 -> reg5",
      "61734 GET      reg5[navigator] -> reg4",
      "61740 GET      reg4[requestMediaKeySystemAccess] -> reg5",
      "61746 JUMP IF FALSE      reg5 TO: 62234 | 61749"
  ],
  "61749": [
      "61749 PUSH MEMORY ELEMENT IF INIT      2245 -> reg7",
      "61752 GET      reg7[navigator] -> reg4",
      "61758 GET      reg4[requestMediaKeySystemAccess] -> reg5",
      "61764 TYPEOF      reg5 -> reg7",
      "61767 STRICT EQUAL      reg7 === function -> reg4",
      "61773 JUMP IF FALSE      reg4 TO: 62232 | 61776"
  ],
  "61776": [
      "61776 SET MEMORY ELEMENT IF INIT      2254 = true",
      "61779 INIT FUNCTION STATE      PTR: 61788 NAME:  LEN: 1 -> reg4",
      "61786 JUMP      62079",
      "62079 SET MEMORY ELEMENT IF INIT      2255 = reg4",
      "62082 PUSH MEMORY ELEMENT IF INIT      2250 -> reg7",
      "62085 COPY ENUMERABLE      reg7 -> reg4",
      "62088 GET      reg4[length] -> reg7",
      "62094 EQUAL      reg7 == 0 -> reg8",
      "62098 JUMP IF TRUE      reg8 TO: 62232 | 62101"
  ],
  "61924": [
      "61924 PUSH MEMORY ELEMENT IF INIT      2245 -> reg7",
      "61927 GET      reg7[navigator] -> reg8",
      "61933 GET      reg8[requestMediaKeySystemAccess] -> reg7",
      "61939 NEW ARRAY      2 -> reg9",
      "61942 PUSH MEMORY ELEMENT IF INIT      2269 -> reg10",
      "61945 PUT      reg9[0] = reg10",
      "61949 PUSH MEMORY ELEMENT IF INIT      2270 -> reg10",
      "61952 PUT      reg9[1] = reg10",
      "61956 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "61960 SET      reg2 -> reg6",
      "61963 GET      reg6[then] -> reg7",
      "61969 NEW ARRAY      1 -> reg10",
      "61972 INIT FUNCTION STATE      PTR: 61981 NAME:  LEN: 1 -> reg9",
      "61979 JUMP      62011",
      "62011 PUT      reg10[0] = reg9",
      "62015 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg10",
      "62019 SET      reg2 -> reg5",
      "62022 GET      reg5[catch] -> reg7",
      "62028 NEW ARRAY      1 -> reg9",
      "62031 INIT FUNCTION STATE      PTR: 62040 NAME:  LEN: 0 -> reg10",
      "62038 JUMP      62067",
      "62067 PUT      reg9[0] = reg10",
      "62071 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg9",
      "62075 SET      reg2 -> reg4",
      "62078 JUMP OR RETURN"
  ],
  "62078": ["62078 JUMP OR RETURN"],
  "62101": [
      "62101 SET      0 -> reg8",
      "62104 GET      reg4[reg8] -> reg5",
      "62108 SET MEMORY ELEMENT IF INIT      2256 = reg5",
      "62111 PUSH MEMORY ELEMENT IF INIT      2250 -> reg11",
      "62114 GET      reg11[hasOwnProperty] -> reg9",
      "62120 NEW ARRAY      1 -> reg12",
      "62123 PUSH MEMORY ELEMENT IF INIT      2256 -> reg15",
      "62126 PUT      reg12[0] = reg15",
      "62130 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg12",
      "62134 SET      reg2 -> reg10",
      "62137 JUMP IF FALSE      reg10 TO: 62221 | 62140"
  ],
  "62104": [
      "62104 GET      reg4[reg8] -> reg5",
      "62108 SET MEMORY ELEMENT IF INIT      2256 = reg5",
      "62111 PUSH MEMORY ELEMENT IF INIT      2250 -> reg11",
      "62114 GET      reg11[hasOwnProperty] -> reg9",
      "62120 NEW ARRAY      1 -> reg12",
      "62123 PUSH MEMORY ELEMENT IF INIT      2256 -> reg15",
      "62126 PUT      reg12[0] = reg15",
      "62130 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg12",
      "62134 SET      reg2 -> reg10",
      "62137 JUMP IF FALSE      reg10 TO: 62221 | 62140"
  ],
  "62140": [
      "62140 PUSH MEMORY ELEMENT IF INIT      2250 -> reg10",
      "62143 PUSH MEMORY ELEMENT IF INIT      2256 -> reg12",
      "62146 GET      reg10[reg12] -> reg9",
      "62150 COPY ENUMERABLE      reg9 -> reg12",
      "62153 GET      reg12[length] -> reg10",
      "62159 EQUAL      reg10 == 0 -> reg15",
      "62163 JUMP IF TRUE      reg15 TO: 62221 | 62166"
  ],
  "62166": [
      "62166 SET      0 -> reg15",
      "62169 GET      reg12[reg15] -> reg9",
      "62173 SET MEMORY ELEMENT IF INIT      2257 = reg9",
      "62176 PUSH MEMORY ELEMENT IF INIT      2255 -> reg16",
      "62179 NEW ARRAY      1 -> reg14",
      "62182 PUSH MEMORY ELEMENT IF INIT      2250 -> reg18",
      "62185 PUSH MEMORY ELEMENT IF INIT      2256 -> reg19",
      "62188 GET      reg18[reg19] -> reg17",
      "62192 PUSH MEMORY ELEMENT IF INIT      2257 -> reg19",
      "62195 GET      reg17[reg19] -> reg18",
      "62199 PUT      reg14[0] = reg18",
      "62203 CALL FUNCTION      PTR: reg16 MEM: reg14",
      "62207 SET      reg2 -> reg13",
      "62210 ADD      reg151-> reg15",
      "62214 LESS THAN      reg15 < reg10 -> reg13",
      "62218 JUMP IF TRUE      reg13 TO: 62169 | 62221"
  ],
  "62169": [
      "62169 GET      reg12[reg15] -> reg9",
      "62173 SET MEMORY ELEMENT IF INIT      2257 = reg9",
      "62176 PUSH MEMORY ELEMENT IF INIT      2255 -> reg16",
      "62179 NEW ARRAY      1 -> reg14",
      "62182 PUSH MEMORY ELEMENT IF INIT      2250 -> reg18",
      "62185 PUSH MEMORY ELEMENT IF INIT      2256 -> reg19",
      "62188 GET      reg18[reg19] -> reg17",
      "62192 PUSH MEMORY ELEMENT IF INIT      2257 -> reg19",
      "62195 GET      reg17[reg19] -> reg18",
      "62199 PUT      reg14[0] = reg18",
      "62203 CALL FUNCTION      PTR: reg16 MEM: reg14",
      "62207 SET      reg2 -> reg13",
      "62210 ADD      reg151-> reg15",
      "62214 LESS THAN      reg15 < reg10 -> reg13",
      "62218 JUMP IF TRUE      reg13 TO: 62169 | 62221"
  ],
  "62221": [
      "62221 ADD      reg81-> reg8",
      "62225 LESS THAN      reg8 < reg7 -> reg9",
      "62229 JUMP IF TRUE      reg9 TO: 62104 | 62232"
  ],
  "62232": [
      "62232 JUMP      62807",
      "62807 PUSH MEMORY ELEMENT IF INIT      2252 -> reg5",
      "62810 JUMP OR RETURN VAL      reg5"
  ],
  "62234": [
      "62234 PUSH MEMORY ELEMENT IF INIT      2245 -> reg4",
      "62237 GET      reg4[MSMediaKeys] -> reg5",
      "62243 JUMP IF FALSE      reg5 TO: 62519 | 62246"
  ],
  "62246": [
      "62246 PUSH MEMORY ELEMENT IF INIT      2245 -> reg5",
      "62249 GET      reg5[MSMediaKeys] -> reg4",
      "62255 TYPEOF      reg4 -> reg5",
      "62258 STRICT EQUAL      reg5 === function -> reg4",
      "62264 JUMP IF FALSE      reg4 TO: 62517 | 62267"
  ],
  "62267": [
      "62267 SET MEMORY ELEMENT IF INIT      2254 = true",
      "62270 PUSH MEMORY ELEMENT IF INIT      2250 -> reg13",
      "62273 COPY ENUMERABLE      reg13 -> reg4",
      "62276 GET      reg4[length] -> reg9",
      "62282 EQUAL      reg9 == 0 -> reg8",
      "62286 JUMP IF TRUE      reg8 TO: 62517 | 62289"
  ],
  "62289": [
      "62289 SET      0 -> reg8",
      "62292 GET      reg4[reg8] -> reg5",
      "62296 SET MEMORY ELEMENT IF INIT      2259 = reg5",
      "62299 PUSH MEMORY ELEMENT IF INIT      2250 -> reg15",
      "62302 GET      reg15[hasOwnProperty] -> reg10",
      "62308 NEW ARRAY      1 -> reg12",
      "62311 PUSH MEMORY ELEMENT IF INIT      2259 -> reg14",
      "62314 PUT      reg12[0] = reg14",
      "62318 CALL FUNCTION      OBJ: reg15 FUNC: reg10 ARGS: reg12",
      "62322 SET      reg2 -> reg7",
      "62325 JUMP IF FALSE      reg7 TO: 62506 | 62328"
  ],
  "62292": [
      "62292 GET      reg4[reg8] -> reg5",
      "62296 SET MEMORY ELEMENT IF INIT      2259 = reg5",
      "62299 PUSH MEMORY ELEMENT IF INIT      2250 -> reg15",
      "62302 GET      reg15[hasOwnProperty] -> reg10",
      "62308 NEW ARRAY      1 -> reg12",
      "62311 PUSH MEMORY ELEMENT IF INIT      2259 -> reg14",
      "62314 PUT      reg12[0] = reg14",
      "62318 CALL FUNCTION      OBJ: reg15 FUNC: reg10 ARGS: reg12",
      "62322 SET      reg2 -> reg7",
      "62325 JUMP IF FALSE      reg7 TO: 62506 | 62328"
  ],
  "62328": [
      "62328 PUSH MEMORY ELEMENT IF INIT      2250 -> reg7",
      "62331 PUSH MEMORY ELEMENT IF INIT      2259 -> reg12",
      "62334 GET      reg7[reg12] -> reg10",
      "62338 COPY ENUMERABLE      reg10 -> reg12",
      "62341 GET      reg12[length] -> reg10",
      "62347 EQUAL      reg10 == 0 -> reg13",
      "62351 JUMP IF TRUE      reg13 TO: 62506 | 62354"
  ],
  "62354": [
      "62354 SET      0 -> reg13",
      "62357 GET      reg12[reg13] -> reg7",
      "62361 SET MEMORY ELEMENT IF INIT      2260 = reg7",
      "62364 PUSH MEMORY ELEMENT IF INIT      2245 -> reg16",
      "62367 GET      reg16[MSMediaKeys] -> reg17",
      "62373 GET      reg17[isTypeSupported] -> reg18",
      "62379 NEW ARRAY      1 -> reg16",
      "62382 PUSH MEMORY ELEMENT IF INIT      2250 -> reg20",
      "62385 PUSH MEMORY ELEMENT IF INIT      2259 -> reg22",
      "62388 GET      reg20[reg22] -> reg21",
      "62392 PUSH MEMORY ELEMENT IF INIT      2260 -> reg19",
      "62395 GET      reg21[reg19] -> reg20",
      "62399 PUT      reg16[0] = reg20",
      "62403 CALL FUNCTION      OBJ: reg17 FUNC: reg18 ARGS: reg16",
      "62407 SET      reg2 -> reg14",
      "62410 JUMP IF FALSE      reg14 TO: 62455 | 62413"
  ],
  "62357": [
      "62357 GET      reg12[reg13] -> reg7",
      "62361 SET MEMORY ELEMENT IF INIT      2260 = reg7",
      "62364 PUSH MEMORY ELEMENT IF INIT      2245 -> reg16",
      "62367 GET      reg16[MSMediaKeys] -> reg17",
      "62373 GET      reg17[isTypeSupported] -> reg18",
      "62379 NEW ARRAY      1 -> reg16",
      "62382 PUSH MEMORY ELEMENT IF INIT      2250 -> reg20",
      "62385 PUSH MEMORY ELEMENT IF INIT      2259 -> reg22",
      "62388 GET      reg20[reg22] -> reg21",
      "62392 PUSH MEMORY ELEMENT IF INIT      2260 -> reg19",
      "62395 GET      reg21[reg19] -> reg20",
      "62399 PUT      reg16[0] = reg20",
      "62403 CALL FUNCTION      OBJ: reg17 FUNC: reg18 ARGS: reg16",
      "62407 SET      reg2 -> reg14",
      "62410 JUMP IF FALSE      reg14 TO: 62455 | 62413"
  ],
  "62413": [
      "62413 PUSH MEMORY ELEMENT IF INIT      2252 -> reg16",
      "62416 GET      reg16[push] -> reg19",
      "62422 NEW ARRAY      1 -> reg18",
      "62425 PUSH MEMORY ELEMENT IF INIT      2250 -> reg20",
      "62428 PUSH MEMORY ELEMENT IF INIT      2259 -> reg21",
      "62431 GET      reg20[reg21] -> reg22",
      "62435 PUSH MEMORY ELEMENT IF INIT      2260 -> reg20",
      "62438 GET      reg22[reg20] -> reg21",
      "62442 PUT      reg18[0] = reg21",
      "62446 CALL FUNCTION      OBJ: reg16 FUNC: reg19 ARGS: reg18",
      "62450 SET      reg2 -> reg14",
      "62453 JUMP      62495",
      "62495 ADD      reg131-> reg13",
      "62499 LESS THAN      reg13 < reg10 -> reg14",
      "62503 JUMP IF TRUE      reg14 TO: 62357 | 62506"
  ],
  "62455": [
      "62455 PUSH MEMORY ELEMENT IF INIT      2253 -> reg19",
      "62458 GET      reg19[push] -> reg18",
      "62464 NEW ARRAY      1 -> reg20",
      "62467 PUSH MEMORY ELEMENT IF INIT      2250 -> reg21",
      "62470 PUSH MEMORY ELEMENT IF INIT      2259 -> reg23",
      "62473 GET      reg21[reg23] -> reg22",
      "62477 PUSH MEMORY ELEMENT IF INIT      2260 -> reg21",
      "62480 GET      reg22[reg21] -> reg23",
      "62484 PUT      reg20[0] = reg23",
      "62488 CALL FUNCTION      OBJ: reg19 FUNC: reg18 ARGS: reg20",
      "62492 SET      reg2 -> reg14",
      "62495 ADD      reg131-> reg13",
      "62499 LESS THAN      reg13 < reg10 -> reg14",
      "62503 JUMP IF TRUE      reg14 TO: 62357 | 62506"
  ],
  "62506": [
      "62506 ADD      reg81-> reg8",
      "62510 LESS THAN      reg8 < reg9 -> reg10",
      "62514 JUMP IF TRUE      reg10 TO: 62292 | 62517"
  ],
  "62517": [
      "62517 JUMP      62807",
      "62807 PUSH MEMORY ELEMENT IF INIT      2252 -> reg5",
      "62810 JUMP OR RETURN VAL      reg5"
  ],
  "62519": [
      "62519 PUSH MEMORY ELEMENT IF INIT      2251 -> reg4",
      "62522 GET      reg4[webkitGenerateKeyRequest] -> reg5",
      "62528 JUMP IF FALSE      reg5 TO: 62804 | 62531"
  ],
  "62531": [
      "62531 PUSH MEMORY ELEMENT IF INIT      2251 -> reg4",
      "62534 GET      reg4[webkitGenerateKeyRequest] -> reg5",
      "62540 TYPEOF      reg5 -> reg7",
      "62543 STRICT EQUAL      reg7 === function -> reg4",
      "62549 JUMP IF FALSE      reg4 TO: 62802 | 62552"
  ],
  "62552": [
      "62552 SET MEMORY ELEMENT IF INIT      2254 = true",
      "62555 PUSH MEMORY ELEMENT IF INIT      2250 -> reg5",
      "62558 COPY ENUMERABLE      reg5 -> reg7",
      "62561 GET      reg7[length] -> reg8",
      "62567 EQUAL      reg8 == 0 -> reg10",
      "62571 JUMP IF TRUE      reg10 TO: 62802 | 62574"
  ],
  "62574": [
      "62574 SET      0 -> reg10",
      "62577 GET      reg7[reg10] -> reg4",
      "62581 SET MEMORY ELEMENT IF INIT      2262 = reg4",
      "62584 PUSH MEMORY ELEMENT IF INIT      2250 -> reg21",
      "62587 GET      reg21[hasOwnProperty] -> reg12",
      "62593 NEW ARRAY      1 -> reg9",
      "62596 PUSH MEMORY ELEMENT IF INIT      2262 -> reg13",
      "62599 PUT      reg9[0] = reg13",
      "62603 CALL FUNCTION      OBJ: reg21 FUNC: reg12 ARGS: reg9",
      "62607 SET      reg2 -> reg5",
      "62610 JUMP IF FALSE      reg5 TO: 62791 | 62613"
  ],
  "62577": [
      "62577 GET      reg7[reg10] -> reg4",
      "62581 SET MEMORY ELEMENT IF INIT      2262 = reg4",
      "62584 PUSH MEMORY ELEMENT IF INIT      2250 -> reg21",
      "62587 GET      reg21[hasOwnProperty] -> reg12",
      "62593 NEW ARRAY      1 -> reg9",
      "62596 PUSH MEMORY ELEMENT IF INIT      2262 -> reg13",
      "62599 PUT      reg9[0] = reg13",
      "62603 CALL FUNCTION      OBJ: reg21 FUNC: reg12 ARGS: reg9",
      "62607 SET      reg2 -> reg5",
      "62610 JUMP IF FALSE      reg5 TO: 62791 | 62613"
  ],
  "62613": [
      "62613 PUSH MEMORY ELEMENT IF INIT      2250 -> reg5",
      "62616 PUSH MEMORY ELEMENT IF INIT      2262 -> reg12",
      "62619 GET      reg5[reg12] -> reg9",
      "62623 COPY ENUMERABLE      reg9 -> reg12",
      "62626 GET      reg12[length] -> reg9",
      "62632 EQUAL      reg9 == 0 -> reg13",
      "62636 JUMP IF TRUE      reg13 TO: 62791 | 62639"
  ],
  "62639": [
      "62639 SET      0 -> reg13",
      "62642 GET      reg12[reg13] -> reg5",
      "62646 SET MEMORY ELEMENT IF INIT      2263 = reg5",
      "62649 PUSH MEMORY ELEMENT IF INIT      2251 -> reg20",
      "62652 GET      reg20[canPlayType] -> reg18",
      "62658 NEW ARRAY      2 -> reg22",
      "62661 PUT      reg22[0] = video/mp4",
      "62667 PUSH MEMORY ELEMENT IF INIT      2250 -> reg24",
      "62670 PUSH MEMORY ELEMENT IF INIT      2262 -> reg27",
      "62673 GET      reg24[reg27] -> reg23",
      "62677 PUSH MEMORY ELEMENT IF INIT      2263 -> reg24",
      "62680 GET      reg23[reg24] -> reg25",
      "62684 PUT      reg22[1] = reg25",
      "62688 CALL FUNCTION      OBJ: reg20 FUNC: reg18 ARGS: reg22",
      "62692 SET      reg2 -> reg14",
      "62695 JUMP IF FALSE      reg14 TO: 62740 | 62698"
  ],
  "62642": [
      "62642 GET      reg12[reg13] -> reg5",
      "62646 SET MEMORY ELEMENT IF INIT      2263 = reg5",
      "62649 PUSH MEMORY ELEMENT IF INIT      2251 -> reg20",
      "62652 GET      reg20[canPlayType] -> reg18",
      "62658 NEW ARRAY      2 -> reg22",
      "62661 PUT      reg22[0] = video/mp4",
      "62667 PUSH MEMORY ELEMENT IF INIT      2250 -> reg24",
      "62670 PUSH MEMORY ELEMENT IF INIT      2262 -> reg27",
      "62673 GET      reg24[reg27] -> reg23",
      "62677 PUSH MEMORY ELEMENT IF INIT      2263 -> reg24",
      "62680 GET      reg23[reg24] -> reg25",
      "62684 PUT      reg22[1] = reg25",
      "62688 CALL FUNCTION      OBJ: reg20 FUNC: reg18 ARGS: reg22",
      "62692 SET      reg2 -> reg14",
      "62695 JUMP IF FALSE      reg14 TO: 62740 | 62698"
  ],
  "62698": [
      "62698 PUSH MEMORY ELEMENT IF INIT      2252 -> reg18",
      "62701 GET      reg18[push] -> reg14",
      "62707 NEW ARRAY      1 -> reg24",
      "62710 PUSH MEMORY ELEMENT IF INIT      2250 -> reg22",
      "62713 PUSH MEMORY ELEMENT IF INIT      2262 -> reg27",
      "62716 GET      reg22[reg27] -> reg26",
      "62720 PUSH MEMORY ELEMENT IF INIT      2263 -> reg28",
      "62723 GET      reg26[reg28] -> reg22",
      "62727 PUT      reg24[0] = reg22",
      "62731 CALL FUNCTION      OBJ: reg18 FUNC: reg14 ARGS: reg24",
      "62735 SET      reg2 -> reg23",
      "62738 JUMP      62780",
      "62780 ADD      reg131-> reg13",
      "62784 LESS THAN      reg13 < reg9 -> reg22",
      "62788 JUMP IF TRUE      reg22 TO: 62642 | 62791"
  ],
  "62740": [
      "62740 PUSH MEMORY ELEMENT IF INIT      2253 -> reg25",
      "62743 GET      reg25[push] -> reg22",
      "62749 NEW ARRAY      1 -> reg26",
      "62752 PUSH MEMORY ELEMENT IF INIT      2250 -> reg23",
      "62755 PUSH MEMORY ELEMENT IF INIT      2262 -> reg27",
      "62758 GET      reg23[reg27] -> reg24",
      "62762 PUSH MEMORY ELEMENT IF INIT      2263 -> reg23",
      "62765 GET      reg24[reg23] -> reg27",
      "62769 PUT      reg26[0] = reg27",
      "62773 CALL FUNCTION      OBJ: reg25 FUNC: reg22 ARGS: reg26",
      "62777 SET      reg2 -> reg14",
      "62780 ADD      reg131-> reg13",
      "62784 LESS THAN      reg13 < reg9 -> reg22",
      "62788 JUMP IF TRUE      reg22 TO: 62642 | 62791"
  ],
  "62791": [
      "62791 ADD      reg101-> reg10",
      "62795 LESS THAN      reg10 < reg8 -> reg5",
      "62799 JUMP IF TRUE      reg5 TO: 62577 | 62802"
  ],
  "62802": [
      "62802 JUMP      62807",
      "62807 PUSH MEMORY ELEMENT IF INIT      2252 -> reg5",
      "62810 JUMP OR RETURN VAL      reg5"
  ],
  "62804": [
      "62804 SET MEMORY ELEMENT IF INIT      2254 = false",
      "62807 PUSH MEMORY ELEMENT IF INIT      2252 -> reg5",
      "62810 JUMP OR RETURN VAL      reg5"
  ],
  "62807": [
      "62807 PUSH MEMORY ELEMENT IF INIT      2252 -> reg5",
      "62810 JUMP OR RETURN VAL      reg5"
  ],
  "62893": [
      "62893 SET I      null",
      "62895 PUSH F.K      -> reg4",
      "62897 VOID F",
      "62898 SET MEMORY ELEMENT      0 = reg4",
      "62901 PUSH MEMORY ELEMENT IF INIT      2246 -> reg5",
      "62904 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "62907 PUT      reg5[raw] = reg4",
      "62913 PUSH MEMORY ELEMENT IF INIT      2246 -> reg4",
      "62916 PUSH MEMORY ELEMENT IF INIT      2081 -> reg6",
      "62919 NEW ARRAY      1 -> reg8",
      "62922 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "62925 GET      reg9[stringify] -> reg12",
      "62931 NEW ARRAY      1 -> reg11",
      "62934 PUSH MEMORY ELEMENT IF INIT      0 -> reg13",
      "62937 PUT      reg11[0] = reg13",
      "62941 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg11",
      "62945 SET      reg2 -> reg7",
      "62948 PUT      reg8[0] = reg7",
      "62952 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "62956 SET      reg2 -> reg5",
      "62959 PUT      reg4[hash] = reg5",
      "62965 PUSH MEMORY ELEMENT IF INIT      2246 -> reg4",
      "62968 JUMP OR RETURN VAL      reg4"
  ],
  "63031": [
      "63031 PUSH MEMORY ELEMENT IF INIT      2293 -> reg5",
      "63034 GET      reg5[speechSynthesis] -> reg9",
      "63040 GET      reg9[getVoices] -> reg5",
      "63046 EMPTY ARRAY      -> reg7",
      "63048 CALL FUNCTION      OBJ: reg9 FUNC: reg5 ARGS: reg7",
      "63052 SET      reg2 -> reg4",
      "63055 SET MEMORY ELEMENT IF INIT      2295 = reg4",
      "63058 SET MEMORY ELEMENT IF INIT      2296 = 0",
      "63061 PUSH MEMORY ELEMENT IF INIT      2296 -> reg4",
      "63064 PUSH MEMORY ELEMENT IF INIT      2295 -> reg5",
      "63067 GET      reg5[length] -> reg6",
      "63073 LESS THAN      reg4 < reg6 -> reg5",
      "63077 JUMP IF FALSE      reg5 TO: 63138 | 63080"
  ],
  "63080": [
      "63080 PUSH MEMORY ELEMENT IF INIT      2295 -> reg4",
      "63083 PUSH MEMORY ELEMENT IF INIT      2296 -> reg5",
      "63086 PUSH MEMORY ELEMENT IF INIT      2082 -> reg8",
      "63089 NEW ARRAY      2 -> reg10",
      "63092 PUSH MEMORY ELEMENT IF INIT      2295 -> reg7",
      "63095 PUSH MEMORY ELEMENT IF INIT      2296 -> reg13",
      "63098 GET      reg7[reg13] -> reg12",
      "63102 PUT      reg10[0] = reg12",
      "63106 EMPTY OBJECT      -> reg7",
      "63108 PUT      reg10[1] = reg7",
      "63112 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "63116 SET      reg2 -> reg6",
      "63119 PUT      reg4[reg5] = reg6",
      "63123 PUSH MEMORY ELEMENT IF INIT      2296 -> reg4",
      "63126 SET      reg4 -> reg5",
      "63129 ADD      reg41-> reg4",
      "63133 SET MEMORY ELEMENT IF INIT      2296 = reg4",
      "63136 JUMP      63061",
      "63061 PUSH MEMORY ELEMENT IF INIT      2296 -> reg4",
      "63064 PUSH MEMORY ELEMENT IF INIT      2295 -> reg5",
      "63067 GET      reg5[length] -> reg6",
      "63073 LESS THAN      reg4 < reg6 -> reg5",
      "63077 JUMP IF FALSE      reg5 TO: 63138 | 63080"
  ],
  "63138": [
      "63138 PUSH MEMORY ELEMENT IF INIT      2294 -> reg6",
      "63141 PUSH MEMORY ELEMENT IF INIT      2295 -> reg4",
      "63144 PUT      reg6[raw] = reg4",
      "63150 PUSH MEMORY ELEMENT IF INIT      2294 -> reg5",
      "63153 PUSH MEMORY ELEMENT IF INIT      2081 -> reg6",
      "63156 NEW ARRAY      1 -> reg7",
      "63159 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "63162 GET      reg8[stringify] -> reg12",
      "63168 NEW ARRAY      1 -> reg11",
      "63171 PUSH MEMORY ELEMENT IF INIT      2295 -> reg13",
      "63174 PUT      reg11[0] = reg13",
      "63178 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg11",
      "63182 SET      reg2 -> reg10",
      "63185 PUT      reg7[0] = reg10",
      "63189 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "63193 SET      reg2 -> reg4",
      "63196 PUT      reg5[hash] = reg4",
      "63202 PUSH MEMORY ELEMENT IF INIT      2294 -> reg5",
      "63205 JUMP OR RETURN VAL      reg5"
  ],
  "63207": [
      "63207 JUMP      63286",
      "63286 SET I      null",
      "63288 JUMP OR RETURN"
  ],
  "63209": [
      "63209 SET I      null",
      "63211 PUSH F.K      -> reg7",
      "63213 VOID F",
      "63214 SET MEMORY ELEMENT      0 = reg7",
      "63217 PUSH MEMORY ELEMENT IF INIT      2294 -> reg4",
      "63220 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "63223 PUT      reg4[raw] = reg6",
      "63229 PUSH MEMORY ELEMENT IF INIT      2294 -> reg4",
      "63232 PUSH MEMORY ELEMENT IF INIT      2081 -> reg5",
      "63235 NEW ARRAY      1 -> reg13",
      "63238 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "63241 GET      reg10[stringify] -> reg11",
      "63247 NEW ARRAY      1 -> reg12",
      "63250 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "63253 PUT      reg12[0] = reg14",
      "63257 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "63261 SET      reg2 -> reg7",
      "63264 PUT      reg13[0] = reg7",
      "63268 CALL FUNCTION      PTR: reg5 MEM: reg13",
      "63272 SET      reg2 -> reg6",
      "63275 PUT      reg4[hash] = reg6",
      "63281 PUSH MEMORY ELEMENT IF INIT      2294 -> reg4",
      "63284 JUMP OR RETURN VAL      reg4"
  ],
  "63437": [
      "63437 SET I      null",
      "63439 PUSH F.K      -> reg5",
      "63441 VOID F",
      "63442 SET MEMORY ELEMENT      0 = reg5",
      "63445 PUSH MEMORY ELEMENT IF INIT      2302 -> reg4",
      "63448 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "63451 PUT      reg4[raw] = reg5",
      "63457 PUSH MEMORY ELEMENT IF INIT      2302 -> reg4",
      "63460 PUSH MEMORY ELEMENT IF INIT      2081 -> reg6",
      "63463 NEW ARRAY      1 -> reg7",
      "63466 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "63469 GET      reg13[stringify] -> reg12",
      "63475 NEW ARRAY      1 -> reg10",
      "63478 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "63481 PUT      reg10[0] = reg14",
      "63485 CALL FUNCTION      OBJ: reg13 FUNC: reg12 ARGS: reg10",
      "63489 SET      reg2 -> reg8",
      "63492 PUT      reg7[0] = reg8",
      "63496 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "63500 SET      reg2 -> reg5",
      "63503 PUT      reg4[hash] = reg5",
      "63509 PUSH MEMORY ELEMENT IF INIT      2302 -> reg5",
      "63512 JUMP OR RETURN VAL      reg5"
  ],
  "63571": [
      "63571 PUSH MEMORY ELEMENT IF INIT      2305 -> reg5",
      "63574 GET      reg5[console] -> reg6",
      "63580 SET      reg6 -> reg4",
      "63583 SET MEMORY ELEMENT IF INIT      2307 = reg4",
      "63586 PUSH MEMORY ELEMENT IF INIT      2307 -> reg4",
      "63589 JUMP IF FALSE      reg4 TO: 63690 | 63592"
  ],
  "63583": [
      "63583 SET MEMORY ELEMENT IF INIT      2307 = reg4",
      "63586 PUSH MEMORY ELEMENT IF INIT      2307 -> reg4",
      "63589 JUMP IF FALSE      reg4 TO: 63690 | 63592"
  ],
  "63592": [
      "63592 PUSH MEMORY ELEMENT IF INIT      2084 -> reg5",
      "63595 NEW ARRAY      1 -> reg6",
      "63598 PUSH MEMORY ELEMENT IF INIT      2307 -> reg7",
      "63601 PUT      reg6[0] = reg7",
      "63605 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "63609 SET      reg2 -> reg4",
      "63612 SET MEMORY ELEMENT IF INIT      2308 = reg4",
      "63615 PUSH MEMORY ELEMENT IF INIT      2306 -> reg5",
      "63618 PUSH MEMORY ELEMENT IF INIT      2308 -> reg4",
      "63621 GET      reg4[props] -> reg8",
      "63627 PUT      reg5[raw] = reg8",
      "63633 PUSH MEMORY ELEMENT IF INIT      2306 -> reg8",
      "63636 PUSH MEMORY ELEMENT IF INIT      2081 -> reg6",
      "63639 NEW ARRAY      1 -> reg10",
      "63642 PUSH MEMORY ELEMENT IF INIT      2306 -> reg7",
      "63645 GET      reg7[raw] -> reg11",
      "63651 GET      reg11[toString] -> reg9",
      "63657 EMPTY ARRAY      -> reg7",
      "63659 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg7",
      "63663 SET      reg2 -> reg5",
      "63666 PUT      reg10[0] = reg5",
      "63670 CALL FUNCTION      PTR: reg6 MEM: reg10",
      "63674 SET      reg2 -> reg4",
      "63677 PUT      reg8[hash] = reg4",
      "63683 PUSH MEMORY ELEMENT IF INIT      2306 -> reg4",
      "63686 JUMP OR RETURN VAL      reg4"
  ],
  "63690": [
      "63690 GET WINDOW PROP      Error -> reg4",
      "63695 NEW ARRAY      1 -> reg7",
      "63698 PUT      reg7[0] = Not Supported",
      "63704 BIND APPLY      reg4 reg7 -> 5",
      "63708 HANDLE ERROR      reg5",
      "63710 JUMP      63789",
      "63789 SET I      null",
      "63791 JUMP OR RETURN"
  ],
  "63712": [
      "63712 SET I      null",
      "63714 PUSH F.K      -> reg4",
      "63716 VOID F",
      "63717 SET MEMORY ELEMENT      0 = reg4",
      "63720 PUSH MEMORY ELEMENT IF INIT      2306 -> reg5",
      "63723 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "63726 PUT      reg5[raw] = reg4",
      "63732 PUSH MEMORY ELEMENT IF INIT      2306 -> reg4",
      "63735 PUSH MEMORY ELEMENT IF INIT      2081 -> reg6",
      "63738 NEW ARRAY      1 -> reg7",
      "63741 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "63744 GET      reg8[stringify] -> reg10",
      "63750 NEW ARRAY      1 -> reg13",
      "63753 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "63756 PUT      reg13[0] = reg14",
      "63760 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg13",
      "63764 SET      reg2 -> reg9",
      "63767 PUT      reg7[0] = reg9",
      "63771 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "63775 SET      reg2 -> reg5",
      "63778 PUT      reg4[hash] = reg5",
      "63784 PUSH MEMORY ELEMENT IF INIT      2306 -> reg5",
      "63787 JUMP OR RETURN VAL      reg5"
  ],
  "63848": [
      "63848 PUSH MEMORY ELEMENT IF INIT      2313 -> reg5",
      "63851 GET      reg5[Animation] -> reg6",
      "63857 SET      reg6 -> reg4",
      "63860 SET MEMORY ELEMENT IF INIT      2315 = reg4",
      "63863 PUSH MEMORY ELEMENT IF INIT      2315 -> reg5",
      "63866 JUMP IF FALSE      reg5 TO: 63979 | 63869"
  ],
  "63860": [
      "63860 SET MEMORY ELEMENT IF INIT      2315 = reg4",
      "63863 PUSH MEMORY ELEMENT IF INIT      2315 -> reg5",
      "63866 JUMP IF FALSE      reg5 TO: 63979 | 63869"
  ],
  "63869": [
      "63869 PUSH MEMORY ELEMENT IF INIT      2315 -> reg5",
      "63872 EMPTY ARRAY      -> reg6",
      "63874 BIND APPLY      reg5 reg6 -> 4",
      "63878 SET MEMORY ELEMENT IF INIT      2316 = reg4",
      "63881 PUSH MEMORY ELEMENT IF INIT      2084 -> reg6",
      "63884 NEW ARRAY      1 -> reg5",
      "63887 PUSH MEMORY ELEMENT IF INIT      2316 -> reg7",
      "63890 PUT      reg5[0] = reg7",
      "63894 CALL FUNCTION      PTR: reg6 MEM: reg5",
      "63898 SET      reg2 -> reg4",
      "63901 SET MEMORY ELEMENT IF INIT      2317 = reg4",
      "63904 PUSH MEMORY ELEMENT IF INIT      2314 -> reg4",
      "63907 PUSH MEMORY ELEMENT IF INIT      2317 -> reg5",
      "63910 GET      reg5[props] -> reg7",
      "63916 PUT      reg4[raw] = reg7",
      "63922 PUSH MEMORY ELEMENT IF INIT      2314 -> reg5",
      "63925 PUSH MEMORY ELEMENT IF INIT      2081 -> reg4",
      "63928 NEW ARRAY      1 -> reg6",
      "63931 PUSH MEMORY ELEMENT IF INIT      2314 -> reg9",
      "63934 GET      reg9[raw] -> reg10",
      "63940 GET      reg10[toString] -> reg9",
      "63946 EMPTY ARRAY      -> reg11",
      "63948 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg11",
      "63952 SET      reg2 -> reg8",
      "63955 PUT      reg6[0] = reg8",
      "63959 CALL FUNCTION      PTR: reg4 MEM: reg6",
      "63963 SET      reg2 -> reg7",
      "63966 PUT      reg5[hash] = reg7",
      "63972 PUSH MEMORY ELEMENT IF INIT      2314 -> reg4",
      "63975 JUMP OR RETURN VAL      reg4"
  ],
  "63979": [
      "63979 GET WINDOW PROP      Error -> reg4",
      "63984 NEW ARRAY      1 -> reg8",
      "63987 PUT      reg8[0] = Not Supported",
      "63993 BIND APPLY      reg4 reg8 -> 5",
      "63997 HANDLE ERROR      reg5",
      "63999 JUMP      64060",
      "64060 SET I      null",
      "64062 JUMP OR RETURN"
  ],
  "64001": [
      "64001 SET I      null",
      "64003 PUSH F.K      -> reg4",
      "64005 VOID F",
      "64006 SET MEMORY ELEMENT      0 = reg4",
      "64009 PUSH MEMORY ELEMENT IF INIT      2314 -> reg4",
      "64012 PUT      reg4[raw] = error",
      "64020 PUSH MEMORY ELEMENT IF INIT      2314 -> reg7",
      "64023 PUSH MEMORY ELEMENT IF INIT      2081 -> reg9",
      "64026 NEW ARRAY      1 -> reg5",
      "64029 PUSH MEMORY ELEMENT IF INIT      2314 -> reg6",
      "64032 GET      reg6[raw] -> reg8",
      "64038 PUT      reg5[0] = reg8",
      "64042 CALL FUNCTION      PTR: reg9 MEM: reg5",
      "64046 SET      reg2 -> reg4",
      "64049 PUT      reg7[hash] = reg4",
      "64055 PUSH MEMORY ELEMENT IF INIT      2314 -> reg4",
      "64058 JUMP OR RETURN VAL      reg4"
  ],
  "64254": [
      "64254 SET I      null",
      "64256 PUSH F.K      -> reg4",
      "64258 VOID F",
      "64259 SET MEMORY ELEMENT      0 = reg4",
      "64262 PUSH MEMORY ELEMENT IF INIT      2323 -> reg6",
      "64265 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "64268 PUT      reg6[raw] = reg4",
      "64274 PUSH MEMORY ELEMENT IF INIT      2323 -> reg4",
      "64277 PUSH MEMORY ELEMENT IF INIT      2081 -> reg6",
      "64280 NEW ARRAY      1 -> reg8",
      "64283 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "64286 GET      reg12[stringify] -> reg11",
      "64292 NEW ARRAY      1 -> reg13",
      "64295 PUSH MEMORY ELEMENT IF INIT      0 -> reg15",
      "64298 PUT      reg13[0] = reg15",
      "64302 CALL FUNCTION      OBJ: reg12 FUNC: reg11 ARGS: reg13",
      "64306 SET      reg2 -> reg9",
      "64309 PUT      reg8[0] = reg9",
      "64313 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "64317 SET      reg2 -> reg7",
      "64320 PUT      reg4[hash] = reg7",
      "64326 PUSH MEMORY ELEMENT IF INIT      2323 -> reg6",
      "64329 JUMP OR RETURN VAL      reg6"
  ],
  "64412": [
      "64412 SET      0 -> reg6",
      "64415 GET      reg7[reg6] -> reg4",
      "64419 SET MEMORY ELEMENT IF INIT      2328 = reg4",
      "64422 PUSH MEMORY ELEMENT IF INIT      2327 -> reg8",
      "64425 PUSH MEMORY ELEMENT IF INIT      2328 -> reg9",
      "64428 ADD      reg8NaN-> reg9",
      "64432 SET MEMORY ELEMENT IF INIT      2327 = reg9",
      "64435 ADD      reg61-> reg6",
      "64439 LESS THAN      reg6 < reg5 -> reg8",
      "64443 JUMP IF TRUE      reg8 TO: 64415 | 64446"
  ],
  "64415": [
      "64415 GET      reg7[reg6] -> reg4",
      "64419 SET MEMORY ELEMENT IF INIT      2328 = reg4",
      "64422 PUSH MEMORY ELEMENT IF INIT      2327 -> reg8",
      "64425 PUSH MEMORY ELEMENT IF INIT      2328 -> reg9",
      "64428 ADD      reg8NaN-> reg9",
      "64432 SET MEMORY ELEMENT IF INIT      2327 = reg9",
      "64435 ADD      reg61-> reg6",
      "64439 LESS THAN      reg6 < reg5 -> reg8",
      "64443 JUMP IF TRUE      reg8 TO: 64415 | 64446"
  ],
  "64446": [
      "64446 PUSH MEMORY ELEMENT IF INIT      2326 -> reg4",
      "64449 PUSH MEMORY ELEMENT IF INIT      2327 -> reg5",
      "64452 PUT      reg4[raw] = reg5",
      "64458 PUSH MEMORY ELEMENT IF INIT      2326 -> reg5",
      "64461 PUSH MEMORY ELEMENT IF INIT      2081 -> reg7",
      "64464 NEW ARRAY      1 -> reg9",
      "64467 PUSH MEMORY ELEMENT IF INIT      2326 -> reg10",
      "64470 GET      reg10[raw] -> reg6",
      "64476 PUT      reg9[0] = reg6",
      "64480 CALL FUNCTION      PTR: reg7 MEM: reg9",
      "64484 SET      reg2 -> reg4",
      "64487 PUT      reg5[hash] = reg4",
      "64493 PUSH MEMORY ELEMENT IF INIT      2326 -> reg6",
      "64496 JUMP OR RETURN VAL      reg6"
  ],
  "64500": [
      "64500 SET I      null",
      "64502 PUSH F.K      -> reg7",
      "64504 VOID F",
      "64505 SET MEMORY ELEMENT      0 = reg7",
      "64508 PUSH MEMORY ELEMENT IF INIT      2326 -> reg5",
      "64511 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "64514 PUT      reg5[raw] = reg4",
      "64520 PUSH MEMORY ELEMENT IF INIT      2326 -> reg7",
      "64523 PUSH MEMORY ELEMENT IF INIT      2081 -> reg5",
      "64526 NEW ARRAY      1 -> reg6",
      "64529 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "64532 GET      reg10[stringify] -> reg9",
      "64538 NEW ARRAY      1 -> reg12",
      "64541 PUSH MEMORY ELEMENT IF INIT      0 -> reg13",
      "64544 PUT      reg12[0] = reg13",
      "64548 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg12",
      "64552 SET      reg2 -> reg8",
      "64555 PUT      reg6[0] = reg8",
      "64559 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "64563 SET      reg2 -> reg4",
      "64566 PUT      reg7[hash] = reg4",
      "64572 PUSH MEMORY ELEMENT IF INIT      2326 -> reg4",
      "64575 JUMP OR RETURN VAL      reg4"
  ],
  "64705": [
      "64705 PUSH MEMORY ELEMENT IF INIT      2338 -> reg9",
      "64708 ADD      : NaN-> reg10",
      "64714 SET      reg10 -> reg7",
      "64717 JUMP      64724",
      "64724 ADD      ( color-gamutNaN-> reg10",
      "64730 ADD      reg10NaN-> reg7",
      "64736 PUT      reg8[0] = reg7",
      "64740 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "64744 SET      reg2 -> reg4",
      "64747 GET      reg4[matches] -> reg7",
      "64753 JUMP OR RETURN VAL      reg7"
  ],
  "64719": [
      "64719 SET       -> reg7",
      "64724 ADD      ( color-gamutNaN-> reg10",
      "64730 ADD      reg10NaN-> reg7",
      "64736 PUT      reg8[0] = reg7",
      "64740 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "64744 SET      reg2 -> reg4",
      "64747 GET      reg4[matches] -> reg7",
      "64753 JUMP OR RETURN VAL      reg7"
  ],
  "64829": [
      "64829 SET I      null",
      "64831 PUSH F.K      -> reg4",
      "64833 VOID F",
      "64834 SET MEMORY ELEMENT      0 = reg4",
      "64837 PUSH MEMORY ELEMENT IF INIT      2333 -> reg6",
      "64840 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "64843 PUT      reg6[raw] = reg4",
      "64849 PUSH MEMORY ELEMENT IF INIT      2333 -> reg7",
      "64852 PUSH MEMORY ELEMENT IF INIT      2081 -> reg6",
      "64855 NEW ARRAY      1 -> reg9",
      "64858 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "64861 GET      reg8[stringify] -> reg11",
      "64867 NEW ARRAY      1 -> reg13",
      "64870 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "64873 PUT      reg13[0] = reg14",
      "64877 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg13",
      "64881 SET      reg2 -> reg10",
      "64884 PUT      reg9[0] = reg10",
      "64888 CALL FUNCTION      PTR: reg6 MEM: reg9",
      "64892 SET      reg2 -> reg4",
      "64895 PUT      reg7[hash] = reg4",
      "64901 PUSH MEMORY ELEMENT IF INIT      2333 -> reg9",
      "64904 JUMP OR RETURN VAL      reg9"
  ],
  "65328": [
      "65328 PUSH MEMORY ELEMENT IF INIT      2344 -> reg10",
      "65331 GET      reg10[clientWidth] -> reg6",
      "65337 SET MEMORY ELEMENT IF INIT      2347 = reg6",
      "65340 PUSH MEMORY ELEMENT IF INIT      2346 -> reg6",
      "65343 PUSH MEMORY ELEMENT IF INIT      2348 -> reg9",
      "65346 EQUAL      reg6 == reg9 -> reg10",
      "65350 JUMP IF FALSE      reg10 TO: 65365 | 65353"
  ],
  "65340": [
      "65340 PUSH MEMORY ELEMENT IF INIT      2346 -> reg6",
      "65343 PUSH MEMORY ELEMENT IF INIT      2348 -> reg9",
      "65346 EQUAL      reg6 == reg9 -> reg10",
      "65350 JUMP IF FALSE      reg10 TO: 65365 | 65353"
  ],
  "65353": [
      "65353 PUSH MEMORY ELEMENT IF INIT      2344 -> reg6",
      "65356 GET      reg6[clientHeight] -> reg9",
      "65362 SET MEMORY ELEMENT IF INIT      2348 = reg9",
      "65365 PUSH MEMORY ELEMENT IF INIT      2341 -> reg9",
      "65368 GET      reg9[document] -> reg10",
      "65374 GET      reg10[body] -> reg12",
      "65380 GET      reg12[removeChild] -> reg9",
      "65386 NEW ARRAY      1 -> reg10",
      "65389 PUSH MEMORY ELEMENT IF INIT      2344 -> reg11",
      "65392 PUT      reg10[0] = reg11",
      "65396 CALL FUNCTION      OBJ: reg12 FUNC: reg9 ARGS: reg10",
      "65400 SET      reg2 -> reg6",
      "65403 NEW ARRAY      2 -> reg6",
      "65406 PUSH MEMORY ELEMENT IF INIT      2345 -> reg10",
      "65409 PUSH MEMORY ELEMENT IF INIT      2347 -> reg9",
      "65412 SUBTRACT      reg10 - reg9 -> reg11",
      "65416 PUT      reg6[0] = reg11",
      "65420 PUSH MEMORY ELEMENT IF INIT      2346 -> reg9",
      "65423 PUSH MEMORY ELEMENT IF INIT      2348 -> reg10",
      "65426 SUBTRACT      reg9 - reg10 -> reg13",
      "65430 PUT      reg6[1] = reg13",
      "65434 SET MEMORY ELEMENT IF INIT      2349 = reg6",
      "65437 PUSH MEMORY ELEMENT IF INIT      2342 -> reg6",
      "65440 PUSH MEMORY ELEMENT IF INIT      2349 -> reg9",
      "65443 PUT      reg6[raw] = reg9",
      "65449 PUSH MEMORY ELEMENT IF INIT      2342 -> reg6",
      "65452 PUSH MEMORY ELEMENT IF INIT      2081 -> reg9",
      "65455 NEW ARRAY      1 -> reg14",
      "65458 PUSH MEMORY ELEMENT IF INIT      2349 -> reg13",
      "65461 GET      reg13[toString] -> reg15",
      "65467 EMPTY ARRAY      -> reg16",
      "65469 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg16",
      "65473 SET      reg2 -> reg10",
      "65476 PUT      reg14[0] = reg10",
      "65480 CALL FUNCTION      PTR: reg9 MEM: reg14",
      "65484 SET      reg2 -> reg11",
      "65487 PUT      reg6[hash] = reg11",
      "65493 PUSH MEMORY ELEMENT IF INIT      2342 -> reg6",
      "65496 JUMP OR RETURN VAL      reg6"
  ],
  "65365": [
      "65365 PUSH MEMORY ELEMENT IF INIT      2341 -> reg9",
      "65368 GET      reg9[document] -> reg10",
      "65374 GET      reg10[body] -> reg12",
      "65380 GET      reg12[removeChild] -> reg9",
      "65386 NEW ARRAY      1 -> reg10",
      "65389 PUSH MEMORY ELEMENT IF INIT      2344 -> reg11",
      "65392 PUT      reg10[0] = reg11",
      "65396 CALL FUNCTION      OBJ: reg12 FUNC: reg9 ARGS: reg10",
      "65400 SET      reg2 -> reg6",
      "65403 NEW ARRAY      2 -> reg6",
      "65406 PUSH MEMORY ELEMENT IF INIT      2345 -> reg10",
      "65409 PUSH MEMORY ELEMENT IF INIT      2347 -> reg9",
      "65412 SUBTRACT      reg10 - reg9 -> reg11",
      "65416 PUT      reg6[0] = reg11",
      "65420 PUSH MEMORY ELEMENT IF INIT      2346 -> reg9",
      "65423 PUSH MEMORY ELEMENT IF INIT      2348 -> reg10",
      "65426 SUBTRACT      reg9 - reg10 -> reg13",
      "65430 PUT      reg6[1] = reg13",
      "65434 SET MEMORY ELEMENT IF INIT      2349 = reg6",
      "65437 PUSH MEMORY ELEMENT IF INIT      2342 -> reg6",
      "65440 PUSH MEMORY ELEMENT IF INIT      2349 -> reg9",
      "65443 PUT      reg6[raw] = reg9",
      "65449 PUSH MEMORY ELEMENT IF INIT      2342 -> reg6",
      "65452 PUSH MEMORY ELEMENT IF INIT      2081 -> reg9",
      "65455 NEW ARRAY      1 -> reg14",
      "65458 PUSH MEMORY ELEMENT IF INIT      2349 -> reg13",
      "65461 GET      reg13[toString] -> reg15",
      "65467 EMPTY ARRAY      -> reg16",
      "65469 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg16",
      "65473 SET      reg2 -> reg10",
      "65476 PUT      reg14[0] = reg10",
      "65480 CALL FUNCTION      PTR: reg9 MEM: reg14",
      "65484 SET      reg2 -> reg11",
      "65487 PUT      reg6[hash] = reg11",
      "65493 PUSH MEMORY ELEMENT IF INIT      2342 -> reg6",
      "65496 JUMP OR RETURN VAL      reg6"
  ],
  "65500": [
      "65500 SET I      null",
      "65502 PUSH F.K      -> reg6",
      "65504 VOID F",
      "65505 SET MEMORY ELEMENT      0 = reg6",
      "65508 PUSH MEMORY ELEMENT IF INIT      2342 -> reg6",
      "65511 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "65514 PUT      reg6[raw] = reg9",
      "65520 PUSH MEMORY ELEMENT IF INIT      2342 -> reg9",
      "65523 PUSH MEMORY ELEMENT IF INIT      2081 -> reg6",
      "65526 NEW ARRAY      1 -> reg11",
      "65529 PUSH MEMORY ELEMENT IF INIT      280 -> reg14",
      "65532 GET      reg14[stringify] -> reg16",
      "65538 NEW ARRAY      1 -> reg17",
      "65541 PUSH MEMORY ELEMENT IF INIT      0 -> reg19",
      "65544 PUT      reg17[0] = reg19",
      "65548 CALL FUNCTION      OBJ: reg14 FUNC: reg16 ARGS: reg17",
      "65552 SET      reg2 -> reg15",
      "65555 PUT      reg11[0] = reg15",
      "65559 CALL FUNCTION      PTR: reg6 MEM: reg11",
      "65563 SET      reg2 -> reg10",
      "65566 PUT      reg9[hash] = reg10",
      "65572 PUSH MEMORY ELEMENT IF INIT      2342 -> reg6",
      "65575 JUMP OR RETURN VAL      reg6"
  ],
  "66136": [
      "66136 PUSH MEMORY ELEMENT IF INIT      2361 -> reg4",
      "66139 JUMP OR RETURN VAL      reg4"
  ],
  "66141": [
      "66141 SET MEMORY ELEMENT IF INIT      2363 = 0",
      "66144 PUSH MEMORY ELEMENT IF INIT      2363 -> reg4",
      "66147 PUSH MEMORY ELEMENT IF INIT      2362 -> reg5",
      "66150 GET      reg5[length] -> reg7",
      "66156 LESS THAN      reg4 < reg7 -> reg9",
      "66160 JUMP IF FALSE      reg9 TO: 66344 | 66163"
  ],
  "66163": [
      "66163 PUSH MEMORY ELEMENT IF INIT      2359 -> reg5",
      "66166 GET      reg5[document] -> reg7",
      "66172 GET      reg7[body] -> reg5",
      "66178 GET      reg5[appendChild] -> reg7",
      "66184 NEW ARRAY      1 -> reg8",
      "66187 PUSH MEMORY ELEMENT IF INIT      2360 -> reg9",
      "66190 PUT      reg8[0] = reg9",
      "66194 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "66198 SET      reg2 -> reg4",
      "66201 PUSH MEMORY ELEMENT IF INIT      2360 -> reg4",
      "66204 GET      reg4[style] -> reg7",
      "66210 PUSH MEMORY ELEMENT IF INIT      2362 -> reg4",
      "66213 PUSH MEMORY ELEMENT IF INIT      2363 -> reg9",
      "66216 GET      reg4[reg9] -> reg8",
      "66220 PUT      reg7[color] = reg8",
      "66226 PUSH MEMORY ELEMENT IF INIT      2361 -> reg4",
      "66229 PUSH MEMORY ELEMENT IF INIT      2362 -> reg7",
      "66232 PUSH MEMORY ELEMENT IF INIT      2363 -> reg11",
      "66235 GET      reg7[reg11] -> reg10",
      "66239 PUSH MEMORY ELEMENT IF INIT      2359 -> reg9",
      "66242 GET      reg9[getComputedStyle] -> reg11",
      "66248 NEW ARRAY      1 -> reg12",
      "66251 PUSH MEMORY ELEMENT IF INIT      2360 -> reg13",
      "66254 PUT      reg12[0] = reg13",
      "66258 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg12",
      "66262 SET      reg2 -> reg7",
      "66265 GET      reg7[getPropertyValue] -> reg11",
      "66271 NEW ARRAY      1 -> reg12",
      "66274 PUT      reg12[0] = color",
      "66280 CALL FUNCTION      OBJ: reg7 FUNC: reg11 ARGS: reg12",
      "66284 SET      reg2 -> reg8",
      "66287 PUT      reg4[reg10] = reg8",
      "66291 PUSH MEMORY ELEMENT IF INIT      2359 -> reg10",
      "66294 GET      reg10[document] -> reg12",
      "66300 GET      reg12[body] -> reg4",
      "66306 GET      reg4[removeChild] -> reg10",
      "66312 NEW ARRAY      1 -> reg11",
      "66315 PUSH MEMORY ELEMENT IF INIT      2360 -> reg15",
      "66318 PUT      reg11[0] = reg15",
      "66322 CALL FUNCTION      OBJ: reg4 FUNC: reg10 ARGS: reg11",
      "66326 SET      reg2 -> reg8",
      "66329 PUSH MEMORY ELEMENT IF INIT      2363 -> reg8",
      "66332 SET      reg8 -> reg11",
      "66335 ADD      reg81-> reg8",
      "66339 SET MEMORY ELEMENT IF INIT      2363 = reg8",
      "66342 JUMP      66144",
      "66144 PUSH MEMORY ELEMENT IF INIT      2363 -> reg4",
      "66147 PUSH MEMORY ELEMENT IF INIT      2362 -> reg5",
      "66150 GET      reg5[length] -> reg7",
      "66156 LESS THAN      reg4 < reg7 -> reg9",
      "66160 JUMP IF FALSE      reg9 TO: 66344 | 66163"
  ],
  "66344": [
      "66344 PUSH MEMORY ELEMENT IF INIT      2361 -> reg10",
      "66347 JUMP OR RETURN VAL      reg10"
  ],
  "66446": [
      "66446 SET I      null",
      "66448 PUSH F.K      -> reg4",
      "66450 VOID F",
      "66451 SET MEMORY ELEMENT      0 = reg4",
      "66454 PUSH MEMORY ELEMENT IF INIT      2355 -> reg4",
      "66457 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "66460 PUT      reg4[raw] = reg8",
      "66466 PUSH MEMORY ELEMENT IF INIT      2355 -> reg5",
      "66469 PUSH MEMORY ELEMENT IF INIT      2081 -> reg8",
      "66472 NEW ARRAY      1 -> reg6",
      "66475 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "66478 GET      reg10[stringify] -> reg12",
      "66484 NEW ARRAY      1 -> reg11",
      "66487 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "66490 PUT      reg11[0] = reg14",
      "66494 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg11",
      "66498 SET      reg2 -> reg9",
      "66501 PUT      reg6[0] = reg9",
      "66505 CALL FUNCTION      PTR: reg8 MEM: reg6",
      "66509 SET      reg2 -> reg4",
      "66512 PUT      reg5[hash] = reg4",
      "66518 PUSH MEMORY ELEMENT IF INIT      2355 -> reg4",
      "66521 JUMP OR RETURN VAL      reg4"
  ],
  "66745": [
      "66745 SET I      null",
      "66747 PUSH F.K      -> reg6",
      "66749 VOID F",
      "66750 SET MEMORY ELEMENT      0 = reg6",
      "66753 PUSH MEMORY ELEMENT IF INIT      2368 -> reg4",
      "66756 PUT      reg4[raw] = error",
      "66764 PUSH MEMORY ELEMENT IF INIT      2368 -> reg5",
      "66767 PUSH MEMORY ELEMENT IF INIT      2081 -> reg7",
      "66770 NEW ARRAY      1 -> reg4",
      "66773 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "66776 GET      reg11[stringify] -> reg12",
      "66782 NEW ARRAY      1 -> reg13",
      "66785 PUSH MEMORY ELEMENT IF INIT      2368 -> reg14",
      "66788 GET      reg14[raw] -> reg15",
      "66794 PUT      reg13[0] = reg15",
      "66798 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg13",
      "66802 SET      reg2 -> reg9",
      "66805 PUT      reg4[0] = reg9",
      "66809 CALL FUNCTION      PTR: reg7 MEM: reg4",
      "66813 SET      reg2 -> reg6",
      "66816 PUT      reg5[hash] = reg6",
      "66822 PUSH MEMORY ELEMENT IF INIT      2368 -> reg4",
      "66825 JUMP OR RETURN VAL      reg4"
  ],
  "66992": [
      "66992 PUSH MEMORY ELEMENT IF INIT      2373 -> reg8",
      "66995 GET      reg8[toSource] -> reg9",
      "67001 EMPTY ARRAY      -> reg10",
      "67003 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "67007 SET      reg2 -> reg4",
      "67010 SET      reg4 -> reg7",
      "67013 JUMP      67018",
      "67018 PUT      reg6[toSource] = reg7",
      "67024 PUSH MEMORY ELEMENT IF INIT      2372 -> reg4",
      "67027 PUSH MEMORY ELEMENT IF INIT      2081 -> reg7",
      "67030 NEW ARRAY      1 -> reg10",
      "67033 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "67036 GET      reg11[stringify] -> reg12",
      "67042 NEW ARRAY      1 -> reg13",
      "67045 PUSH MEMORY ELEMENT IF INIT      2372 -> reg14",
      "67048 GET      reg14[raw] -> reg16",
      "67054 PUT      reg13[0] = reg16",
      "67058 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg13",
      "67062 SET      reg2 -> reg9",
      "67065 PUT      reg10[0] = reg9",
      "67069 CALL FUNCTION      PTR: reg7 MEM: reg10",
      "67073 SET      reg2 -> reg6",
      "67076 PUT      reg4[hash] = reg6",
      "67082 PUSH MEMORY ELEMENT IF INIT      2372 -> reg6",
      "67085 JUMP OR RETURN VAL      reg6"
  ],
  "67015": [
      "67015 SET      0 -> reg7",
      "67018 PUT      reg6[toSource] = reg7",
      "67024 PUSH MEMORY ELEMENT IF INIT      2372 -> reg4",
      "67027 PUSH MEMORY ELEMENT IF INIT      2081 -> reg7",
      "67030 NEW ARRAY      1 -> reg10",
      "67033 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "67036 GET      reg11[stringify] -> reg12",
      "67042 NEW ARRAY      1 -> reg13",
      "67045 PUSH MEMORY ELEMENT IF INIT      2372 -> reg14",
      "67048 GET      reg14[raw] -> reg16",
      "67054 PUT      reg13[0] = reg16",
      "67058 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg13",
      "67062 SET      reg2 -> reg9",
      "67065 PUT      reg10[0] = reg9",
      "67069 CALL FUNCTION      PTR: reg7 MEM: reg10",
      "67073 SET      reg2 -> reg6",
      "67076 PUT      reg4[hash] = reg6",
      "67082 PUSH MEMORY ELEMENT IF INIT      2372 -> reg6",
      "67085 JUMP OR RETURN VAL      reg6"
  ],
  "67089": [
      "67089 SET I      null",
      "67091 PUSH F.K      -> reg4",
      "67093 VOID F",
      "67094 SET MEMORY ELEMENT      0 = reg4",
      "67097 PUSH MEMORY ELEMENT IF INIT      2372 -> reg4",
      "67100 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "67103 PUT      reg4[raw] = reg6",
      "67109 PUSH MEMORY ELEMENT IF INIT      2372 -> reg4",
      "67112 PUSH MEMORY ELEMENT IF INIT      2081 -> reg7",
      "67115 NEW ARRAY      1 -> reg9",
      "67118 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "67121 GET      reg13[stringify] -> reg10",
      "67127 NEW ARRAY      1 -> reg14",
      "67130 PUSH MEMORY ELEMENT IF INIT      0 -> reg15",
      "67133 PUT      reg14[0] = reg15",
      "67137 CALL FUNCTION      OBJ: reg13 FUNC: reg10 ARGS: reg14",
      "67141 SET      reg2 -> reg12",
      "67144 PUT      reg9[0] = reg12",
      "67148 CALL FUNCTION      PTR: reg7 MEM: reg9",
      "67152 SET      reg2 -> reg6",
      "67155 PUT      reg4[hash] = reg6",
      "67161 PUSH MEMORY ELEMENT IF INIT      2372 -> reg4",
      "67164 JUMP OR RETURN VAL      reg4"
  ],
  "67283": [
      "67283 SET      0 -> reg8",
      "67286 GET      reg6[reg8] -> reg4",
      "67290 SET MEMORY ELEMENT IF INIT      2381 = reg4",
      "67293 NEW REGEXP      ^([A-Za-z][a-z]*)[A-Z] ,  -> reg9",
      "67301 GET      reg9[exec] -> reg11",
      "67307 NEW ARRAY      1 -> reg12",
      "67310 PUSH MEMORY ELEMENT IF INIT      2381 -> reg14",
      "67313 PUT      reg12[0] = reg14",
      "67317 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg12",
      "67321 SET      reg2 -> reg10",
      "67324 JUMP IF TRUE      reg10 TO: 67332 | 67327"
  ],
  "67286": [
      "67286 GET      reg6[reg8] -> reg4",
      "67290 SET MEMORY ELEMENT IF INIT      2381 = reg4",
      "67293 NEW REGEXP      ^([A-Za-z][a-z]*)[A-Z] ,  -> reg9",
      "67301 GET      reg9[exec] -> reg11",
      "67307 NEW ARRAY      1 -> reg12",
      "67310 PUSH MEMORY ELEMENT IF INIT      2381 -> reg14",
      "67313 PUT      reg12[0] = reg14",
      "67317 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg12",
      "67321 SET      reg2 -> reg10",
      "67324 JUMP IF TRUE      reg10 TO: 67332 | 67327"
  ],
  "67327": [
      "67327 EMPTY ARRAY      -> reg12",
      "67329 SET      reg12 -> reg10",
      "67332 GET      reg10[1] -> reg15",
      "67336 SET MEMORY ELEMENT IF INIT      2380 = reg15",
      "67339 JUMP IF FALSE      reg15 TO: 67421 | 67342"
  ],
  "67332": [
      "67332 GET      reg10[1] -> reg15",
      "67336 SET MEMORY ELEMENT IF INIT      2380 = reg15",
      "67339 JUMP IF FALSE      reg15 TO: 67421 | 67342"
  ],
  "67342": [
      "67342 PUSH MEMORY ELEMENT IF INIT      2380 -> reg11",
      "67345 GET      reg11[toLowerCase] -> reg13",
      "67351 EMPTY ARRAY      -> reg12",
      "67353 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg12",
      "67357 SET      reg2 -> reg10",
      "67360 SET MEMORY ELEMENT IF INIT      2380 = reg10",
      "67363 PUSH MEMORY ELEMENT IF INIT      2382 -> reg12",
      "67366 IN      reg10 inreg12 -> reg13",
      "67370 JUMP IF FALSE      reg13 TO: 67405 | 67373"
  ],
  "67373": [
      "67373 PUSH MEMORY ELEMENT IF INIT      2382 -> reg12",
      "67376 PUSH MEMORY ELEMENT IF INIT      2380 -> reg10",
      "67379 GET      reg12[reg10] -> reg13",
      "67383 SET      reg13 -> reg10",
      "67386 ADD      reg131-> reg13",
      "67390 PUSH MEMORY ELEMENT IF INIT      2382 -> reg12",
      "67393 PUSH MEMORY ELEMENT IF INIT      2380 -> reg17",
      "67396 PUT      reg12[reg17] = reg13",
      "67400 SET      reg10 -> reg16",
      "67403 JUMP      67418",
      "67418 SET      reg16 -> reg15",
      "67421 ADD      reg81-> reg8",
      "67425 LESS THAN      reg8 < reg7 -> reg10",
      "67429 JUMP IF TRUE      reg10 TO: 67286 | 67432"
  ],
  "67405": [
      "67405 PUSH MEMORY ELEMENT IF INIT      2382 -> reg10",
      "67408 PUSH MEMORY ELEMENT IF INIT      2380 -> reg12",
      "67411 PUT      reg10[reg12] = 1",
      "67415 SET      1 -> reg16",
      "67418 SET      reg16 -> reg15",
      "67421 ADD      reg81-> reg8",
      "67425 LESS THAN      reg8 < reg7 -> reg10",
      "67429 JUMP IF TRUE      reg10 TO: 67286 | 67432"
  ],
  "67421": [
      "67421 ADD      reg81-> reg8",
      "67425 LESS THAN      reg8 < reg7 -> reg10",
      "67429 JUMP IF TRUE      reg10 TO: 67286 | 67432"
  ],
  "67432": [
      "67432 PUSH MEMORY ELEMENT IF INIT      2379 -> reg6",
      "67435 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "67438 GET      reg7[stringify] -> reg8",
      "67444 NEW ARRAY      1 -> reg10",
      "67447 PUSH MEMORY ELEMENT IF INIT      2382 -> reg12",
      "67450 PUT      reg10[0] = reg12",
      "67454 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "67458 SET      reg2 -> reg4",
      "67461 PUT      reg6[raw] = reg4",
      "67467 PUSH MEMORY ELEMENT IF INIT      2379 -> reg4",
      "67470 PUSH MEMORY ELEMENT IF INIT      2081 -> reg8",
      "67473 NEW ARRAY      1 -> reg10",
      "67476 PUSH MEMORY ELEMENT IF INIT      2379 -> reg12",
      "67479 GET      reg12[raw] -> reg13",
      "67485 PUT      reg10[0] = reg13",
      "67489 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "67493 SET      reg2 -> reg6",
      "67496 PUT      reg4[hash] = reg6",
      "67502 PUSH MEMORY ELEMENT IF INIT      2379 -> reg6",
      "67505 JUMP OR RETURN VAL      reg6"
  ],
  "67509": [
      "67509 SET I      null",
      "67511 PUSH F.K      -> reg13",
      "67513 VOID F",
      "67514 SET MEMORY ELEMENT      0 = reg13",
      "67517 PUSH MEMORY ELEMENT IF INIT      2379 -> reg4",
      "67520 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "67523 PUT      reg4[raw] = reg6",
      "67529 PUSH MEMORY ELEMENT IF INIT      2379 -> reg4",
      "67532 PUSH MEMORY ELEMENT IF INIT      2081 -> reg8",
      "67535 NEW ARRAY      1 -> reg10",
      "67538 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "67541 GET      reg12[stringify] -> reg15",
      "67547 NEW ARRAY      1 -> reg14",
      "67550 PUSH MEMORY ELEMENT IF INIT      0 -> reg16",
      "67553 PUT      reg14[0] = reg16",
      "67557 CALL FUNCTION      OBJ: reg12 FUNC: reg15 ARGS: reg14",
      "67561 SET      reg2 -> reg13",
      "67564 PUT      reg10[0] = reg13",
      "67568 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "67572 SET      reg2 -> reg6",
      "67575 PUT      reg4[hash] = reg6",
      "67581 PUSH MEMORY ELEMENT IF INIT      2379 -> reg4",
      "67584 JUMP OR RETURN VAL      reg4"
  ],
  "67643": [
      "67643 PUSH MEMORY ELEMENT IF INIT      2390 -> reg6",
      "67646 GET      reg6[crypto] -> reg5",
      "67652 SET      reg5 -> reg4",
      "67655 SET MEMORY ELEMENT IF INIT      2392 = reg4",
      "67658 PUSH MEMORY ELEMENT IF INIT      2392 -> reg5",
      "67661 JUMP IF FALSE      reg5 TO: 67762 | 67664"
  ],
  "67655": [
      "67655 SET MEMORY ELEMENT IF INIT      2392 = reg4",
      "67658 PUSH MEMORY ELEMENT IF INIT      2392 -> reg5",
      "67661 JUMP IF FALSE      reg5 TO: 67762 | 67664"
  ],
  "67664": [
      "67664 PUSH MEMORY ELEMENT IF INIT      2084 -> reg5",
      "67667 NEW ARRAY      1 -> reg6",
      "67670 PUSH MEMORY ELEMENT IF INIT      2392 -> reg7",
      "67673 PUT      reg6[0] = reg7",
      "67677 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "67681 SET      reg2 -> reg4",
      "67684 SET MEMORY ELEMENT IF INIT      2393 = reg4",
      "67687 PUSH MEMORY ELEMENT IF INIT      2391 -> reg5",
      "67690 PUSH MEMORY ELEMENT IF INIT      2393 -> reg4",
      "67693 GET      reg4[props] -> reg6",
      "67699 PUT      reg5[raw] = reg6",
      "67705 PUSH MEMORY ELEMENT IF INIT      2391 -> reg4",
      "67708 PUSH MEMORY ELEMENT IF INIT      2081 -> reg7",
      "67711 NEW ARRAY      1 -> reg8",
      "67714 PUSH MEMORY ELEMENT IF INIT      2391 -> reg11",
      "67717 GET      reg11[raw] -> reg9",
      "67723 GET      reg9[toString] -> reg10",
      "67729 EMPTY ARRAY      -> reg13",
      "67731 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg13",
      "67735 SET      reg2 -> reg5",
      "67738 PUT      reg8[0] = reg5",
      "67742 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "67746 SET      reg2 -> reg6",
      "67749 PUT      reg4[hash] = reg6",
      "67755 PUSH MEMORY ELEMENT IF INIT      2391 -> reg4",
      "67758 JUMP OR RETURN VAL      reg4"
  ],
  "67762": [
      "67762 GET WINDOW PROP      Error -> reg5",
      "67767 NEW ARRAY      1 -> reg6",
      "67770 PUT      reg6[0] = Not Supported",
      "67776 BIND APPLY      reg5 reg6 -> 4",
      "67780 HANDLE ERROR      reg4",
      "67782 JUMP      67861",
      "67861 SET I      null",
      "67863 JUMP OR RETURN"
  ],
  "67784": [
      "67784 SET I      null",
      "67786 PUSH F.K      -> reg4",
      "67788 VOID F",
      "67789 SET MEMORY ELEMENT      0 = reg4",
      "67792 PUSH MEMORY ELEMENT IF INIT      2391 -> reg4",
      "67795 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "67798 PUT      reg4[raw] = reg5",
      "67804 PUSH MEMORY ELEMENT IF INIT      2391 -> reg4",
      "67807 PUSH MEMORY ELEMENT IF INIT      2081 -> reg6",
      "67810 NEW ARRAY      1 -> reg8",
      "67813 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "67816 GET      reg10[stringify] -> reg11",
      "67822 NEW ARRAY      1 -> reg12",
      "67825 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "67828 PUT      reg12[0] = reg14",
      "67832 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "67836 SET      reg2 -> reg7",
      "67839 PUT      reg8[0] = reg7",
      "67843 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "67847 SET      reg2 -> reg5",
      "67850 PUT      reg4[hash] = reg5",
      "67856 PUSH MEMORY ELEMENT IF INIT      2391 -> reg5",
      "67859 JUMP OR RETURN VAL      reg5"
  ],
  "68198": [
      "68198 SET      0 -> reg12",
      "68201 GET      reg8[reg12] -> reg9",
      "68205 SET MEMORY ELEMENT IF INIT      2404 = reg9",
      "68208 PUSH MEMORY ELEMENT IF INIT      2402 -> reg11",
      "68211 PUSH MEMORY ELEMENT IF INIT      2403 -> reg13",
      "68214 PUSH MEMORY ELEMENT IF INIT      2404 -> reg14",
      "68217 GET      reg13[reg14] -> reg15",
      "68221 ADD      reg11NaN-> reg15",
      "68225 SET MEMORY ELEMENT IF INIT      2402 = reg15",
      "68228 ADD      reg121-> reg12",
      "68232 LESS THAN      reg12 < reg5 -> reg14",
      "68236 JUMP IF TRUE      reg14 TO: 68201 | 68239"
  ],
  "68201": [
      "68201 GET      reg8[reg12] -> reg9",
      "68205 SET MEMORY ELEMENT IF INIT      2404 = reg9",
      "68208 PUSH MEMORY ELEMENT IF INIT      2402 -> reg11",
      "68211 PUSH MEMORY ELEMENT IF INIT      2403 -> reg13",
      "68214 PUSH MEMORY ELEMENT IF INIT      2404 -> reg14",
      "68217 GET      reg13[reg14] -> reg15",
      "68221 ADD      reg11NaN-> reg15",
      "68225 SET MEMORY ELEMENT IF INIT      2402 = reg15",
      "68228 ADD      reg121-> reg12",
      "68232 LESS THAN      reg12 < reg5 -> reg14",
      "68236 JUMP IF TRUE      reg14 TO: 68201 | 68239"
  ],
  "68239": [
      "68239 PUSH MEMORY ELEMENT IF INIT      2400 -> reg8",
      "68242 GET      reg8[remove] -> reg5",
      "68248 JUMP IF FALSE      reg5 TO: 68269 | 68251"
  ],
  "68251": [
      "68251 PUSH MEMORY ELEMENT IF INIT      2400 -> reg9",
      "68254 GET      reg9[remove] -> reg8",
      "68260 EMPTY ARRAY      -> reg12",
      "68262 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg12",
      "68266 SET      reg2 -> reg5",
      "68269 PUSH MEMORY ELEMENT IF INIT      2399 -> reg8",
      "68272 PUSH MEMORY ELEMENT IF INIT      2403 -> reg11",
      "68275 PUT      reg8[raw] = reg11",
      "68281 PUSH MEMORY ELEMENT IF INIT      2399 -> reg5",
      "68284 PUSH MEMORY ELEMENT IF INIT      2081 -> reg11",
      "68287 NEW ARRAY      1 -> reg13",
      "68290 PUSH MEMORY ELEMENT IF INIT      2402 -> reg12",
      "68293 PUT      reg13[0] = reg12",
      "68297 CALL FUNCTION      PTR: reg11 MEM: reg13",
      "68301 SET      reg2 -> reg8",
      "68304 PUT      reg5[hash] = reg8",
      "68310 PUSH MEMORY ELEMENT IF INIT      2399 -> reg5",
      "68313 JUMP OR RETURN VAL      reg5"
  ],
  "68269": [
      "68269 PUSH MEMORY ELEMENT IF INIT      2399 -> reg8",
      "68272 PUSH MEMORY ELEMENT IF INIT      2403 -> reg11",
      "68275 PUT      reg8[raw] = reg11",
      "68281 PUSH MEMORY ELEMENT IF INIT      2399 -> reg5",
      "68284 PUSH MEMORY ELEMENT IF INIT      2081 -> reg11",
      "68287 NEW ARRAY      1 -> reg13",
      "68290 PUSH MEMORY ELEMENT IF INIT      2402 -> reg12",
      "68293 PUT      reg13[0] = reg12",
      "68297 CALL FUNCTION      PTR: reg11 MEM: reg13",
      "68301 SET      reg2 -> reg8",
      "68304 PUT      reg5[hash] = reg8",
      "68310 PUSH MEMORY ELEMENT IF INIT      2399 -> reg5",
      "68313 JUMP OR RETURN VAL      reg5"
  ],
  "68317": [
      "68317 SET I      null",
      "68319 PUSH F.K      -> reg5",
      "68321 VOID F",
      "68322 SET MEMORY ELEMENT      0 = reg5",
      "68325 PUSH MEMORY ELEMENT IF INIT      2399 -> reg5",
      "68328 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "68331 PUT      reg5[raw] = reg8",
      "68337 PUSH MEMORY ELEMENT IF INIT      2399 -> reg5",
      "68340 PUSH MEMORY ELEMENT IF INIT      2081 -> reg11",
      "68343 NEW ARRAY      1 -> reg12",
      "68346 PUSH MEMORY ELEMENT IF INIT      280 -> reg16",
      "68349 GET      reg16[stringify] -> reg15",
      "68355 NEW ARRAY      1 -> reg14",
      "68358 PUSH MEMORY ELEMENT IF INIT      0 -> reg17",
      "68361 PUT      reg14[0] = reg17",
      "68365 CALL FUNCTION      OBJ: reg16 FUNC: reg15 ARGS: reg14",
      "68369 SET      reg2 -> reg13",
      "68372 PUT      reg12[0] = reg13",
      "68376 CALL FUNCTION      PTR: reg11 MEM: reg12",
      "68380 SET      reg2 -> reg8",
      "68383 PUT      reg5[hash] = reg8",
      "68389 PUSH MEMORY ELEMENT IF INIT      2399 -> reg12",
      "68392 JUMP OR RETURN VAL      reg12"
  ],
  "68581": [
      "68581 GET WINDOW PROP      Object -> reg8",
      "68586 GET      reg8[getOwnPropertyDescriptor] -> reg11",
      "68592 NEW ARRAY      2 -> reg9",
      "68595 PUSH MEMORY ELEMENT IF INIT      2409 -> reg12",
      "68598 GET      reg12[navigator] -> reg14",
      "68604 PUT      reg9[0] = reg14",
      "68608 PUT      reg9[1] = webdriver",
      "68614 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg9",
      "68618 SET      reg2 -> reg4",
      "68621 GET      reg4[get] -> reg9",
      "68627 SET      reg9 -> reg10",
      "68630 JUMP IF FALSE      reg10 TO: 68697 | 68633"
  ],
  "68630": ["68630 JUMP IF FALSE      reg10 TO: 68697 | 68633"],
  "68633": [
      "68633 GET WINDOW PROP      Object -> reg12",
      "68638 GET      reg12[getOwnPropertyDescriptor] -> reg11",
      "68644 NEW ARRAY      2 -> reg13",
      "68647 PUSH MEMORY ELEMENT IF INIT      2409 -> reg15",
      "68650 GET      reg15[navigator] -> reg14",
      "68656 PUT      reg13[0] = reg14",
      "68660 PUT      reg13[1] = webdriver",
      "68666 CALL FUNCTION      OBJ: reg12 FUNC: reg11 ARGS: reg13",
      "68670 SET      reg2 -> reg9",
      "68673 GET      reg9[get] -> reg11",
      "68679 GET      reg11[toString] -> reg13",
      "68685 EMPTY ARRAY      -> reg9",
      "68687 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg9",
      "68691 SET      reg2 -> reg4",
      "68694 SET      reg4 -> reg10",
      "68697 PUT      reg5[wdg] = reg10",
      "68703 PUSH MEMORY ELEMENT IF INIT      2410 -> reg5",
      "68706 GET      reg5[raw] -> reg4",
      "68712 GET WINDOW PROP      Object -> reg9",
      "68717 GET      reg9[getOwnPropertyDescriptor] -> reg10",
      "68723 NEW ARRAY      2 -> reg13",
      "68726 PUSH MEMORY ELEMENT IF INIT      2409 -> reg14",
      "68729 GET      reg14[navigator] -> reg16",
      "68735 PUT      reg13[0] = reg16",
      "68739 PUT      reg13[1] = webdriver",
      "68745 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg13",
      "68749 SET      reg2 -> reg5",
      "68752 JUMP IF FALSE      reg5 TO: 68804 | 68755"
  ],
  "68697": [
      "68697 PUT      reg5[wdg] = reg10",
      "68703 PUSH MEMORY ELEMENT IF INIT      2410 -> reg5",
      "68706 GET      reg5[raw] -> reg4",
      "68712 GET WINDOW PROP      Object -> reg9",
      "68717 GET      reg9[getOwnPropertyDescriptor] -> reg10",
      "68723 NEW ARRAY      2 -> reg13",
      "68726 PUSH MEMORY ELEMENT IF INIT      2409 -> reg14",
      "68729 GET      reg14[navigator] -> reg16",
      "68735 PUT      reg13[0] = reg16",
      "68739 PUT      reg13[1] = webdriver",
      "68745 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg13",
      "68749 SET      reg2 -> reg5",
      "68752 JUMP IF FALSE      reg5 TO: 68804 | 68755"
  ],
  "68755": [
      "68755 GET WINDOW PROP      Object -> reg13",
      "68760 GET      reg13[getOwnPropertyDescriptor] -> reg15",
      "68766 NEW ARRAY      2 -> reg16",
      "68769 PUSH MEMORY ELEMENT IF INIT      2409 -> reg17",
      "68772 GET      reg17[navigator] -> reg14",
      "68778 PUT      reg16[0] = reg14",
      "68782 PUT      reg16[1] = webdriver",
      "68788 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg16",
      "68792 SET      reg2 -> reg10",
      "68795 GET      reg10[get] -> reg14",
      "68801 SET      reg14 -> reg5",
      "68804 JUMP IF FALSE      reg5 TO: 68862 | 68807"
  ],
  "68804": ["68804 JUMP IF FALSE      reg5 TO: 68862 | 68807"],
  "68807": [
      "68807 GET WINDOW PROP      Object -> reg15",
      "68812 GET      reg15[getOwnPropertyDescriptor] -> reg14",
      "68818 NEW ARRAY      2 -> reg16",
      "68821 PUSH MEMORY ELEMENT IF INIT      2409 -> reg17",
      "68824 GET      reg17[navigator] -> reg19",
      "68830 PUT      reg16[0] = reg19",
      "68834 PUT      reg16[1] = webdriver",
      "68840 CALL FUNCTION      OBJ: reg15 FUNC: reg14 ARGS: reg16",
      "68844 SET      reg2 -> reg10",
      "68847 GET      reg10[get] -> reg14",
      "68853 GET      reg14[toString] -> reg16",
      "68859 SET      reg16 -> reg5",
      "68862 JUMP IF FALSE      reg5 TO: 68935 | 68865"
  ],
  "68862": ["68862 JUMP IF FALSE      reg5 TO: 68935 | 68865"],
  "68865": [
      "68865 GET WINDOW PROP      Object -> reg16",
      "68870 GET      reg16[getOwnPropertyDescriptor] -> reg17",
      "68876 NEW ARRAY      2 -> reg18",
      "68879 PUSH MEMORY ELEMENT IF INIT      2409 -> reg20",
      "68882 GET      reg20[navigator] -> reg19",
      "68888 PUT      reg18[0] = reg19",
      "68892 PUT      reg18[1] = webdriver",
      "68898 CALL FUNCTION      OBJ: reg16 FUNC: reg17 ARGS: reg18",
      "68902 SET      reg2 -> reg14",
      "68905 GET      reg14[get] -> reg17",
      "68911 GET      reg17[toString] -> reg14",
      "68917 GET      reg14[toString] -> reg17",
      "68923 EMPTY ARRAY      -> reg18",
      "68925 CALL FUNCTION      OBJ: reg14 FUNC: reg17 ARGS: reg18",
      "68929 SET      reg2 -> reg10",
      "68932 SET      reg10 -> reg5",
      "68935 PUT      reg4[wdgs] = reg5",
      "68941 PUSH MEMORY ELEMENT IF INIT      2410 -> reg5",
      "68944 GET      reg5[raw] -> reg4",
      "68950 GET WINDOW PROP      Object -> reg5",
      "68955 GET      reg5[getOwnPropertyDescriptor] -> reg10",
      "68961 NEW ARRAY      2 -> reg19",
      "68964 PUSH MEMORY ELEMENT IF INIT      2409 -> reg17",
      "68967 GET      reg17[HTMLImageElement] -> reg20",
      "68973 GET      reg20[prototype] -> reg17",
      "68979 PUT      reg19[0] = reg17",
      "68983 PUT      reg19[1] = width",
      "68989 CALL FUNCTION      OBJ: reg5 FUNC: reg10 ARGS: reg19",
      "68993 SET      reg2 -> reg18",
      "68996 JUMP IF FALSE      reg18 TO: 69054 | 68999"
  ],
  "68935": [
      "68935 PUT      reg4[wdgs] = reg5",
      "68941 PUSH MEMORY ELEMENT IF INIT      2410 -> reg5",
      "68944 GET      reg5[raw] -> reg4",
      "68950 GET WINDOW PROP      Object -> reg5",
      "68955 GET      reg5[getOwnPropertyDescriptor] -> reg10",
      "68961 NEW ARRAY      2 -> reg19",
      "68964 PUSH MEMORY ELEMENT IF INIT      2409 -> reg17",
      "68967 GET      reg17[HTMLImageElement] -> reg20",
      "68973 GET      reg20[prototype] -> reg17",
      "68979 PUT      reg19[0] = reg17",
      "68983 PUT      reg19[1] = width",
      "68989 CALL FUNCTION      OBJ: reg5 FUNC: reg10 ARGS: reg19",
      "68993 SET      reg2 -> reg18",
      "68996 JUMP IF FALSE      reg18 TO: 69054 | 68999"
  ],
  "68999": [
      "68999 GET WINDOW PROP      Object -> reg10",
      "69004 GET      reg10[getOwnPropertyDescriptor] -> reg17",
      "69010 NEW ARRAY      2 -> reg20",
      "69013 PUSH MEMORY ELEMENT IF INIT      2409 -> reg22",
      "69016 GET      reg22[HTMLImageElement] -> reg21",
      "69022 GET      reg21[prototype] -> reg22",
      "69028 PUT      reg20[0] = reg22",
      "69032 PUT      reg20[1] = width",
      "69038 CALL FUNCTION      OBJ: reg10 FUNC: reg17 ARGS: reg20",
      "69042 SET      reg2 -> reg19",
      "69045 GET      reg19[get] -> reg17",
      "69051 SET      reg17 -> reg18",
      "69054 JUMP IF FALSE      reg18 TO: 69127 | 69057"
  ],
  "69054": ["69054 JUMP IF FALSE      reg18 TO: 69127 | 69057"],
  "69057": [
      "69057 GET WINDOW PROP      Object -> reg20",
      "69062 GET      reg20[getOwnPropertyDescriptor] -> reg21",
      "69068 NEW ARRAY      2 -> reg22",
      "69071 PUSH MEMORY ELEMENT IF INIT      2409 -> reg23",
      "69074 GET      reg23[HTMLImageElement] -> reg24",
      "69080 GET      reg24[prototype] -> reg25",
      "69086 PUT      reg22[0] = reg25",
      "69090 PUT      reg22[1] = width",
      "69096 CALL FUNCTION      OBJ: reg20 FUNC: reg21 ARGS: reg22",
      "69100 SET      reg2 -> reg19",
      "69103 GET      reg19[get] -> reg21",
      "69109 GET      reg21[toString] -> reg19",
      "69115 EMPTY ARRAY      -> reg22",
      "69117 CALL FUNCTION      OBJ: reg21 FUNC: reg19 ARGS: reg22",
      "69121 SET      reg2 -> reg17",
      "69124 SET      reg17 -> reg18",
      "69127 PUT      reg4[iw] = reg18",
      "69133 PUSH MEMORY ELEMENT IF INIT      2410 -> reg4",
      "69136 GET      reg4[raw] -> reg17",
      "69142 GET WINDOW PROP      Object -> reg4",
      "69147 GET      reg4[getOwnPropertyDescriptor] -> reg26",
      "69153 NEW ARRAY      2 -> reg19",
      "69156 PUSH MEMORY ELEMENT IF INIT      2409 -> reg22",
      "69159 GET      reg22[HTMLImageElement] -> reg23",
      "69165 GET      reg23[prototype] -> reg22",
      "69171 PUT      reg19[0] = reg22",
      "69175 PUT      reg19[1] = height",
      "69181 CALL FUNCTION      OBJ: reg4 FUNC: reg26 ARGS: reg19",
      "69185 SET      reg2 -> reg18",
      "69188 JUMP IF FALSE      reg18 TO: 69246 | 69191"
  ],
  "69127": [
      "69127 PUT      reg4[iw] = reg18",
      "69133 PUSH MEMORY ELEMENT IF INIT      2410 -> reg4",
      "69136 GET      reg4[raw] -> reg17",
      "69142 GET WINDOW PROP      Object -> reg4",
      "69147 GET      reg4[getOwnPropertyDescriptor] -> reg26",
      "69153 NEW ARRAY      2 -> reg19",
      "69156 PUSH MEMORY ELEMENT IF INIT      2409 -> reg22",
      "69159 GET      reg22[HTMLImageElement] -> reg23",
      "69165 GET      reg23[prototype] -> reg22",
      "69171 PUT      reg19[0] = reg22",
      "69175 PUT      reg19[1] = height",
      "69181 CALL FUNCTION      OBJ: reg4 FUNC: reg26 ARGS: reg19",
      "69185 SET      reg2 -> reg18",
      "69188 JUMP IF FALSE      reg18 TO: 69246 | 69191"
  ],
  "69191": [
      "69191 GET WINDOW PROP      Object -> reg22",
      "69196 GET      reg22[getOwnPropertyDescriptor] -> reg23",
      "69202 NEW ARRAY      2 -> reg25",
      "69205 PUSH MEMORY ELEMENT IF INIT      2409 -> reg24",
      "69208 GET      reg24[HTMLImageElement] -> reg26",
      "69214 GET      reg26[prototype] -> reg27",
      "69220 PUT      reg25[0] = reg27",
      "69224 PUT      reg25[1] = height",
      "69230 CALL FUNCTION      OBJ: reg22 FUNC: reg23 ARGS: reg25",
      "69234 SET      reg2 -> reg19",
      "69237 GET      reg19[get] -> reg23",
      "69243 SET      reg23 -> reg18",
      "69246 JUMP IF FALSE      reg18 TO: 69319 | 69249"
  ],
  "69246": ["69246 JUMP IF FALSE      reg18 TO: 69319 | 69249"],
  "69249": [
      "69249 GET WINDOW PROP      Object -> reg23",
      "69254 GET      reg23[getOwnPropertyDescriptor] -> reg25",
      "69260 NEW ARRAY      2 -> reg26",
      "69263 PUSH MEMORY ELEMENT IF INIT      2409 -> reg27",
      "69266 GET      reg27[HTMLImageElement] -> reg29",
      "69272 GET      reg29[prototype] -> reg27",
      "69278 PUT      reg26[0] = reg27",
      "69282 PUT      reg26[1] = height",
      "69288 CALL FUNCTION      OBJ: reg23 FUNC: reg25 ARGS: reg26",
      "69292 SET      reg2 -> reg24",
      "69295 GET      reg24[get] -> reg25",
      "69301 GET      reg25[toString] -> reg24",
      "69307 EMPTY ARRAY      -> reg26",
      "69309 CALL FUNCTION      OBJ: reg25 FUNC: reg24 ARGS: reg26",
      "69313 SET      reg2 -> reg19",
      "69316 SET      reg19 -> reg18",
      "69319 PUT      reg17[ih] = reg18",
      "69325 PUSH MEMORY ELEMENT IF INIT      2410 -> reg18",
      "69328 GET      reg18[raw] -> reg17",
      "69334 GET WINDOW PROP      Object -> reg19",
      "69339 GET      reg19[getOwnPropertyDescriptor] -> reg24",
      "69345 NEW ARRAY      2 -> reg27",
      "69348 PUSH MEMORY ELEMENT IF INIT      2409 -> reg26",
      "69351 GET      reg26[HTMLDivElement] -> reg28",
      "69357 GET      reg28[prototype] -> reg26",
      "69363 PUT      reg27[0] = reg26",
      "69367 PUT      reg27[1] = offsetHeight",
      "69373 CALL FUNCTION      OBJ: reg19 FUNC: reg24 ARGS: reg27",
      "69377 SET      reg2 -> reg18",
      "69380 JUMP IF FALSE      reg18 TO: 69438 | 69383"
  ],
  "69319": [
      "69319 PUT      reg17[ih] = reg18",
      "69325 PUSH MEMORY ELEMENT IF INIT      2410 -> reg18",
      "69328 GET      reg18[raw] -> reg17",
      "69334 GET WINDOW PROP      Object -> reg19",
      "69339 GET      reg19[getOwnPropertyDescriptor] -> reg24",
      "69345 NEW ARRAY      2 -> reg27",
      "69348 PUSH MEMORY ELEMENT IF INIT      2409 -> reg26",
      "69351 GET      reg26[HTMLDivElement] -> reg28",
      "69357 GET      reg28[prototype] -> reg26",
      "69363 PUT      reg27[0] = reg26",
      "69367 PUT      reg27[1] = offsetHeight",
      "69373 CALL FUNCTION      OBJ: reg19 FUNC: reg24 ARGS: reg27",
      "69377 SET      reg2 -> reg18",
      "69380 JUMP IF FALSE      reg18 TO: 69438 | 69383"
  ],
  "69383": [
      "69383 GET WINDOW PROP      Object -> reg24",
      "69388 GET      reg24[getOwnPropertyDescriptor] -> reg27",
      "69394 NEW ARRAY      2 -> reg30",
      "69397 PUSH MEMORY ELEMENT IF INIT      2409 -> reg28",
      "69400 GET      reg28[HTMLDivElement] -> reg29",
      "69406 GET      reg29[prototype] -> reg28",
      "69412 PUT      reg30[0] = reg28",
      "69416 PUT      reg30[1] = offsetHeight",
      "69422 CALL FUNCTION      OBJ: reg24 FUNC: reg27 ARGS: reg30",
      "69426 SET      reg2 -> reg26",
      "69429 GET      reg26[get] -> reg27",
      "69435 SET      reg27 -> reg18",
      "69438 JUMP IF FALSE      reg18 TO: 69511 | 69441"
  ],
  "69438": ["69438 JUMP IF FALSE      reg18 TO: 69511 | 69441"],
  "69441": [
      "69441 GET WINDOW PROP      Object -> reg27",
      "69446 GET      reg27[getOwnPropertyDescriptor] -> reg29",
      "69452 NEW ARRAY      2 -> reg30",
      "69455 PUSH MEMORY ELEMENT IF INIT      2409 -> reg32",
      "69458 GET      reg32[HTMLDivElement] -> reg33",
      "69464 GET      reg33[prototype] -> reg31",
      "69470 PUT      reg30[0] = reg31",
      "69474 PUT      reg30[1] = offsetHeight",
      "69480 CALL FUNCTION      OBJ: reg27 FUNC: reg29 ARGS: reg30",
      "69484 SET      reg2 -> reg26",
      "69487 GET      reg26[get] -> reg29",
      "69493 GET      reg29[toString] -> reg26",
      "69499 EMPTY ARRAY      -> reg32",
      "69501 CALL FUNCTION      OBJ: reg29 FUNC: reg26 ARGS: reg32",
      "69505 SET      reg2 -> reg28",
      "69508 SET      reg28 -> reg18",
      "69511 PUT      reg17[doh] = reg18",
      "69517 PUSH MEMORY ELEMENT IF INIT      2410 -> reg17",
      "69520 GET      reg17[raw] -> reg18",
      "69526 PUSH MEMORY ELEMENT IF INIT      2409 -> reg28",
      "69529 GET      reg28[HTMLMediaElement] -> reg26",
      "69535 GET      reg26[prototype] -> reg28",
      "69541 GET      reg28[canPlayType] -> reg26",
      "69547 GET      reg26[toString] -> reg28",
      "69553 EMPTY ARRAY      -> reg30",
      "69555 CALL FUNCTION      OBJ: reg26 FUNC: reg28 ARGS: reg30",
      "69559 SET      reg2 -> reg17",
      "69562 PUT      reg18[cpt] = reg17",
      "69568 PUSH MEMORY ELEMENT IF INIT      2410 -> reg30",
      "69571 PUSH MEMORY ELEMENT IF INIT      2081 -> reg17",
      "69574 NEW ARRAY      1 -> reg28",
      "69577 PUSH MEMORY ELEMENT IF INIT      280 -> reg32",
      "69580 GET      reg32[stringify] -> reg34",
      "69586 NEW ARRAY      1 -> reg33",
      "69589 PUSH MEMORY ELEMENT IF INIT      2410 -> reg35",
      "69592 GET      reg35[raw] -> reg37",
      "69598 PUT      reg33[0] = reg37",
      "69602 CALL FUNCTION      OBJ: reg32 FUNC: reg34 ARGS: reg33",
      "69606 SET      reg2 -> reg31",
      "69609 PUT      reg28[0] = reg31",
      "69613 CALL FUNCTION      PTR: reg17 MEM: reg28",
      "69617 SET      reg2 -> reg18",
      "69620 PUT      reg30[hash] = reg18",
      "69626 PUSH MEMORY ELEMENT IF INIT      2410 -> reg17",
      "69629 JUMP OR RETURN VAL      reg17"
  ],
  "69511": [
      "69511 PUT      reg17[doh] = reg18",
      "69517 PUSH MEMORY ELEMENT IF INIT      2410 -> reg17",
      "69520 GET      reg17[raw] -> reg18",
      "69526 PUSH MEMORY ELEMENT IF INIT      2409 -> reg28",
      "69529 GET      reg28[HTMLMediaElement] -> reg26",
      "69535 GET      reg26[prototype] -> reg28",
      "69541 GET      reg28[canPlayType] -> reg26",
      "69547 GET      reg26[toString] -> reg28",
      "69553 EMPTY ARRAY      -> reg30",
      "69555 CALL FUNCTION      OBJ: reg26 FUNC: reg28 ARGS: reg30",
      "69559 SET      reg2 -> reg17",
      "69562 PUT      reg18[cpt] = reg17",
      "69568 PUSH MEMORY ELEMENT IF INIT      2410 -> reg30",
      "69571 PUSH MEMORY ELEMENT IF INIT      2081 -> reg17",
      "69574 NEW ARRAY      1 -> reg28",
      "69577 PUSH MEMORY ELEMENT IF INIT      280 -> reg32",
      "69580 GET      reg32[stringify] -> reg34",
      "69586 NEW ARRAY      1 -> reg33",
      "69589 PUSH MEMORY ELEMENT IF INIT      2410 -> reg35",
      "69592 GET      reg35[raw] -> reg37",
      "69598 PUT      reg33[0] = reg37",
      "69602 CALL FUNCTION      OBJ: reg32 FUNC: reg34 ARGS: reg33",
      "69606 SET      reg2 -> reg31",
      "69609 PUT      reg28[0] = reg31",
      "69613 CALL FUNCTION      PTR: reg17 MEM: reg28",
      "69617 SET      reg2 -> reg18",
      "69620 PUT      reg30[hash] = reg18",
      "69626 PUSH MEMORY ELEMENT IF INIT      2410 -> reg17",
      "69629 JUMP OR RETURN VAL      reg17"
  ],
  "69633": [
      "69633 SET I      null",
      "69635 PUSH F.K      -> reg17",
      "69637 VOID F",
      "69638 SET MEMORY ELEMENT      0 = reg17",
      "69641 PUSH MEMORY ELEMENT IF INIT      2410 -> reg18",
      "69644 PUT      reg18[raw] = error",
      "69652 PUSH MEMORY ELEMENT IF INIT      2410 -> reg17",
      "69655 PUSH MEMORY ELEMENT IF INIT      2081 -> reg18",
      "69658 NEW ARRAY      1 -> reg30",
      "69661 PUSH MEMORY ELEMENT IF INIT      280 -> reg33",
      "69664 GET      reg33[stringify] -> reg35",
      "69670 NEW ARRAY      1 -> reg36",
      "69673 PUSH MEMORY ELEMENT IF INIT      2410 -> reg37",
      "69676 GET      reg37[raw] -> reg39",
      "69682 PUT      reg36[0] = reg39",
      "69686 CALL FUNCTION      OBJ: reg33 FUNC: reg35 ARGS: reg36",
      "69690 SET      reg2 -> reg31",
      "69693 PUT      reg30[0] = reg31",
      "69697 CALL FUNCTION      PTR: reg18 MEM: reg30",
      "69701 SET      reg2 -> reg28",
      "69704 PUT      reg17[hash] = reg28",
      "69710 PUSH MEMORY ELEMENT IF INIT      2410 -> reg17",
      "69713 JUMP OR RETURN VAL      reg17"
  ],
  "69947": [
      "69947 SET I      null",
      "69949 PUSH F.K      -> reg6",
      "69951 VOID F",
      "69952 SET MEMORY ELEMENT      0 = reg6",
      "69955 PUSH MEMORY ELEMENT IF INIT      2424 -> reg4",
      "69958 PUT      reg4[raw] = error",
      "69966 PUSH MEMORY ELEMENT IF INIT      2424 -> reg4",
      "69969 PUSH MEMORY ELEMENT IF INIT      2081 -> reg9",
      "69972 NEW ARRAY      1 -> reg8",
      "69975 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "69978 GET      reg11[stringify] -> reg12",
      "69984 NEW ARRAY      1 -> reg14",
      "69987 PUSH MEMORY ELEMENT IF INIT      2424 -> reg15",
      "69990 GET      reg15[raw] -> reg16",
      "69996 PUT      reg14[0] = reg16",
      "70000 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg14",
      "70004 SET      reg2 -> reg10",
      "70007 PUT      reg8[0] = reg10",
      "70011 CALL FUNCTION      PTR: reg9 MEM: reg8",
      "70015 SET      reg2 -> reg6",
      "70018 PUT      reg4[hash] = reg6",
      "70024 PUSH MEMORY ELEMENT IF INIT      2424 -> reg4",
      "70027 JUMP OR RETURN VAL      reg4"
  ],
  "70126": [
      "70126 GET WINDOW PROP      getComputedStyle -> reg4",
      "70131 NEW ARRAY      1 -> reg5",
      "70134 PUSH MEMORY ELEMENT IF INIT      2429 -> reg9",
      "70137 PUT      reg5[0] = reg9",
      "70141 CALL FUNCTION      PTR: reg4 MEM: reg5",
      "70145 SET      reg2 -> reg7",
      "70148 SET MEMORY ELEMENT IF INIT      2430 = reg7",
      "70151 PUSH MEMORY ELEMENT IF INIT      2428 -> reg5",
      "70154 PUSH MEMORY ELEMENT IF INIT      2430 -> reg4",
      "70157 PUT      reg5[raw] = reg4",
      "70163 SET MEMORY ELEMENT IF INIT      2431 = ",
      "70168 SET MEMORY ELEMENT IF INIT      2432 = 0",
      "70171 PUSH MEMORY ELEMENT IF INIT      2432 -> reg5",
      "70174 PUSH MEMORY ELEMENT IF INIT      2430 -> reg4",
      "70177 GET      reg4[length] -> reg8",
      "70183 LESS THAN      reg5 < reg8 -> reg4",
      "70187 JUMP IF FALSE      reg4 TO: 70246 | 70190"
  ],
  "70190": [
      "70190 PUSH MEMORY ELEMENT IF INIT      2431 -> reg4",
      "70193 PUSH MEMORY ELEMENT IF INIT      2430 -> reg9",
      "70196 PUSH MEMORY ELEMENT IF INIT      2432 -> reg10",
      "70199 GET      reg9[reg10] -> reg5",
      "70203 GET      reg5[toString] -> reg8",
      "70209 EMPTY ARRAY      -> reg9",
      "70211 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg9",
      "70215 SET      reg2 -> reg7",
      "70218 ADD      reg7NaN-> reg8",
      "70224 ADD      reg4NaN-> reg8",
      "70228 SET MEMORY ELEMENT IF INIT      2431 = reg8",
      "70231 PUSH MEMORY ELEMENT IF INIT      2432 -> reg4",
      "70234 SET      reg4 -> reg8",
      "70237 ADD      reg41-> reg4",
      "70241 SET MEMORY ELEMENT IF INIT      2432 = reg4",
      "70244 JUMP      70171",
      "70171 PUSH MEMORY ELEMENT IF INIT      2432 -> reg5",
      "70174 PUSH MEMORY ELEMENT IF INIT      2430 -> reg4",
      "70177 GET      reg4[length] -> reg8",
      "70183 LESS THAN      reg5 < reg8 -> reg4",
      "70187 JUMP IF FALSE      reg4 TO: 70246 | 70190"
  ],
  "70246": [
      "70246 PUSH MEMORY ELEMENT IF INIT      2428 -> reg4",
      "70249 PUSH MEMORY ELEMENT IF INIT      2081 -> reg8",
      "70252 NEW ARRAY      1 -> reg9",
      "70255 PUSH MEMORY ELEMENT IF INIT      2431 -> reg10",
      "70258 PUT      reg9[0] = reg10",
      "70262 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "70266 SET      reg2 -> reg7",
      "70269 PUT      reg4[hash] = reg7",
      "70275 PUSH MEMORY ELEMENT IF INIT      2428 -> reg8",
      "70278 PUT      reg8[raw] = null",
      "70284 PUSH MEMORY ELEMENT IF INIT      2428 -> reg4",
      "70287 JUMP OR RETURN VAL      reg4"
  ],
  "70291": [
      "70291 GET WINDOW PROP      Error -> reg4",
      "70296 NEW ARRAY      1 -> reg9",
      "70299 PUT      reg9[0] = Not Supported",
      "70305 BIND APPLY      reg4 reg9 -> 7",
      "70309 HANDLE ERROR      reg7",
      "70311 JUMP      70390",
      "70390 SET I      null",
      "70392 JUMP OR RETURN"
  ],
  "70313": [
      "70313 SET I      null",
      "70315 PUSH F.K      -> reg4",
      "70317 VOID F",
      "70318 SET MEMORY ELEMENT      0 = reg4",
      "70321 PUSH MEMORY ELEMENT IF INIT      2428 -> reg7",
      "70324 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "70327 PUT      reg7[raw] = reg8",
      "70333 PUSH MEMORY ELEMENT IF INIT      2428 -> reg4",
      "70336 PUSH MEMORY ELEMENT IF INIT      2081 -> reg7",
      "70339 NEW ARRAY      1 -> reg11",
      "70342 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "70345 GET      reg9[stringify] -> reg14",
      "70351 NEW ARRAY      1 -> reg12",
      "70354 PUSH MEMORY ELEMENT IF INIT      0 -> reg13",
      "70357 PUT      reg12[0] = reg13",
      "70361 CALL FUNCTION      OBJ: reg9 FUNC: reg14 ARGS: reg12",
      "70365 SET      reg2 -> reg10",
      "70368 PUT      reg11[0] = reg10",
      "70372 CALL FUNCTION      PTR: reg7 MEM: reg11",
      "70376 SET      reg2 -> reg8",
      "70379 PUT      reg4[hash] = reg8",
      "70385 PUSH MEMORY ELEMENT IF INIT      2428 -> reg8",
      "70388 JUMP OR RETURN VAL      reg8"
  ],
  "70454": [
      "70454 PUSH MEMORY ELEMENT IF INIT      2438 -> reg4",
      "70457 PUSH MEMORY ELEMENT IF INIT      2439 -> reg5",
      "70460 GET      reg5[charAt] -> reg7",
      "70466 NEW ARRAY      1 -> reg8",
      "70469 GET WINDOW PROP      Math -> reg11",
      "70474 GET      reg11[floor] -> reg10",
      "70480 NEW ARRAY      1 -> reg12",
      "70483 GET WINDOW PROP      Math -> reg14",
      "70488 GET      reg14[random] -> reg16",
      "70494 EMPTY ARRAY      -> reg15",
      "70496 CALL FUNCTION      OBJ: reg14 FUNC: reg16 ARGS: reg15",
      "70500 SET      reg2 -> reg13",
      "70503 PUSH MEMORY ELEMENT IF INIT      2440 -> reg15",
      "70506 MULTIPLY      reg13 * reg15 -> reg16",
      "70510 PUT      reg12[0] = reg16",
      "70514 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg12",
      "70518 SET      reg2 -> reg9",
      "70521 PUT      reg8[0] = reg9",
      "70525 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "70529 SET      reg2 -> reg6",
      "70532 ADD      reg4NaN-> reg6",
      "70536 SET MEMORY ELEMENT IF INIT      2438 = reg6",
      "70539 PUSH MEMORY ELEMENT IF INIT      2441 -> reg6",
      "70542 SET      reg6 -> reg4",
      "70545 ADD      reg61-> reg6",
      "70549 SET MEMORY ELEMENT IF INIT      2441 = reg6",
      "70552 JUMP      70441",
      "70441 PUSH MEMORY ELEMENT IF INIT      2441 -> reg4",
      "70444 PUSH MEMORY ELEMENT IF INIT      2437 -> reg6",
      "70447 LESS THAN      reg4 < reg6 -> reg5",
      "70451 JUMP IF FALSE      reg5 TO: 70554 | 70454"
  ],
  "70554": [
      "70554 PUSH MEMORY ELEMENT IF INIT      2438 -> reg4",
      "70557 JUMP OR RETURN VAL      reg4"
  ],
  "70791": [
      "70791 SET I      null",
      "70793 PUSH F.K      -> reg8",
      "70795 VOID F",
      "70796 SET MEMORY ELEMENT      0 = reg8",
      "70799 PUSH MEMORY ELEMENT IF INIT      2444 -> reg4",
      "70802 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "70805 PUT      reg4[raw] = reg6",
      "70811 PUSH MEMORY ELEMENT IF INIT      2444 -> reg4",
      "70814 PUSH MEMORY ELEMENT IF INIT      2081 -> reg7",
      "70817 NEW ARRAY      1 -> reg8",
      "70820 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "70823 GET      reg10[stringify] -> reg12",
      "70829 NEW ARRAY      1 -> reg15",
      "70832 PUSH MEMORY ELEMENT IF INIT      0 -> reg13",
      "70835 PUT      reg15[0] = reg13",
      "70839 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg15",
      "70843 SET      reg2 -> reg11",
      "70846 PUT      reg8[0] = reg11",
      "70850 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "70854 SET      reg2 -> reg6",
      "70857 PUT      reg4[hash] = reg6",
      "70863 PUSH MEMORY ELEMENT IF INIT      2444 -> reg6",
      "70866 JUMP OR RETURN VAL      reg6"
  ],
  "70990": [
      "70990 SET I      null",
      "70992 PUSH F.K      -> reg4",
      "70994 VOID F",
      "70995 SET MEMORY ELEMENT      0 = reg4",
      "70998 SET I      null",
      "71000 JUMP OR RETURN"
  ],
  "71068": [
      "71068 EMPTY OBJECT      -> reg6",
      "71070 SET      reg6 -> reg4",
      "71073 SET MEMORY ELEMENT IF INIT      2455 = reg4",
      "71076 PUSH MEMORY ELEMENT IF INIT      2455 -> reg4",
      "71079 GET WINDOW PROP      Date -> reg7",
      "71084 GET      reg7[now] -> reg8",
      "71090 EMPTY ARRAY      -> reg10",
      "71092 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "71096 SET      reg2 -> reg6",
      "71099 PUSH MEMORY ELEMENT IF INIT      2454 -> reg8",
      "71102 SUBTRACT      reg6 - reg8 -> reg9",
      "71106 PUT      reg4[time] = reg9",
      "71112 PUSH MEMORY ELEMENT IF INIT      2455 -> reg4",
      "71115 JUMP OR RETURN VAL      reg4"
  ],
  "71073": [
      "71073 SET MEMORY ELEMENT IF INIT      2455 = reg4",
      "71076 PUSH MEMORY ELEMENT IF INIT      2455 -> reg4",
      "71079 GET WINDOW PROP      Date -> reg7",
      "71084 GET      reg7[now] -> reg8",
      "71090 EMPTY ARRAY      -> reg10",
      "71092 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "71096 SET      reg2 -> reg6",
      "71099 PUSH MEMORY ELEMENT IF INIT      2454 -> reg8",
      "71102 SUBTRACT      reg6 - reg8 -> reg9",
      "71106 PUT      reg4[time] = reg9",
      "71112 PUSH MEMORY ELEMENT IF INIT      2455 -> reg4",
      "71115 JUMP OR RETURN VAL      reg4"
  ],
  "72481": [
      "72481 NEW ARRAY      2 -> reg5",
      "72484 PUSH MEMORY ELEMENT IF INIT      2466 -> reg4",
      "72487 GET      reg4[1] -> reg6",
      "72491 PUT      reg5[0] = reg6",
      "72495 PUSH MEMORY ELEMENT IF INIT      2466 -> reg4",
      "72498 GET      reg4[0] -> reg6",
      "72502 PUT      reg5[1] = reg6",
      "72506 JUMP OR RETURN VAL      reg5"
  ],
  "72510": [
      "72510 PUSH MEMORY ELEMENT IF INIT      2467 -> reg4",
      "72513 LESS THAN      reg4 < 32 -> reg5",
      "72517 JUMP IF FALSE      reg5 TO: 72607 | 72520"
  ],
  "72520": [
      "72520 NEW ARRAY      2 -> reg4",
      "72523 PUSH MEMORY ELEMENT IF INIT      2466 -> reg5",
      "72526 GET      reg5[0] -> reg7",
      "72530 PUSH MEMORY ELEMENT IF INIT      2467 -> reg5",
      "72533 LSHIFT      reg7 << reg5 -> reg8",
      "72537 PUSH MEMORY ELEMENT IF INIT      2466 -> reg7",
      "72540 GET      reg7[1] -> reg5",
      "72544 PUSH MEMORY ELEMENT IF INIT      2467 -> reg6",
      "72547 SUBTRACT      32 - reg6 -> reg7",
      "72551 USHIFT      reg5 >>> reg7 -> reg6",
      "72555 OR      reg8 | reg6 -> reg5",
      "72559 PUT      reg4[0] = reg5",
      "72563 PUSH MEMORY ELEMENT IF INIT      2466 -> reg6",
      "72566 GET      reg6[1] -> reg5",
      "72570 PUSH MEMORY ELEMENT IF INIT      2467 -> reg6",
      "72573 LSHIFT      reg5 << reg6 -> reg7",
      "72577 PUSH MEMORY ELEMENT IF INIT      2466 -> reg5",
      "72580 GET      reg5[0] -> reg6",
      "72584 PUSH MEMORY ELEMENT IF INIT      2467 -> reg5",
      "72587 SUBTRACT      32 - reg5 -> reg8",
      "72591 USHIFT      reg6 >>> reg8 -> reg5",
      "72595 OR      reg7 | reg5 -> reg6",
      "72599 PUT      reg4[1] = reg6",
      "72603 JUMP OR RETURN VAL      reg4"
  ],
  "72607": [
      "72607 PUSH MEMORY ELEMENT IF INIT      2467 -> reg5",
      "72610 SET      32 -> reg4",
      "72613 SUBTRACT      reg5 - reg4 -> reg4",
      "72617 SET MEMORY ELEMENT IF INIT      2467 = reg4",
      "72620 NEW ARRAY      2 -> reg4",
      "72623 PUSH MEMORY ELEMENT IF INIT      2466 -> reg6",
      "72626 GET      reg6[1] -> reg7",
      "72630 PUSH MEMORY ELEMENT IF INIT      2467 -> reg5",
      "72633 LSHIFT      reg7 << reg5 -> reg10",
      "72637 PUSH MEMORY ELEMENT IF INIT      2466 -> reg5",
      "72640 GET      reg5[0] -> reg6",
      "72644 PUSH MEMORY ELEMENT IF INIT      2467 -> reg5",
      "72647 SUBTRACT      32 - reg5 -> reg7",
      "72651 USHIFT      reg6 >>> reg7 -> reg5",
      "72655 OR      reg10 | reg5 -> reg6",
      "72659 PUT      reg4[0] = reg6",
      "72663 PUSH MEMORY ELEMENT IF INIT      2466 -> reg5",
      "72666 GET      reg5[0] -> reg6",
      "72670 PUSH MEMORY ELEMENT IF INIT      2467 -> reg5",
      "72673 LSHIFT      reg6 << reg5 -> reg7",
      "72677 PUSH MEMORY ELEMENT IF INIT      2466 -> reg6",
      "72680 GET      reg6[1] -> reg8",
      "72684 PUSH MEMORY ELEMENT IF INIT      2467 -> reg5",
      "72687 SUBTRACT      32 - reg5 -> reg9",
      "72691 USHIFT      reg8 >>> reg9 -> reg5",
      "72695 OR      reg7 | reg5 -> reg8",
      "72699 PUT      reg4[1] = reg8",
      "72703 JUMP OR RETURN VAL      reg4"
  ],
  "72747": [
      "72747 PUSH MEMORY ELEMENT IF INIT      2471 -> reg5",
      "72750 JUMP OR RETURN VAL      reg5"
  ],
  "72754": [
      "72754 PUSH MEMORY ELEMENT IF INIT      2472 -> reg4",
      "72757 LESS THAN      reg4 < 32 -> reg5",
      "72761 JUMP IF FALSE      reg5 TO: 72829 | 72764"
  ],
  "72764": [
      "72764 NEW ARRAY      2 -> reg4",
      "72767 PUSH MEMORY ELEMENT IF INIT      2471 -> reg7",
      "72770 GET      reg7[0] -> reg9",
      "72774 PUSH MEMORY ELEMENT IF INIT      2472 -> reg5",
      "72777 LSHIFT      reg9 << reg5 -> reg6",
      "72781 PUSH MEMORY ELEMENT IF INIT      2471 -> reg5",
      "72784 GET      reg5[1] -> reg7",
      "72788 PUSH MEMORY ELEMENT IF INIT      2472 -> reg5",
      "72791 SUBTRACT      32 - reg5 -> reg15",
      "72795 USHIFT      reg7 >>> reg15 -> reg10",
      "72799 OR      reg6 | reg10 -> reg5",
      "72803 PUT      reg4[0] = reg5",
      "72807 PUSH MEMORY ELEMENT IF INIT      2471 -> reg5",
      "72810 GET      reg5[1] -> reg6",
      "72814 PUSH MEMORY ELEMENT IF INIT      2472 -> reg8",
      "72817 LSHIFT      reg6 << reg8 -> reg5",
      "72821 PUT      reg4[1] = reg5",
      "72825 JUMP OR RETURN VAL      reg4"
  ],
  "72829": [
      "72829 NEW ARRAY      2 -> reg5",
      "72832 PUSH MEMORY ELEMENT IF INIT      2471 -> reg4",
      "72835 GET      reg4[1] -> reg6",
      "72839 PUSH MEMORY ELEMENT IF INIT      2472 -> reg7",
      "72842 SUBTRACT      reg7 - 32 -> reg4",
      "72846 LSHIFT      reg6 << reg4 -> reg8",
      "72850 PUT      reg5[0] = reg8",
      "72854 PUT      reg5[1] = 0",
      "72858 JUMP OR RETURN VAL      reg5"
  ],
  "73219": [
      "73219 SET       -> reg4",
      "73224 SET MEMORY ELEMENT IF INIT      2481 = reg4",
      "73227 PUSH MEMORY ELEMENT IF INIT      2482 -> reg4",
      "73230 JUMP IF TRUE      reg4 TO: 73236 | 73233"
  ],
  "73224": [
      "73224 SET MEMORY ELEMENT IF INIT      2481 = reg4",
      "73227 PUSH MEMORY ELEMENT IF INIT      2482 -> reg4",
      "73230 JUMP IF TRUE      reg4 TO: 73236 | 73233"
  ],
  "73233": [
      "73233 SET      0 -> reg4",
      "73236 SET MEMORY ELEMENT IF INIT      2482 = reg4",
      "73239 PUSH MEMORY ELEMENT IF INIT      2481 -> reg5",
      "73242 GET      reg5[length] -> reg6",
      "73248 MOD      reg6 % 16 -> reg5",
      "73252 SET MEMORY ELEMENT IF INIT      2483 = reg5",
      "73255 PUSH MEMORY ELEMENT IF INIT      2481 -> reg4",
      "73258 GET      reg4[length] -> reg7",
      "73264 PUSH MEMORY ELEMENT IF INIT      2483 -> reg4",
      "73267 SUBTRACT      reg7 - reg4 -> reg5",
      "73271 SET MEMORY ELEMENT IF INIT      2484 = reg5",
      "73274 NEW ARRAY      2 -> reg4",
      "73277 PUT      reg4[0] = 0",
      "73281 PUSH MEMORY ELEMENT IF INIT      2482 -> reg5",
      "73284 PUT      reg4[1] = reg5",
      "73288 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "73291 NEW ARRAY      2 -> reg5",
      "73294 PUT      reg5[0] = 0",
      "73298 PUSH MEMORY ELEMENT IF INIT      2482 -> reg4",
      "73301 PUT      reg5[1] = reg4",
      "73305 SET MEMORY ELEMENT IF INIT      2486 = reg5",
      "73308 NEW ARRAY      2 -> reg4",
      "73311 PUT      reg4[0] = 0",
      "73315 PUT      reg4[1] = 0",
      "73319 SET MEMORY ELEMENT IF INIT      2487 = reg4",
      "73322 NEW ARRAY      2 -> reg4",
      "73325 PUT      reg4[0] = 0",
      "73329 PUT      reg4[1] = 0",
      "73333 SET MEMORY ELEMENT IF INIT      2488 = reg4",
      "73336 NEW ARRAY      2 -> reg4",
      "73339 PUT      reg4[0] = 2277735313",
      "73345 PUT      reg4[1] = 289559509",
      "73349 SET MEMORY ELEMENT IF INIT      2489 = reg4",
      "73352 NEW ARRAY      2 -> reg6",
      "73355 PUT      reg6[0] = 1291169091",
      "73361 PUT      reg6[1] = 658871167",
      "73365 SET MEMORY ELEMENT IF INIT      2490 = reg6",
      "73368 SET MEMORY ELEMENT IF INIT      2491 = 0",
      "73371 PUSH MEMORY ELEMENT IF INIT      2491 -> reg6",
      "73374 PUSH MEMORY ELEMENT IF INIT      2484 -> reg4",
      "73377 LESS THAN      reg6 < reg4 -> reg7",
      "73381 JUMP IF FALSE      reg7 TO: 74550 | 73384"
  ],
  "73236": [
      "73236 SET MEMORY ELEMENT IF INIT      2482 = reg4",
      "73239 PUSH MEMORY ELEMENT IF INIT      2481 -> reg5",
      "73242 GET      reg5[length] -> reg6",
      "73248 MOD      reg6 % 16 -> reg5",
      "73252 SET MEMORY ELEMENT IF INIT      2483 = reg5",
      "73255 PUSH MEMORY ELEMENT IF INIT      2481 -> reg4",
      "73258 GET      reg4[length] -> reg7",
      "73264 PUSH MEMORY ELEMENT IF INIT      2483 -> reg4",
      "73267 SUBTRACT      reg7 - reg4 -> reg5",
      "73271 SET MEMORY ELEMENT IF INIT      2484 = reg5",
      "73274 NEW ARRAY      2 -> reg4",
      "73277 PUT      reg4[0] = 0",
      "73281 PUSH MEMORY ELEMENT IF INIT      2482 -> reg5",
      "73284 PUT      reg4[1] = reg5",
      "73288 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "73291 NEW ARRAY      2 -> reg5",
      "73294 PUT      reg5[0] = 0",
      "73298 PUSH MEMORY ELEMENT IF INIT      2482 -> reg4",
      "73301 PUT      reg5[1] = reg4",
      "73305 SET MEMORY ELEMENT IF INIT      2486 = reg5",
      "73308 NEW ARRAY      2 -> reg4",
      "73311 PUT      reg4[0] = 0",
      "73315 PUT      reg4[1] = 0",
      "73319 SET MEMORY ELEMENT IF INIT      2487 = reg4",
      "73322 NEW ARRAY      2 -> reg4",
      "73325 PUT      reg4[0] = 0",
      "73329 PUT      reg4[1] = 0",
      "73333 SET MEMORY ELEMENT IF INIT      2488 = reg4",
      "73336 NEW ARRAY      2 -> reg4",
      "73339 PUT      reg4[0] = 2277735313",
      "73345 PUT      reg4[1] = 289559509",
      "73349 SET MEMORY ELEMENT IF INIT      2489 = reg4",
      "73352 NEW ARRAY      2 -> reg6",
      "73355 PUT      reg6[0] = 1291169091",
      "73361 PUT      reg6[1] = 658871167",
      "73365 SET MEMORY ELEMENT IF INIT      2490 = reg6",
      "73368 SET MEMORY ELEMENT IF INIT      2491 = 0",
      "73371 PUSH MEMORY ELEMENT IF INIT      2491 -> reg6",
      "73374 PUSH MEMORY ELEMENT IF INIT      2484 -> reg4",
      "73377 LESS THAN      reg6 < reg4 -> reg7",
      "73381 JUMP IF FALSE      reg7 TO: 74550 | 73384"
  ],
  "73384": [
      "73384 NEW ARRAY      2 -> reg4",
      "73387 PUSH MEMORY ELEMENT IF INIT      2481 -> reg6",
      "73390 GET      reg6[charCodeAt] -> reg7",
      "73396 NEW ARRAY      1 -> reg9",
      "73399 PUSH MEMORY ELEMENT IF INIT      2491 -> reg8",
      "73402 ADD      reg84-> reg10",
      "73406 PUT      reg9[0] = reg10",
      "73410 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "73414 SET      reg2 -> reg5",
      "73417 AND      reg5 & 255 -> reg7",
      "73421 PUSH MEMORY ELEMENT IF INIT      2481 -> reg8",
      "73424 GET      reg8[charCodeAt] -> reg9",
      "73430 NEW ARRAY      1 -> reg12",
      "73433 PUSH MEMORY ELEMENT IF INIT      2491 -> reg10",
      "73436 ADD      reg105-> reg11",
      "73440 PUT      reg12[0] = reg11",
      "73444 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg12",
      "73448 SET      reg2 -> reg5",
      "73451 AND      reg5 & 255 -> reg9",
      "73455 LSHIFT      reg9 << 8 -> reg5",
      "73459 OR      reg7 | reg5 -> reg9",
      "73463 PUSH MEMORY ELEMENT IF INIT      2481 -> reg10",
      "73466 GET      reg10[charCodeAt] -> reg7",
      "73472 NEW ARRAY      1 -> reg12",
      "73475 PUSH MEMORY ELEMENT IF INIT      2491 -> reg11",
      "73478 ADD      reg116-> reg13",
      "73482 PUT      reg12[0] = reg13",
      "73486 CALL FUNCTION      OBJ: reg10 FUNC: reg7 ARGS: reg12",
      "73490 SET      reg2 -> reg5",
      "73493 AND      reg5 & 255 -> reg7",
      "73497 LSHIFT      reg7 << 16 -> reg5",
      "73501 OR      reg9 | reg5 -> reg7",
      "73505 PUSH MEMORY ELEMENT IF INIT      2481 -> reg9",
      "73508 GET      reg9[charCodeAt] -> reg11",
      "73514 NEW ARRAY      1 -> reg12",
      "73517 PUSH MEMORY ELEMENT IF INIT      2491 -> reg13",
      "73520 ADD      reg137-> reg14",
      "73524 PUT      reg12[0] = reg14",
      "73528 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg12",
      "73532 SET      reg2 -> reg5",
      "73535 AND      reg5 & 255 -> reg11",
      "73539 LSHIFT      reg11 << 24 -> reg13",
      "73543 OR      reg7 | reg13 -> reg5",
      "73547 PUT      reg4[0] = reg5",
      "73551 PUSH MEMORY ELEMENT IF INIT      2481 -> reg11",
      "73554 GET      reg11[charCodeAt] -> reg7",
      "73560 NEW ARRAY      1 -> reg12",
      "73563 PUSH MEMORY ELEMENT IF INIT      2491 -> reg13",
      "73566 PUT      reg12[0] = reg13",
      "73570 CALL FUNCTION      OBJ: reg11 FUNC: reg7 ARGS: reg12",
      "73574 SET      reg2 -> reg5",
      "73577 AND      reg5 & 255 -> reg7",
      "73581 PUSH MEMORY ELEMENT IF INIT      2481 -> reg13",
      "73584 GET      reg13[charCodeAt] -> reg12",
      "73590 NEW ARRAY      1 -> reg15",
      "73593 PUSH MEMORY ELEMENT IF INIT      2491 -> reg16",
      "73596 ADD      reg161-> reg17",
      "73600 PUT      reg15[0] = reg17",
      "73604 CALL FUNCTION      OBJ: reg13 FUNC: reg12 ARGS: reg15",
      "73608 SET      reg2 -> reg5",
      "73611 AND      reg5 & 255 -> reg12",
      "73615 LSHIFT      reg12 << 8 -> reg5",
      "73619 OR      reg7 | reg5 -> reg12",
      "73623 PUSH MEMORY ELEMENT IF INIT      2481 -> reg7",
      "73626 GET      reg7[charCodeAt] -> reg14",
      "73632 NEW ARRAY      1 -> reg16",
      "73635 PUSH MEMORY ELEMENT IF INIT      2491 -> reg17",
      "73638 ADD      reg172-> reg15",
      "73642 PUT      reg16[0] = reg15",
      "73646 CALL FUNCTION      OBJ: reg7 FUNC: reg14 ARGS: reg16",
      "73650 SET      reg2 -> reg5",
      "73653 AND      reg5 & 255 -> reg14",
      "73657 LSHIFT      reg14 << 16 -> reg15",
      "73661 OR      reg12 | reg15 -> reg14",
      "73665 PUSH MEMORY ELEMENT IF INIT      2481 -> reg5",
      "73668 GET      reg5[charCodeAt] -> reg16",
      "73674 NEW ARRAY      1 -> reg15",
      "73677 PUSH MEMORY ELEMENT IF INIT      2491 -> reg17",
      "73680 ADD      reg173-> reg18",
      "73684 PUT      reg15[0] = reg18",
      "73688 CALL FUNCTION      OBJ: reg5 FUNC: reg16 ARGS: reg15",
      "73692 SET      reg2 -> reg12",
      "73695 AND      reg12 & 255 -> reg15",
      "73699 LSHIFT      reg15 << 24 -> reg12",
      "73703 OR      reg14 | reg12 -> reg15",
      "73707 PUT      reg4[1] = reg15",
      "73711 SET MEMORY ELEMENT IF INIT      2487 = reg4",
      "73714 NEW ARRAY      2 -> reg4",
      "73717 PUSH MEMORY ELEMENT IF INIT      2481 -> reg15",
      "73720 GET      reg15[charCodeAt] -> reg14",
      "73726 NEW ARRAY      1 -> reg16",
      "73729 PUSH MEMORY ELEMENT IF INIT      2491 -> reg17",
      "73732 ADD      reg1712-> reg18",
      "73736 PUT      reg16[0] = reg18",
      "73740 CALL FUNCTION      OBJ: reg15 FUNC: reg14 ARGS: reg16",
      "73744 SET      reg2 -> reg12",
      "73747 AND      reg12 & 255 -> reg14",
      "73751 PUSH MEMORY ELEMENT IF INIT      2481 -> reg16",
      "73754 GET      reg16[charCodeAt] -> reg17",
      "73760 NEW ARRAY      1 -> reg19",
      "73763 PUSH MEMORY ELEMENT IF INIT      2491 -> reg18",
      "73766 ADD      reg1813-> reg20",
      "73770 PUT      reg19[0] = reg20",
      "73774 CALL FUNCTION      OBJ: reg16 FUNC: reg17 ARGS: reg19",
      "73778 SET      reg2 -> reg12",
      "73781 AND      reg12 & 255 -> reg17",
      "73785 LSHIFT      reg17 << 8 -> reg18",
      "73789 OR      reg14 | reg18 -> reg12",
      "73793 PUSH MEMORY ELEMENT IF INIT      2481 -> reg14",
      "73796 GET      reg14[charCodeAt] -> reg18",
      "73802 NEW ARRAY      1 -> reg19",
      "73805 PUSH MEMORY ELEMENT IF INIT      2491 -> reg20",
      "73808 ADD      reg2014-> reg21",
      "73812 PUT      reg19[0] = reg21",
      "73816 CALL FUNCTION      OBJ: reg14 FUNC: reg18 ARGS: reg19",
      "73820 SET      reg2 -> reg17",
      "73823 AND      reg17 & 255 -> reg19",
      "73827 LSHIFT      reg19 << 16 -> reg17",
      "73831 OR      reg12 | reg17 -> reg19",
      "73835 PUSH MEMORY ELEMENT IF INIT      2481 -> reg20",
      "73838 GET      reg20[charCodeAt] -> reg17",
      "73844 NEW ARRAY      1 -> reg18",
      "73847 PUSH MEMORY ELEMENT IF INIT      2491 -> reg21",
      "73850 ADD      reg2115-> reg23",
      "73854 PUT      reg18[0] = reg23",
      "73858 CALL FUNCTION      OBJ: reg20 FUNC: reg17 ARGS: reg18",
      "73862 SET      reg2 -> reg12",
      "73865 AND      reg12 & 255 -> reg21",
      "73869 LSHIFT      reg21 << 24 -> reg18",
      "73873 OR      reg19 | reg18 -> reg12",
      "73877 PUT      reg4[0] = reg12",
      "73881 PUSH MEMORY ELEMENT IF INIT      2481 -> reg18",
      "73884 GET      reg18[charCodeAt] -> reg17",
      "73890 NEW ARRAY      1 -> reg19",
      "73893 PUSH MEMORY ELEMENT IF INIT      2491 -> reg22",
      "73896 ADD      reg228-> reg21",
      "73900 PUT      reg19[0] = reg21",
      "73904 CALL FUNCTION      OBJ: reg18 FUNC: reg17 ARGS: reg19",
      "73908 SET      reg2 -> reg12",
      "73911 AND      reg12 & 255 -> reg17",
      "73915 PUSH MEMORY ELEMENT IF INIT      2481 -> reg12",
      "73918 GET      reg12[charCodeAt] -> reg21",
      "73924 NEW ARRAY      1 -> reg22",
      "73927 PUSH MEMORY ELEMENT IF INIT      2491 -> reg24",
      "73930 ADD      reg249-> reg23",
      "73934 PUT      reg22[0] = reg23",
      "73938 CALL FUNCTION      OBJ: reg12 FUNC: reg21 ARGS: reg22",
      "73942 SET      reg2 -> reg19",
      "73945 AND      reg19 & 255 -> reg21",
      "73949 LSHIFT      reg21 << 8 -> reg19",
      "73953 OR      reg17 | reg19 -> reg21",
      "73957 PUSH MEMORY ELEMENT IF INIT      2481 -> reg23",
      "73960 GET      reg23[charCodeAt] -> reg19",
      "73966 NEW ARRAY      1 -> reg24",
      "73969 PUSH MEMORY ELEMENT IF INIT      2491 -> reg25",
      "73972 ADD      reg2510-> reg17",
      "73976 PUT      reg24[0] = reg17",
      "73980 CALL FUNCTION      OBJ: reg23 FUNC: reg19 ARGS: reg24",
      "73984 SET      reg2 -> reg22",
      "73987 AND      reg22 & 255 -> reg17",
      "73991 LSHIFT      reg17 << 16 -> reg19",
      "73995 OR      reg21 | reg19 -> reg25",
      "73999 PUSH MEMORY ELEMENT IF INIT      2481 -> reg22",
      "74002 GET      reg22[charCodeAt] -> reg19",
      "74008 NEW ARRAY      1 -> reg24",
      "74011 PUSH MEMORY ELEMENT IF INIT      2491 -> reg21",
      "74014 ADD      reg2111-> reg26",
      "74018 PUT      reg24[0] = reg26",
      "74022 CALL FUNCTION      OBJ: reg22 FUNC: reg19 ARGS: reg24",
      "74026 SET      reg2 -> reg17",
      "74029 AND      reg17 & 255 -> reg19",
      "74033 LSHIFT      reg19 << 24 -> reg21",
      "74037 OR      reg25 | reg21 -> reg17",
      "74041 PUT      reg4[1] = reg17",
      "74045 SET MEMORY ELEMENT IF INIT      2488 = reg4",
      "74048 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "74051 NEW ARRAY      2 -> reg19",
      "74054 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "74057 PUT      reg19[0] = reg21",
      "74061 PUSH MEMORY ELEMENT IF INIT      2489 -> reg24",
      "74064 PUT      reg19[1] = reg24",
      "74068 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "74072 SET      reg2 -> reg4",
      "74075 SET MEMORY ELEMENT IF INIT      2487 = reg4",
      "74078 PUSH MEMORY ELEMENT IF INIT      2113 -> reg17",
      "74081 NEW ARRAY      2 -> reg21",
      "74084 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "74087 PUT      reg21[0] = reg19",
      "74091 PUT      reg21[1] = 31",
      "74095 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "74099 SET      reg2 -> reg4",
      "74102 SET MEMORY ELEMENT IF INIT      2487 = reg4",
      "74105 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "74108 NEW ARRAY      2 -> reg21",
      "74111 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "74114 PUT      reg21[0] = reg19",
      "74118 PUSH MEMORY ELEMENT IF INIT      2490 -> reg19",
      "74121 PUT      reg21[1] = reg19",
      "74125 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "74129 SET      reg2 -> reg4",
      "74132 SET MEMORY ELEMENT IF INIT      2487 = reg4",
      "74135 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "74138 NEW ARRAY      2 -> reg19",
      "74141 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "74144 PUT      reg19[0] = reg21",
      "74148 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "74151 PUT      reg19[1] = reg21",
      "74155 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "74159 SET      reg2 -> reg4",
      "74162 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "74165 PUSH MEMORY ELEMENT IF INIT      2113 -> reg4",
      "74168 NEW ARRAY      2 -> reg17",
      "74171 PUSH MEMORY ELEMENT IF INIT      2485 -> reg25",
      "74174 PUT      reg17[0] = reg25",
      "74178 PUT      reg17[1] = 27",
      "74182 CALL FUNCTION      PTR: reg4 MEM: reg17",
      "74186 SET      reg2 -> reg19",
      "74189 SET MEMORY ELEMENT IF INIT      2485 = reg19",
      "74192 PUSH MEMORY ELEMENT IF INIT      2111 -> reg24",
      "74195 NEW ARRAY      2 -> reg21",
      "74198 PUSH MEMORY ELEMENT IF INIT      2485 -> reg17",
      "74201 PUT      reg21[0] = reg17",
      "74205 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "74208 PUT      reg21[1] = reg17",
      "74212 CALL FUNCTION      PTR: reg24 MEM: reg21",
      "74216 SET      reg2 -> reg4",
      "74219 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "74222 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "74225 NEW ARRAY      2 -> reg19",
      "74228 PUSH MEMORY ELEMENT IF INIT      2112 -> reg25",
      "74231 NEW ARRAY      2 -> reg24",
      "74234 PUSH MEMORY ELEMENT IF INIT      2485 -> reg26",
      "74237 PUT      reg24[0] = reg26",
      "74241 NEW ARRAY      2 -> reg26",
      "74244 PUT      reg26[0] = 0",
      "74248 PUT      reg26[1] = 5",
      "74252 PUT      reg24[1] = reg26",
      "74256 CALL FUNCTION      PTR: reg25 MEM: reg24",
      "74260 SET      reg2 -> reg21",
      "74263 PUT      reg19[0] = reg21",
      "74267 NEW ARRAY      2 -> reg21",
      "74270 PUT      reg21[0] = 0",
      "74274 PUT      reg21[1] = 1390208809",
      "74280 PUT      reg19[1] = reg21",
      "74284 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "74288 SET      reg2 -> reg17",
      "74291 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "74294 PUSH MEMORY ELEMENT IF INIT      2112 -> reg4",
      "74297 NEW ARRAY      2 -> reg21",
      "74300 PUSH MEMORY ELEMENT IF INIT      2488 -> reg26",
      "74303 PUT      reg21[0] = reg26",
      "74307 PUSH MEMORY ELEMENT IF INIT      2490 -> reg19",
      "74310 PUT      reg21[1] = reg19",
      "74314 CALL FUNCTION      PTR: reg4 MEM: reg21",
      "74318 SET      reg2 -> reg17",
      "74321 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "74324 PUSH MEMORY ELEMENT IF INIT      2113 -> reg17",
      "74327 NEW ARRAY      2 -> reg21",
      "74330 PUSH MEMORY ELEMENT IF INIT      2488 -> reg19",
      "74333 PUT      reg21[0] = reg19",
      "74337 PUT      reg21[1] = 33",
      "74341 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "74345 SET      reg2 -> reg4",
      "74348 SET MEMORY ELEMENT IF INIT      2488 = reg4",
      "74351 PUSH MEMORY ELEMENT IF INIT      2112 -> reg21",
      "74354 NEW ARRAY      2 -> reg17",
      "74357 PUSH MEMORY ELEMENT IF INIT      2488 -> reg19",
      "74360 PUT      reg17[0] = reg19",
      "74364 PUSH MEMORY ELEMENT IF INIT      2489 -> reg19",
      "74367 PUT      reg17[1] = reg19",
      "74371 CALL FUNCTION      PTR: reg21 MEM: reg17",
      "74375 SET      reg2 -> reg4",
      "74378 SET MEMORY ELEMENT IF INIT      2488 = reg4",
      "74381 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74384 NEW ARRAY      2 -> reg17",
      "74387 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "74390 PUT      reg17[0] = reg24",
      "74394 PUSH MEMORY ELEMENT IF INIT      2488 -> reg21",
      "74397 PUT      reg17[1] = reg21",
      "74401 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "74405 SET      reg2 -> reg4",
      "74408 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "74411 PUSH MEMORY ELEMENT IF INIT      2113 -> reg17",
      "74414 NEW ARRAY      2 -> reg19",
      "74417 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "74420 PUT      reg19[0] = reg21",
      "74424 PUT      reg19[1] = 31",
      "74428 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "74432 SET      reg2 -> reg4",
      "74435 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "74438 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "74441 NEW ARRAY      2 -> reg24",
      "74444 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "74447 PUT      reg24[0] = reg17",
      "74451 PUSH MEMORY ELEMENT IF INIT      2485 -> reg17",
      "74454 PUT      reg24[1] = reg17",
      "74458 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "74462 SET      reg2 -> reg4",
      "74465 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "74468 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "74471 NEW ARRAY      2 -> reg19",
      "74474 PUSH MEMORY ELEMENT IF INIT      2112 -> reg26",
      "74477 NEW ARRAY      2 -> reg25",
      "74480 PUSH MEMORY ELEMENT IF INIT      2486 -> reg27",
      "74483 PUT      reg25[0] = reg27",
      "74487 NEW ARRAY      2 -> reg24",
      "74490 PUT      reg24[0] = 0",
      "74494 PUT      reg24[1] = 5",
      "74498 PUT      reg25[1] = reg24",
      "74502 CALL FUNCTION      PTR: reg26 MEM: reg25",
      "74506 SET      reg2 -> reg17",
      "74509 PUT      reg19[0] = reg17",
      "74513 NEW ARRAY      2 -> reg24",
      "74516 PUT      reg24[0] = 0",
      "74520 PUT      reg24[1] = 944331445",
      "74524 PUT      reg19[1] = reg24",
      "74528 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "74532 SET      reg2 -> reg21",
      "74535 SET MEMORY ELEMENT IF INIT      2486 = reg21",
      "74538 PUSH MEMORY ELEMENT IF INIT      2491 -> reg4",
      "74541 ADD      reg416-> reg17",
      "74545 SET MEMORY ELEMENT IF INIT      2491 = reg17",
      "74548 JUMP      73371",
      "73371 PUSH MEMORY ELEMENT IF INIT      2491 -> reg6",
      "73374 PUSH MEMORY ELEMENT IF INIT      2484 -> reg4",
      "73377 LESS THAN      reg6 < reg4 -> reg7",
      "73381 JUMP IF FALSE      reg7 TO: 74550 | 73384"
  ],
  "74550": [
      "74550 NEW ARRAY      2 -> reg4",
      "74553 PUT      reg4[0] = 0",
      "74557 PUT      reg4[1] = 0",
      "74561 SET MEMORY ELEMENT IF INIT      2487 = reg4",
      "74564 NEW ARRAY      2 -> reg17",
      "74567 PUT      reg17[0] = 0",
      "74571 PUT      reg17[1] = 0",
      "74575 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "74578 PUSH MEMORY ELEMENT IF INIT      2483 -> reg4",
      "74581 EQUAL      reg4 == 15 -> reg19",
      "74585 JUMP IF FALSE      reg19 TO: 74679 | 74588"
  ],
  "74588": [
      "74588 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74591 NEW ARRAY      2 -> reg21",
      "74594 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "74597 PUT      reg21[0] = reg24",
      "74601 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "74604 NEW ARRAY      2 -> reg26",
      "74607 NEW ARRAY      2 -> reg27",
      "74610 PUT      reg27[0] = 0",
      "74614 PUSH MEMORY ELEMENT IF INIT      2481 -> reg32",
      "74617 GET      reg32[charCodeAt] -> reg28",
      "74623 NEW ARRAY      1 -> reg30",
      "74626 PUSH MEMORY ELEMENT IF INIT      2491 -> reg31",
      "74629 ADD      reg3114-> reg33",
      "74633 PUT      reg30[0] = reg33",
      "74637 CALL FUNCTION      OBJ: reg32 FUNC: reg28 ARGS: reg30",
      "74641 SET      reg2 -> reg29",
      "74644 PUT      reg27[1] = reg29",
      "74648 PUT      reg26[0] = reg27",
      "74652 PUT      reg26[1] = 48",
      "74656 CALL FUNCTION      PTR: reg24 MEM: reg26",
      "74660 SET      reg2 -> reg25",
      "74663 PUT      reg21[1] = reg25",
      "74667 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "74671 SET      reg2 -> reg17",
      "74674 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "74677 JUMP      74686",
      "74686 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74689 NEW ARRAY      2 -> reg21",
      "74692 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "74695 PUT      reg21[0] = reg24",
      "74699 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "74702 NEW ARRAY      2 -> reg28",
      "74705 NEW ARRAY      2 -> reg25",
      "74708 PUT      reg25[0] = 0",
      "74712 PUSH MEMORY ELEMENT IF INIT      2481 -> reg26",
      "74715 GET      reg26[charCodeAt] -> reg30",
      "74721 NEW ARRAY      1 -> reg31",
      "74724 PUSH MEMORY ELEMENT IF INIT      2491 -> reg33",
      "74727 ADD      reg3313-> reg34",
      "74731 PUT      reg31[0] = reg34",
      "74735 CALL FUNCTION      OBJ: reg26 FUNC: reg30 ARGS: reg31",
      "74739 SET      reg2 -> reg29",
      "74742 PUT      reg25[1] = reg29",
      "74746 PUT      reg28[0] = reg25",
      "74750 PUT      reg28[1] = 40",
      "74754 CALL FUNCTION      PTR: reg24 MEM: reg28",
      "74758 SET      reg2 -> reg27",
      "74761 PUT      reg21[1] = reg27",
      "74765 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "74769 SET      reg2 -> reg17",
      "74772 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "74775 JUMP      74784",
      "74784 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "74787 NEW ARRAY      2 -> reg19",
      "74790 PUSH MEMORY ELEMENT IF INIT      2488 -> reg25",
      "74793 PUT      reg19[0] = reg25",
      "74797 PUSH MEMORY ELEMENT IF INIT      2114 -> reg25",
      "74800 NEW ARRAY      2 -> reg27",
      "74803 NEW ARRAY      2 -> reg29",
      "74806 PUT      reg29[0] = 0",
      "74810 PUSH MEMORY ELEMENT IF INIT      2481 -> reg30",
      "74813 GET      reg30[charCodeAt] -> reg33",
      "74819 NEW ARRAY      1 -> reg31",
      "74822 PUSH MEMORY ELEMENT IF INIT      2491 -> reg34",
      "74825 ADD      reg3412-> reg35",
      "74829 PUT      reg31[0] = reg35",
      "74833 CALL FUNCTION      OBJ: reg30 FUNC: reg33 ARGS: reg31",
      "74837 SET      reg2 -> reg28",
      "74840 PUT      reg29[1] = reg28",
      "74844 PUT      reg27[0] = reg29",
      "74848 PUT      reg27[1] = 32",
      "74852 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "74856 SET      reg2 -> reg24",
      "74859 PUT      reg19[1] = reg24",
      "74863 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "74867 SET      reg2 -> reg21",
      "74870 SET MEMORY ELEMENT IF INIT      2488 = reg21",
      "74873 JUMP      74882",
      "74882 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74885 NEW ARRAY      2 -> reg21",
      "74888 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "74891 PUT      reg21[0] = reg24",
      "74895 PUSH MEMORY ELEMENT IF INIT      2114 -> reg25",
      "74898 NEW ARRAY      2 -> reg29",
      "74901 NEW ARRAY      2 -> reg27",
      "74904 PUT      reg27[0] = 0",
      "74908 PUSH MEMORY ELEMENT IF INIT      2481 -> reg31",
      "74911 GET      reg31[charCodeAt] -> reg35",
      "74917 NEW ARRAY      1 -> reg38",
      "74920 PUSH MEMORY ELEMENT IF INIT      2491 -> reg34",
      "74923 ADD      reg3411-> reg33",
      "74927 PUT      reg38[0] = reg33",
      "74931 CALL FUNCTION      OBJ: reg31 FUNC: reg35 ARGS: reg38",
      "74935 SET      reg2 -> reg28",
      "74938 PUT      reg27[1] = reg28",
      "74942 PUT      reg29[0] = reg27",
      "74946 PUT      reg29[1] = 24",
      "74950 CALL FUNCTION      PTR: reg25 MEM: reg29",
      "74954 SET      reg2 -> reg24",
      "74957 PUT      reg21[1] = reg24",
      "74961 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "74965 SET      reg2 -> reg17",
      "74968 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "74971 JUMP      74980",
      "74980 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74983 NEW ARRAY      2 -> reg21",
      "74986 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "74989 PUT      reg21[0] = reg27",
      "74993 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "74996 NEW ARRAY      2 -> reg25",
      "74999 NEW ARRAY      2 -> reg29",
      "75002 PUT      reg29[0] = 0",
      "75006 PUSH MEMORY ELEMENT IF INIT      2481 -> reg28",
      "75009 GET      reg28[charCodeAt] -> reg33",
      "75015 NEW ARRAY      1 -> reg35",
      "75018 PUSH MEMORY ELEMENT IF INIT      2491 -> reg39",
      "75021 ADD      reg3910-> reg36",
      "75025 PUT      reg35[0] = reg36",
      "75029 CALL FUNCTION      OBJ: reg28 FUNC: reg33 ARGS: reg35",
      "75033 SET      reg2 -> reg34",
      "75036 PUT      reg29[1] = reg34",
      "75040 PUT      reg25[0] = reg29",
      "75044 PUT      reg25[1] = 16",
      "75048 CALL FUNCTION      PTR: reg27 MEM: reg25",
      "75052 SET      reg2 -> reg24",
      "75055 PUT      reg21[1] = reg24",
      "75059 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75063 SET      reg2 -> reg17",
      "75066 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75069 JUMP      75078",
      "75078 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75081 NEW ARRAY      2 -> reg21",
      "75084 PUSH MEMORY ELEMENT IF INIT      2488 -> reg25",
      "75087 PUT      reg21[0] = reg25",
      "75091 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75094 NEW ARRAY      2 -> reg29",
      "75097 NEW ARRAY      2 -> reg25",
      "75100 PUT      reg25[0] = 0",
      "75104 PUSH MEMORY ELEMENT IF INIT      2481 -> reg34",
      "75107 GET      reg34[charCodeAt] -> reg35",
      "75113 NEW ARRAY      1 -> reg36",
      "75116 PUSH MEMORY ELEMENT IF INIT      2491 -> reg37",
      "75119 ADD      reg379-> reg39",
      "75123 PUT      reg36[0] = reg39",
      "75127 CALL FUNCTION      OBJ: reg34 FUNC: reg35 ARGS: reg36",
      "75131 SET      reg2 -> reg33",
      "75134 PUT      reg25[1] = reg33",
      "75138 PUT      reg29[0] = reg25",
      "75142 PUT      reg29[1] = 8",
      "75146 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75150 SET      reg2 -> reg24",
      "75153 PUT      reg21[1] = reg24",
      "75157 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75161 SET      reg2 -> reg17",
      "75164 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75167 JUMP      75176",
      "75176 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75179 NEW ARRAY      2 -> reg21",
      "75182 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75185 PUT      reg21[0] = reg24",
      "75189 NEW ARRAY      2 -> reg24",
      "75192 PUT      reg24[0] = 0",
      "75196 PUSH MEMORY ELEMENT IF INIT      2481 -> reg25",
      "75199 GET      reg25[charCodeAt] -> reg33",
      "75205 NEW ARRAY      1 -> reg29",
      "75208 PUSH MEMORY ELEMENT IF INIT      2491 -> reg35",
      "75211 ADD      reg358-> reg36",
      "75215 PUT      reg29[0] = reg36",
      "75219 CALL FUNCTION      OBJ: reg25 FUNC: reg33 ARGS: reg29",
      "75223 SET      reg2 -> reg27",
      "75226 PUT      reg24[1] = reg27",
      "75230 PUT      reg21[1] = reg24",
      "75234 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75238 SET      reg2 -> reg19",
      "75241 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75244 PUSH MEMORY ELEMENT IF INIT      2112 -> reg19",
      "75247 NEW ARRAY      2 -> reg21",
      "75250 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75253 PUT      reg21[0] = reg24",
      "75257 PUSH MEMORY ELEMENT IF INIT      2490 -> reg24",
      "75260 PUT      reg21[1] = reg24",
      "75264 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75268 SET      reg2 -> reg17",
      "75271 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75274 PUSH MEMORY ELEMENT IF INIT      2113 -> reg17",
      "75277 NEW ARRAY      2 -> reg21",
      "75280 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75283 PUT      reg21[0] = reg24",
      "75287 PUT      reg21[1] = 33",
      "75291 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75295 SET      reg2 -> reg19",
      "75298 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75301 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "75304 NEW ARRAY      2 -> reg24",
      "75307 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75310 PUT      reg24[0] = reg27",
      "75314 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "75317 PUT      reg24[1] = reg21",
      "75321 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "75325 SET      reg2 -> reg19",
      "75328 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75331 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75334 NEW ARRAY      2 -> reg21",
      "75337 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "75340 PUT      reg21[0] = reg24",
      "75344 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75347 PUT      reg21[1] = reg27",
      "75351 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75355 SET      reg2 -> reg17",
      "75358 SET MEMORY ELEMENT IF INIT      2486 = reg17",
      "75361 JUMP      75370",
      "75370 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75373 NEW ARRAY      2 -> reg19",
      "75376 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75379 PUT      reg19[0] = reg21",
      "75383 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75386 NEW ARRAY      2 -> reg29",
      "75389 NEW ARRAY      2 -> reg35",
      "75392 PUT      reg35[0] = 0",
      "75396 PUSH MEMORY ELEMENT IF INIT      2481 -> reg36",
      "75399 GET      reg36[charCodeAt] -> reg37",
      "75405 NEW ARRAY      1 -> reg39",
      "75408 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75411 ADD      reg387-> reg40",
      "75415 PUT      reg39[0] = reg40",
      "75419 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg39",
      "75423 SET      reg2 -> reg33",
      "75426 PUT      reg35[1] = reg33",
      "75430 PUT      reg29[0] = reg35",
      "75434 PUT      reg29[1] = 56",
      "75438 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75442 SET      reg2 -> reg21",
      "75445 PUT      reg19[1] = reg21",
      "75449 CALL FUNCTION      PTR: reg24 MEM: reg19",
      "75453 SET      reg2 -> reg17",
      "75456 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75459 JUMP      75468",
      "75468 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75471 NEW ARRAY      2 -> reg24",
      "75474 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75477 PUT      reg24[0] = reg21",
      "75481 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75484 NEW ARRAY      2 -> reg35",
      "75487 NEW ARRAY      2 -> reg37",
      "75490 PUT      reg37[0] = 0",
      "75494 PUSH MEMORY ELEMENT IF INIT      2481 -> reg29",
      "75497 GET      reg29[charCodeAt] -> reg39",
      "75503 NEW ARRAY      1 -> reg40",
      "75506 PUSH MEMORY ELEMENT IF INIT      2491 -> reg41",
      "75509 ADD      reg416-> reg42",
      "75513 PUT      reg40[0] = reg42",
      "75517 CALL FUNCTION      OBJ: reg29 FUNC: reg39 ARGS: reg40",
      "75521 SET      reg2 -> reg27",
      "75524 PUT      reg37[1] = reg27",
      "75528 PUT      reg35[0] = reg37",
      "75532 PUT      reg35[1] = 48",
      "75536 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "75540 SET      reg2 -> reg21",
      "75543 PUT      reg24[1] = reg21",
      "75547 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "75551 SET      reg2 -> reg17",
      "75554 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75557 JUMP      75566",
      "75566 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75569 NEW ARRAY      2 -> reg21",
      "75572 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "75575 PUT      reg21[0] = reg19",
      "75579 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75582 NEW ARRAY      2 -> reg41",
      "75585 NEW ARRAY      2 -> reg33",
      "75588 PUT      reg33[0] = 0",
      "75592 PUSH MEMORY ELEMENT IF INIT      2481 -> reg35",
      "75595 GET      reg35[charCodeAt] -> reg39",
      "75601 NEW ARRAY      1 -> reg40",
      "75604 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75607 ADD      reg385-> reg42",
      "75611 PUT      reg40[0] = reg42",
      "75615 CALL FUNCTION      OBJ: reg35 FUNC: reg39 ARGS: reg40",
      "75619 SET      reg2 -> reg37",
      "75622 PUT      reg33[1] = reg37",
      "75626 PUT      reg41[0] = reg33",
      "75630 PUT      reg41[1] = 40",
      "75634 CALL FUNCTION      PTR: reg27 MEM: reg41",
      "75638 SET      reg2 -> reg19",
      "75641 PUT      reg21[1] = reg19",
      "75645 CALL FUNCTION      PTR: reg24 MEM: reg21",
      "75649 SET      reg2 -> reg17",
      "75652 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75655 JUMP      75664",
      "75664 PUSH MEMORY ELEMENT IF INIT      2115 -> reg33",
      "75667 NEW ARRAY      2 -> reg19",
      "75670 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75673 PUT      reg19[0] = reg21",
      "75677 PUSH MEMORY ELEMENT IF INIT      2114 -> reg21",
      "75680 NEW ARRAY      2 -> reg24",
      "75683 NEW ARRAY      2 -> reg40",
      "75686 PUT      reg40[0] = 0",
      "75690 PUSH MEMORY ELEMENT IF INIT      2481 -> reg38",
      "75693 GET      reg38[charCodeAt] -> reg39",
      "75699 NEW ARRAY      1 -> reg41",
      "75702 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "75705 ADD      reg434-> reg42",
      "75709 PUT      reg41[0] = reg42",
      "75713 CALL FUNCTION      OBJ: reg38 FUNC: reg39 ARGS: reg41",
      "75717 SET      reg2 -> reg27",
      "75720 PUT      reg40[1] = reg27",
      "75724 PUT      reg24[0] = reg40",
      "75728 PUT      reg24[1] = 32",
      "75732 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "75736 SET      reg2 -> reg37",
      "75739 PUT      reg19[1] = reg37",
      "75743 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "75747 SET      reg2 -> reg17",
      "75750 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75753 JUMP      75762",
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "74679": [
      "74679 EQUAL      reg4 == 14 -> reg17",
      "74683 JUMP IF FALSE      reg17 TO: 74777 | 74686"
  ],
  "74686": [
      "74686 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74689 NEW ARRAY      2 -> reg21",
      "74692 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "74695 PUT      reg21[0] = reg24",
      "74699 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "74702 NEW ARRAY      2 -> reg28",
      "74705 NEW ARRAY      2 -> reg25",
      "74708 PUT      reg25[0] = 0",
      "74712 PUSH MEMORY ELEMENT IF INIT      2481 -> reg26",
      "74715 GET      reg26[charCodeAt] -> reg30",
      "74721 NEW ARRAY      1 -> reg31",
      "74724 PUSH MEMORY ELEMENT IF INIT      2491 -> reg33",
      "74727 ADD      reg3313-> reg34",
      "74731 PUT      reg31[0] = reg34",
      "74735 CALL FUNCTION      OBJ: reg26 FUNC: reg30 ARGS: reg31",
      "74739 SET      reg2 -> reg29",
      "74742 PUT      reg25[1] = reg29",
      "74746 PUT      reg28[0] = reg25",
      "74750 PUT      reg28[1] = 40",
      "74754 CALL FUNCTION      PTR: reg24 MEM: reg28",
      "74758 SET      reg2 -> reg27",
      "74761 PUT      reg21[1] = reg27",
      "74765 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "74769 SET      reg2 -> reg17",
      "74772 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "74775 JUMP      74784",
      "74784 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "74787 NEW ARRAY      2 -> reg19",
      "74790 PUSH MEMORY ELEMENT IF INIT      2488 -> reg25",
      "74793 PUT      reg19[0] = reg25",
      "74797 PUSH MEMORY ELEMENT IF INIT      2114 -> reg25",
      "74800 NEW ARRAY      2 -> reg27",
      "74803 NEW ARRAY      2 -> reg29",
      "74806 PUT      reg29[0] = 0",
      "74810 PUSH MEMORY ELEMENT IF INIT      2481 -> reg30",
      "74813 GET      reg30[charCodeAt] -> reg33",
      "74819 NEW ARRAY      1 -> reg31",
      "74822 PUSH MEMORY ELEMENT IF INIT      2491 -> reg34",
      "74825 ADD      reg3412-> reg35",
      "74829 PUT      reg31[0] = reg35",
      "74833 CALL FUNCTION      OBJ: reg30 FUNC: reg33 ARGS: reg31",
      "74837 SET      reg2 -> reg28",
      "74840 PUT      reg29[1] = reg28",
      "74844 PUT      reg27[0] = reg29",
      "74848 PUT      reg27[1] = 32",
      "74852 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "74856 SET      reg2 -> reg24",
      "74859 PUT      reg19[1] = reg24",
      "74863 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "74867 SET      reg2 -> reg21",
      "74870 SET MEMORY ELEMENT IF INIT      2488 = reg21",
      "74873 JUMP      74882",
      "74882 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74885 NEW ARRAY      2 -> reg21",
      "74888 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "74891 PUT      reg21[0] = reg24",
      "74895 PUSH MEMORY ELEMENT IF INIT      2114 -> reg25",
      "74898 NEW ARRAY      2 -> reg29",
      "74901 NEW ARRAY      2 -> reg27",
      "74904 PUT      reg27[0] = 0",
      "74908 PUSH MEMORY ELEMENT IF INIT      2481 -> reg31",
      "74911 GET      reg31[charCodeAt] -> reg35",
      "74917 NEW ARRAY      1 -> reg38",
      "74920 PUSH MEMORY ELEMENT IF INIT      2491 -> reg34",
      "74923 ADD      reg3411-> reg33",
      "74927 PUT      reg38[0] = reg33",
      "74931 CALL FUNCTION      OBJ: reg31 FUNC: reg35 ARGS: reg38",
      "74935 SET      reg2 -> reg28",
      "74938 PUT      reg27[1] = reg28",
      "74942 PUT      reg29[0] = reg27",
      "74946 PUT      reg29[1] = 24",
      "74950 CALL FUNCTION      PTR: reg25 MEM: reg29",
      "74954 SET      reg2 -> reg24",
      "74957 PUT      reg21[1] = reg24",
      "74961 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "74965 SET      reg2 -> reg17",
      "74968 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "74971 JUMP      74980",
      "74980 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74983 NEW ARRAY      2 -> reg21",
      "74986 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "74989 PUT      reg21[0] = reg27",
      "74993 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "74996 NEW ARRAY      2 -> reg25",
      "74999 NEW ARRAY      2 -> reg29",
      "75002 PUT      reg29[0] = 0",
      "75006 PUSH MEMORY ELEMENT IF INIT      2481 -> reg28",
      "75009 GET      reg28[charCodeAt] -> reg33",
      "75015 NEW ARRAY      1 -> reg35",
      "75018 PUSH MEMORY ELEMENT IF INIT      2491 -> reg39",
      "75021 ADD      reg3910-> reg36",
      "75025 PUT      reg35[0] = reg36",
      "75029 CALL FUNCTION      OBJ: reg28 FUNC: reg33 ARGS: reg35",
      "75033 SET      reg2 -> reg34",
      "75036 PUT      reg29[1] = reg34",
      "75040 PUT      reg25[0] = reg29",
      "75044 PUT      reg25[1] = 16",
      "75048 CALL FUNCTION      PTR: reg27 MEM: reg25",
      "75052 SET      reg2 -> reg24",
      "75055 PUT      reg21[1] = reg24",
      "75059 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75063 SET      reg2 -> reg17",
      "75066 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75069 JUMP      75078",
      "75078 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75081 NEW ARRAY      2 -> reg21",
      "75084 PUSH MEMORY ELEMENT IF INIT      2488 -> reg25",
      "75087 PUT      reg21[0] = reg25",
      "75091 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75094 NEW ARRAY      2 -> reg29",
      "75097 NEW ARRAY      2 -> reg25",
      "75100 PUT      reg25[0] = 0",
      "75104 PUSH MEMORY ELEMENT IF INIT      2481 -> reg34",
      "75107 GET      reg34[charCodeAt] -> reg35",
      "75113 NEW ARRAY      1 -> reg36",
      "75116 PUSH MEMORY ELEMENT IF INIT      2491 -> reg37",
      "75119 ADD      reg379-> reg39",
      "75123 PUT      reg36[0] = reg39",
      "75127 CALL FUNCTION      OBJ: reg34 FUNC: reg35 ARGS: reg36",
      "75131 SET      reg2 -> reg33",
      "75134 PUT      reg25[1] = reg33",
      "75138 PUT      reg29[0] = reg25",
      "75142 PUT      reg29[1] = 8",
      "75146 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75150 SET      reg2 -> reg24",
      "75153 PUT      reg21[1] = reg24",
      "75157 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75161 SET      reg2 -> reg17",
      "75164 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75167 JUMP      75176",
      "75176 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75179 NEW ARRAY      2 -> reg21",
      "75182 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75185 PUT      reg21[0] = reg24",
      "75189 NEW ARRAY      2 -> reg24",
      "75192 PUT      reg24[0] = 0",
      "75196 PUSH MEMORY ELEMENT IF INIT      2481 -> reg25",
      "75199 GET      reg25[charCodeAt] -> reg33",
      "75205 NEW ARRAY      1 -> reg29",
      "75208 PUSH MEMORY ELEMENT IF INIT      2491 -> reg35",
      "75211 ADD      reg358-> reg36",
      "75215 PUT      reg29[0] = reg36",
      "75219 CALL FUNCTION      OBJ: reg25 FUNC: reg33 ARGS: reg29",
      "75223 SET      reg2 -> reg27",
      "75226 PUT      reg24[1] = reg27",
      "75230 PUT      reg21[1] = reg24",
      "75234 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75238 SET      reg2 -> reg19",
      "75241 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75244 PUSH MEMORY ELEMENT IF INIT      2112 -> reg19",
      "75247 NEW ARRAY      2 -> reg21",
      "75250 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75253 PUT      reg21[0] = reg24",
      "75257 PUSH MEMORY ELEMENT IF INIT      2490 -> reg24",
      "75260 PUT      reg21[1] = reg24",
      "75264 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75268 SET      reg2 -> reg17",
      "75271 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75274 PUSH MEMORY ELEMENT IF INIT      2113 -> reg17",
      "75277 NEW ARRAY      2 -> reg21",
      "75280 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75283 PUT      reg21[0] = reg24",
      "75287 PUT      reg21[1] = 33",
      "75291 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75295 SET      reg2 -> reg19",
      "75298 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75301 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "75304 NEW ARRAY      2 -> reg24",
      "75307 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75310 PUT      reg24[0] = reg27",
      "75314 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "75317 PUT      reg24[1] = reg21",
      "75321 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "75325 SET      reg2 -> reg19",
      "75328 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75331 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75334 NEW ARRAY      2 -> reg21",
      "75337 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "75340 PUT      reg21[0] = reg24",
      "75344 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75347 PUT      reg21[1] = reg27",
      "75351 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75355 SET      reg2 -> reg17",
      "75358 SET MEMORY ELEMENT IF INIT      2486 = reg17",
      "75361 JUMP      75370",
      "75370 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75373 NEW ARRAY      2 -> reg19",
      "75376 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75379 PUT      reg19[0] = reg21",
      "75383 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75386 NEW ARRAY      2 -> reg29",
      "75389 NEW ARRAY      2 -> reg35",
      "75392 PUT      reg35[0] = 0",
      "75396 PUSH MEMORY ELEMENT IF INIT      2481 -> reg36",
      "75399 GET      reg36[charCodeAt] -> reg37",
      "75405 NEW ARRAY      1 -> reg39",
      "75408 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75411 ADD      reg387-> reg40",
      "75415 PUT      reg39[0] = reg40",
      "75419 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg39",
      "75423 SET      reg2 -> reg33",
      "75426 PUT      reg35[1] = reg33",
      "75430 PUT      reg29[0] = reg35",
      "75434 PUT      reg29[1] = 56",
      "75438 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75442 SET      reg2 -> reg21",
      "75445 PUT      reg19[1] = reg21",
      "75449 CALL FUNCTION      PTR: reg24 MEM: reg19",
      "75453 SET      reg2 -> reg17",
      "75456 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75459 JUMP      75468",
      "75468 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75471 NEW ARRAY      2 -> reg24",
      "75474 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75477 PUT      reg24[0] = reg21",
      "75481 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75484 NEW ARRAY      2 -> reg35",
      "75487 NEW ARRAY      2 -> reg37",
      "75490 PUT      reg37[0] = 0",
      "75494 PUSH MEMORY ELEMENT IF INIT      2481 -> reg29",
      "75497 GET      reg29[charCodeAt] -> reg39",
      "75503 NEW ARRAY      1 -> reg40",
      "75506 PUSH MEMORY ELEMENT IF INIT      2491 -> reg41",
      "75509 ADD      reg416-> reg42",
      "75513 PUT      reg40[0] = reg42",
      "75517 CALL FUNCTION      OBJ: reg29 FUNC: reg39 ARGS: reg40",
      "75521 SET      reg2 -> reg27",
      "75524 PUT      reg37[1] = reg27",
      "75528 PUT      reg35[0] = reg37",
      "75532 PUT      reg35[1] = 48",
      "75536 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "75540 SET      reg2 -> reg21",
      "75543 PUT      reg24[1] = reg21",
      "75547 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "75551 SET      reg2 -> reg17",
      "75554 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75557 JUMP      75566",
      "75566 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75569 NEW ARRAY      2 -> reg21",
      "75572 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "75575 PUT      reg21[0] = reg19",
      "75579 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75582 NEW ARRAY      2 -> reg41",
      "75585 NEW ARRAY      2 -> reg33",
      "75588 PUT      reg33[0] = 0",
      "75592 PUSH MEMORY ELEMENT IF INIT      2481 -> reg35",
      "75595 GET      reg35[charCodeAt] -> reg39",
      "75601 NEW ARRAY      1 -> reg40",
      "75604 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75607 ADD      reg385-> reg42",
      "75611 PUT      reg40[0] = reg42",
      "75615 CALL FUNCTION      OBJ: reg35 FUNC: reg39 ARGS: reg40",
      "75619 SET      reg2 -> reg37",
      "75622 PUT      reg33[1] = reg37",
      "75626 PUT      reg41[0] = reg33",
      "75630 PUT      reg41[1] = 40",
      "75634 CALL FUNCTION      PTR: reg27 MEM: reg41",
      "75638 SET      reg2 -> reg19",
      "75641 PUT      reg21[1] = reg19",
      "75645 CALL FUNCTION      PTR: reg24 MEM: reg21",
      "75649 SET      reg2 -> reg17",
      "75652 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75655 JUMP      75664",
      "75664 PUSH MEMORY ELEMENT IF INIT      2115 -> reg33",
      "75667 NEW ARRAY      2 -> reg19",
      "75670 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75673 PUT      reg19[0] = reg21",
      "75677 PUSH MEMORY ELEMENT IF INIT      2114 -> reg21",
      "75680 NEW ARRAY      2 -> reg24",
      "75683 NEW ARRAY      2 -> reg40",
      "75686 PUT      reg40[0] = 0",
      "75690 PUSH MEMORY ELEMENT IF INIT      2481 -> reg38",
      "75693 GET      reg38[charCodeAt] -> reg39",
      "75699 NEW ARRAY      1 -> reg41",
      "75702 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "75705 ADD      reg434-> reg42",
      "75709 PUT      reg41[0] = reg42",
      "75713 CALL FUNCTION      OBJ: reg38 FUNC: reg39 ARGS: reg41",
      "75717 SET      reg2 -> reg27",
      "75720 PUT      reg40[1] = reg27",
      "75724 PUT      reg24[0] = reg40",
      "75728 PUT      reg24[1] = 32",
      "75732 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "75736 SET      reg2 -> reg37",
      "75739 PUT      reg19[1] = reg37",
      "75743 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "75747 SET      reg2 -> reg17",
      "75750 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75753 JUMP      75762",
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "74777": [
      "74777 EQUAL      reg4 == 13 -> reg17",
      "74781 JUMP IF FALSE      reg17 TO: 74875 | 74784"
  ],
  "74784": [
      "74784 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "74787 NEW ARRAY      2 -> reg19",
      "74790 PUSH MEMORY ELEMENT IF INIT      2488 -> reg25",
      "74793 PUT      reg19[0] = reg25",
      "74797 PUSH MEMORY ELEMENT IF INIT      2114 -> reg25",
      "74800 NEW ARRAY      2 -> reg27",
      "74803 NEW ARRAY      2 -> reg29",
      "74806 PUT      reg29[0] = 0",
      "74810 PUSH MEMORY ELEMENT IF INIT      2481 -> reg30",
      "74813 GET      reg30[charCodeAt] -> reg33",
      "74819 NEW ARRAY      1 -> reg31",
      "74822 PUSH MEMORY ELEMENT IF INIT      2491 -> reg34",
      "74825 ADD      reg3412-> reg35",
      "74829 PUT      reg31[0] = reg35",
      "74833 CALL FUNCTION      OBJ: reg30 FUNC: reg33 ARGS: reg31",
      "74837 SET      reg2 -> reg28",
      "74840 PUT      reg29[1] = reg28",
      "74844 PUT      reg27[0] = reg29",
      "74848 PUT      reg27[1] = 32",
      "74852 CALL FUNCTION      PTR: reg25 MEM: reg27",
      "74856 SET      reg2 -> reg24",
      "74859 PUT      reg19[1] = reg24",
      "74863 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "74867 SET      reg2 -> reg21",
      "74870 SET MEMORY ELEMENT IF INIT      2488 = reg21",
      "74873 JUMP      74882",
      "74882 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74885 NEW ARRAY      2 -> reg21",
      "74888 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "74891 PUT      reg21[0] = reg24",
      "74895 PUSH MEMORY ELEMENT IF INIT      2114 -> reg25",
      "74898 NEW ARRAY      2 -> reg29",
      "74901 NEW ARRAY      2 -> reg27",
      "74904 PUT      reg27[0] = 0",
      "74908 PUSH MEMORY ELEMENT IF INIT      2481 -> reg31",
      "74911 GET      reg31[charCodeAt] -> reg35",
      "74917 NEW ARRAY      1 -> reg38",
      "74920 PUSH MEMORY ELEMENT IF INIT      2491 -> reg34",
      "74923 ADD      reg3411-> reg33",
      "74927 PUT      reg38[0] = reg33",
      "74931 CALL FUNCTION      OBJ: reg31 FUNC: reg35 ARGS: reg38",
      "74935 SET      reg2 -> reg28",
      "74938 PUT      reg27[1] = reg28",
      "74942 PUT      reg29[0] = reg27",
      "74946 PUT      reg29[1] = 24",
      "74950 CALL FUNCTION      PTR: reg25 MEM: reg29",
      "74954 SET      reg2 -> reg24",
      "74957 PUT      reg21[1] = reg24",
      "74961 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "74965 SET      reg2 -> reg17",
      "74968 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "74971 JUMP      74980",
      "74980 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74983 NEW ARRAY      2 -> reg21",
      "74986 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "74989 PUT      reg21[0] = reg27",
      "74993 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "74996 NEW ARRAY      2 -> reg25",
      "74999 NEW ARRAY      2 -> reg29",
      "75002 PUT      reg29[0] = 0",
      "75006 PUSH MEMORY ELEMENT IF INIT      2481 -> reg28",
      "75009 GET      reg28[charCodeAt] -> reg33",
      "75015 NEW ARRAY      1 -> reg35",
      "75018 PUSH MEMORY ELEMENT IF INIT      2491 -> reg39",
      "75021 ADD      reg3910-> reg36",
      "75025 PUT      reg35[0] = reg36",
      "75029 CALL FUNCTION      OBJ: reg28 FUNC: reg33 ARGS: reg35",
      "75033 SET      reg2 -> reg34",
      "75036 PUT      reg29[1] = reg34",
      "75040 PUT      reg25[0] = reg29",
      "75044 PUT      reg25[1] = 16",
      "75048 CALL FUNCTION      PTR: reg27 MEM: reg25",
      "75052 SET      reg2 -> reg24",
      "75055 PUT      reg21[1] = reg24",
      "75059 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75063 SET      reg2 -> reg17",
      "75066 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75069 JUMP      75078",
      "75078 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75081 NEW ARRAY      2 -> reg21",
      "75084 PUSH MEMORY ELEMENT IF INIT      2488 -> reg25",
      "75087 PUT      reg21[0] = reg25",
      "75091 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75094 NEW ARRAY      2 -> reg29",
      "75097 NEW ARRAY      2 -> reg25",
      "75100 PUT      reg25[0] = 0",
      "75104 PUSH MEMORY ELEMENT IF INIT      2481 -> reg34",
      "75107 GET      reg34[charCodeAt] -> reg35",
      "75113 NEW ARRAY      1 -> reg36",
      "75116 PUSH MEMORY ELEMENT IF INIT      2491 -> reg37",
      "75119 ADD      reg379-> reg39",
      "75123 PUT      reg36[0] = reg39",
      "75127 CALL FUNCTION      OBJ: reg34 FUNC: reg35 ARGS: reg36",
      "75131 SET      reg2 -> reg33",
      "75134 PUT      reg25[1] = reg33",
      "75138 PUT      reg29[0] = reg25",
      "75142 PUT      reg29[1] = 8",
      "75146 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75150 SET      reg2 -> reg24",
      "75153 PUT      reg21[1] = reg24",
      "75157 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75161 SET      reg2 -> reg17",
      "75164 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75167 JUMP      75176",
      "75176 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75179 NEW ARRAY      2 -> reg21",
      "75182 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75185 PUT      reg21[0] = reg24",
      "75189 NEW ARRAY      2 -> reg24",
      "75192 PUT      reg24[0] = 0",
      "75196 PUSH MEMORY ELEMENT IF INIT      2481 -> reg25",
      "75199 GET      reg25[charCodeAt] -> reg33",
      "75205 NEW ARRAY      1 -> reg29",
      "75208 PUSH MEMORY ELEMENT IF INIT      2491 -> reg35",
      "75211 ADD      reg358-> reg36",
      "75215 PUT      reg29[0] = reg36",
      "75219 CALL FUNCTION      OBJ: reg25 FUNC: reg33 ARGS: reg29",
      "75223 SET      reg2 -> reg27",
      "75226 PUT      reg24[1] = reg27",
      "75230 PUT      reg21[1] = reg24",
      "75234 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75238 SET      reg2 -> reg19",
      "75241 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75244 PUSH MEMORY ELEMENT IF INIT      2112 -> reg19",
      "75247 NEW ARRAY      2 -> reg21",
      "75250 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75253 PUT      reg21[0] = reg24",
      "75257 PUSH MEMORY ELEMENT IF INIT      2490 -> reg24",
      "75260 PUT      reg21[1] = reg24",
      "75264 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75268 SET      reg2 -> reg17",
      "75271 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75274 PUSH MEMORY ELEMENT IF INIT      2113 -> reg17",
      "75277 NEW ARRAY      2 -> reg21",
      "75280 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75283 PUT      reg21[0] = reg24",
      "75287 PUT      reg21[1] = 33",
      "75291 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75295 SET      reg2 -> reg19",
      "75298 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75301 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "75304 NEW ARRAY      2 -> reg24",
      "75307 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75310 PUT      reg24[0] = reg27",
      "75314 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "75317 PUT      reg24[1] = reg21",
      "75321 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "75325 SET      reg2 -> reg19",
      "75328 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75331 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75334 NEW ARRAY      2 -> reg21",
      "75337 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "75340 PUT      reg21[0] = reg24",
      "75344 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75347 PUT      reg21[1] = reg27",
      "75351 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75355 SET      reg2 -> reg17",
      "75358 SET MEMORY ELEMENT IF INIT      2486 = reg17",
      "75361 JUMP      75370",
      "75370 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75373 NEW ARRAY      2 -> reg19",
      "75376 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75379 PUT      reg19[0] = reg21",
      "75383 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75386 NEW ARRAY      2 -> reg29",
      "75389 NEW ARRAY      2 -> reg35",
      "75392 PUT      reg35[0] = 0",
      "75396 PUSH MEMORY ELEMENT IF INIT      2481 -> reg36",
      "75399 GET      reg36[charCodeAt] -> reg37",
      "75405 NEW ARRAY      1 -> reg39",
      "75408 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75411 ADD      reg387-> reg40",
      "75415 PUT      reg39[0] = reg40",
      "75419 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg39",
      "75423 SET      reg2 -> reg33",
      "75426 PUT      reg35[1] = reg33",
      "75430 PUT      reg29[0] = reg35",
      "75434 PUT      reg29[1] = 56",
      "75438 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75442 SET      reg2 -> reg21",
      "75445 PUT      reg19[1] = reg21",
      "75449 CALL FUNCTION      PTR: reg24 MEM: reg19",
      "75453 SET      reg2 -> reg17",
      "75456 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75459 JUMP      75468",
      "75468 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75471 NEW ARRAY      2 -> reg24",
      "75474 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75477 PUT      reg24[0] = reg21",
      "75481 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75484 NEW ARRAY      2 -> reg35",
      "75487 NEW ARRAY      2 -> reg37",
      "75490 PUT      reg37[0] = 0",
      "75494 PUSH MEMORY ELEMENT IF INIT      2481 -> reg29",
      "75497 GET      reg29[charCodeAt] -> reg39",
      "75503 NEW ARRAY      1 -> reg40",
      "75506 PUSH MEMORY ELEMENT IF INIT      2491 -> reg41",
      "75509 ADD      reg416-> reg42",
      "75513 PUT      reg40[0] = reg42",
      "75517 CALL FUNCTION      OBJ: reg29 FUNC: reg39 ARGS: reg40",
      "75521 SET      reg2 -> reg27",
      "75524 PUT      reg37[1] = reg27",
      "75528 PUT      reg35[0] = reg37",
      "75532 PUT      reg35[1] = 48",
      "75536 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "75540 SET      reg2 -> reg21",
      "75543 PUT      reg24[1] = reg21",
      "75547 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "75551 SET      reg2 -> reg17",
      "75554 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75557 JUMP      75566",
      "75566 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75569 NEW ARRAY      2 -> reg21",
      "75572 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "75575 PUT      reg21[0] = reg19",
      "75579 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75582 NEW ARRAY      2 -> reg41",
      "75585 NEW ARRAY      2 -> reg33",
      "75588 PUT      reg33[0] = 0",
      "75592 PUSH MEMORY ELEMENT IF INIT      2481 -> reg35",
      "75595 GET      reg35[charCodeAt] -> reg39",
      "75601 NEW ARRAY      1 -> reg40",
      "75604 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75607 ADD      reg385-> reg42",
      "75611 PUT      reg40[0] = reg42",
      "75615 CALL FUNCTION      OBJ: reg35 FUNC: reg39 ARGS: reg40",
      "75619 SET      reg2 -> reg37",
      "75622 PUT      reg33[1] = reg37",
      "75626 PUT      reg41[0] = reg33",
      "75630 PUT      reg41[1] = 40",
      "75634 CALL FUNCTION      PTR: reg27 MEM: reg41",
      "75638 SET      reg2 -> reg19",
      "75641 PUT      reg21[1] = reg19",
      "75645 CALL FUNCTION      PTR: reg24 MEM: reg21",
      "75649 SET      reg2 -> reg17",
      "75652 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75655 JUMP      75664",
      "75664 PUSH MEMORY ELEMENT IF INIT      2115 -> reg33",
      "75667 NEW ARRAY      2 -> reg19",
      "75670 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75673 PUT      reg19[0] = reg21",
      "75677 PUSH MEMORY ELEMENT IF INIT      2114 -> reg21",
      "75680 NEW ARRAY      2 -> reg24",
      "75683 NEW ARRAY      2 -> reg40",
      "75686 PUT      reg40[0] = 0",
      "75690 PUSH MEMORY ELEMENT IF INIT      2481 -> reg38",
      "75693 GET      reg38[charCodeAt] -> reg39",
      "75699 NEW ARRAY      1 -> reg41",
      "75702 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "75705 ADD      reg434-> reg42",
      "75709 PUT      reg41[0] = reg42",
      "75713 CALL FUNCTION      OBJ: reg38 FUNC: reg39 ARGS: reg41",
      "75717 SET      reg2 -> reg27",
      "75720 PUT      reg40[1] = reg27",
      "75724 PUT      reg24[0] = reg40",
      "75728 PUT      reg24[1] = 32",
      "75732 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "75736 SET      reg2 -> reg37",
      "75739 PUT      reg19[1] = reg37",
      "75743 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "75747 SET      reg2 -> reg17",
      "75750 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75753 JUMP      75762",
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "74875": [
      "74875 EQUAL      reg4 == 12 -> reg17",
      "74879 JUMP IF FALSE      reg17 TO: 74973 | 74882"
  ],
  "74882": [
      "74882 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74885 NEW ARRAY      2 -> reg21",
      "74888 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "74891 PUT      reg21[0] = reg24",
      "74895 PUSH MEMORY ELEMENT IF INIT      2114 -> reg25",
      "74898 NEW ARRAY      2 -> reg29",
      "74901 NEW ARRAY      2 -> reg27",
      "74904 PUT      reg27[0] = 0",
      "74908 PUSH MEMORY ELEMENT IF INIT      2481 -> reg31",
      "74911 GET      reg31[charCodeAt] -> reg35",
      "74917 NEW ARRAY      1 -> reg38",
      "74920 PUSH MEMORY ELEMENT IF INIT      2491 -> reg34",
      "74923 ADD      reg3411-> reg33",
      "74927 PUT      reg38[0] = reg33",
      "74931 CALL FUNCTION      OBJ: reg31 FUNC: reg35 ARGS: reg38",
      "74935 SET      reg2 -> reg28",
      "74938 PUT      reg27[1] = reg28",
      "74942 PUT      reg29[0] = reg27",
      "74946 PUT      reg29[1] = 24",
      "74950 CALL FUNCTION      PTR: reg25 MEM: reg29",
      "74954 SET      reg2 -> reg24",
      "74957 PUT      reg21[1] = reg24",
      "74961 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "74965 SET      reg2 -> reg17",
      "74968 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "74971 JUMP      74980",
      "74980 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74983 NEW ARRAY      2 -> reg21",
      "74986 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "74989 PUT      reg21[0] = reg27",
      "74993 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "74996 NEW ARRAY      2 -> reg25",
      "74999 NEW ARRAY      2 -> reg29",
      "75002 PUT      reg29[0] = 0",
      "75006 PUSH MEMORY ELEMENT IF INIT      2481 -> reg28",
      "75009 GET      reg28[charCodeAt] -> reg33",
      "75015 NEW ARRAY      1 -> reg35",
      "75018 PUSH MEMORY ELEMENT IF INIT      2491 -> reg39",
      "75021 ADD      reg3910-> reg36",
      "75025 PUT      reg35[0] = reg36",
      "75029 CALL FUNCTION      OBJ: reg28 FUNC: reg33 ARGS: reg35",
      "75033 SET      reg2 -> reg34",
      "75036 PUT      reg29[1] = reg34",
      "75040 PUT      reg25[0] = reg29",
      "75044 PUT      reg25[1] = 16",
      "75048 CALL FUNCTION      PTR: reg27 MEM: reg25",
      "75052 SET      reg2 -> reg24",
      "75055 PUT      reg21[1] = reg24",
      "75059 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75063 SET      reg2 -> reg17",
      "75066 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75069 JUMP      75078",
      "75078 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75081 NEW ARRAY      2 -> reg21",
      "75084 PUSH MEMORY ELEMENT IF INIT      2488 -> reg25",
      "75087 PUT      reg21[0] = reg25",
      "75091 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75094 NEW ARRAY      2 -> reg29",
      "75097 NEW ARRAY      2 -> reg25",
      "75100 PUT      reg25[0] = 0",
      "75104 PUSH MEMORY ELEMENT IF INIT      2481 -> reg34",
      "75107 GET      reg34[charCodeAt] -> reg35",
      "75113 NEW ARRAY      1 -> reg36",
      "75116 PUSH MEMORY ELEMENT IF INIT      2491 -> reg37",
      "75119 ADD      reg379-> reg39",
      "75123 PUT      reg36[0] = reg39",
      "75127 CALL FUNCTION      OBJ: reg34 FUNC: reg35 ARGS: reg36",
      "75131 SET      reg2 -> reg33",
      "75134 PUT      reg25[1] = reg33",
      "75138 PUT      reg29[0] = reg25",
      "75142 PUT      reg29[1] = 8",
      "75146 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75150 SET      reg2 -> reg24",
      "75153 PUT      reg21[1] = reg24",
      "75157 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75161 SET      reg2 -> reg17",
      "75164 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75167 JUMP      75176",
      "75176 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75179 NEW ARRAY      2 -> reg21",
      "75182 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75185 PUT      reg21[0] = reg24",
      "75189 NEW ARRAY      2 -> reg24",
      "75192 PUT      reg24[0] = 0",
      "75196 PUSH MEMORY ELEMENT IF INIT      2481 -> reg25",
      "75199 GET      reg25[charCodeAt] -> reg33",
      "75205 NEW ARRAY      1 -> reg29",
      "75208 PUSH MEMORY ELEMENT IF INIT      2491 -> reg35",
      "75211 ADD      reg358-> reg36",
      "75215 PUT      reg29[0] = reg36",
      "75219 CALL FUNCTION      OBJ: reg25 FUNC: reg33 ARGS: reg29",
      "75223 SET      reg2 -> reg27",
      "75226 PUT      reg24[1] = reg27",
      "75230 PUT      reg21[1] = reg24",
      "75234 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75238 SET      reg2 -> reg19",
      "75241 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75244 PUSH MEMORY ELEMENT IF INIT      2112 -> reg19",
      "75247 NEW ARRAY      2 -> reg21",
      "75250 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75253 PUT      reg21[0] = reg24",
      "75257 PUSH MEMORY ELEMENT IF INIT      2490 -> reg24",
      "75260 PUT      reg21[1] = reg24",
      "75264 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75268 SET      reg2 -> reg17",
      "75271 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75274 PUSH MEMORY ELEMENT IF INIT      2113 -> reg17",
      "75277 NEW ARRAY      2 -> reg21",
      "75280 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75283 PUT      reg21[0] = reg24",
      "75287 PUT      reg21[1] = 33",
      "75291 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75295 SET      reg2 -> reg19",
      "75298 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75301 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "75304 NEW ARRAY      2 -> reg24",
      "75307 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75310 PUT      reg24[0] = reg27",
      "75314 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "75317 PUT      reg24[1] = reg21",
      "75321 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "75325 SET      reg2 -> reg19",
      "75328 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75331 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75334 NEW ARRAY      2 -> reg21",
      "75337 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "75340 PUT      reg21[0] = reg24",
      "75344 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75347 PUT      reg21[1] = reg27",
      "75351 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75355 SET      reg2 -> reg17",
      "75358 SET MEMORY ELEMENT IF INIT      2486 = reg17",
      "75361 JUMP      75370",
      "75370 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75373 NEW ARRAY      2 -> reg19",
      "75376 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75379 PUT      reg19[0] = reg21",
      "75383 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75386 NEW ARRAY      2 -> reg29",
      "75389 NEW ARRAY      2 -> reg35",
      "75392 PUT      reg35[0] = 0",
      "75396 PUSH MEMORY ELEMENT IF INIT      2481 -> reg36",
      "75399 GET      reg36[charCodeAt] -> reg37",
      "75405 NEW ARRAY      1 -> reg39",
      "75408 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75411 ADD      reg387-> reg40",
      "75415 PUT      reg39[0] = reg40",
      "75419 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg39",
      "75423 SET      reg2 -> reg33",
      "75426 PUT      reg35[1] = reg33",
      "75430 PUT      reg29[0] = reg35",
      "75434 PUT      reg29[1] = 56",
      "75438 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75442 SET      reg2 -> reg21",
      "75445 PUT      reg19[1] = reg21",
      "75449 CALL FUNCTION      PTR: reg24 MEM: reg19",
      "75453 SET      reg2 -> reg17",
      "75456 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75459 JUMP      75468",
      "75468 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75471 NEW ARRAY      2 -> reg24",
      "75474 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75477 PUT      reg24[0] = reg21",
      "75481 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75484 NEW ARRAY      2 -> reg35",
      "75487 NEW ARRAY      2 -> reg37",
      "75490 PUT      reg37[0] = 0",
      "75494 PUSH MEMORY ELEMENT IF INIT      2481 -> reg29",
      "75497 GET      reg29[charCodeAt] -> reg39",
      "75503 NEW ARRAY      1 -> reg40",
      "75506 PUSH MEMORY ELEMENT IF INIT      2491 -> reg41",
      "75509 ADD      reg416-> reg42",
      "75513 PUT      reg40[0] = reg42",
      "75517 CALL FUNCTION      OBJ: reg29 FUNC: reg39 ARGS: reg40",
      "75521 SET      reg2 -> reg27",
      "75524 PUT      reg37[1] = reg27",
      "75528 PUT      reg35[0] = reg37",
      "75532 PUT      reg35[1] = 48",
      "75536 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "75540 SET      reg2 -> reg21",
      "75543 PUT      reg24[1] = reg21",
      "75547 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "75551 SET      reg2 -> reg17",
      "75554 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75557 JUMP      75566",
      "75566 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75569 NEW ARRAY      2 -> reg21",
      "75572 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "75575 PUT      reg21[0] = reg19",
      "75579 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75582 NEW ARRAY      2 -> reg41",
      "75585 NEW ARRAY      2 -> reg33",
      "75588 PUT      reg33[0] = 0",
      "75592 PUSH MEMORY ELEMENT IF INIT      2481 -> reg35",
      "75595 GET      reg35[charCodeAt] -> reg39",
      "75601 NEW ARRAY      1 -> reg40",
      "75604 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75607 ADD      reg385-> reg42",
      "75611 PUT      reg40[0] = reg42",
      "75615 CALL FUNCTION      OBJ: reg35 FUNC: reg39 ARGS: reg40",
      "75619 SET      reg2 -> reg37",
      "75622 PUT      reg33[1] = reg37",
      "75626 PUT      reg41[0] = reg33",
      "75630 PUT      reg41[1] = 40",
      "75634 CALL FUNCTION      PTR: reg27 MEM: reg41",
      "75638 SET      reg2 -> reg19",
      "75641 PUT      reg21[1] = reg19",
      "75645 CALL FUNCTION      PTR: reg24 MEM: reg21",
      "75649 SET      reg2 -> reg17",
      "75652 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75655 JUMP      75664",
      "75664 PUSH MEMORY ELEMENT IF INIT      2115 -> reg33",
      "75667 NEW ARRAY      2 -> reg19",
      "75670 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75673 PUT      reg19[0] = reg21",
      "75677 PUSH MEMORY ELEMENT IF INIT      2114 -> reg21",
      "75680 NEW ARRAY      2 -> reg24",
      "75683 NEW ARRAY      2 -> reg40",
      "75686 PUT      reg40[0] = 0",
      "75690 PUSH MEMORY ELEMENT IF INIT      2481 -> reg38",
      "75693 GET      reg38[charCodeAt] -> reg39",
      "75699 NEW ARRAY      1 -> reg41",
      "75702 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "75705 ADD      reg434-> reg42",
      "75709 PUT      reg41[0] = reg42",
      "75713 CALL FUNCTION      OBJ: reg38 FUNC: reg39 ARGS: reg41",
      "75717 SET      reg2 -> reg27",
      "75720 PUT      reg40[1] = reg27",
      "75724 PUT      reg24[0] = reg40",
      "75728 PUT      reg24[1] = 32",
      "75732 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "75736 SET      reg2 -> reg37",
      "75739 PUT      reg19[1] = reg37",
      "75743 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "75747 SET      reg2 -> reg17",
      "75750 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75753 JUMP      75762",
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "74973": [
      "74973 EQUAL      reg4 == 11 -> reg21",
      "74977 JUMP IF FALSE      reg21 TO: 75071 | 74980"
  ],
  "74980": [
      "74980 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "74983 NEW ARRAY      2 -> reg21",
      "74986 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "74989 PUT      reg21[0] = reg27",
      "74993 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "74996 NEW ARRAY      2 -> reg25",
      "74999 NEW ARRAY      2 -> reg29",
      "75002 PUT      reg29[0] = 0",
      "75006 PUSH MEMORY ELEMENT IF INIT      2481 -> reg28",
      "75009 GET      reg28[charCodeAt] -> reg33",
      "75015 NEW ARRAY      1 -> reg35",
      "75018 PUSH MEMORY ELEMENT IF INIT      2491 -> reg39",
      "75021 ADD      reg3910-> reg36",
      "75025 PUT      reg35[0] = reg36",
      "75029 CALL FUNCTION      OBJ: reg28 FUNC: reg33 ARGS: reg35",
      "75033 SET      reg2 -> reg34",
      "75036 PUT      reg29[1] = reg34",
      "75040 PUT      reg25[0] = reg29",
      "75044 PUT      reg25[1] = 16",
      "75048 CALL FUNCTION      PTR: reg27 MEM: reg25",
      "75052 SET      reg2 -> reg24",
      "75055 PUT      reg21[1] = reg24",
      "75059 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75063 SET      reg2 -> reg17",
      "75066 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75069 JUMP      75078",
      "75078 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75081 NEW ARRAY      2 -> reg21",
      "75084 PUSH MEMORY ELEMENT IF INIT      2488 -> reg25",
      "75087 PUT      reg21[0] = reg25",
      "75091 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75094 NEW ARRAY      2 -> reg29",
      "75097 NEW ARRAY      2 -> reg25",
      "75100 PUT      reg25[0] = 0",
      "75104 PUSH MEMORY ELEMENT IF INIT      2481 -> reg34",
      "75107 GET      reg34[charCodeAt] -> reg35",
      "75113 NEW ARRAY      1 -> reg36",
      "75116 PUSH MEMORY ELEMENT IF INIT      2491 -> reg37",
      "75119 ADD      reg379-> reg39",
      "75123 PUT      reg36[0] = reg39",
      "75127 CALL FUNCTION      OBJ: reg34 FUNC: reg35 ARGS: reg36",
      "75131 SET      reg2 -> reg33",
      "75134 PUT      reg25[1] = reg33",
      "75138 PUT      reg29[0] = reg25",
      "75142 PUT      reg29[1] = 8",
      "75146 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75150 SET      reg2 -> reg24",
      "75153 PUT      reg21[1] = reg24",
      "75157 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75161 SET      reg2 -> reg17",
      "75164 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75167 JUMP      75176",
      "75176 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75179 NEW ARRAY      2 -> reg21",
      "75182 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75185 PUT      reg21[0] = reg24",
      "75189 NEW ARRAY      2 -> reg24",
      "75192 PUT      reg24[0] = 0",
      "75196 PUSH MEMORY ELEMENT IF INIT      2481 -> reg25",
      "75199 GET      reg25[charCodeAt] -> reg33",
      "75205 NEW ARRAY      1 -> reg29",
      "75208 PUSH MEMORY ELEMENT IF INIT      2491 -> reg35",
      "75211 ADD      reg358-> reg36",
      "75215 PUT      reg29[0] = reg36",
      "75219 CALL FUNCTION      OBJ: reg25 FUNC: reg33 ARGS: reg29",
      "75223 SET      reg2 -> reg27",
      "75226 PUT      reg24[1] = reg27",
      "75230 PUT      reg21[1] = reg24",
      "75234 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75238 SET      reg2 -> reg19",
      "75241 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75244 PUSH MEMORY ELEMENT IF INIT      2112 -> reg19",
      "75247 NEW ARRAY      2 -> reg21",
      "75250 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75253 PUT      reg21[0] = reg24",
      "75257 PUSH MEMORY ELEMENT IF INIT      2490 -> reg24",
      "75260 PUT      reg21[1] = reg24",
      "75264 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75268 SET      reg2 -> reg17",
      "75271 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75274 PUSH MEMORY ELEMENT IF INIT      2113 -> reg17",
      "75277 NEW ARRAY      2 -> reg21",
      "75280 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75283 PUT      reg21[0] = reg24",
      "75287 PUT      reg21[1] = 33",
      "75291 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75295 SET      reg2 -> reg19",
      "75298 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75301 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "75304 NEW ARRAY      2 -> reg24",
      "75307 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75310 PUT      reg24[0] = reg27",
      "75314 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "75317 PUT      reg24[1] = reg21",
      "75321 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "75325 SET      reg2 -> reg19",
      "75328 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75331 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75334 NEW ARRAY      2 -> reg21",
      "75337 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "75340 PUT      reg21[0] = reg24",
      "75344 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75347 PUT      reg21[1] = reg27",
      "75351 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75355 SET      reg2 -> reg17",
      "75358 SET MEMORY ELEMENT IF INIT      2486 = reg17",
      "75361 JUMP      75370",
      "75370 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75373 NEW ARRAY      2 -> reg19",
      "75376 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75379 PUT      reg19[0] = reg21",
      "75383 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75386 NEW ARRAY      2 -> reg29",
      "75389 NEW ARRAY      2 -> reg35",
      "75392 PUT      reg35[0] = 0",
      "75396 PUSH MEMORY ELEMENT IF INIT      2481 -> reg36",
      "75399 GET      reg36[charCodeAt] -> reg37",
      "75405 NEW ARRAY      1 -> reg39",
      "75408 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75411 ADD      reg387-> reg40",
      "75415 PUT      reg39[0] = reg40",
      "75419 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg39",
      "75423 SET      reg2 -> reg33",
      "75426 PUT      reg35[1] = reg33",
      "75430 PUT      reg29[0] = reg35",
      "75434 PUT      reg29[1] = 56",
      "75438 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75442 SET      reg2 -> reg21",
      "75445 PUT      reg19[1] = reg21",
      "75449 CALL FUNCTION      PTR: reg24 MEM: reg19",
      "75453 SET      reg2 -> reg17",
      "75456 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75459 JUMP      75468",
      "75468 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75471 NEW ARRAY      2 -> reg24",
      "75474 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75477 PUT      reg24[0] = reg21",
      "75481 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75484 NEW ARRAY      2 -> reg35",
      "75487 NEW ARRAY      2 -> reg37",
      "75490 PUT      reg37[0] = 0",
      "75494 PUSH MEMORY ELEMENT IF INIT      2481 -> reg29",
      "75497 GET      reg29[charCodeAt] -> reg39",
      "75503 NEW ARRAY      1 -> reg40",
      "75506 PUSH MEMORY ELEMENT IF INIT      2491 -> reg41",
      "75509 ADD      reg416-> reg42",
      "75513 PUT      reg40[0] = reg42",
      "75517 CALL FUNCTION      OBJ: reg29 FUNC: reg39 ARGS: reg40",
      "75521 SET      reg2 -> reg27",
      "75524 PUT      reg37[1] = reg27",
      "75528 PUT      reg35[0] = reg37",
      "75532 PUT      reg35[1] = 48",
      "75536 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "75540 SET      reg2 -> reg21",
      "75543 PUT      reg24[1] = reg21",
      "75547 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "75551 SET      reg2 -> reg17",
      "75554 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75557 JUMP      75566",
      "75566 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75569 NEW ARRAY      2 -> reg21",
      "75572 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "75575 PUT      reg21[0] = reg19",
      "75579 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75582 NEW ARRAY      2 -> reg41",
      "75585 NEW ARRAY      2 -> reg33",
      "75588 PUT      reg33[0] = 0",
      "75592 PUSH MEMORY ELEMENT IF INIT      2481 -> reg35",
      "75595 GET      reg35[charCodeAt] -> reg39",
      "75601 NEW ARRAY      1 -> reg40",
      "75604 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75607 ADD      reg385-> reg42",
      "75611 PUT      reg40[0] = reg42",
      "75615 CALL FUNCTION      OBJ: reg35 FUNC: reg39 ARGS: reg40",
      "75619 SET      reg2 -> reg37",
      "75622 PUT      reg33[1] = reg37",
      "75626 PUT      reg41[0] = reg33",
      "75630 PUT      reg41[1] = 40",
      "75634 CALL FUNCTION      PTR: reg27 MEM: reg41",
      "75638 SET      reg2 -> reg19",
      "75641 PUT      reg21[1] = reg19",
      "75645 CALL FUNCTION      PTR: reg24 MEM: reg21",
      "75649 SET      reg2 -> reg17",
      "75652 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75655 JUMP      75664",
      "75664 PUSH MEMORY ELEMENT IF INIT      2115 -> reg33",
      "75667 NEW ARRAY      2 -> reg19",
      "75670 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75673 PUT      reg19[0] = reg21",
      "75677 PUSH MEMORY ELEMENT IF INIT      2114 -> reg21",
      "75680 NEW ARRAY      2 -> reg24",
      "75683 NEW ARRAY      2 -> reg40",
      "75686 PUT      reg40[0] = 0",
      "75690 PUSH MEMORY ELEMENT IF INIT      2481 -> reg38",
      "75693 GET      reg38[charCodeAt] -> reg39",
      "75699 NEW ARRAY      1 -> reg41",
      "75702 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "75705 ADD      reg434-> reg42",
      "75709 PUT      reg41[0] = reg42",
      "75713 CALL FUNCTION      OBJ: reg38 FUNC: reg39 ARGS: reg41",
      "75717 SET      reg2 -> reg27",
      "75720 PUT      reg40[1] = reg27",
      "75724 PUT      reg24[0] = reg40",
      "75728 PUT      reg24[1] = 32",
      "75732 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "75736 SET      reg2 -> reg37",
      "75739 PUT      reg19[1] = reg37",
      "75743 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "75747 SET      reg2 -> reg17",
      "75750 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75753 JUMP      75762",
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "75071": [
      "75071 EQUAL      reg4 == 10 -> reg17",
      "75075 JUMP IF FALSE      reg17 TO: 75169 | 75078"
  ],
  "75078": [
      "75078 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75081 NEW ARRAY      2 -> reg21",
      "75084 PUSH MEMORY ELEMENT IF INIT      2488 -> reg25",
      "75087 PUT      reg21[0] = reg25",
      "75091 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75094 NEW ARRAY      2 -> reg29",
      "75097 NEW ARRAY      2 -> reg25",
      "75100 PUT      reg25[0] = 0",
      "75104 PUSH MEMORY ELEMENT IF INIT      2481 -> reg34",
      "75107 GET      reg34[charCodeAt] -> reg35",
      "75113 NEW ARRAY      1 -> reg36",
      "75116 PUSH MEMORY ELEMENT IF INIT      2491 -> reg37",
      "75119 ADD      reg379-> reg39",
      "75123 PUT      reg36[0] = reg39",
      "75127 CALL FUNCTION      OBJ: reg34 FUNC: reg35 ARGS: reg36",
      "75131 SET      reg2 -> reg33",
      "75134 PUT      reg25[1] = reg33",
      "75138 PUT      reg29[0] = reg25",
      "75142 PUT      reg29[1] = 8",
      "75146 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75150 SET      reg2 -> reg24",
      "75153 PUT      reg21[1] = reg24",
      "75157 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75161 SET      reg2 -> reg17",
      "75164 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75167 JUMP      75176",
      "75176 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75179 NEW ARRAY      2 -> reg21",
      "75182 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75185 PUT      reg21[0] = reg24",
      "75189 NEW ARRAY      2 -> reg24",
      "75192 PUT      reg24[0] = 0",
      "75196 PUSH MEMORY ELEMENT IF INIT      2481 -> reg25",
      "75199 GET      reg25[charCodeAt] -> reg33",
      "75205 NEW ARRAY      1 -> reg29",
      "75208 PUSH MEMORY ELEMENT IF INIT      2491 -> reg35",
      "75211 ADD      reg358-> reg36",
      "75215 PUT      reg29[0] = reg36",
      "75219 CALL FUNCTION      OBJ: reg25 FUNC: reg33 ARGS: reg29",
      "75223 SET      reg2 -> reg27",
      "75226 PUT      reg24[1] = reg27",
      "75230 PUT      reg21[1] = reg24",
      "75234 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75238 SET      reg2 -> reg19",
      "75241 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75244 PUSH MEMORY ELEMENT IF INIT      2112 -> reg19",
      "75247 NEW ARRAY      2 -> reg21",
      "75250 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75253 PUT      reg21[0] = reg24",
      "75257 PUSH MEMORY ELEMENT IF INIT      2490 -> reg24",
      "75260 PUT      reg21[1] = reg24",
      "75264 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75268 SET      reg2 -> reg17",
      "75271 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75274 PUSH MEMORY ELEMENT IF INIT      2113 -> reg17",
      "75277 NEW ARRAY      2 -> reg21",
      "75280 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75283 PUT      reg21[0] = reg24",
      "75287 PUT      reg21[1] = 33",
      "75291 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75295 SET      reg2 -> reg19",
      "75298 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75301 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "75304 NEW ARRAY      2 -> reg24",
      "75307 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75310 PUT      reg24[0] = reg27",
      "75314 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "75317 PUT      reg24[1] = reg21",
      "75321 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "75325 SET      reg2 -> reg19",
      "75328 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75331 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75334 NEW ARRAY      2 -> reg21",
      "75337 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "75340 PUT      reg21[0] = reg24",
      "75344 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75347 PUT      reg21[1] = reg27",
      "75351 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75355 SET      reg2 -> reg17",
      "75358 SET MEMORY ELEMENT IF INIT      2486 = reg17",
      "75361 JUMP      75370",
      "75370 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75373 NEW ARRAY      2 -> reg19",
      "75376 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75379 PUT      reg19[0] = reg21",
      "75383 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75386 NEW ARRAY      2 -> reg29",
      "75389 NEW ARRAY      2 -> reg35",
      "75392 PUT      reg35[0] = 0",
      "75396 PUSH MEMORY ELEMENT IF INIT      2481 -> reg36",
      "75399 GET      reg36[charCodeAt] -> reg37",
      "75405 NEW ARRAY      1 -> reg39",
      "75408 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75411 ADD      reg387-> reg40",
      "75415 PUT      reg39[0] = reg40",
      "75419 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg39",
      "75423 SET      reg2 -> reg33",
      "75426 PUT      reg35[1] = reg33",
      "75430 PUT      reg29[0] = reg35",
      "75434 PUT      reg29[1] = 56",
      "75438 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75442 SET      reg2 -> reg21",
      "75445 PUT      reg19[1] = reg21",
      "75449 CALL FUNCTION      PTR: reg24 MEM: reg19",
      "75453 SET      reg2 -> reg17",
      "75456 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75459 JUMP      75468",
      "75468 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75471 NEW ARRAY      2 -> reg24",
      "75474 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75477 PUT      reg24[0] = reg21",
      "75481 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75484 NEW ARRAY      2 -> reg35",
      "75487 NEW ARRAY      2 -> reg37",
      "75490 PUT      reg37[0] = 0",
      "75494 PUSH MEMORY ELEMENT IF INIT      2481 -> reg29",
      "75497 GET      reg29[charCodeAt] -> reg39",
      "75503 NEW ARRAY      1 -> reg40",
      "75506 PUSH MEMORY ELEMENT IF INIT      2491 -> reg41",
      "75509 ADD      reg416-> reg42",
      "75513 PUT      reg40[0] = reg42",
      "75517 CALL FUNCTION      OBJ: reg29 FUNC: reg39 ARGS: reg40",
      "75521 SET      reg2 -> reg27",
      "75524 PUT      reg37[1] = reg27",
      "75528 PUT      reg35[0] = reg37",
      "75532 PUT      reg35[1] = 48",
      "75536 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "75540 SET      reg2 -> reg21",
      "75543 PUT      reg24[1] = reg21",
      "75547 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "75551 SET      reg2 -> reg17",
      "75554 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75557 JUMP      75566",
      "75566 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75569 NEW ARRAY      2 -> reg21",
      "75572 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "75575 PUT      reg21[0] = reg19",
      "75579 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75582 NEW ARRAY      2 -> reg41",
      "75585 NEW ARRAY      2 -> reg33",
      "75588 PUT      reg33[0] = 0",
      "75592 PUSH MEMORY ELEMENT IF INIT      2481 -> reg35",
      "75595 GET      reg35[charCodeAt] -> reg39",
      "75601 NEW ARRAY      1 -> reg40",
      "75604 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75607 ADD      reg385-> reg42",
      "75611 PUT      reg40[0] = reg42",
      "75615 CALL FUNCTION      OBJ: reg35 FUNC: reg39 ARGS: reg40",
      "75619 SET      reg2 -> reg37",
      "75622 PUT      reg33[1] = reg37",
      "75626 PUT      reg41[0] = reg33",
      "75630 PUT      reg41[1] = 40",
      "75634 CALL FUNCTION      PTR: reg27 MEM: reg41",
      "75638 SET      reg2 -> reg19",
      "75641 PUT      reg21[1] = reg19",
      "75645 CALL FUNCTION      PTR: reg24 MEM: reg21",
      "75649 SET      reg2 -> reg17",
      "75652 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75655 JUMP      75664",
      "75664 PUSH MEMORY ELEMENT IF INIT      2115 -> reg33",
      "75667 NEW ARRAY      2 -> reg19",
      "75670 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75673 PUT      reg19[0] = reg21",
      "75677 PUSH MEMORY ELEMENT IF INIT      2114 -> reg21",
      "75680 NEW ARRAY      2 -> reg24",
      "75683 NEW ARRAY      2 -> reg40",
      "75686 PUT      reg40[0] = 0",
      "75690 PUSH MEMORY ELEMENT IF INIT      2481 -> reg38",
      "75693 GET      reg38[charCodeAt] -> reg39",
      "75699 NEW ARRAY      1 -> reg41",
      "75702 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "75705 ADD      reg434-> reg42",
      "75709 PUT      reg41[0] = reg42",
      "75713 CALL FUNCTION      OBJ: reg38 FUNC: reg39 ARGS: reg41",
      "75717 SET      reg2 -> reg27",
      "75720 PUT      reg40[1] = reg27",
      "75724 PUT      reg24[0] = reg40",
      "75728 PUT      reg24[1] = 32",
      "75732 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "75736 SET      reg2 -> reg37",
      "75739 PUT      reg19[1] = reg37",
      "75743 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "75747 SET      reg2 -> reg17",
      "75750 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75753 JUMP      75762",
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "75169": [
      "75169 EQUAL      reg4 == 9 -> reg17",
      "75173 JUMP IF FALSE      reg17 TO: 75363 | 75176"
  ],
  "75176": [
      "75176 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75179 NEW ARRAY      2 -> reg21",
      "75182 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75185 PUT      reg21[0] = reg24",
      "75189 NEW ARRAY      2 -> reg24",
      "75192 PUT      reg24[0] = 0",
      "75196 PUSH MEMORY ELEMENT IF INIT      2481 -> reg25",
      "75199 GET      reg25[charCodeAt] -> reg33",
      "75205 NEW ARRAY      1 -> reg29",
      "75208 PUSH MEMORY ELEMENT IF INIT      2491 -> reg35",
      "75211 ADD      reg358-> reg36",
      "75215 PUT      reg29[0] = reg36",
      "75219 CALL FUNCTION      OBJ: reg25 FUNC: reg33 ARGS: reg29",
      "75223 SET      reg2 -> reg27",
      "75226 PUT      reg24[1] = reg27",
      "75230 PUT      reg21[1] = reg24",
      "75234 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75238 SET      reg2 -> reg19",
      "75241 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75244 PUSH MEMORY ELEMENT IF INIT      2112 -> reg19",
      "75247 NEW ARRAY      2 -> reg21",
      "75250 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75253 PUT      reg21[0] = reg24",
      "75257 PUSH MEMORY ELEMENT IF INIT      2490 -> reg24",
      "75260 PUT      reg21[1] = reg24",
      "75264 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75268 SET      reg2 -> reg17",
      "75271 SET MEMORY ELEMENT IF INIT      2488 = reg17",
      "75274 PUSH MEMORY ELEMENT IF INIT      2113 -> reg17",
      "75277 NEW ARRAY      2 -> reg21",
      "75280 PUSH MEMORY ELEMENT IF INIT      2488 -> reg24",
      "75283 PUT      reg21[0] = reg24",
      "75287 PUT      reg21[1] = 33",
      "75291 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75295 SET      reg2 -> reg19",
      "75298 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75301 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "75304 NEW ARRAY      2 -> reg24",
      "75307 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75310 PUT      reg24[0] = reg27",
      "75314 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "75317 PUT      reg24[1] = reg21",
      "75321 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "75325 SET      reg2 -> reg19",
      "75328 SET MEMORY ELEMENT IF INIT      2488 = reg19",
      "75331 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75334 NEW ARRAY      2 -> reg21",
      "75337 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "75340 PUT      reg21[0] = reg24",
      "75344 PUSH MEMORY ELEMENT IF INIT      2488 -> reg27",
      "75347 PUT      reg21[1] = reg27",
      "75351 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75355 SET      reg2 -> reg17",
      "75358 SET MEMORY ELEMENT IF INIT      2486 = reg17",
      "75361 JUMP      75370",
      "75370 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75373 NEW ARRAY      2 -> reg19",
      "75376 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75379 PUT      reg19[0] = reg21",
      "75383 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75386 NEW ARRAY      2 -> reg29",
      "75389 NEW ARRAY      2 -> reg35",
      "75392 PUT      reg35[0] = 0",
      "75396 PUSH MEMORY ELEMENT IF INIT      2481 -> reg36",
      "75399 GET      reg36[charCodeAt] -> reg37",
      "75405 NEW ARRAY      1 -> reg39",
      "75408 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75411 ADD      reg387-> reg40",
      "75415 PUT      reg39[0] = reg40",
      "75419 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg39",
      "75423 SET      reg2 -> reg33",
      "75426 PUT      reg35[1] = reg33",
      "75430 PUT      reg29[0] = reg35",
      "75434 PUT      reg29[1] = 56",
      "75438 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75442 SET      reg2 -> reg21",
      "75445 PUT      reg19[1] = reg21",
      "75449 CALL FUNCTION      PTR: reg24 MEM: reg19",
      "75453 SET      reg2 -> reg17",
      "75456 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75459 JUMP      75468",
      "75468 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75471 NEW ARRAY      2 -> reg24",
      "75474 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75477 PUT      reg24[0] = reg21",
      "75481 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75484 NEW ARRAY      2 -> reg35",
      "75487 NEW ARRAY      2 -> reg37",
      "75490 PUT      reg37[0] = 0",
      "75494 PUSH MEMORY ELEMENT IF INIT      2481 -> reg29",
      "75497 GET      reg29[charCodeAt] -> reg39",
      "75503 NEW ARRAY      1 -> reg40",
      "75506 PUSH MEMORY ELEMENT IF INIT      2491 -> reg41",
      "75509 ADD      reg416-> reg42",
      "75513 PUT      reg40[0] = reg42",
      "75517 CALL FUNCTION      OBJ: reg29 FUNC: reg39 ARGS: reg40",
      "75521 SET      reg2 -> reg27",
      "75524 PUT      reg37[1] = reg27",
      "75528 PUT      reg35[0] = reg37",
      "75532 PUT      reg35[1] = 48",
      "75536 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "75540 SET      reg2 -> reg21",
      "75543 PUT      reg24[1] = reg21",
      "75547 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "75551 SET      reg2 -> reg17",
      "75554 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75557 JUMP      75566",
      "75566 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75569 NEW ARRAY      2 -> reg21",
      "75572 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "75575 PUT      reg21[0] = reg19",
      "75579 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75582 NEW ARRAY      2 -> reg41",
      "75585 NEW ARRAY      2 -> reg33",
      "75588 PUT      reg33[0] = 0",
      "75592 PUSH MEMORY ELEMENT IF INIT      2481 -> reg35",
      "75595 GET      reg35[charCodeAt] -> reg39",
      "75601 NEW ARRAY      1 -> reg40",
      "75604 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75607 ADD      reg385-> reg42",
      "75611 PUT      reg40[0] = reg42",
      "75615 CALL FUNCTION      OBJ: reg35 FUNC: reg39 ARGS: reg40",
      "75619 SET      reg2 -> reg37",
      "75622 PUT      reg33[1] = reg37",
      "75626 PUT      reg41[0] = reg33",
      "75630 PUT      reg41[1] = 40",
      "75634 CALL FUNCTION      PTR: reg27 MEM: reg41",
      "75638 SET      reg2 -> reg19",
      "75641 PUT      reg21[1] = reg19",
      "75645 CALL FUNCTION      PTR: reg24 MEM: reg21",
      "75649 SET      reg2 -> reg17",
      "75652 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75655 JUMP      75664",
      "75664 PUSH MEMORY ELEMENT IF INIT      2115 -> reg33",
      "75667 NEW ARRAY      2 -> reg19",
      "75670 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75673 PUT      reg19[0] = reg21",
      "75677 PUSH MEMORY ELEMENT IF INIT      2114 -> reg21",
      "75680 NEW ARRAY      2 -> reg24",
      "75683 NEW ARRAY      2 -> reg40",
      "75686 PUT      reg40[0] = 0",
      "75690 PUSH MEMORY ELEMENT IF INIT      2481 -> reg38",
      "75693 GET      reg38[charCodeAt] -> reg39",
      "75699 NEW ARRAY      1 -> reg41",
      "75702 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "75705 ADD      reg434-> reg42",
      "75709 PUT      reg41[0] = reg42",
      "75713 CALL FUNCTION      OBJ: reg38 FUNC: reg39 ARGS: reg41",
      "75717 SET      reg2 -> reg27",
      "75720 PUT      reg40[1] = reg27",
      "75724 PUT      reg24[0] = reg40",
      "75728 PUT      reg24[1] = 32",
      "75732 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "75736 SET      reg2 -> reg37",
      "75739 PUT      reg19[1] = reg37",
      "75743 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "75747 SET      reg2 -> reg17",
      "75750 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75753 JUMP      75762",
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "75363": [
      "75363 EQUAL      reg4 == 8 -> reg17",
      "75367 JUMP IF FALSE      reg17 TO: 75461 | 75370"
  ],
  "75370": [
      "75370 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75373 NEW ARRAY      2 -> reg19",
      "75376 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75379 PUT      reg19[0] = reg21",
      "75383 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75386 NEW ARRAY      2 -> reg29",
      "75389 NEW ARRAY      2 -> reg35",
      "75392 PUT      reg35[0] = 0",
      "75396 PUSH MEMORY ELEMENT IF INIT      2481 -> reg36",
      "75399 GET      reg36[charCodeAt] -> reg37",
      "75405 NEW ARRAY      1 -> reg39",
      "75408 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75411 ADD      reg387-> reg40",
      "75415 PUT      reg39[0] = reg40",
      "75419 CALL FUNCTION      OBJ: reg36 FUNC: reg37 ARGS: reg39",
      "75423 SET      reg2 -> reg33",
      "75426 PUT      reg35[1] = reg33",
      "75430 PUT      reg29[0] = reg35",
      "75434 PUT      reg29[1] = 56",
      "75438 CALL FUNCTION      PTR: reg27 MEM: reg29",
      "75442 SET      reg2 -> reg21",
      "75445 PUT      reg19[1] = reg21",
      "75449 CALL FUNCTION      PTR: reg24 MEM: reg19",
      "75453 SET      reg2 -> reg17",
      "75456 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75459 JUMP      75468",
      "75468 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75471 NEW ARRAY      2 -> reg24",
      "75474 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75477 PUT      reg24[0] = reg21",
      "75481 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75484 NEW ARRAY      2 -> reg35",
      "75487 NEW ARRAY      2 -> reg37",
      "75490 PUT      reg37[0] = 0",
      "75494 PUSH MEMORY ELEMENT IF INIT      2481 -> reg29",
      "75497 GET      reg29[charCodeAt] -> reg39",
      "75503 NEW ARRAY      1 -> reg40",
      "75506 PUSH MEMORY ELEMENT IF INIT      2491 -> reg41",
      "75509 ADD      reg416-> reg42",
      "75513 PUT      reg40[0] = reg42",
      "75517 CALL FUNCTION      OBJ: reg29 FUNC: reg39 ARGS: reg40",
      "75521 SET      reg2 -> reg27",
      "75524 PUT      reg37[1] = reg27",
      "75528 PUT      reg35[0] = reg37",
      "75532 PUT      reg35[1] = 48",
      "75536 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "75540 SET      reg2 -> reg21",
      "75543 PUT      reg24[1] = reg21",
      "75547 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "75551 SET      reg2 -> reg17",
      "75554 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75557 JUMP      75566",
      "75566 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75569 NEW ARRAY      2 -> reg21",
      "75572 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "75575 PUT      reg21[0] = reg19",
      "75579 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75582 NEW ARRAY      2 -> reg41",
      "75585 NEW ARRAY      2 -> reg33",
      "75588 PUT      reg33[0] = 0",
      "75592 PUSH MEMORY ELEMENT IF INIT      2481 -> reg35",
      "75595 GET      reg35[charCodeAt] -> reg39",
      "75601 NEW ARRAY      1 -> reg40",
      "75604 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75607 ADD      reg385-> reg42",
      "75611 PUT      reg40[0] = reg42",
      "75615 CALL FUNCTION      OBJ: reg35 FUNC: reg39 ARGS: reg40",
      "75619 SET      reg2 -> reg37",
      "75622 PUT      reg33[1] = reg37",
      "75626 PUT      reg41[0] = reg33",
      "75630 PUT      reg41[1] = 40",
      "75634 CALL FUNCTION      PTR: reg27 MEM: reg41",
      "75638 SET      reg2 -> reg19",
      "75641 PUT      reg21[1] = reg19",
      "75645 CALL FUNCTION      PTR: reg24 MEM: reg21",
      "75649 SET      reg2 -> reg17",
      "75652 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75655 JUMP      75664",
      "75664 PUSH MEMORY ELEMENT IF INIT      2115 -> reg33",
      "75667 NEW ARRAY      2 -> reg19",
      "75670 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75673 PUT      reg19[0] = reg21",
      "75677 PUSH MEMORY ELEMENT IF INIT      2114 -> reg21",
      "75680 NEW ARRAY      2 -> reg24",
      "75683 NEW ARRAY      2 -> reg40",
      "75686 PUT      reg40[0] = 0",
      "75690 PUSH MEMORY ELEMENT IF INIT      2481 -> reg38",
      "75693 GET      reg38[charCodeAt] -> reg39",
      "75699 NEW ARRAY      1 -> reg41",
      "75702 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "75705 ADD      reg434-> reg42",
      "75709 PUT      reg41[0] = reg42",
      "75713 CALL FUNCTION      OBJ: reg38 FUNC: reg39 ARGS: reg41",
      "75717 SET      reg2 -> reg27",
      "75720 PUT      reg40[1] = reg27",
      "75724 PUT      reg24[0] = reg40",
      "75728 PUT      reg24[1] = 32",
      "75732 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "75736 SET      reg2 -> reg37",
      "75739 PUT      reg19[1] = reg37",
      "75743 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "75747 SET      reg2 -> reg17",
      "75750 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75753 JUMP      75762",
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "75461": [
      "75461 EQUAL      reg4 == 7 -> reg17",
      "75465 JUMP IF FALSE      reg17 TO: 75559 | 75468"
  ],
  "75468": [
      "75468 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75471 NEW ARRAY      2 -> reg24",
      "75474 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75477 PUT      reg24[0] = reg21",
      "75481 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75484 NEW ARRAY      2 -> reg35",
      "75487 NEW ARRAY      2 -> reg37",
      "75490 PUT      reg37[0] = 0",
      "75494 PUSH MEMORY ELEMENT IF INIT      2481 -> reg29",
      "75497 GET      reg29[charCodeAt] -> reg39",
      "75503 NEW ARRAY      1 -> reg40",
      "75506 PUSH MEMORY ELEMENT IF INIT      2491 -> reg41",
      "75509 ADD      reg416-> reg42",
      "75513 PUT      reg40[0] = reg42",
      "75517 CALL FUNCTION      OBJ: reg29 FUNC: reg39 ARGS: reg40",
      "75521 SET      reg2 -> reg27",
      "75524 PUT      reg37[1] = reg27",
      "75528 PUT      reg35[0] = reg37",
      "75532 PUT      reg35[1] = 48",
      "75536 CALL FUNCTION      PTR: reg33 MEM: reg35",
      "75540 SET      reg2 -> reg21",
      "75543 PUT      reg24[1] = reg21",
      "75547 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "75551 SET      reg2 -> reg17",
      "75554 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75557 JUMP      75566",
      "75566 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75569 NEW ARRAY      2 -> reg21",
      "75572 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "75575 PUT      reg21[0] = reg19",
      "75579 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75582 NEW ARRAY      2 -> reg41",
      "75585 NEW ARRAY      2 -> reg33",
      "75588 PUT      reg33[0] = 0",
      "75592 PUSH MEMORY ELEMENT IF INIT      2481 -> reg35",
      "75595 GET      reg35[charCodeAt] -> reg39",
      "75601 NEW ARRAY      1 -> reg40",
      "75604 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75607 ADD      reg385-> reg42",
      "75611 PUT      reg40[0] = reg42",
      "75615 CALL FUNCTION      OBJ: reg35 FUNC: reg39 ARGS: reg40",
      "75619 SET      reg2 -> reg37",
      "75622 PUT      reg33[1] = reg37",
      "75626 PUT      reg41[0] = reg33",
      "75630 PUT      reg41[1] = 40",
      "75634 CALL FUNCTION      PTR: reg27 MEM: reg41",
      "75638 SET      reg2 -> reg19",
      "75641 PUT      reg21[1] = reg19",
      "75645 CALL FUNCTION      PTR: reg24 MEM: reg21",
      "75649 SET      reg2 -> reg17",
      "75652 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75655 JUMP      75664",
      "75664 PUSH MEMORY ELEMENT IF INIT      2115 -> reg33",
      "75667 NEW ARRAY      2 -> reg19",
      "75670 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75673 PUT      reg19[0] = reg21",
      "75677 PUSH MEMORY ELEMENT IF INIT      2114 -> reg21",
      "75680 NEW ARRAY      2 -> reg24",
      "75683 NEW ARRAY      2 -> reg40",
      "75686 PUT      reg40[0] = 0",
      "75690 PUSH MEMORY ELEMENT IF INIT      2481 -> reg38",
      "75693 GET      reg38[charCodeAt] -> reg39",
      "75699 NEW ARRAY      1 -> reg41",
      "75702 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "75705 ADD      reg434-> reg42",
      "75709 PUT      reg41[0] = reg42",
      "75713 CALL FUNCTION      OBJ: reg38 FUNC: reg39 ARGS: reg41",
      "75717 SET      reg2 -> reg27",
      "75720 PUT      reg40[1] = reg27",
      "75724 PUT      reg24[0] = reg40",
      "75728 PUT      reg24[1] = 32",
      "75732 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "75736 SET      reg2 -> reg37",
      "75739 PUT      reg19[1] = reg37",
      "75743 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "75747 SET      reg2 -> reg17",
      "75750 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75753 JUMP      75762",
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "75559": [
      "75559 EQUAL      reg4 == 6 -> reg19",
      "75563 JUMP IF FALSE      reg19 TO: 75657 | 75566"
  ],
  "75566": [
      "75566 PUSH MEMORY ELEMENT IF INIT      2115 -> reg24",
      "75569 NEW ARRAY      2 -> reg21",
      "75572 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "75575 PUT      reg21[0] = reg19",
      "75579 PUSH MEMORY ELEMENT IF INIT      2114 -> reg27",
      "75582 NEW ARRAY      2 -> reg41",
      "75585 NEW ARRAY      2 -> reg33",
      "75588 PUT      reg33[0] = 0",
      "75592 PUSH MEMORY ELEMENT IF INIT      2481 -> reg35",
      "75595 GET      reg35[charCodeAt] -> reg39",
      "75601 NEW ARRAY      1 -> reg40",
      "75604 PUSH MEMORY ELEMENT IF INIT      2491 -> reg38",
      "75607 ADD      reg385-> reg42",
      "75611 PUT      reg40[0] = reg42",
      "75615 CALL FUNCTION      OBJ: reg35 FUNC: reg39 ARGS: reg40",
      "75619 SET      reg2 -> reg37",
      "75622 PUT      reg33[1] = reg37",
      "75626 PUT      reg41[0] = reg33",
      "75630 PUT      reg41[1] = 40",
      "75634 CALL FUNCTION      PTR: reg27 MEM: reg41",
      "75638 SET      reg2 -> reg19",
      "75641 PUT      reg21[1] = reg19",
      "75645 CALL FUNCTION      PTR: reg24 MEM: reg21",
      "75649 SET      reg2 -> reg17",
      "75652 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75655 JUMP      75664",
      "75664 PUSH MEMORY ELEMENT IF INIT      2115 -> reg33",
      "75667 NEW ARRAY      2 -> reg19",
      "75670 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75673 PUT      reg19[0] = reg21",
      "75677 PUSH MEMORY ELEMENT IF INIT      2114 -> reg21",
      "75680 NEW ARRAY      2 -> reg24",
      "75683 NEW ARRAY      2 -> reg40",
      "75686 PUT      reg40[0] = 0",
      "75690 PUSH MEMORY ELEMENT IF INIT      2481 -> reg38",
      "75693 GET      reg38[charCodeAt] -> reg39",
      "75699 NEW ARRAY      1 -> reg41",
      "75702 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "75705 ADD      reg434-> reg42",
      "75709 PUT      reg41[0] = reg42",
      "75713 CALL FUNCTION      OBJ: reg38 FUNC: reg39 ARGS: reg41",
      "75717 SET      reg2 -> reg27",
      "75720 PUT      reg40[1] = reg27",
      "75724 PUT      reg24[0] = reg40",
      "75728 PUT      reg24[1] = 32",
      "75732 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "75736 SET      reg2 -> reg37",
      "75739 PUT      reg19[1] = reg37",
      "75743 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "75747 SET      reg2 -> reg17",
      "75750 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75753 JUMP      75762",
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "75657": [
      "75657 EQUAL      reg4 == 5 -> reg17",
      "75661 JUMP IF FALSE      reg17 TO: 75755 | 75664"
  ],
  "75664": [
      "75664 PUSH MEMORY ELEMENT IF INIT      2115 -> reg33",
      "75667 NEW ARRAY      2 -> reg19",
      "75670 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75673 PUT      reg19[0] = reg21",
      "75677 PUSH MEMORY ELEMENT IF INIT      2114 -> reg21",
      "75680 NEW ARRAY      2 -> reg24",
      "75683 NEW ARRAY      2 -> reg40",
      "75686 PUT      reg40[0] = 0",
      "75690 PUSH MEMORY ELEMENT IF INIT      2481 -> reg38",
      "75693 GET      reg38[charCodeAt] -> reg39",
      "75699 NEW ARRAY      1 -> reg41",
      "75702 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "75705 ADD      reg434-> reg42",
      "75709 PUT      reg41[0] = reg42",
      "75713 CALL FUNCTION      OBJ: reg38 FUNC: reg39 ARGS: reg41",
      "75717 SET      reg2 -> reg27",
      "75720 PUT      reg40[1] = reg27",
      "75724 PUT      reg24[0] = reg40",
      "75728 PUT      reg24[1] = 32",
      "75732 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "75736 SET      reg2 -> reg37",
      "75739 PUT      reg19[1] = reg37",
      "75743 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "75747 SET      reg2 -> reg17",
      "75750 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75753 JUMP      75762",
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "75755": [
      "75755 EQUAL      reg4 == 4 -> reg17",
      "75759 JUMP IF FALSE      reg17 TO: 75853 | 75762"
  ],
  "75762": [
      "75762 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75765 NEW ARRAY      2 -> reg21",
      "75768 PUSH MEMORY ELEMENT IF INIT      2487 -> reg39",
      "75771 PUT      reg21[0] = reg39",
      "75775 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75778 NEW ARRAY      2 -> reg37",
      "75781 NEW ARRAY      2 -> reg33",
      "75784 PUT      reg33[0] = 0",
      "75788 PUSH MEMORY ELEMENT IF INIT      2481 -> reg39",
      "75791 GET      reg39[charCodeAt] -> reg43",
      "75797 NEW ARRAY      1 -> reg41",
      "75800 PUSH MEMORY ELEMENT IF INIT      2491 -> reg44",
      "75803 ADD      reg443-> reg42",
      "75807 PUT      reg41[0] = reg42",
      "75811 CALL FUNCTION      OBJ: reg39 FUNC: reg43 ARGS: reg41",
      "75815 SET      reg2 -> reg40",
      "75818 PUT      reg33[1] = reg40",
      "75822 PUT      reg37[0] = reg33",
      "75826 PUT      reg37[1] = 24",
      "75830 CALL FUNCTION      PTR: reg24 MEM: reg37",
      "75834 SET      reg2 -> reg27",
      "75837 PUT      reg21[1] = reg27",
      "75841 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "75845 SET      reg2 -> reg17",
      "75848 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "75851 JUMP      75860",
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "75853": [
      "75853 EQUAL      reg4 == 3 -> reg17",
      "75857 JUMP IF FALSE      reg17 TO: 75951 | 75860"
  ],
  "75860": [
      "75860 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "75863 NEW ARRAY      2 -> reg21",
      "75866 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "75869 PUT      reg21[0] = reg24",
      "75873 PUSH MEMORY ELEMENT IF INIT      2114 -> reg24",
      "75876 NEW ARRAY      2 -> reg40",
      "75879 NEW ARRAY      2 -> reg27",
      "75882 PUT      reg27[0] = 0",
      "75886 PUSH MEMORY ELEMENT IF INIT      2481 -> reg41",
      "75889 GET      reg41[charCodeAt] -> reg45",
      "75895 NEW ARRAY      1 -> reg43",
      "75898 PUSH MEMORY ELEMENT IF INIT      2491 -> reg42",
      "75901 ADD      reg422-> reg46",
      "75905 PUT      reg43[0] = reg46",
      "75909 CALL FUNCTION      OBJ: reg41 FUNC: reg45 ARGS: reg43",
      "75913 SET      reg2 -> reg33",
      "75916 PUT      reg27[1] = reg33",
      "75920 PUT      reg40[0] = reg27",
      "75924 PUT      reg40[1] = 16",
      "75928 CALL FUNCTION      PTR: reg24 MEM: reg40",
      "75932 SET      reg2 -> reg37",
      "75935 PUT      reg21[1] = reg37",
      "75939 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "75943 SET      reg2 -> reg19",
      "75946 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "75949 JUMP      75958",
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "75951": [
      "75951 EQUAL      reg4 == 2 -> reg21",
      "75955 JUMP IF FALSE      reg21 TO: 76049 | 75958"
  ],
  "75958": [
      "75958 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "75961 NEW ARRAY      2 -> reg24",
      "75964 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "75967 PUT      reg24[0] = reg21",
      "75971 PUSH MEMORY ELEMENT IF INIT      2114 -> reg33",
      "75974 NEW ARRAY      2 -> reg27",
      "75977 NEW ARRAY      2 -> reg37",
      "75980 PUT      reg37[0] = 0",
      "75984 PUSH MEMORY ELEMENT IF INIT      2481 -> reg42",
      "75987 GET      reg42[charCodeAt] -> reg43",
      "75993 NEW ARRAY      1 -> reg44",
      "75996 PUSH MEMORY ELEMENT IF INIT      2491 -> reg45",
      "75999 ADD      reg451-> reg47",
      "76003 PUT      reg44[0] = reg47",
      "76007 CALL FUNCTION      OBJ: reg42 FUNC: reg43 ARGS: reg44",
      "76011 SET      reg2 -> reg40",
      "76014 PUT      reg37[1] = reg40",
      "76018 PUT      reg27[0] = reg37",
      "76022 PUT      reg27[1] = 8",
      "76026 CALL FUNCTION      PTR: reg33 MEM: reg27",
      "76030 SET      reg2 -> reg21",
      "76033 PUT      reg24[1] = reg21",
      "76037 CALL FUNCTION      PTR: reg19 MEM: reg24",
      "76041 SET      reg2 -> reg17",
      "76044 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76047 JUMP      76056",
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "76049": [
      "76049 EQUAL      reg4 == 1 -> reg17",
      "76053 JUMP IF FALSE      reg17 TO: 76237 | 76056"
  ],
  "76056": [
      "76056 PUSH MEMORY ELEMENT IF INIT      2115 -> reg19",
      "76059 NEW ARRAY      2 -> reg17",
      "76062 PUSH MEMORY ELEMENT IF INIT      2487 -> reg27",
      "76065 PUT      reg17[0] = reg27",
      "76069 NEW ARRAY      2 -> reg21",
      "76072 PUT      reg21[0] = 0",
      "76076 PUSH MEMORY ELEMENT IF INIT      2481 -> reg27",
      "76079 GET      reg27[charCodeAt] -> reg33",
      "76085 NEW ARRAY      1 -> reg40",
      "76088 PUSH MEMORY ELEMENT IF INIT      2491 -> reg43",
      "76091 PUT      reg40[0] = reg43",
      "76095 CALL FUNCTION      OBJ: reg27 FUNC: reg33 ARGS: reg40",
      "76099 SET      reg2 -> reg37",
      "76102 PUT      reg21[1] = reg37",
      "76106 PUT      reg17[1] = reg21",
      "76110 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76114 SET      reg2 -> reg24",
      "76117 SET MEMORY ELEMENT IF INIT      2487 = reg24",
      "76120 PUSH MEMORY ELEMENT IF INIT      2112 -> reg33",
      "76123 NEW ARRAY      2 -> reg19",
      "76126 PUSH MEMORY ELEMENT IF INIT      2487 -> reg40",
      "76129 PUT      reg19[0] = reg40",
      "76133 PUSH MEMORY ELEMENT IF INIT      2489 -> reg21",
      "76136 PUT      reg19[1] = reg21",
      "76140 CALL FUNCTION      PTR: reg33 MEM: reg19",
      "76144 SET      reg2 -> reg17",
      "76147 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76150 PUSH MEMORY ELEMENT IF INIT      2113 -> reg19",
      "76153 NEW ARRAY      2 -> reg21",
      "76156 PUSH MEMORY ELEMENT IF INIT      2487 -> reg24",
      "76159 PUT      reg21[0] = reg24",
      "76163 PUT      reg21[1] = 31",
      "76167 CALL FUNCTION      PTR: reg19 MEM: reg21",
      "76171 SET      reg2 -> reg17",
      "76174 SET MEMORY ELEMENT IF INIT      2487 = reg17",
      "76177 PUSH MEMORY ELEMENT IF INIT      2112 -> reg17",
      "76180 NEW ARRAY      2 -> reg24",
      "76183 PUSH MEMORY ELEMENT IF INIT      2487 -> reg21",
      "76186 PUT      reg24[0] = reg21",
      "76190 PUSH MEMORY ELEMENT IF INIT      2490 -> reg21",
      "76193 PUT      reg24[1] = reg21",
      "76197 CALL FUNCTION      PTR: reg17 MEM: reg24",
      "76201 SET      reg2 -> reg19",
      "76204 SET MEMORY ELEMENT IF INIT      2487 = reg19",
      "76207 PUSH MEMORY ELEMENT IF INIT      2115 -> reg21",
      "76210 NEW ARRAY      2 -> reg24",
      "76213 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76216 PUT      reg24[0] = reg19",
      "76220 PUSH MEMORY ELEMENT IF INIT      2487 -> reg19",
      "76223 PUT      reg24[1] = reg19",
      "76227 CALL FUNCTION      PTR: reg21 MEM: reg24",
      "76231 SET      reg2 -> reg17",
      "76234 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "76237": [
      "76237 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76240 NEW ARRAY      2 -> reg19",
      "76243 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76246 PUT      reg19[0] = reg21",
      "76250 NEW ARRAY      2 -> reg33",
      "76253 PUT      reg33[0] = 0",
      "76257 PUSH MEMORY ELEMENT IF INIT      2481 -> reg21",
      "76260 GET      reg21[length] -> reg24",
      "76266 PUT      reg33[1] = reg24",
      "76270 PUT      reg19[1] = reg33",
      "76274 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76278 SET      reg2 -> reg4",
      "76281 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76284 PUSH MEMORY ELEMENT IF INIT      2115 -> reg17",
      "76287 NEW ARRAY      2 -> reg4",
      "76290 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76293 PUT      reg4[0] = reg21",
      "76297 NEW ARRAY      2 -> reg21",
      "76300 PUT      reg21[0] = 0",
      "76304 PUSH MEMORY ELEMENT IF INIT      2481 -> reg33",
      "76307 GET      reg33[length] -> reg24",
      "76313 PUT      reg21[1] = reg24",
      "76317 PUT      reg4[1] = reg21",
      "76321 CALL FUNCTION      PTR: reg17 MEM: reg4",
      "76325 SET      reg2 -> reg19",
      "76328 SET MEMORY ELEMENT IF INIT      2486 = reg19",
      "76331 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76334 NEW ARRAY      2 -> reg19",
      "76337 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76340 PUT      reg19[0] = reg24",
      "76344 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76347 PUT      reg19[1] = reg21",
      "76351 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76355 SET      reg2 -> reg4",
      "76358 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76361 PUSH MEMORY ELEMENT IF INIT      2111 -> reg19",
      "76364 NEW ARRAY      2 -> reg17",
      "76367 PUSH MEMORY ELEMENT IF INIT      2486 -> reg37",
      "76370 PUT      reg17[0] = reg37",
      "76374 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76377 PUT      reg17[1] = reg24",
      "76381 CALL FUNCTION      PTR: reg19 MEM: reg17",
      "76385 SET      reg2 -> reg4",
      "76388 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76391 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76394 NEW ARRAY      1 -> reg21",
      "76397 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76400 PUT      reg21[0] = reg24",
      "76404 CALL FUNCTION      PTR: reg17 MEM: reg21",
      "76408 SET      reg2 -> reg4",
      "76411 SET MEMORY ELEMENT IF INIT      2485 = reg4",
      "76414 PUSH MEMORY ELEMENT IF INIT      2116 -> reg17",
      "76417 NEW ARRAY      1 -> reg19",
      "76420 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76423 PUT      reg19[0] = reg21",
      "76427 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76431 SET      reg2 -> reg4",
      "76434 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76437 PUSH MEMORY ELEMENT IF INIT      2111 -> reg4",
      "76440 NEW ARRAY      2 -> reg19",
      "76443 PUSH MEMORY ELEMENT IF INIT      2485 -> reg21",
      "76446 PUT      reg19[0] = reg21",
      "76450 PUSH MEMORY ELEMENT IF INIT      2486 -> reg24",
      "76453 PUT      reg19[1] = reg24",
      "76457 CALL FUNCTION      PTR: reg4 MEM: reg19",
      "76461 SET      reg2 -> reg17",
      "76464 SET MEMORY ELEMENT IF INIT      2485 = reg17",
      "76467 PUSH MEMORY ELEMENT IF INIT      2111 -> reg17",
      "76470 NEW ARRAY      2 -> reg19",
      "76473 PUSH MEMORY ELEMENT IF INIT      2486 -> reg21",
      "76476 PUT      reg19[0] = reg21",
      "76480 PUSH MEMORY ELEMENT IF INIT      2485 -> reg24",
      "76483 PUT      reg19[1] = reg24",
      "76487 CALL FUNCTION      PTR: reg17 MEM: reg19",
      "76491 SET      reg2 -> reg4",
      "76494 SET MEMORY ELEMENT IF INIT      2486 = reg4",
      "76497 PUSH MEMORY ELEMENT IF INIT      2485 -> reg19",
      "76500 GET      reg19[0] -> reg21",
      "76504 USHIFT      reg21 >>> 0 -> reg19",
      "76508 GET      reg19[toString] -> reg21",
      "76514 NEW ARRAY      1 -> reg33",
      "76517 PUT      reg33[0] = 16",
      "76521 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg33",
      "76525 SET      reg2 -> reg17",
      "76528 ADD      00000000NaN-> reg21",
      "76534 GET      reg21[slice] -> reg24",
      "76540 NEW ARRAY      1 -> reg33",
      "76543 SUBTRACT      0 - 8 -> reg37",
      "76547 PUT      reg33[0] = reg37",
      "76551 CALL FUNCTION      OBJ: reg21 FUNC: reg24 ARGS: reg33",
      "76555 SET      reg2 -> reg4",
      "76558 PUSH MEMORY ELEMENT IF INIT      2485 -> reg33",
      "76561 GET      reg33[1] -> reg40",
      "76565 USHIFT      reg40 >>> 0 -> reg33",
      "76569 GET      reg33[toString] -> reg43",
      "76575 NEW ARRAY      1 -> reg40",
      "76578 PUT      reg40[0] = 16",
      "76582 CALL FUNCTION      OBJ: reg33 FUNC: reg43 ARGS: reg40",
      "76586 SET      reg2 -> reg24",
      "76589 ADD      00000000NaN-> reg37",
      "76595 GET      reg37[slice] -> reg24",
      "76601 NEW ARRAY      1 -> reg40",
      "76604 SUBTRACT      0 - 8 -> reg44",
      "76608 PUT      reg40[0] = reg44",
      "76612 CALL FUNCTION      OBJ: reg37 FUNC: reg24 ARGS: reg40",
      "76616 SET      reg2 -> reg17",
      "76619 ADD      reg4NaN-> reg24",
      "76623 PUSH MEMORY ELEMENT IF INIT      2486 -> reg17",
      "76626 GET      reg17[0] -> reg43",
      "76630 USHIFT      reg43 >>> 0 -> reg17",
      "76634 GET      reg17[toString] -> reg43",
      "76640 NEW ARRAY      1 -> reg44",
      "76643 PUT      reg44[0] = 16",
      "76647 CALL FUNCTION      OBJ: reg17 FUNC: reg43 ARGS: reg44",
      "76651 SET      reg2 -> reg40",
      "76654 ADD      00000000NaN-> reg43",
      "76660 GET      reg43[slice] -> reg45",
      "76666 NEW ARRAY      1 -> reg40",
      "76669 SUBTRACT      0 - 8 -> reg46",
      "76673 PUT      reg40[0] = reg46",
      "76677 CALL FUNCTION      OBJ: reg43 FUNC: reg45 ARGS: reg40",
      "76681 SET      reg2 -> reg4",
      "76684 ADD      reg24NaN-> reg40",
      "76688 PUSH MEMORY ELEMENT IF INIT      2486 -> reg45",
      "76691 GET      reg45[1] -> reg47",
      "76695 USHIFT      reg47 >>> 0 -> reg45",
      "76699 GET      reg45[toString] -> reg46",
      "76705 NEW ARRAY      1 -> reg47",
      "76708 PUT      reg47[0] = 16",
      "76712 CALL FUNCTION      OBJ: reg45 FUNC: reg46 ARGS: reg47",
      "76716 SET      reg2 -> reg24",
      "76719 ADD      00000000NaN-> reg44",
      "76725 GET      reg44[slice] -> reg24",
      "76731 NEW ARRAY      1 -> reg46",
      "76734 SUBTRACT      0 - 8 -> reg47",
      "76738 PUT      reg46[0] = reg47",
      "76742 CALL FUNCTION      OBJ: reg44 FUNC: reg24 ARGS: reg46",
      "76746 SET      reg2 -> reg4",
      "76749 ADD      reg40NaN-> reg47",
      "76753 JUMP OR RETURN VAL      reg47"
  ],
  "77006": [
      "77006 PUSH MEMORY ELEMENT IF INIT      2118 -> reg4",
      "77009 GET      reg4[gcr] -> reg6",
      "77015 GET      reg6[hash] -> reg4",
      "77021 STRICT EQUAL      reg4 === 4dc16f73e1f51eaf272a99952dd50fff -> reg6",
      "77027 SET      reg6 -> reg5",
      "77030 JUMP IF FALSE      reg5 TO: 77057 | 77033"
  ],
  "77030": ["77030 JUMP IF FALSE      reg5 TO: 77057 | 77033"],
  "77033": [
      "77033 PUSH MEMORY ELEMENT IF INIT      2118 -> reg4",
      "77036 GET      reg4[sc] -> reg6",
      "77042 GET      reg6[hash] -> reg4",
      "77048 STRICT EQUAL      reg4 === f7c7f5b77fa73d362be310d56db94353 -> reg6",
      "77054 SET      reg6 -> reg5",
      "77057 JUMP IF FALSE      reg5 TO: 77084 | 77060"
  ],
  "77057": ["77057 JUMP IF FALSE      reg5 TO: 77084 | 77060"],
  "77060": [
      "77060 PUSH MEMORY ELEMENT IF INIT      2118 -> reg4",
      "77063 GET      reg4[sb] -> reg7",
      "77069 GET      reg7[hash] -> reg4",
      "77075 STRICT EQUAL      reg4 === df971413c9daa76e28d309b97c73ac01 -> reg6",
      "77081 SET      reg6 -> reg5",
      "77084 JUMP IF FALSE      reg5 TO: 77111 | 77087"
  ],
  "77084": ["77084 JUMP IF FALSE      reg5 TO: 77111 | 77087"],
  "77087": [
      "77087 PUSH MEMORY ELEMENT IF INIT      2118 -> reg6",
      "77090 GET      reg6[sv] -> reg4",
      "77096 GET      reg4[hash] -> reg6",
      "77102 STRICT EQUAL      reg6 === 7c6f38d42c9196af14924e1e0f64e6d3 -> reg4",
      "77108 SET      reg4 -> reg5",
      "77111 JUMP IF FALSE      reg5 TO: 77161 | 77114"
  ],
  "77111": ["77111 JUMP IF FALSE      reg5 TO: 77161 | 77114"],
  "77114": [
      "77114 PUSH MEMORY ELEMENT IF INIT      2118 -> reg6",
      "77117 PUT      reg6[type] = ab",
      "77125 GET WINDOW PROP      window -> reg4",
      "77130 PUT      reg4[webdriver] = true",
      "77136 SET MEMORY ELEMENT IF INIT      275 = true",
      "77139 PUSH MEMORY ELEMENT IF INIT      2079 -> reg5",
      "77142 NEW ARRAY      1 -> reg6",
      "77145 PUSH MEMORY ELEMENT IF INIT      2118 -> reg9",
      "77148 PUT      reg6[0] = reg9",
      "77152 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "77156 SET      reg2 -> reg4",
      "77159 JUMP      77161",
      "77161 JUMP      77171",
      "77171 SET I      null",
      "77173 JUMP OR RETURN"
  ],
  "77161": [
      "77161 JUMP      77171",
      "77171 SET I      null",
      "77173 JUMP OR RETURN"
  ],
  "77163": [
      "77163 SET I      null",
      "77165 PUSH F.K      -> reg4",
      "77167 VOID F",
      "77168 SET MEMORY ELEMENT      0 = reg4",
      "77171 SET I      null",
      "77173 JUMP OR RETURN"
  ],
  "77233": [
      "77233 INIT FUNCTION STATE      PTR: 77242 NAME:  LEN: 2 -> reg4",
      "77240 JUMP      77403",
      "77403 SET MEMORY ELEMENT IF INIT      2503 = reg4",
      "77406 INIT FUNCTION STATE      PTR: 77415 NAME:  LEN: 1 -> reg4",
      "77413 JUMP      77690",
      "77690 SET MEMORY ELEMENT IF INIT      2504 = reg4",
      "77693 INIT FUNCTION STATE      PTR: 77702 NAME:  LEN: 0 -> reg7",
      "77700 JUMP      78153",
      "78153 SET MEMORY ELEMENT IF INIT      2505 = reg7",
      "78156 INIT FUNCTION STATE      PTR: 78165 NAME:  LEN: 1 -> reg5",
      "78163 JUMP      78269",
      "78269 SET MEMORY ELEMENT IF INIT      2506 = reg5",
      "78272 INIT FUNCTION STATE      PTR: 78281 NAME:  LEN: 1 -> reg4",
      "78279 JUMP      78319",
      "78319 SET MEMORY ELEMENT IF INIT      2507 = reg4",
      "78322 EMPTY OBJECT      -> reg4",
      "78324 SET MEMORY ELEMENT IF INIT      2508 = reg4",
      "78327 PUSH MEMORY ELEMENT IF INIT      2508 -> reg5",
      "78330 GET WINDOW PROP      window -> reg4",
      "78335 GET      reg4[location] -> reg7",
      "78341 GET      reg7[origin] -> reg4",
      "78347 PUT      reg5[og] = reg4",
      "78353 PUSH MEMORY ELEMENT IF INIT      2508 -> reg7",
      "78356 GET WINDOW PROP      window -> reg4",
      "78361 GET      reg4[location] -> reg5",
      "78367 GET      reg5[href] -> reg4",
      "78373 PUT      reg7[href] = reg4",
      "78379 PUSH MEMORY ELEMENT IF INIT      2508 -> reg4",
      "78382 PUT      reg4[type] = tl",
      "78390 PUSH MEMORY ELEMENT IF INIT      2508 -> reg4",
      "78393 PUT      reg4[action] = allow",
      "78401 PUSH MEMORY ELEMENT IF INIT      2508 -> reg4",
      "78404 PUSH MEMORY ELEMENT IF INIT      2507 -> reg7",
      "78407 NEW ARRAY      1 -> reg11",
      "78410 PUSH MEMORY ELEMENT IF INIT      2506 -> reg10",
      "78413 NEW ARRAY      1 -> reg9",
      "78416 PUSH MEMORY ELEMENT IF INIT      2505 -> reg12",
      "78419 PUT      reg9[0] = reg12",
      "78423 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "78427 SET      reg2 -> reg8",
      "78430 PUT      reg11[0] = reg8",
      "78434 CALL FUNCTION      PTR: reg7 MEM: reg11",
      "78438 SET      reg2 -> reg5",
      "78441 PUT      reg4[regbotcd] = reg5",
      "78447 PUSH MEMORY ELEMENT IF INIT      2508 -> reg4",
      "78450 PUT      reg4[sid] = e0{WllSDlo0P1klP0tJBkBFXFZ3fwAYQWspBVpcWiQSWwgHXGNEQEYWMy0UBRtgFkYYKTkvSBUrPHgQBx8kClFHK1hfWgBaBRhicXhf}",
      "78458 PUSH MEMORY ELEMENT IF INIT      2508 -> reg4",
      "78461 GET      reg4[action] -> reg5",
      "78467 STRICT EQUAL      reg5 === block -> reg4",
      "78473 JUMP IF FALSE      reg4 TO: 78501 | 78476"
  ],
  "77279": [
      "77279 PUSH MEMORY ELEMENT IF INIT      2514 -> reg5",
      "77282 GET WINDOW PROP      String -> reg6",
      "77287 GET      reg6[fromCharCode] -> reg7",
      "77293 NEW ARRAY      1 -> reg9",
      "77296 PUSH MEMORY ELEMENT IF INIT      2512 -> reg10",
      "77299 GET      reg10[charCodeAt] -> reg13",
      "77305 NEW ARRAY      1 -> reg12",
      "77308 PUSH MEMORY ELEMENT IF INIT      2515 -> reg8",
      "77311 PUT      reg12[0] = reg8",
      "77315 CALL FUNCTION      OBJ: reg10 FUNC: reg13 ARGS: reg12",
      "77319 SET      reg2 -> reg11",
      "77322 PUSH MEMORY ELEMENT IF INIT      2513 -> reg8",
      "77325 GET      reg8[charCodeAt] -> reg12",
      "77331 NEW ARRAY      1 -> reg13",
      "77334 PUSH MEMORY ELEMENT IF INIT      2515 -> reg14",
      "77337 PUSH MEMORY ELEMENT IF INIT      2513 -> reg16",
      "77340 GET      reg16[length] -> reg18",
      "77346 MOD      reg14 % reg18 -> reg16",
      "77350 PUT      reg13[0] = reg16",
      "77354 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg13",
      "77358 SET      reg2 -> reg15",
      "77361 XOR      reg11 ^ reg15 -> reg13",
      "77365 PUT      reg9[0] = reg13",
      "77369 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "77373 SET      reg2 -> reg4",
      "77376 ADD      reg5NaN-> reg4",
      "77380 SET MEMORY ELEMENT IF INIT      2514 = reg4",
      "77383 PUSH MEMORY ELEMENT IF INIT      2515 -> reg7",
      "77386 SET      reg7 -> reg4",
      "77389 ADD      reg71-> reg7",
      "77393 SET MEMORY ELEMENT IF INIT      2515 = reg7",
      "77396 JUMP      77260",
      "77260 PUSH MEMORY ELEMENT IF INIT      2515 -> reg5",
      "77263 PUSH MEMORY ELEMENT IF INIT      2512 -> reg4",
      "77266 GET      reg4[length] -> reg6",
      "77272 LESS THAN      reg5 < reg6 -> reg4",
      "77276 JUMP IF FALSE      reg4 TO: 77398 | 77279"
  ],
  "77398": [
      "77398 PUSH MEMORY ELEMENT IF INIT      2514 -> reg5",
      "77401 JUMP OR RETURN VAL      reg5"
  ],
  "77768": [
      "77768 SET I      78102",
      "77770 PUSH F.K      -> reg4",
      "77772 VOID F",
      "77773 SET MEMORY ELEMENT      0 = reg4",
      "77776 SET MEMORY ELEMENT IF INIT      2524 = error",
      "77781 SET MEMORY ELEMENT IF INIT      2525 = error",
      "77786 SET I      78102",
      "77788 EMPTY OBJECT      -> reg4",
      "77790 GET WINDOW PROP      window -> reg5",
      "77795 GET      reg5[outerHeight] -> reg6",
      "77801 PUT      reg4[outerHeight] = reg6",
      "77807 GET WINDOW PROP      window -> reg5",
      "77812 GET      reg5[outerWidth] -> reg7",
      "77818 PUT      reg4[outerWidth] = reg7",
      "77824 GET WINDOW PROP      window -> reg5",
      "77829 GET      reg5[innerWidth] -> reg9",
      "77835 PUT      reg4[innerWidth] = reg9",
      "77841 GET WINDOW PROP      window -> reg5",
      "77846 GET      reg5[innerHeight] -> reg6",
      "77852 PUT      reg4[innerHeight] = reg6",
      "77858 PUSH MEMORY ELEMENT IF INIT      2525 -> reg6",
      "77861 PUT      reg4[clientHeight] = reg6",
      "77867 PUSH MEMORY ELEMENT IF INIT      2524 -> reg6",
      "77870 PUT      reg4[clientWidth] = reg6",
      "77876 SET MEMORY ELEMENT IF INIT      2526 = reg4",
      "77879 SET MEMORY ELEMENT IF INIT      2527 = false",
      "77882 PUSH MEMORY ELEMENT IF INIT      2526 -> reg4",
      "77885 GET      reg4[outerHeight] -> reg5",
      "77891 STRICT EQUAL      reg5 === 566 -> reg6",
      "77895 JUMP IF FALSE      reg6 TO: 77914 | 77898"
  ],
  "77898": [
      "77898 PUSH MEMORY ELEMENT IF INIT      2526 -> reg5",
      "77901 GET      reg5[outerWidth] -> reg4",
      "77907 STRICT EQUAL      reg4 === 1000 -> reg5",
      "77911 SET      reg5 -> reg6",
      "77914 JUMP IF FALSE      reg6 TO: 77933 | 77917"
  ],
  "77914": ["77914 JUMP IF FALSE      reg6 TO: 77933 | 77917"],
  "77917": [
      "77917 PUSH MEMORY ELEMENT IF INIT      2526 -> reg5",
      "77920 GET      reg5[innerWidth] -> reg10",
      "77926 STRICT EQUAL      reg10 === 0 -> reg4",
      "77930 SET      reg4 -> reg6",
      "77933 JUMP IF FALSE      reg6 TO: 77952 | 77936"
  ],
  "77933": ["77933 JUMP IF FALSE      reg6 TO: 77952 | 77936"],
  "77936": [
      "77936 PUSH MEMORY ELEMENT IF INIT      2526 -> reg5",
      "77939 GET      reg5[innerHeight] -> reg4",
      "77945 STRICT EQUAL      reg4 === 0 -> reg5",
      "77949 SET      reg5 -> reg6",
      "77952 JUMP IF FALSE      reg6 TO: 77971 | 77955"
  ],
  "77952": ["77952 JUMP IF FALSE      reg6 TO: 77971 | 77955"],
  "77955": [
      "77955 PUSH MEMORY ELEMENT IF INIT      2526 -> reg5",
      "77958 GET      reg5[clientHeight] -> reg4",
      "77964 STRICT EQUAL      reg4 === 0 -> reg7",
      "77968 SET      reg7 -> reg6",
      "77971 JUMP IF FALSE      reg6 TO: 77990 | 77974"
  ],
  "77971": ["77971 JUMP IF FALSE      reg6 TO: 77990 | 77974"],
  "77974": [
      "77974 PUSH MEMORY ELEMENT IF INIT      2526 -> reg5",
      "77977 GET      reg5[clientWidth] -> reg4",
      "77983 STRICT EQUAL      reg4 === 0 -> reg5",
      "77987 SET      reg5 -> reg6",
      "77990 JUMP IF FALSE      reg6 TO: 78049 | 77993"
  ],
  "77990": ["77990 JUMP IF FALSE      reg6 TO: 78049 | 77993"],
  "77993": [
      "77993 SET MEMORY ELEMENT IF INIT      2527 = true",
      "77996 EMPTY OBJECT      -> reg4",
      "77998 PUSH MEMORY ELEMENT IF INIT      2527 -> reg9",
      "78001 PUT      reg4[verdict] = reg9",
      "78007 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "78010 GET      reg6[stringify] -> reg7",
      "78016 NEW ARRAY      1 -> reg8",
      "78019 PUSH MEMORY ELEMENT IF INIT      2526 -> reg10",
      "78022 PUT      reg8[0] = reg10",
      "78026 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "78030 SET      reg2 -> reg5",
      "78033 PUT      reg4[raw] = reg5",
      "78039 PUT      reg4[error] = false",
      "78045 JUMP OR RETURN VAL      reg4"
  ],
  "78049": [
      "78049 EMPTY OBJECT      -> reg4",
      "78051 PUSH MEMORY ELEMENT IF INIT      2527 -> reg7",
      "78054 PUT      reg4[verdict] = reg7",
      "78060 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "78063 GET      reg7[stringify] -> reg9",
      "78069 NEW ARRAY      1 -> reg10",
      "78072 PUSH MEMORY ELEMENT IF INIT      2526 -> reg11",
      "78075 PUT      reg10[0] = reg11",
      "78079 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "78083 SET      reg2 -> reg5",
      "78086 PUT      reg4[raw] = reg5",
      "78092 PUT      reg4[error] = false",
      "78098 JUMP OR RETURN VAL      reg4"
  ],
  "78102": [
      "78102 SET I      null",
      "78104 PUSH F.K      -> reg4",
      "78106 VOID F",
      "78107 SET MEMORY ELEMENT      0 = reg4",
      "78110 EMPTY OBJECT      -> reg4",
      "78112 PUT      reg4[verdict] = false",
      "78118 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "78121 GET      reg9[toString] -> reg8",
      "78127 EMPTY ARRAY      -> reg11",
      "78129 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg11",
      "78133 SET      reg2 -> reg5",
      "78136 PUT      reg4[raw] = reg5",
      "78142 PUT      reg4[error] = true",
      "78148 JUMP OR RETURN VAL      reg4"
  ],
  "78220": [
      "78220 EMPTY OBJECT      -> reg6",
      "78222 SET      reg6 -> reg5",
      "78225 SET MEMORY ELEMENT IF INIT      2539 = reg5",
      "78228 PUSH MEMORY ELEMENT IF INIT      2539 -> reg7",
      "78231 GET WINDOW PROP      Date -> reg6",
      "78236 GET      reg6[now] -> reg8",
      "78242 EMPTY ARRAY      -> reg9",
      "78244 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "78248 SET      reg2 -> reg5",
      "78251 PUSH MEMORY ELEMENT IF INIT      2538 -> reg9",
      "78254 SUBTRACT      reg5 - reg9 -> reg8",
      "78258 PUT      reg7[time] = reg8",
      "78264 PUSH MEMORY ELEMENT IF INIT      2539 -> reg5",
      "78267 JUMP OR RETURN VAL      reg5"
  ],
  "78225": [
      "78225 SET MEMORY ELEMENT IF INIT      2539 = reg5",
      "78228 PUSH MEMORY ELEMENT IF INIT      2539 -> reg7",
      "78231 GET WINDOW PROP      Date -> reg6",
      "78236 GET      reg6[now] -> reg8",
      "78242 EMPTY ARRAY      -> reg9",
      "78244 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "78248 SET      reg2 -> reg5",
      "78251 PUSH MEMORY ELEMENT IF INIT      2538 -> reg9",
      "78254 SUBTRACT      reg5 - reg9 -> reg8",
      "78258 PUT      reg7[time] = reg8",
      "78264 PUSH MEMORY ELEMENT IF INIT      2539 -> reg5",
      "78267 JUMP OR RETURN VAL      reg5"
  ],
  "78300": [
      "78300 SET MEMORY ELEMENT IF INIT      275 = true",
      "78303 PUSH MEMORY ELEMENT IF INIT      2508 -> reg8",
      "78306 PUT      reg8[action] = block",
      "78314 PUSH MEMORY ELEMENT IF INIT      2542 -> reg4",
      "78317 JUMP OR RETURN VAL      reg4"
  ],
  "78314": [
      "78314 PUSH MEMORY ELEMENT IF INIT      2542 -> reg4",
      "78317 JUMP OR RETURN VAL      reg4"
  ],
  "78476": [
      "78476 SET MEMORY ELEMENT IF INIT      275 = true",
      "78479 PUSH MEMORY ELEMENT IF INIT      2504 -> reg4",
      "78482 NEW ARRAY      1 -> reg5",
      "78485 PUSH MEMORY ELEMENT IF INIT      2508 -> reg8",
      "78488 PUT      reg5[0] = reg8",
      "78492 CALL FUNCTION      PTR: reg4 MEM: reg5",
      "78496 SET      reg2 -> reg7",
      "78499 JUMP      78501",
      "78501 JUMP      78511",
      "78511 SET I      null",
      "78513 JUMP OR RETURN"
  ],
  "78501": [
      "78501 JUMP      78511",
      "78511 SET I      null",
      "78513 JUMP OR RETURN"
  ],
  "78503": [
      "78503 SET I      null",
      "78505 PUSH F.K      -> reg5",
      "78507 VOID F",
      "78508 SET MEMORY ELEMENT      0 = reg5",
      "78511 SET I      null",
      "78513 JUMP OR RETURN"
  ],
  "78564": [
      "78564 GET WINDOW PROP      window -> reg4",
      "78569 GET      reg4[outerWidth] -> reg6",
      "78575 STRICT EQUAL      reg6 === 700 -> reg4",
      "78579 SET      reg4 -> reg5",
      "78582 JUMP IF FALSE      reg5 TO: 78605 | 78585"
  ],
  "78582": ["78582 JUMP IF FALSE      reg5 TO: 78605 | 78585"],
  "78585": [
      "78585 GET WINDOW PROP      navigator -> reg6",
      "78590 GET      reg6[platform] -> reg4",
      "78596 STRICT EQUAL      reg4 === Win32 -> reg6",
      "78602 SET      reg6 -> reg5",
      "78605 SET MEMORY ELEMENT IF INIT      2547 = reg5",
      "78608 GET WINDOW PROP      window -> reg4",
      "78613 GET      reg4[outerHeight] -> reg5",
      "78619 STRICT EQUAL      reg5 === 700 -> reg4",
      "78623 JUMP IF FALSE      reg4 TO: 78644 | 78626"
  ],
  "78605": [
      "78605 SET MEMORY ELEMENT IF INIT      2547 = reg5",
      "78608 GET WINDOW PROP      window -> reg4",
      "78613 GET      reg4[outerHeight] -> reg5",
      "78619 STRICT EQUAL      reg5 === 700 -> reg4",
      "78623 JUMP IF FALSE      reg4 TO: 78644 | 78626"
  ],
  "78626": [
      "78626 GET WINDOW PROP      window -> reg5",
      "78631 GET      reg5[outerWidth] -> reg8",
      "78637 STRICT EQUAL      reg8 === 500 -> reg5",
      "78641 SET      reg5 -> reg4",
      "78644 JUMP IF FALSE      reg4 TO: 78667 | 78647"
  ],
  "78644": ["78644 JUMP IF FALSE      reg4 TO: 78667 | 78647"],
  "78647": [
      "78647 GET WINDOW PROP      navigator -> reg5",
      "78652 GET      reg5[platform] -> reg6",
      "78658 STRICT EQUAL      reg6 === Win32 -> reg5",
      "78664 SET      reg5 -> reg4",
      "78667 SET MEMORY ELEMENT IF INIT      2548 = reg4",
      "78670 GET WINDOW PROP      window -> reg4",
      "78675 GET      reg4[outerHeight] -> reg6",
      "78681 STRICT EQUAL      reg6 === 700 -> reg4",
      "78685 JUMP IF FALSE      reg4 TO: 78706 | 78688"
  ],
  "78667": [
      "78667 SET MEMORY ELEMENT IF INIT      2548 = reg4",
      "78670 GET WINDOW PROP      window -> reg4",
      "78675 GET      reg4[outerHeight] -> reg6",
      "78681 STRICT EQUAL      reg6 === 700 -> reg4",
      "78685 JUMP IF FALSE      reg4 TO: 78706 | 78688"
  ],
  "78688": [
      "78688 GET WINDOW PROP      window -> reg5",
      "78693 GET      reg5[outerWidth] -> reg6",
      "78699 STRICT EQUAL      reg6 === 516 -> reg5",
      "78703 SET      reg5 -> reg4",
      "78706 JUMP IF FALSE      reg4 TO: 78729 | 78709"
  ],
  "78706": ["78706 JUMP IF FALSE      reg4 TO: 78729 | 78709"],
  "78709": [
      "78709 GET WINDOW PROP      navigator -> reg5",
      "78714 GET      reg5[platform] -> reg6",
      "78720 STRICT EQUAL      reg6 === Win32 -> reg8",
      "78726 SET      reg8 -> reg4",
      "78729 SET MEMORY ELEMENT IF INIT      2549 = reg4",
      "78732 GET WINDOW PROP      window -> reg5",
      "78737 GET      reg5[outerHeight] -> reg4",
      "78743 STRICT EQUAL      reg4 === 600 -> reg5",
      "78747 JUMP IF FALSE      reg5 TO: 78768 | 78750"
  ],
  "78729": [
      "78729 SET MEMORY ELEMENT IF INIT      2549 = reg4",
      "78732 GET WINDOW PROP      window -> reg5",
      "78737 GET      reg5[outerHeight] -> reg4",
      "78743 STRICT EQUAL      reg4 === 600 -> reg5",
      "78747 JUMP IF FALSE      reg5 TO: 78768 | 78750"
  ],
  "78750": [
      "78750 GET WINDOW PROP      window -> reg4",
      "78755 GET      reg4[outerWidth] -> reg6",
      "78761 STRICT EQUAL      reg6 === 800 -> reg4",
      "78765 SET      reg4 -> reg5",
      "78768 JUMP IF FALSE      reg5 TO: 78791 | 78771"
  ],
  "78768": ["78768 JUMP IF FALSE      reg5 TO: 78791 | 78771"],
  "78771": [
      "78771 GET WINDOW PROP      navigator -> reg4",
      "78776 GET      reg4[platform] -> reg8",
      "78782 STRICT EQUAL      reg8 === Win32 -> reg6",
      "78788 SET      reg6 -> reg5",
      "78791 SET MEMORY ELEMENT IF INIT      2550 = reg5",
      "78794 GET WINDOW PROP      screenX -> reg4",
      "78799 STRICT EQUAL      reg4 === 0 -> reg5",
      "78803 JUMP IF FALSE      reg5 TO: 78818 | 78806"
  ],
  "78791": [
      "78791 SET MEMORY ELEMENT IF INIT      2550 = reg5",
      "78794 GET WINDOW PROP      screenX -> reg4",
      "78799 STRICT EQUAL      reg4 === 0 -> reg5",
      "78803 JUMP IF FALSE      reg5 TO: 78818 | 78806"
  ],
  "78806": [
      "78806 GET WINDOW PROP      screenY -> reg4",
      "78811 STRICT EQUAL      reg4 === 0 -> reg6",
      "78815 SET      reg6 -> reg5",
      "78818 JUMP IF FALSE      reg5 TO: 78839 | 78821"
  ],
  "78818": ["78818 JUMP IF FALSE      reg5 TO: 78839 | 78821"],
  "78821": [
      "78821 GET WINDOW PROP      window -> reg4",
      "78826 GET      reg4[outerHeight] -> reg6",
      "78832 STRICT EQUAL      reg6 === 482 -> reg4",
      "78836 SET      reg4 -> reg5",
      "78839 JUMP IF FALSE      reg5 TO: 78860 | 78842"
  ],
  "78839": ["78839 JUMP IF FALSE      reg5 TO: 78860 | 78842"],
  "78842": [
      "78842 GET WINDOW PROP      window -> reg4",
      "78847 GET      reg4[outerWidth] -> reg6",
      "78853 STRICT EQUAL      reg6 === 992 -> reg4",
      "78857 SET      reg4 -> reg5",
      "78860 JUMP IF FALSE      reg5 TO: 78881 | 78863"
  ],
  "78860": ["78860 JUMP IF FALSE      reg5 TO: 78881 | 78863"],
  "78863": [
      "78863 GET WINDOW PROP      screen -> reg4",
      "78868 GET      reg4[height] -> reg6",
      "78874 STRICT EQUAL      reg6 === 1080 -> reg7",
      "78878 SET      reg7 -> reg5",
      "78881 JUMP IF FALSE      reg5 TO: 78902 | 78884"
  ],
  "78881": ["78881 JUMP IF FALSE      reg5 TO: 78902 | 78884"],
  "78884": [
      "78884 GET WINDOW PROP      screen -> reg4",
      "78889 GET      reg4[availHeight] -> reg6",
      "78895 STRICT EQUAL      reg6 === 1080 -> reg4",
      "78899 SET      reg4 -> reg5",
      "78902 JUMP IF FALSE      reg5 TO: 78923 | 78905"
  ],
  "78902": ["78902 JUMP IF FALSE      reg5 TO: 78923 | 78905"],
  "78905": [
      "78905 GET WINDOW PROP      navigator -> reg4",
      "78910 GET      reg4[deviceMemory] -> reg8",
      "78916 STRICT EQUAL      reg8 === 8 -> reg4",
      "78920 SET      reg4 -> reg5",
      "78923 JUMP IF FALSE      reg5 TO: 78946 | 78926"
  ],
  "78923": ["78923 JUMP IF FALSE      reg5 TO: 78946 | 78926"],
  "78926": [
      "78926 GET WINDOW PROP      navigator -> reg4",
      "78931 GET      reg4[language] -> reg6",
      "78937 STRICT EQUAL      reg6 === en-US -> reg4",
      "78943 SET      reg4 -> reg5",
      "78946 JUMP IF FALSE      reg5 TO: 78969 | 78949"
  ],
  "78946": ["78946 JUMP IF FALSE      reg5 TO: 78969 | 78949"],
  "78949": [
      "78949 GET WINDOW PROP      navigator -> reg6",
      "78954 GET      reg6[platform] -> reg4",
      "78960 STRICT EQUAL      reg4 === Win32 -> reg6",
      "78966 SET      reg6 -> reg5",
      "78969 SET MEMORY ELEMENT IF INIT      2551 = reg5",
      "78972 GET WINDOW PROP      screenX -> reg5",
      "78977 STRICT EQUAL      reg5 === 0 -> reg4",
      "78981 JUMP IF FALSE      reg4 TO: 78996 | 78984"
  ],
  "78969": [
      "78969 SET MEMORY ELEMENT IF INIT      2551 = reg5",
      "78972 GET WINDOW PROP      screenX -> reg5",
      "78977 STRICT EQUAL      reg5 === 0 -> reg4",
      "78981 JUMP IF FALSE      reg4 TO: 78996 | 78984"
  ],
  "78984": [
      "78984 GET WINDOW PROP      screenY -> reg5",
      "78989 STRICT EQUAL      reg5 === 0 -> reg7",
      "78993 SET      reg7 -> reg4",
      "78996 JUMP IF FALSE      reg4 TO: 79017 | 78999"
  ],
  "78996": ["78996 JUMP IF FALSE      reg4 TO: 79017 | 78999"],
  "78999": [
      "78999 GET WINDOW PROP      window -> reg5",
      "79004 GET      reg5[outerHeight] -> reg6",
      "79010 STRICT EQUAL      reg6 === 1152 -> reg5",
      "79014 SET      reg5 -> reg4",
      "79017 JUMP IF FALSE      reg4 TO: 79038 | 79020"
  ],
  "79017": ["79017 JUMP IF FALSE      reg4 TO: 79038 | 79020"],
  "79020": [
      "79020 GET WINDOW PROP      window -> reg5",
      "79025 GET      reg5[outerWidth] -> reg6",
      "79031 STRICT EQUAL      reg6 === 2048 -> reg7",
      "79035 SET      reg7 -> reg4",
      "79038 JUMP IF FALSE      reg4 TO: 79061 | 79041"
  ],
  "79038": ["79038 JUMP IF FALSE      reg4 TO: 79061 | 79041"],
  "79041": [
      "79041 GET WINDOW PROP      window -> reg5",
      "79046 GET      reg5[devicePixelRatio] -> reg6",
      "79052 STRICT EQUAL      reg6 === 1.25 -> reg5",
      "79058 SET      reg5 -> reg4",
      "79061 JUMP IF FALSE      reg4 TO: 79082 | 79064"
  ],
  "79061": ["79061 JUMP IF FALSE      reg4 TO: 79082 | 79064"],
  "79064": [
      "79064 GET WINDOW PROP      screen -> reg5",
      "79069 GET      reg5[height] -> reg7",
      "79075 STRICT EQUAL      reg7 === 1152 -> reg6",
      "79079 SET      reg6 -> reg4",
      "79082 JUMP IF FALSE      reg4 TO: 79103 | 79085"
  ],
  "79082": ["79082 JUMP IF FALSE      reg4 TO: 79103 | 79085"],
  "79085": [
      "79085 GET WINDOW PROP      screen -> reg7",
      "79090 GET      reg7[availHeight] -> reg5",
      "79096 STRICT EQUAL      reg5 === 1152 -> reg7",
      "79100 SET      reg7 -> reg4",
      "79103 JUMP IF FALSE      reg4 TO: 79126 | 79106"
  ],
  "79103": ["79103 JUMP IF FALSE      reg4 TO: 79126 | 79106"],
  "79106": [
      "79106 GET WINDOW PROP      navigator -> reg5",
      "79111 GET      reg5[appVersion] -> reg6",
      "79117 STRICT EQUAL      reg6 === 5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36 -> reg5",
      "79123 SET      reg5 -> reg4",
      "79126 JUMP IF FALSE      reg4 TO: 79147 | 79129"
  ],
  "79126": ["79126 JUMP IF FALSE      reg4 TO: 79147 | 79129"],
  "79129": [
      "79129 GET WINDOW PROP      navigator -> reg5",
      "79134 GET      reg5[deviceMemory] -> reg6",
      "79140 STRICT EQUAL      reg6 === 8 -> reg7",
      "79144 SET      reg7 -> reg4",
      "79147 JUMP IF FALSE      reg4 TO: 79168 | 79150"
  ],
  "79147": ["79147 JUMP IF FALSE      reg4 TO: 79168 | 79150"],
  "79150": [
      "79150 GET WINDOW PROP      navigator -> reg7",
      "79155 GET      reg7[hardwareConcurrency] -> reg5",
      "79161 STRICT EQUAL      reg5 === 16 -> reg6",
      "79165 SET      reg6 -> reg4",
      "79168 JUMP IF FALSE      reg4 TO: 79191 | 79171"
  ],
  "79168": ["79168 JUMP IF FALSE      reg4 TO: 79191 | 79171"],
  "79171": [
      "79171 GET WINDOW PROP      navigator -> reg5",
      "79176 GET      reg5[language] -> reg10",
      "79182 STRICT EQUAL      reg10 === en-US -> reg7",
      "79188 SET      reg7 -> reg4",
      "79191 SET MEMORY ELEMENT IF INIT      2552 = reg4",
      "79194 PUSH MEMORY ELEMENT IF INIT      2547 -> reg4",
      "79197 JUMP IF TRUE      reg4 TO: 79206 | 79200"
  ],
  "79191": [
      "79191 SET MEMORY ELEMENT IF INIT      2552 = reg4",
      "79194 PUSH MEMORY ELEMENT IF INIT      2547 -> reg4",
      "79197 JUMP IF TRUE      reg4 TO: 79206 | 79200"
  ],
  "79200": [
      "79200 PUSH MEMORY ELEMENT IF INIT      2548 -> reg5",
      "79203 SET      reg5 -> reg4",
      "79206 JUMP IF TRUE      reg4 TO: 79215 | 79209"
  ],
  "79206": ["79206 JUMP IF TRUE      reg4 TO: 79215 | 79209"],
  "79209": [
      "79209 PUSH MEMORY ELEMENT IF INIT      2549 -> reg5",
      "79212 SET      reg5 -> reg4",
      "79215 JUMP IF TRUE      reg4 TO: 79224 | 79218"
  ],
  "79215": ["79215 JUMP IF TRUE      reg4 TO: 79224 | 79218"],
  "79218": [
      "79218 PUSH MEMORY ELEMENT IF INIT      2550 -> reg5",
      "79221 SET      reg5 -> reg4",
      "79224 JUMP IF TRUE      reg4 TO: 79233 | 79227"
  ],
  "79224": ["79224 JUMP IF TRUE      reg4 TO: 79233 | 79227"],
  "79227": [
      "79227 PUSH MEMORY ELEMENT IF INIT      2551 -> reg6",
      "79230 SET      reg6 -> reg4",
      "79233 JUMP IF TRUE      reg4 TO: 79242 | 79236"
  ],
  "79233": ["79233 JUMP IF TRUE      reg4 TO: 79242 | 79236"],
  "79236": [
      "79236 PUSH MEMORY ELEMENT IF INIT      2552 -> reg7",
      "79239 SET      reg7 -> reg4",
      "79242 JUMP IF FALSE      reg4 TO: 79248 | 79245"
  ],
  "79242": ["79242 JUMP IF FALSE      reg4 TO: 79248 | 79245"],
  "79245": [
      "79245 SET MEMORY ELEMENT IF INIT      275 = true",
      "79248 JUMP      79258",
      "79258 SET I      null",
      "79260 JUMP OR RETURN"
  ],
  "79248": [
      "79248 JUMP      79258",
      "79258 SET I      null",
      "79260 JUMP OR RETURN"
  ],
  "79250": [
      "79250 SET I      null",
      "79252 PUSH F.K      -> reg4",
      "79254 VOID F",
      "79255 SET MEMORY ELEMENT      0 = reg4",
      "79258 SET I      null",
      "79260 JUMP OR RETURN"
  ],
  "79498": [
      "79498 PUSH MEMORY ELEMENT IF INIT      2676 -> reg4",
      "79501 GET WINDOW PROP      String -> reg6",
      "79506 GET      reg6[fromCharCode] -> reg7",
      "79512 NEW ARRAY      1 -> reg8",
      "79515 PUSH MEMORY ELEMENT IF INIT      2674 -> reg10",
      "79518 GET      reg10[charCodeAt] -> reg11",
      "79524 NEW ARRAY      1 -> reg12",
      "79527 PUSH MEMORY ELEMENT IF INIT      2677 -> reg13",
      "79530 PUT      reg12[0] = reg13",
      "79534 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "79538 SET      reg2 -> reg9",
      "79541 PUSH MEMORY ELEMENT IF INIT      2675 -> reg14",
      "79544 GET      reg14[charCodeAt] -> reg17",
      "79550 NEW ARRAY      1 -> reg11",
      "79553 PUSH MEMORY ELEMENT IF INIT      2677 -> reg13",
      "79556 PUSH MEMORY ELEMENT IF INIT      2675 -> reg15",
      "79559 GET      reg15[length] -> reg18",
      "79565 MOD      reg13 % reg18 -> reg16",
      "79569 PUT      reg11[0] = reg16",
      "79573 CALL FUNCTION      OBJ: reg14 FUNC: reg17 ARGS: reg11",
      "79577 SET      reg2 -> reg12",
      "79580 XOR      reg9 ^ reg12 -> reg11",
      "79584 PUT      reg8[0] = reg11",
      "79588 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "79592 SET      reg2 -> reg5",
      "79595 ADD      reg4NaN-> reg5",
      "79599 SET MEMORY ELEMENT IF INIT      2676 = reg5",
      "79602 PUSH MEMORY ELEMENT IF INIT      2677 -> reg5",
      "79605 SET      reg5 -> reg4",
      "79608 ADD      reg51-> reg5",
      "79612 SET MEMORY ELEMENT IF INIT      2677 = reg5",
      "79615 JUMP      79479",
      "79479 PUSH MEMORY ELEMENT IF INIT      2677 -> reg4",
      "79482 PUSH MEMORY ELEMENT IF INIT      2674 -> reg5",
      "79485 GET      reg5[length] -> reg6",
      "79491 LESS THAN      reg4 < reg6 -> reg5",
      "79495 JUMP IF FALSE      reg5 TO: 79617 | 79498"
  ],
  "79617": [
      "79617 PUSH MEMORY ELEMENT IF INIT      2676 -> reg5",
      "79620 JUMP OR RETURN VAL      reg5"
  ],
  "79660": [
      "79660 GET      reg3[1] -> reg4",
      "79664 GET WINDOW PROP      undefined -> reg5",
      "79669 STRICT NOT EQUAL      reg4 !== reg5 -> reg7",
      "79673 SET      reg7 -> reg6",
      "79676 JUMP IF FALSE      reg6 TO: 79688 | 79679"
  ],
  "79676": ["79676 JUMP IF FALSE      reg6 TO: 79688 | 79679"],
  "79679": [
      "79679 GET      reg3[1] -> reg5",
      "79683 SET      reg5 -> reg4",
      "79686 JUMP      79691",
      "79691 SET MEMORY ELEMENT IF INIT      2681 = reg4",
      "79694 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "79697 GET      reg6[stringify] -> reg7",
      "79703 NEW ARRAY      1 -> reg5",
      "79706 PUSH MEMORY ELEMENT IF INIT      2680 -> reg9",
      "79709 PUT      reg5[0] = reg9",
      "79713 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg5",
      "79717 SET      reg2 -> reg4",
      "79720 SET MEMORY ELEMENT IF INIT      2682 = reg4",
      "79723 GET WINDOW PROP      encodeURI -> reg5",
      "79728 NEW ARRAY      1 -> reg7",
      "79731 PUSH MEMORY ELEMENT IF INIT      2682 -> reg8",
      "79734 PUT      reg7[0] = reg8",
      "79738 CALL FUNCTION      PTR: reg5 MEM: reg7",
      "79742 SET      reg2 -> reg4",
      "79745 SET MEMORY ELEMENT IF INIT      2682 = reg4",
      "79748 PUSH MEMORY ELEMENT IF INIT      2590 -> reg4",
      "79751 NEW ARRAY      2 -> reg5",
      "79754 PUSH MEMORY ELEMENT IF INIT      2682 -> reg9",
      "79757 PUT      reg5[0] = reg9",
      "79761 ADD      omgtoNaN-> reg8",
      "79769 PUT      reg5[1] = reg8",
      "79773 CALL FUNCTION      PTR: reg4 MEM: reg5",
      "79777 SET      reg2 -> reg7",
      "79780 SET MEMORY ELEMENT IF INIT      2683 = reg7",
      "79783 GET WINDOW PROP      btoa -> reg7",
      "79788 NEW ARRAY      1 -> reg5",
      "79791 PUSH MEMORY ELEMENT IF INIT      2683 -> reg8",
      "79794 PUT      reg5[0] = reg8",
      "79798 CALL FUNCTION      PTR: reg7 MEM: reg5",
      "79802 SET      reg2 -> reg4",
      "79805 SET MEMORY ELEMENT IF INIT      2684 = reg4",
      "79808 GET WINDOW PROP      XMLHttpRequest -> reg5",
      "79813 EMPTY ARRAY      -> reg7",
      "79815 BIND APPLY      reg5 reg7 -> 4",
      "79819 SET MEMORY ELEMENT IF INIT      2685 = reg4",
      "79822 PUSH MEMORY ELEMENT IF INIT      2685 -> reg5",
      "79825 GET      reg5[open] -> reg8",
      "79831 NEW ARRAY      3 -> reg4",
      "79834 PUT      reg4[0] = POST",
      "79840 PUT      reg4[1] = https://reporting.cdndex.io/error",
      "79846 PUSH MEMORY ELEMENT IF INIT      2681 -> reg9",
      "79849 PUT      reg4[2] = reg9",
      "79853 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg4",
      "79857 SET      reg2 -> reg7",
      "79860 PUSH MEMORY ELEMENT IF INIT      2685 -> reg8",
      "79863 GET      reg8[setRequestHeader] -> reg7",
      "79869 NEW ARRAY      2 -> reg9",
      "79872 PUT      reg9[0] = Content-Type",
      "79878 PUT      reg9[1] = application/json;charset=UTF-8",
      "79884 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "79888 SET      reg2 -> reg4",
      "79891 PUSH MEMORY ELEMENT IF INIT      2685 -> reg7",
      "79894 GET      reg7[send] -> reg9",
      "79900 NEW ARRAY      1 -> reg10",
      "79903 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "79906 GET      reg12[stringify] -> reg13",
      "79912 NEW ARRAY      1 -> reg14",
      "79915 EMPTY OBJECT      -> reg15",
      "79917 PUSH MEMORY ELEMENT IF INIT      2684 -> reg16",
      "79920 PUT      reg15[data] = reg16",
      "79926 PUT      reg14[0] = reg15",
      "79930 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "79934 SET      reg2 -> reg11",
      "79937 PUT      reg10[0] = reg11",
      "79941 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "79945 SET      reg2 -> reg4",
      "79948 JUMP OR RETURN"
  ],
  "79688": [
      "79688 SET      false -> reg4",
      "79691 SET MEMORY ELEMENT IF INIT      2681 = reg4",
      "79694 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "79697 GET      reg6[stringify] -> reg7",
      "79703 NEW ARRAY      1 -> reg5",
      "79706 PUSH MEMORY ELEMENT IF INIT      2680 -> reg9",
      "79709 PUT      reg5[0] = reg9",
      "79713 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg5",
      "79717 SET      reg2 -> reg4",
      "79720 SET MEMORY ELEMENT IF INIT      2682 = reg4",
      "79723 GET WINDOW PROP      encodeURI -> reg5",
      "79728 NEW ARRAY      1 -> reg7",
      "79731 PUSH MEMORY ELEMENT IF INIT      2682 -> reg8",
      "79734 PUT      reg7[0] = reg8",
      "79738 CALL FUNCTION      PTR: reg5 MEM: reg7",
      "79742 SET      reg2 -> reg4",
      "79745 SET MEMORY ELEMENT IF INIT      2682 = reg4",
      "79748 PUSH MEMORY ELEMENT IF INIT      2590 -> reg4",
      "79751 NEW ARRAY      2 -> reg5",
      "79754 PUSH MEMORY ELEMENT IF INIT      2682 -> reg9",
      "79757 PUT      reg5[0] = reg9",
      "79761 ADD      omgtoNaN-> reg8",
      "79769 PUT      reg5[1] = reg8",
      "79773 CALL FUNCTION      PTR: reg4 MEM: reg5",
      "79777 SET      reg2 -> reg7",
      "79780 SET MEMORY ELEMENT IF INIT      2683 = reg7",
      "79783 GET WINDOW PROP      btoa -> reg7",
      "79788 NEW ARRAY      1 -> reg5",
      "79791 PUSH MEMORY ELEMENT IF INIT      2683 -> reg8",
      "79794 PUT      reg5[0] = reg8",
      "79798 CALL FUNCTION      PTR: reg7 MEM: reg5",
      "79802 SET      reg2 -> reg4",
      "79805 SET MEMORY ELEMENT IF INIT      2684 = reg4",
      "79808 GET WINDOW PROP      XMLHttpRequest -> reg5",
      "79813 EMPTY ARRAY      -> reg7",
      "79815 BIND APPLY      reg5 reg7 -> 4",
      "79819 SET MEMORY ELEMENT IF INIT      2685 = reg4",
      "79822 PUSH MEMORY ELEMENT IF INIT      2685 -> reg5",
      "79825 GET      reg5[open] -> reg8",
      "79831 NEW ARRAY      3 -> reg4",
      "79834 PUT      reg4[0] = POST",
      "79840 PUT      reg4[1] = https://reporting.cdndex.io/error",
      "79846 PUSH MEMORY ELEMENT IF INIT      2681 -> reg9",
      "79849 PUT      reg4[2] = reg9",
      "79853 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg4",
      "79857 SET      reg2 -> reg7",
      "79860 PUSH MEMORY ELEMENT IF INIT      2685 -> reg8",
      "79863 GET      reg8[setRequestHeader] -> reg7",
      "79869 NEW ARRAY      2 -> reg9",
      "79872 PUT      reg9[0] = Content-Type",
      "79878 PUT      reg9[1] = application/json;charset=UTF-8",
      "79884 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "79888 SET      reg2 -> reg4",
      "79891 PUSH MEMORY ELEMENT IF INIT      2685 -> reg7",
      "79894 GET      reg7[send] -> reg9",
      "79900 NEW ARRAY      1 -> reg10",
      "79903 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "79906 GET      reg12[stringify] -> reg13",
      "79912 NEW ARRAY      1 -> reg14",
      "79915 EMPTY OBJECT      -> reg15",
      "79917 PUSH MEMORY ELEMENT IF INIT      2684 -> reg16",
      "79920 PUT      reg15[data] = reg16",
      "79926 PUT      reg14[0] = reg15",
      "79930 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "79934 SET      reg2 -> reg11",
      "79937 PUT      reg10[0] = reg11",
      "79941 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "79945 SET      reg2 -> reg4",
      "79948 JUMP OR RETURN"
  ],
  "79996": [
      "79996 PUSH H       -> reg4",
      "79998 GET WINDOW PROP      document -> reg6",
      "80003 GET      reg6[createElement] -> reg8",
      "80009 NEW ARRAY      1 -> reg7",
      "80012 PUT      reg7[0] = iframe",
      "80018 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg7",
      "80022 SET      reg2 -> reg5",
      "80025 PUT      reg4[_ifr] = reg5",
      "80031 PUSH H       -> reg4",
      "80033 GET      reg4[_ifr] -> reg8",
      "80039 GET      reg8[style] -> reg4",
      "80045 PUT      reg4[display] = none",
      "80053 PUSH H       -> reg4",
      "80055 GET      reg4[_ifr] -> reg9",
      "80061 PUT      reg9[src] = javascript:;",
      "80069 GET WINDOW PROP      document -> reg5",
      "80074 GET      reg5[body] -> reg7",
      "80080 GET      reg7[appendChild] -> reg5",
      "80086 NEW ARRAY      1 -> reg8",
      "80089 PUSH H       -> reg9",
      "80091 GET      reg9[_ifr] -> reg10",
      "80097 PUT      reg8[0] = reg10",
      "80101 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg8",
      "80105 SET      reg2 -> reg4",
      "80108 PUSH H       -> reg5",
      "80110 GET      reg5[_ifr] -> reg9",
      "80116 JUMP OR RETURN VAL      reg9"
  ],
  "80108": [
      "80108 PUSH H       -> reg5",
      "80110 GET      reg5[_ifr] -> reg9",
      "80116 JUMP OR RETURN VAL      reg9"
  ],
  "80182": [
      "80182 SET      0 -> reg9",
      "80185 GET      reg5[reg9] -> reg4",
      "80189 SET MEMORY ELEMENT IF INIT      2693 = reg4",
      "80192 PUSH MEMORY ELEMENT IF INIT      2691 -> reg7",
      "80195 PUSH MEMORY ELEMENT IF INIT      2693 -> reg10",
      "80198 GET      reg7[reg10] -> reg8",
      "80202 TYPEOF      reg8 -> reg7",
      "80205 STRICT NOT EQUAL      reg7 !== object -> reg8",
      "80211 JUMP IF FALSE      reg8 TO: 80216 | 80214"
  ],
  "80185": [
      "80185 GET      reg5[reg9] -> reg4",
      "80189 SET MEMORY ELEMENT IF INIT      2693 = reg4",
      "80192 PUSH MEMORY ELEMENT IF INIT      2691 -> reg7",
      "80195 PUSH MEMORY ELEMENT IF INIT      2693 -> reg10",
      "80198 GET      reg7[reg10] -> reg8",
      "80202 TYPEOF      reg8 -> reg7",
      "80205 STRICT NOT EQUAL      reg7 !== object -> reg8",
      "80211 JUMP IF FALSE      reg8 TO: 80216 | 80214"
  ],
  "80214": [
      "80214 JUMP      80332",
      "80332 ADD      reg91-> reg9",
      "80336 LESS THAN      reg9 < reg6 -> reg7",
      "80340 JUMP IF TRUE      reg7 TO: 80185 | 80343"
  ],
  "80216": [
      "80216 PUSH MEMORY ELEMENT IF INIT      2691 -> reg7",
      "80219 PUSH MEMORY ELEMENT IF INIT      2693 -> reg11",
      "80222 GET      reg7[reg11] -> reg8",
      "80226 IN      score inreg8 -> reg7",
      "80232 JUMP IF FALSE      reg7 TO: 80332 | 80235"
  ],
  "80235": [
      "80235 PUSH MEMORY ELEMENT IF INIT      2691 -> reg8",
      "80238 PUSH MEMORY ELEMENT IF INIT      2693 -> reg7",
      "80241 GET      reg8[reg7] -> reg10",
      "80245 GET      reg10[score] -> reg7",
      "80251 TYPEOF      reg7 -> reg8",
      "80254 STRICT NOT EQUAL      reg8 !== number -> reg7",
      "80260 JUMP IF FALSE      reg7 TO: 80265 | 80263"
  ],
  "80263": [
      "80263 JUMP      80332",
      "80332 ADD      reg91-> reg9",
      "80336 LESS THAN      reg9 < reg6 -> reg7",
      "80340 JUMP IF TRUE      reg7 TO: 80185 | 80343"
  ],
  "80265": [
      "80265 PUSH MEMORY ELEMENT IF INIT      2692 -> reg8",
      "80268 GET      reg8[v] -> reg7",
      "80274 PUSH MEMORY ELEMENT IF INIT      2693 -> reg11",
      "80277 PUSH MEMORY ELEMENT IF INIT      2691 -> reg8",
      "80280 PUSH MEMORY ELEMENT IF INIT      2693 -> reg15",
      "80283 GET      reg8[reg15] -> reg10",
      "80287 GET      reg10[score] -> reg17",
      "80293 PUT      reg7[reg11] = reg17",
      "80297 PUSH MEMORY ELEMENT IF INIT      2692 -> reg7",
      "80300 GET      reg7[total] -> reg8",
      "80306 PUSH MEMORY ELEMENT IF INIT      2691 -> reg10",
      "80309 PUSH MEMORY ELEMENT IF INIT      2693 -> reg15",
      "80312 GET      reg10[reg15] -> reg14",
      "80316 GET      reg14[score] -> reg10",
      "80322 ADD      reg8NaN-> reg10",
      "80326 PUT      reg7[total] = reg10",
      "80332 ADD      reg91-> reg9",
      "80336 LESS THAN      reg9 < reg6 -> reg7",
      "80340 JUMP IF TRUE      reg7 TO: 80185 | 80343"
  ],
  "80332": [
      "80332 ADD      reg91-> reg9",
      "80336 LESS THAN      reg9 < reg6 -> reg7",
      "80340 JUMP IF TRUE      reg7 TO: 80185 | 80343"
  ],
  "80343": [
      "80343 PUSH MEMORY ELEMENT IF INIT      2692 -> reg4",
      "80346 GET      reg4[total] -> reg5",
      "80352 GREATER THAN OR EQUAL      reg5 >= 100 -> reg6",
      "80356 SET MEMORY ELEMENT IF INIT      2694 = reg6",
      "80359 EMPTY OBJECT      -> reg5",
      "80361 PUSH MEMORY ELEMENT IF INIT      2694 -> reg4",
      "80364 PUT      reg5[verdict] = reg4",
      "80370 PUSH MEMORY ELEMENT IF INIT      280 -> reg4",
      "80373 GET      reg4[stringify] -> reg7",
      "80379 NEW ARRAY      1 -> reg8",
      "80382 PUSH MEMORY ELEMENT IF INIT      2692 -> reg9",
      "80385 PUT      reg8[0] = reg9",
      "80389 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg8",
      "80393 SET      reg2 -> reg6",
      "80396 PUT      reg5[raw] = reg6",
      "80402 PUT      reg5[error] = false",
      "80408 JUMP OR RETURN VAL      reg5"
  ],
  "80412": [
      "80412 SET I      null",
      "80414 PUSH F.K      -> reg5",
      "80416 VOID F",
      "80417 SET MEMORY ELEMENT      0 = reg5",
      "80420 EMPTY OBJECT      -> reg5",
      "80422 PUT      reg5[verdict] = false",
      "80428 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "80431 GET      reg6[toString] -> reg8",
      "80437 EMPTY ARRAY      -> reg11",
      "80439 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg11",
      "80443 SET      reg2 -> reg7",
      "80446 PUT      reg5[raw] = reg7",
      "80452 PUT      reg5[error] = true",
      "80458 JUMP OR RETURN VAL      reg5"
  ],
  "80593": [
      "80593 PUSH MEMORY ELEMENT IF INIT      2730 -> reg6",
      "80596 GET      reg6[charCodeAt] -> reg5",
      "80602 NEW ARRAY      1 -> reg8",
      "80605 PUSH MEMORY ELEMENT IF INIT      2732 -> reg9",
      "80608 PUT      reg8[0] = reg9",
      "80612 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "80616 SET      reg2 -> reg4",
      "80619 SET MEMORY ELEMENT IF INIT      2734 = reg4",
      "80622 PUSH MEMORY ELEMENT IF INIT      2734 -> reg4",
      "80625 LESS THAN      reg4 < 128 -> reg5",
      "80629 JUMP IF FALSE      reg5 TO: 80660 | 80632"
  ],
  "80632": [
      "80632 PUSH MEMORY ELEMENT IF INIT      2731 -> reg4",
      "80635 GET      reg4[push] -> reg7",
      "80641 NEW ARRAY      1 -> reg8",
      "80644 PUSH MEMORY ELEMENT IF INIT      2734 -> reg9",
      "80647 PUT      reg8[0] = reg9",
      "80651 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg8",
      "80655 SET      reg2 -> reg5",
      "80658 JUMP      80964",
      "80964 PUSH MEMORY ELEMENT IF INIT      2732 -> reg5",
      "80967 ADD      reg51-> reg5",
      "80971 SET MEMORY ELEMENT IF INIT      2732 = reg5",
      "80974 JUMP      80580",
      "80580 PUSH MEMORY ELEMENT IF INIT      2732 -> reg4",
      "80583 PUSH MEMORY ELEMENT IF INIT      2733 -> reg5",
      "80586 LESS THAN      reg4 < reg5 -> reg6",
      "80590 JUMP IF FALSE      reg6 TO: 80976 | 80593"
  ],
  "80660": [
      "80660 PUSH MEMORY ELEMENT IF INIT      2734 -> reg7",
      "80663 LESS THAN      reg7 < 2048 -> reg5",
      "80667 JUMP IF FALSE      reg5 TO: 80721 | 80670"
  ],
  "80670": [
      "80670 PUSH MEMORY ELEMENT IF INIT      2731 -> reg7",
      "80673 GET      reg7[push] -> reg9",
      "80679 NEW ARRAY      2 -> reg8",
      "80682 PUSH MEMORY ELEMENT IF INIT      2734 -> reg10",
      "80685 RSHIFT      reg10 >> 6 -> reg11",
      "80689 OR      192 | reg11 -> reg10",
      "80693 PUT      reg8[0] = reg10",
      "80697 PUSH MEMORY ELEMENT IF INIT      2734 -> reg10",
      "80700 AND      reg10 & 63 -> reg12",
      "80704 OR      128 | reg12 -> reg10",
      "80708 PUT      reg8[1] = reg10",
      "80712 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg8",
      "80716 SET      reg2 -> reg5",
      "80719 JUMP      80964",
      "80964 PUSH MEMORY ELEMENT IF INIT      2732 -> reg5",
      "80967 ADD      reg51-> reg5",
      "80971 SET MEMORY ELEMENT IF INIT      2732 = reg5",
      "80974 JUMP      80580",
      "80580 PUSH MEMORY ELEMENT IF INIT      2732 -> reg4",
      "80583 PUSH MEMORY ELEMENT IF INIT      2733 -> reg5",
      "80586 LESS THAN      reg4 < reg5 -> reg6",
      "80590 JUMP IF FALSE      reg6 TO: 80976 | 80593"
  ],
  "80721": [
      "80721 PUSH MEMORY ELEMENT IF INIT      2734 -> reg5",
      "80724 LESS THAN      reg5 < 55296 -> reg8",
      "80728 JUMP IF TRUE      reg8 TO: 80741 | 80731"
  ],
  "80731": [
      "80731 PUSH MEMORY ELEMENT IF INIT      2734 -> reg5",
      "80734 GREATER THAN OR EQUAL      reg5 >= 57344 -> reg9",
      "80738 SET      reg9 -> reg8",
      "80741 JUMP IF FALSE      reg8 TO: 80814 | 80744"
  ],
  "80741": ["80741 JUMP IF FALSE      reg8 TO: 80814 | 80744"],
  "80744": [
      "80744 PUSH MEMORY ELEMENT IF INIT      2731 -> reg8",
      "80747 GET      reg8[push] -> reg9",
      "80753 NEW ARRAY      3 -> reg10",
      "80756 PUSH MEMORY ELEMENT IF INIT      2734 -> reg12",
      "80759 RSHIFT      reg12 >> 12 -> reg11",
      "80763 OR      224 | reg11 -> reg12",
      "80767 PUT      reg10[0] = reg12",
      "80771 PUSH MEMORY ELEMENT IF INIT      2734 -> reg12",
      "80774 RSHIFT      reg12 >> 6 -> reg13",
      "80778 AND      reg13 & 63 -> reg12",
      "80782 OR      128 | reg12 -> reg11",
      "80786 PUT      reg10[1] = reg11",
      "80790 PUSH MEMORY ELEMENT IF INIT      2734 -> reg12",
      "80793 AND      reg12 & 63 -> reg11",
      "80797 OR      128 | reg11 -> reg12",
      "80801 PUT      reg10[2] = reg12",
      "80805 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "80809 SET      reg2 -> reg5",
      "80812 JUMP      80964",
      "80964 PUSH MEMORY ELEMENT IF INIT      2732 -> reg5",
      "80967 ADD      reg51-> reg5",
      "80971 SET MEMORY ELEMENT IF INIT      2732 = reg5",
      "80974 JUMP      80580",
      "80580 PUSH MEMORY ELEMENT IF INIT      2732 -> reg4",
      "80583 PUSH MEMORY ELEMENT IF INIT      2733 -> reg5",
      "80586 LESS THAN      reg4 < reg5 -> reg6",
      "80590 JUMP IF FALSE      reg6 TO: 80976 | 80593"
  ],
  "80814": [
      "80814 PUSH MEMORY ELEMENT IF INIT      2734 -> reg5",
      "80817 AND      reg5 & 1023 -> reg9",
      "80821 LSHIFT      reg9 << 10 -> reg5",
      "80825 PUSH MEMORY ELEMENT IF INIT      2730 -> reg10",
      "80828 GET      reg10[charCodeAt] -> reg11",
      "80834 NEW ARRAY      1 -> reg12",
      "80837 PUSH MEMORY ELEMENT IF INIT      2732 -> reg13",
      "80840 ADD      reg131-> reg13",
      "80844 SET MEMORY ELEMENT IF INIT      2732 = reg13",
      "80847 PUT      reg12[0] = reg13",
      "80851 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "80855 SET      reg2 -> reg9",
      "80858 AND      reg9 & 1023 -> reg11",
      "80862 OR      reg5 | reg11 -> reg9",
      "80866 ADD      65536NaN-> reg12",
      "80870 SET MEMORY ELEMENT IF INIT      2735 = reg12",
      "80873 PUSH MEMORY ELEMENT IF INIT      2731 -> reg9",
      "80876 GET      reg9[push] -> reg11",
      "80882 NEW ARRAY      4 -> reg13",
      "80885 PUSH MEMORY ELEMENT IF INIT      2735 -> reg12",
      "80888 RSHIFT      reg12 >> 18 -> reg14",
      "80892 AND      reg14 & 7 -> reg12",
      "80896 OR      240 | reg12 -> reg14",
      "80900 PUT      reg13[0] = reg14",
      "80904 PUSH MEMORY ELEMENT IF INIT      2735 -> reg12",
      "80907 RSHIFT      reg12 >> 12 -> reg14",
      "80911 AND      reg14 & 63 -> reg12",
      "80915 OR      128 | reg12 -> reg14",
      "80919 PUT      reg13[1] = reg14",
      "80923 PUSH MEMORY ELEMENT IF INIT      2735 -> reg12",
      "80926 RSHIFT      reg12 >> 6 -> reg14",
      "80930 AND      reg14 & 63 -> reg12",
      "80934 OR      128 | reg12 -> reg15",
      "80938 PUT      reg13[2] = reg15",
      "80942 PUSH MEMORY ELEMENT IF INIT      2735 -> reg12",
      "80945 AND      reg12 & 63 -> reg14",
      "80949 OR      128 | reg14 -> reg12",
      "80953 PUT      reg13[3] = reg12",
      "80957 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg13",
      "80961 SET      reg2 -> reg5",
      "80964 PUSH MEMORY ELEMENT IF INIT      2732 -> reg5",
      "80967 ADD      reg51-> reg5",
      "80971 SET MEMORY ELEMENT IF INIT      2732 = reg5",
      "80974 JUMP      80580",
      "80580 PUSH MEMORY ELEMENT IF INIT      2732 -> reg4",
      "80583 PUSH MEMORY ELEMENT IF INIT      2733 -> reg5",
      "80586 LESS THAN      reg4 < reg5 -> reg6",
      "80590 JUMP IF FALSE      reg6 TO: 80976 | 80593"
  ],
  "80976": [
      "80976 GET WINDOW PROP      Uint8Array -> reg11",
      "80981 NEW ARRAY      1 -> reg13",
      "80984 PUSH MEMORY ELEMENT IF INIT      2731 -> reg12",
      "80987 PUT      reg13[0] = reg12",
      "80991 BIND APPLY      reg11 reg13 -> 5",
      "80995 JUMP OR RETURN VAL      reg5"
  ],
  "81036": [
      "81036 PUSH MEMORY ELEMENT IF INIT      2708 -> reg7",
      "81039 NEW ARRAY      1 -> reg5",
      "81042 PUSH MEMORY ELEMENT IF INIT      2701 -> reg8",
      "81045 PUT      reg5[0] = reg8",
      "81049 CALL FUNCTION      PTR: reg7 MEM: reg5",
      "81053 SET      reg2 -> reg6",
      "81056 SET      reg6 -> reg4",
      "81059 JUMP      81067",
      "81067 SET MEMORY ELEMENT IF INIT      2701 = reg4",
      "81070 PUSH MEMORY ELEMENT IF INIT      2701 -> reg6",
      "81073 SET MEMORY ELEMENT IF INIT      2709 = reg6",
      "81076 PUSH MEMORY ELEMENT IF INIT      2702 -> reg4",
      "81079 PUSH MEMORY ELEMENT IF INIT      2707 -> reg5",
      "81082 ADD      reg4NaN-> reg9",
      "81086 AND      reg9 & 4294967295 -> reg4",
      "81092 SET MEMORY ELEMENT IF INIT      2710 = reg4",
      "81095 SET MEMORY ELEMENT IF INIT      2711 = 0",
      "81098 PUSH MEMORY ELEMENT IF INIT      2709 -> reg4",
      "81101 GET      reg4[length] -> reg6",
      "81107 GREATER THAN OR EQUAL      reg6 >= 16 -> reg4",
      "81111 JUMP IF FALSE      reg4 TO: 81631 | 81114"
  ],
  "81061": [
      "81061 PUSH MEMORY ELEMENT IF INIT      2701 -> reg5",
      "81064 SET      reg5 -> reg4",
      "81067 SET MEMORY ELEMENT IF INIT      2701 = reg4",
      "81070 PUSH MEMORY ELEMENT IF INIT      2701 -> reg6",
      "81073 SET MEMORY ELEMENT IF INIT      2709 = reg6",
      "81076 PUSH MEMORY ELEMENT IF INIT      2702 -> reg4",
      "81079 PUSH MEMORY ELEMENT IF INIT      2707 -> reg5",
      "81082 ADD      reg4NaN-> reg9",
      "81086 AND      reg9 & 4294967295 -> reg4",
      "81092 SET MEMORY ELEMENT IF INIT      2710 = reg4",
      "81095 SET MEMORY ELEMENT IF INIT      2711 = 0",
      "81098 PUSH MEMORY ELEMENT IF INIT      2709 -> reg4",
      "81101 GET      reg4[length] -> reg6",
      "81107 GREATER THAN OR EQUAL      reg6 >= 16 -> reg4",
      "81111 JUMP IF FALSE      reg4 TO: 81631 | 81114"
  ],
  "81114": [
      "81114 NEW ARRAY      4 -> reg6",
      "81117 PUSH MEMORY ELEMENT IF INIT      2702 -> reg4",
      "81120 PUSH MEMORY ELEMENT IF INIT      2703 -> reg5",
      "81123 ADD      reg4NaN-> reg7",
      "81127 PUSH MEMORY ELEMENT IF INIT      2704 -> reg5",
      "81130 ADD      reg7NaN-> reg8",
      "81134 AND      reg8 & 4294967295 -> reg4",
      "81140 PUT      reg6[0] = reg4",
      "81144 PUSH MEMORY ELEMENT IF INIT      2702 -> reg5",
      "81147 PUSH MEMORY ELEMENT IF INIT      2704 -> reg4",
      "81150 ADD      reg5NaN-> reg7",
      "81154 AND      reg7 & 4294967295 -> reg5",
      "81160 PUT      reg6[1] = reg5",
      "81164 PUSH MEMORY ELEMENT IF INIT      2702 -> reg4",
      "81167 ADD      reg40-> reg8",
      "81171 AND      reg8 & 4294967295 -> reg4",
      "81177 PUT      reg6[2] = reg4",
      "81181 PUSH MEMORY ELEMENT IF INIT      2702 -> reg4",
      "81184 PUSH MEMORY ELEMENT IF INIT      2703 -> reg5",
      "81187 SUBTRACT      reg4 - reg5 -> reg7",
      "81191 AND      reg7 & 4294967295 -> reg4",
      "81197 PUT      reg6[3] = reg4",
      "81201 SET MEMORY ELEMENT IF INIT      2712 = reg6",
      "81204 PUSH MEMORY ELEMENT IF INIT      2701 -> reg4",
      "81207 SET MEMORY ELEMENT IF INIT      2713 = reg4",
      "81210 PUSH MEMORY ELEMENT IF INIT      2713 -> reg4",
      "81213 GET      reg4[length] -> reg6",
      "81219 SUBTRACT      reg6 - 16 -> reg7",
      "81223 SET MEMORY ELEMENT IF INIT      2714 = reg7",
      "81226 SET MEMORY ELEMENT IF INIT      2715 = 0",
      "81229 SET MEMORY ELEMENT IF INIT      2711 = 0",
      "81232 PUSH MEMORY ELEMENT IF INIT      2711 -> reg4",
      "81235 AND      reg4 & 4294967280 -> reg5",
      "81241 PUSH MEMORY ELEMENT IF INIT      2714 -> reg4",
      "81244 LESS THAN OR EQUAL      reg5 <= reg4 -> reg7",
      "81248 JUMP IF FALSE      reg7 TO: 81506 | 81251"
  ],
  "81251": [
      "81251 PUSH MEMORY ELEMENT IF INIT      2711 -> reg5",
      "81254 SET MEMORY ELEMENT IF INIT      2716 = reg5",
      "81257 PUSH MEMORY ELEMENT IF INIT      2713 -> reg5",
      "81260 PUSH MEMORY ELEMENT IF INIT      2716 -> reg8",
      "81263 ADD      reg80-> reg4",
      "81267 GET      reg5[reg4] -> reg6",
      "81271 PUSH MEMORY ELEMENT IF INIT      2713 -> reg4",
      "81274 PUSH MEMORY ELEMENT IF INIT      2716 -> reg7",
      "81277 ADD      reg71-> reg10",
      "81281 GET      reg4[reg10] -> reg5",
      "81285 LSHIFT      reg5 << 8 -> reg4",
      "81289 ADD      reg6NaN-> reg5",
      "81293 SET MEMORY ELEMENT IF INIT      2717 = reg5",
      "81296 PUSH MEMORY ELEMENT IF INIT      2713 -> reg5",
      "81299 PUSH MEMORY ELEMENT IF INIT      2716 -> reg7",
      "81302 ADD      reg72-> reg6",
      "81306 GET      reg5[reg6] -> reg4",
      "81310 PUSH MEMORY ELEMENT IF INIT      2713 -> reg5",
      "81313 PUSH MEMORY ELEMENT IF INIT      2716 -> reg7",
      "81316 ADD      reg73-> reg8",
      "81320 GET      reg5[reg8] -> reg6",
      "81324 LSHIFT      reg6 << 8 -> reg5",
      "81328 ADD      reg4NaN-> reg7",
      "81332 SET MEMORY ELEMENT IF INIT      2718 = reg7",
      "81335 PUSH MEMORY ELEMENT IF INIT      2717 -> reg4",
      "81338 PUSH MEMORY ELEMENT IF INIT      2704 -> reg6",
      "81341 MULTIPLY      reg4 * reg6 -> reg5",
      "81345 PUSH MEMORY ELEMENT IF INIT      2718 -> reg4",
      "81348 PUSH MEMORY ELEMENT IF INIT      2704 -> reg6",
      "81351 MULTIPLY      reg4 * reg6 -> reg8",
      "81355 LSHIFT      reg8 << 16 -> reg4",
      "81359 ADD      reg5NaN-> reg6",
      "81363 SET MEMORY ELEMENT IF INIT      2719 = reg6",
      "81366 PUSH MEMORY ELEMENT IF INIT      2712 -> reg4",
      "81369 PUSH MEMORY ELEMENT IF INIT      2715 -> reg7",
      "81372 GET      reg4[reg7] -> reg6",
      "81376 PUSH MEMORY ELEMENT IF INIT      2719 -> reg4",
      "81379 ADD      reg6NaN-> reg9",
      "81383 AND      reg9 & 4294967295 -> reg4",
      "81389 SET MEMORY ELEMENT IF INIT      2720 = reg4",
      "81392 PUSH MEMORY ELEMENT IF INIT      2720 -> reg4",
      "81395 LSHIFT      reg4 << 13 -> reg5",
      "81399 PUSH MEMORY ELEMENT IF INIT      2720 -> reg4",
      "81402 USHIFT      reg4 >>> 19 -> reg6",
      "81406 OR      reg5 | reg6 -> reg4",
      "81410 SET MEMORY ELEMENT IF INIT      2720 = reg4",
      "81413 PUSH MEMORY ELEMENT IF INIT      2720 -> reg6",
      "81416 AND      reg6 & 65535 -> reg5",
      "81420 SET MEMORY ELEMENT IF INIT      2721 = reg5",
      "81423 PUSH MEMORY ELEMENT IF INIT      2720 -> reg4",
      "81426 USHIFT      reg4 >>> 16 -> reg5",
      "81430 SET MEMORY ELEMENT IF INIT      2722 = reg5",
      "81433 PUSH MEMORY ELEMENT IF INIT      2712 -> reg4",
      "81436 PUSH MEMORY ELEMENT IF INIT      2715 -> reg5",
      "81439 PUSH MEMORY ELEMENT IF INIT      2721 -> reg7",
      "81442 PUSH MEMORY ELEMENT IF INIT      2703 -> reg6",
      "81445 MULTIPLY      reg7 * reg6 -> reg8",
      "81449 PUSH MEMORY ELEMENT IF INIT      2722 -> reg6",
      "81452 PUSH MEMORY ELEMENT IF INIT      2703 -> reg7",
      "81455 MULTIPLY      reg6 * reg7 -> reg10",
      "81459 LSHIFT      reg10 << 16 -> reg6",
      "81463 ADD      reg8NaN-> reg7",
      "81467 AND      reg7 & 4294967295 -> reg6",
      "81473 PUT      reg4[reg5] = reg6",
      "81477 PUSH MEMORY ELEMENT IF INIT      2715 -> reg5",
      "81480 ADD      reg51-> reg4",
      "81484 AND      reg4 & 3 -> reg6",
      "81488 SET MEMORY ELEMENT IF INIT      2715 = reg6",
      "81491 PUSH MEMORY ELEMENT IF INIT      2711 -> reg5",
      "81494 SET      4 -> reg6",
      "81497 ADD      reg5NaN-> reg6",
      "81501 SET MEMORY ELEMENT IF INIT      2711 = reg6",
      "81504 JUMP      81232",
      "81232 PUSH MEMORY ELEMENT IF INIT      2711 -> reg4",
      "81235 AND      reg4 & 4294967280 -> reg5",
      "81241 PUSH MEMORY ELEMENT IF INIT      2714 -> reg4",
      "81244 LESS THAN OR EQUAL      reg5 <= reg4 -> reg7",
      "81248 JUMP IF FALSE      reg7 TO: 81506 | 81251"
  ],
  "81506": [
      "81506 PUSH MEMORY ELEMENT IF INIT      2712 -> reg5",
      "81509 GET      reg5[0] -> reg6",
      "81513 LSHIFT      reg6 << 1 -> reg5",
      "81517 PUSH MEMORY ELEMENT IF INIT      2712 -> reg4",
      "81520 GET      reg4[0] -> reg6",
      "81524 USHIFT      reg6 >>> 31 -> reg4",
      "81528 OR      reg5 | reg4 -> reg6",
      "81532 PUSH MEMORY ELEMENT IF INIT      2712 -> reg4",
      "81535 GET      reg4[1] -> reg5",
      "81539 LSHIFT      reg5 << 7 -> reg7",
      "81543 PUSH MEMORY ELEMENT IF INIT      2712 -> reg4",
      "81546 GET      reg4[1] -> reg5",
      "81550 USHIFT      reg5 >>> 25 -> reg9",
      "81554 OR      reg7 | reg9 -> reg8",
      "81558 ADD      reg6NaN-> reg4",
      "81562 PUSH MEMORY ELEMENT IF INIT      2712 -> reg5",
      "81565 GET      reg5[2] -> reg6",
      "81569 LSHIFT      reg6 << 12 -> reg5",
      "81573 PUSH MEMORY ELEMENT IF INIT      2712 -> reg6",
      "81576 GET      reg6[2] -> reg7",
      "81580 USHIFT      reg7 >>> 20 -> reg6",
      "81584 OR      reg5 | reg6 -> reg7",
      "81588 ADD      reg4NaN-> reg6",
      "81592 PUSH MEMORY ELEMENT IF INIT      2712 -> reg7",
      "81595 GET      reg7[3] -> reg4",
      "81599 LSHIFT      reg4 << 18 -> reg5",
      "81603 PUSH MEMORY ELEMENT IF INIT      2712 -> reg8",
      "81606 GET      reg8[3] -> reg9",
      "81610 USHIFT      reg9 >>> 14 -> reg4",
      "81614 OR      reg5 | reg4 -> reg7",
      "81618 ADD      reg6NaN-> reg4",
      "81622 AND      reg4 & 4294967295 -> reg5",
      "81628 SET MEMORY ELEMENT IF INIT      2710 = reg5",
      "81631 PUSH MEMORY ELEMENT IF INIT      2710 -> reg5",
      "81634 PUSH MEMORY ELEMENT IF INIT      2701 -> reg4",
      "81637 GET      reg4[length] -> reg7",
      "81643 ADD      reg5NaN-> reg4",
      "81647 AND      reg4 & 4294967295 -> reg6",
      "81653 SET MEMORY ELEMENT IF INIT      2710 = reg6",
      "81656 PUSH MEMORY ELEMENT IF INIT      2701 -> reg4",
      "81659 GET      reg4[length] -> reg5",
      "81665 SUBTRACT      reg5 - 4 -> reg4",
      "81669 SET MEMORY ELEMENT IF INIT      2723 = reg4",
      "81672 PUSH MEMORY ELEMENT IF INIT      2711 -> reg4",
      "81675 PUSH MEMORY ELEMENT IF INIT      2723 -> reg5",
      "81678 LESS THAN OR EQUAL      reg4 <= reg5 -> reg7",
      "81682 JUMP IF FALSE      reg7 TO: 81900 | 81685"
  ],
  "81631": [
      "81631 PUSH MEMORY ELEMENT IF INIT      2710 -> reg5",
      "81634 PUSH MEMORY ELEMENT IF INIT      2701 -> reg4",
      "81637 GET      reg4[length] -> reg7",
      "81643 ADD      reg5NaN-> reg4",
      "81647 AND      reg4 & 4294967295 -> reg6",
      "81653 SET MEMORY ELEMENT IF INIT      2710 = reg6",
      "81656 PUSH MEMORY ELEMENT IF INIT      2701 -> reg4",
      "81659 GET      reg4[length] -> reg5",
      "81665 SUBTRACT      reg5 - 4 -> reg4",
      "81669 SET MEMORY ELEMENT IF INIT      2723 = reg4",
      "81672 PUSH MEMORY ELEMENT IF INIT      2711 -> reg4",
      "81675 PUSH MEMORY ELEMENT IF INIT      2723 -> reg5",
      "81678 LESS THAN OR EQUAL      reg4 <= reg5 -> reg7",
      "81682 JUMP IF FALSE      reg7 TO: 81900 | 81685"
  ],
  "81685": [
      "81685 PUSH MEMORY ELEMENT IF INIT      2711 -> reg4",
      "81688 SET MEMORY ELEMENT IF INIT      2724 = reg4",
      "81691 PUSH MEMORY ELEMENT IF INIT      2709 -> reg4",
      "81694 PUSH MEMORY ELEMENT IF INIT      2724 -> reg6",
      "81697 ADD      reg60-> reg7",
      "81701 GET      reg4[reg7] -> reg5",
      "81705 PUSH MEMORY ELEMENT IF INIT      2709 -> reg4",
      "81708 PUSH MEMORY ELEMENT IF INIT      2724 -> reg7",
      "81711 ADD      reg71-> reg8",
      "81715 GET      reg4[reg8] -> reg6",
      "81719 LSHIFT      reg6 << 8 -> reg4",
      "81723 ADD      reg5NaN-> reg6",
      "81727 SET MEMORY ELEMENT IF INIT      2725 = reg6",
      "81730 PUSH MEMORY ELEMENT IF INIT      2709 -> reg8",
      "81733 PUSH MEMORY ELEMENT IF INIT      2724 -> reg5",
      "81736 ADD      reg52-> reg4",
      "81740 GET      reg8[reg4] -> reg6",
      "81744 PUSH MEMORY ELEMENT IF INIT      2709 -> reg4",
      "81747 PUSH MEMORY ELEMENT IF INIT      2724 -> reg7",
      "81750 ADD      reg73-> reg10",
      "81754 GET      reg4[reg10] -> reg5",
      "81758 LSHIFT      reg5 << 8 -> reg4",
      "81762 ADD      reg6NaN-> reg8",
      "81766 SET MEMORY ELEMENT IF INIT      2726 = reg8",
      "81769 PUSH MEMORY ELEMENT IF INIT      2725 -> reg4",
      "81772 PUSH MEMORY ELEMENT IF INIT      2705 -> reg6",
      "81775 MULTIPLY      reg4 * reg6 -> reg5",
      "81779 PUSH MEMORY ELEMENT IF INIT      2726 -> reg6",
      "81782 PUSH MEMORY ELEMENT IF INIT      2705 -> reg4",
      "81785 MULTIPLY      reg6 * reg4 -> reg7",
      "81789 LSHIFT      reg7 << 16 -> reg4",
      "81793 ADD      reg5NaN-> reg6",
      "81797 SET MEMORY ELEMENT IF INIT      2727 = reg6",
      "81800 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "81803 PUSH MEMORY ELEMENT IF INIT      2727 -> reg5",
      "81806 ADD      reg4NaN-> reg6",
      "81810 AND      reg6 & 4294967295 -> reg4",
      "81816 SET MEMORY ELEMENT IF INIT      2710 = reg4",
      "81819 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "81822 LSHIFT      reg4 << 17 -> reg5",
      "81826 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "81829 USHIFT      reg4 >>> 15 -> reg6",
      "81833 OR      reg5 | reg6 -> reg7",
      "81837 SET MEMORY ELEMENT IF INIT      2710 = reg7",
      "81840 PUSH MEMORY ELEMENT IF INIT      2710 -> reg5",
      "81843 AND      reg5 & 65535 -> reg4",
      "81847 PUSH MEMORY ELEMENT IF INIT      2706 -> reg7",
      "81850 MULTIPLY      reg4 * reg7 -> reg5",
      "81854 PUSH MEMORY ELEMENT IF INIT      2710 -> reg7",
      "81857 USHIFT      reg7 >>> 16 -> reg4",
      "81861 PUSH MEMORY ELEMENT IF INIT      2706 -> reg6",
      "81864 MULTIPLY      reg4 * reg6 -> reg9",
      "81868 LSHIFT      reg9 << 16 -> reg4",
      "81872 ADD      reg5NaN-> reg8",
      "81876 AND      reg8 & 4294967295 -> reg4",
      "81882 SET MEMORY ELEMENT IF INIT      2710 = reg4",
      "81885 PUSH MEMORY ELEMENT IF INIT      2711 -> reg5",
      "81888 SET      4 -> reg4",
      "81891 ADD      reg5NaN-> reg4",
      "81895 SET MEMORY ELEMENT IF INIT      2711 = reg4",
      "81898 JUMP      81672",
      "81672 PUSH MEMORY ELEMENT IF INIT      2711 -> reg4",
      "81675 PUSH MEMORY ELEMENT IF INIT      2723 -> reg5",
      "81678 LESS THAN OR EQUAL      reg4 <= reg5 -> reg7",
      "81682 JUMP IF FALSE      reg7 TO: 81900 | 81685"
  ],
  "81900": [
      "81900 PUSH MEMORY ELEMENT IF INIT      2711 -> reg4",
      "81903 PUSH MEMORY ELEMENT IF INIT      2709 -> reg7",
      "81906 GET      reg7[length] -> reg5",
      "81912 LESS THAN      reg4 < reg5 -> reg7",
      "81916 JUMP IF FALSE      reg7 TO: 82030 | 81919"
  ],
  "81919": [
      "81919 PUSH MEMORY ELEMENT IF INIT      2709 -> reg4",
      "81922 PUSH MEMORY ELEMENT IF INIT      2711 -> reg5",
      "81925 GET      reg4[reg5] -> reg6",
      "81929 SET MEMORY ELEMENT IF INIT      2728 = reg6",
      "81932 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "81935 PUSH MEMORY ELEMENT IF INIT      2728 -> reg6",
      "81938 PUSH MEMORY ELEMENT IF INIT      2707 -> reg5",
      "81941 MULTIPLY      reg6 * reg5 -> reg7",
      "81945 ADD      reg4NaN-> reg5",
      "81949 SET MEMORY ELEMENT IF INIT      2710 = reg5",
      "81952 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "81955 LSHIFT      reg4 << 11 -> reg6",
      "81959 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "81962 USHIFT      reg4 >>> 21 -> reg5",
      "81966 OR      reg6 | reg5 -> reg4",
      "81970 SET MEMORY ELEMENT IF INIT      2710 = reg4",
      "81973 PUSH MEMORY ELEMENT IF INIT      2710 -> reg5",
      "81976 AND      reg5 & 65535 -> reg4",
      "81980 PUSH MEMORY ELEMENT IF INIT      2703 -> reg5",
      "81983 MULTIPLY      reg4 * reg5 -> reg6",
      "81987 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "81990 USHIFT      reg4 >>> 16 -> reg5",
      "81994 PUSH MEMORY ELEMENT IF INIT      2703 -> reg7",
      "81997 MULTIPLY      reg5 * reg7 -> reg4",
      "82001 LSHIFT      reg4 << 16 -> reg7",
      "82005 ADD      reg6NaN-> reg4",
      "82009 AND      reg4 & 4294967295 -> reg5",
      "82015 SET MEMORY ELEMENT IF INIT      2710 = reg5",
      "82018 PUSH MEMORY ELEMENT IF INIT      2711 -> reg5",
      "82021 ADD      reg51-> reg5",
      "82025 SET MEMORY ELEMENT IF INIT      2711 = reg5",
      "82028 JUMP      81900",
      "81900 PUSH MEMORY ELEMENT IF INIT      2711 -> reg4",
      "81903 PUSH MEMORY ELEMENT IF INIT      2709 -> reg7",
      "81906 GET      reg7[length] -> reg5",
      "81912 LESS THAN      reg4 < reg5 -> reg7",
      "81916 JUMP IF FALSE      reg7 TO: 82030 | 81919"
  ],
  "82030": [
      "82030 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "82033 PUSH MEMORY ELEMENT IF INIT      2710 -> reg8",
      "82036 USHIFT      reg8 >>> 15 -> reg5",
      "82040 XOR      reg4 ^ reg5 -> reg6",
      "82044 SET MEMORY ELEMENT IF INIT      2710 = reg6",
      "82047 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "82050 AND      reg4 & 65535 -> reg6",
      "82054 PUSH MEMORY ELEMENT IF INIT      2704 -> reg4",
      "82057 MULTIPLY      reg6 * reg4 -> reg5",
      "82061 AND      reg5 & 4294967295 -> reg4",
      "82067 PUSH MEMORY ELEMENT IF INIT      2710 -> reg5",
      "82070 USHIFT      reg5 >>> 16 -> reg6",
      "82074 PUSH MEMORY ELEMENT IF INIT      2704 -> reg5",
      "82077 MULTIPLY      reg6 * reg5 -> reg8",
      "82081 LSHIFT      reg8 << 16 -> reg6",
      "82085 ADD      reg4NaN-> reg5",
      "82089 SET MEMORY ELEMENT IF INIT      2710 = reg5",
      "82092 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "82095 PUSH MEMORY ELEMENT IF INIT      2710 -> reg5",
      "82098 USHIFT      reg5 >>> 13 -> reg6",
      "82102 XOR      reg4 ^ reg6 -> reg5",
      "82106 SET MEMORY ELEMENT IF INIT      2710 = reg5",
      "82109 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "82112 AND      reg4 & 65535 -> reg6",
      "82116 PUSH MEMORY ELEMENT IF INIT      2705 -> reg4",
      "82119 MULTIPLY      reg6 * reg4 -> reg5",
      "82123 AND      reg5 & 4294967295 -> reg4",
      "82129 PUSH MEMORY ELEMENT IF INIT      2710 -> reg5",
      "82132 USHIFT      reg5 >>> 16 -> reg7",
      "82136 PUSH MEMORY ELEMENT IF INIT      2705 -> reg5",
      "82139 MULTIPLY      reg7 * reg5 -> reg8",
      "82143 LSHIFT      reg8 << 16 -> reg5",
      "82147 ADD      reg4NaN-> reg6",
      "82151 SET MEMORY ELEMENT IF INIT      2710 = reg6",
      "82154 PUSH MEMORY ELEMENT IF INIT      2710 -> reg4",
      "82157 PUSH MEMORY ELEMENT IF INIT      2710 -> reg5",
      "82160 USHIFT      reg5 >>> 16 -> reg6",
      "82164 XOR      reg4 ^ reg6 -> reg5",
      "82168 SET MEMORY ELEMENT IF INIT      2710 = reg5",
      "82171 PUSH MEMORY ELEMENT IF INIT      2710 -> reg6",
      "82174 LESS THAN      reg6 < 0 -> reg5",
      "82178 JUMP IF FALSE      reg5 TO: 82195 | 82181"
  ],
  "82181": [
      "82181 PUSH MEMORY ELEMENT IF INIT      2710 -> reg9",
      "82184 ADD      reg94294967296-> reg5",
      "82190 SET      reg5 -> reg4",
      "82193 JUMP      82201",
      "82201 JUMP OR RETURN VAL      reg4"
  ],
  "82195": [
      "82195 PUSH MEMORY ELEMENT IF INIT      2710 -> reg5",
      "82198 SET      reg5 -> reg4",
      "82201 JUMP OR RETURN VAL      reg4"
  ],
  "82238": [
      "82238 GET WINDOW PROP      document -> reg5",
      "82243 GET      reg5[body] -> reg7",
      "82249 GET      reg7[removeChild] -> reg5",
      "82255 NEW ARRAY      1 -> reg6",
      "82258 PUSH H       -> reg11",
      "82260 GET      reg11[_ifr] -> reg8",
      "82266 PUT      reg6[0] = reg8",
      "82270 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg6",
      "82274 SET      reg2 -> reg4",
      "82277 PUSH H       -> reg4",
      "82279 GET WINDOW PROP      undefined -> reg6",
      "82284 PUT      reg4[_ifr] = reg6",
      "82290 JUMP OR RETURN"
  ],
  "82290": ["82290 JUMP OR RETURN"],
  "82331": [
      "82331 INIT FUNCTION STATE      PTR: 82340 NAME:  LEN: 0 -> reg6",
      "82338 JUMP      82400",
      "82400 SET MEMORY ELEMENT IF INIT      2592 = reg6",
      "82403 INIT FUNCTION STATE      PTR: 82412 NAME:  LEN: 1 -> reg4",
      "82410 JUMP      82481",
      "82481 SET MEMORY ELEMENT IF INIT      2593 = reg4",
      "82484 INIT FUNCTION STATE      PTR: 82493 NAME:  LEN: 0 -> reg4",
      "82491 JUMP      83506",
      "83506 SET MEMORY ELEMENT IF INIT      2594 = reg4",
      "83509 INIT FUNCTION STATE      PTR: 83518 NAME:  LEN: 0 -> reg6",
      "83516 JUMP      84920",
      "84920 SET MEMORY ELEMENT IF INIT      2595 = reg6",
      "84923 INIT FUNCTION STATE      PTR: 84932 NAME:  LEN: 0 -> reg4",
      "84930 JUMP      85590",
      "85590 SET MEMORY ELEMENT IF INIT      2596 = reg4",
      "85593 INIT FUNCTION STATE      PTR: 85602 NAME:  LEN: 0 -> reg4",
      "85600 JUMP      85782",
      "85782 SET MEMORY ELEMENT IF INIT      2597 = reg4",
      "85785 INIT FUNCTION STATE      PTR: 85794 NAME:  LEN: 0 -> reg7",
      "85792 JUMP      86108",
      "86108 SET MEMORY ELEMENT IF INIT      2598 = reg7",
      "86111 INIT FUNCTION STATE      PTR: 86120 NAME:  LEN: 0 -> reg4",
      "86118 JUMP      86625",
      "86625 SET MEMORY ELEMENT IF INIT      2599 = reg4",
      "86628 INIT FUNCTION STATE      PTR: 86637 NAME:  LEN: 0 -> reg7",
      "86635 JUMP      86873",
      "86873 SET MEMORY ELEMENT IF INIT      2600 = reg7",
      "86876 INIT FUNCTION STATE      PTR: 86885 NAME:  LEN: 0 -> reg6",
      "86883 JUMP      87473",
      "87473 SET MEMORY ELEMENT IF INIT      2601 = reg6",
      "87476 INIT FUNCTION STATE      PTR: 87485 NAME:  LEN: 0 -> reg6",
      "87483 JUMP      87564",
      "87564 SET MEMORY ELEMENT IF INIT      2602 = reg6",
      "87567 INIT FUNCTION STATE      PTR: 87576 NAME:  LEN: 0 -> reg4",
      "87574 JUMP      88135",
      "88135 SET MEMORY ELEMENT IF INIT      2603 = reg4",
      "88138 INIT FUNCTION STATE      PTR: 88147 NAME:  LEN: 0 -> reg4",
      "88145 JUMP      88504",
      "88504 SET MEMORY ELEMENT IF INIT      2604 = reg4",
      "88507 INIT FUNCTION STATE      PTR: 88516 NAME:  LEN: 0 -> reg4",
      "88514 JUMP      88879",
      "88879 SET MEMORY ELEMENT IF INIT      2605 = reg4",
      "88882 INIT FUNCTION STATE      PTR: 88891 NAME:  LEN: 0 -> reg6",
      "88889 JUMP      89077",
      "89077 SET MEMORY ELEMENT IF INIT      2606 = reg6",
      "89080 INIT FUNCTION STATE      PTR: 89089 NAME:  LEN: 0 -> reg4",
      "89087 JUMP      89426",
      "89426 SET MEMORY ELEMENT IF INIT      2607 = reg4",
      "89429 INIT FUNCTION STATE      PTR: 89438 NAME:  LEN: 0 -> reg4",
      "89436 JUMP      90166",
      "90166 SET MEMORY ELEMENT IF INIT      2608 = reg4",
      "90169 INIT FUNCTION STATE      PTR: 90178 NAME:  LEN: 0 -> reg6",
      "90176 JUMP      91003",
      "91003 SET MEMORY ELEMENT IF INIT      2609 = reg6",
      "91006 INIT FUNCTION STATE      PTR: 91015 NAME:  LEN: 0 -> reg7",
      "91013 JUMP      91435",
      "91435 SET MEMORY ELEMENT IF INIT      2610 = reg7",
      "91438 INIT FUNCTION STATE      PTR: 91447 NAME:  LEN: 0 -> reg4",
      "91445 JUMP      91757",
      "91757 SET MEMORY ELEMENT IF INIT      2611 = reg4",
      "91760 INIT FUNCTION STATE      PTR: 91769 NAME:  LEN: 0 -> reg4",
      "91767 JUMP      92863",
      "92863 SET MEMORY ELEMENT IF INIT      2612 = reg4",
      "92866 INIT FUNCTION STATE      PTR: 92875 NAME:  LEN: 0 -> reg4",
      "92873 JUMP      93133",
      "93133 SET MEMORY ELEMENT IF INIT      2613 = reg4",
      "93136 INIT FUNCTION STATE      PTR: 93145 NAME:  LEN: 0 -> reg6",
      "93143 JUMP      93750",
      "93750 SET MEMORY ELEMENT IF INIT      2614 = reg6",
      "93753 INIT FUNCTION STATE      PTR: 93762 NAME:  LEN: 0 -> reg4",
      "93760 JUMP      94424",
      "94424 SET MEMORY ELEMENT IF INIT      2615 = reg4",
      "94427 INIT FUNCTION STATE      PTR: 94436 NAME:  LEN: 0 -> reg4",
      "94434 JUMP      95031",
      "95031 SET MEMORY ELEMENT IF INIT      2616 = reg4",
      "95034 INIT FUNCTION STATE      PTR: 95043 NAME:  LEN: 0 -> reg4",
      "95041 JUMP      95506",
      "95506 SET MEMORY ELEMENT IF INIT      2617 = reg4",
      "95509 INIT FUNCTION STATE      PTR: 95518 NAME:  LEN: 0 -> reg6",
      "95516 JUMP      95678",
      "95678 SET MEMORY ELEMENT IF INIT      2618 = reg6",
      "95681 INIT FUNCTION STATE      PTR: 95690 NAME:  LEN: 0 -> reg4",
      "95688 JUMP      95906",
      "95906 SET MEMORY ELEMENT IF INIT      2619 = reg4",
      "95909 INIT FUNCTION STATE      PTR: 95918 NAME:  LEN: 0 -> reg4",
      "95916 JUMP      96171",
      "96171 SET MEMORY ELEMENT IF INIT      2620 = reg4",
      "96174 INIT FUNCTION STATE      PTR: 96183 NAME:  LEN: 0 -> reg4",
      "96181 JUMP      96503",
      "96503 SET MEMORY ELEMENT IF INIT      2621 = reg4",
      "96506 INIT FUNCTION STATE      PTR: 96515 NAME:  LEN: 0 -> reg7",
      "96513 JUMP      96855",
      "96855 SET MEMORY ELEMENT IF INIT      2622 = reg7",
      "96858 INIT FUNCTION STATE      PTR: 96867 NAME:  LEN: 0 -> reg6",
      "96865 JUMP      97341",
      "97341 SET MEMORY ELEMENT IF INIT      2623 = reg6",
      "97344 INIT FUNCTION STATE      PTR: 97353 NAME:  LEN: 0 -> reg4",
      "97351 JUMP      97774",
      "97774 SET MEMORY ELEMENT IF INIT      2624 = reg4",
      "97777 INIT FUNCTION STATE      PTR: 97786 NAME:  LEN: 0 -> reg4",
      "97784 JUMP      98182",
      "98182 SET MEMORY ELEMENT IF INIT      2625 = reg4",
      "98185 INIT FUNCTION STATE      PTR: 98194 NAME:  LEN: 0 -> reg6",
      "98192 JUMP      98809",
      "98809 SET MEMORY ELEMENT IF INIT      2626 = reg6",
      "98812 INIT FUNCTION STATE      PTR: 98821 NAME:  LEN: 0 -> reg4",
      "98819 JUMP      99252",
      "99252 SET MEMORY ELEMENT IF INIT      2627 = reg4",
      "99255 INIT FUNCTION STATE      PTR: 99264 NAME:  LEN: 0 -> reg4",
      "99262 JUMP      99741",
      "99741 SET MEMORY ELEMENT IF INIT      2628 = reg4",
      "99744 INIT FUNCTION STATE      PTR: 99753 NAME:  LEN: 0 -> reg4",
      "99751 JUMP      100038",
      "100038 SET MEMORY ELEMENT IF INIT      2629 = reg4",
      "100041 INIT FUNCTION STATE      PTR: 100050 NAME:  LEN: 0 -> reg4",
      "100048 JUMP      100716",
      "100716 SET MEMORY ELEMENT IF INIT      2630 = reg4",
      "100719 INIT FUNCTION STATE      PTR: 100728 NAME:  LEN: 0 -> reg6",
      "100726 JUMP      100973",
      "100973 SET MEMORY ELEMENT IF INIT      2631 = reg6",
      "100976 INIT FUNCTION STATE      PTR: 100985 NAME:  LEN: 0 -> reg4",
      "100983 JUMP      101470",
      "101470 SET MEMORY ELEMENT IF INIT      2632 = reg4",
      "101473 INIT FUNCTION STATE      PTR: 101482 NAME:  LEN: 0 -> reg4",
      "101480 JUMP      101853",
      "101853 SET MEMORY ELEMENT IF INIT      2633 = reg4",
      "101856 INIT FUNCTION STATE      PTR: 101865 NAME:  LEN: 0 -> reg6",
      "101863 JUMP      102501",
      "102501 SET MEMORY ELEMENT IF INIT      2634 = reg6",
      "102504 INIT FUNCTION STATE      PTR: 102513 NAME:  LEN: 0 -> reg4",
      "102511 JUMP      103091",
      "103091 SET MEMORY ELEMENT IF INIT      2635 = reg4",
      "103094 INIT FUNCTION STATE      PTR: 103103 NAME:  LEN: 0 -> reg6",
      "103101 JUMP      103978",
      "103978 SET MEMORY ELEMENT IF INIT      2636 = reg6",
      "103981 INIT FUNCTION STATE      PTR: 103990 NAME:  LEN: 0 -> reg6",
      "103988 JUMP      104962",
      "104962 SET MEMORY ELEMENT IF INIT      2637 = reg6",
      "104965 INIT FUNCTION STATE      PTR: 104974 NAME:  LEN: 0 -> reg6",
      "104972 JUMP      106147",
      "106147 SET MEMORY ELEMENT IF INIT      2638 = reg6",
      "106150 INIT FUNCTION STATE      PTR: 106159 NAME:  LEN: 0 -> reg7",
      "106157 JUMP      106807",
      "106807 SET MEMORY ELEMENT IF INIT      2639 = reg7",
      "106810 INIT FUNCTION STATE      PTR: 106819 NAME:  LEN: 0 -> reg4",
      "106817 JUMP      107097",
      "107097 SET MEMORY ELEMENT IF INIT      2640 = reg4",
      "107100 INIT FUNCTION STATE      PTR: 107109 NAME:  LEN: 0 -> reg8",
      "107107 JUMP      107443",
      "107443 SET MEMORY ELEMENT IF INIT      2641 = reg8",
      "107446 INIT FUNCTION STATE      PTR: 107455 NAME:  LEN: 0 -> reg4",
      "107453 JUMP      108378",
      "108378 SET MEMORY ELEMENT IF INIT      2642 = reg4",
      "108381 INIT FUNCTION STATE      PTR: 108390 NAME:  LEN: 0 -> reg6",
      "108388 JUMP      108866",
      "108866 SET MEMORY ELEMENT IF INIT      2643 = reg6",
      "108869 INIT FUNCTION STATE      PTR: 108878 NAME:  LEN: 0 -> reg6",
      "108876 JUMP      109511",
      "109511 SET MEMORY ELEMENT IF INIT      2644 = reg6",
      "109514 INIT FUNCTION STATE      PTR: 109523 NAME:  LEN: 0 -> reg4",
      "109521 JUMP      110725",
      "110725 SET MEMORY ELEMENT IF INIT      2645 = reg4",
      "110728 INIT FUNCTION STATE      PTR: 110737 NAME:  LEN: 0 -> reg4",
      "110735 JUMP      111253",
      "111253 SET MEMORY ELEMENT IF INIT      2646 = reg4",
      "111256 INIT FUNCTION STATE      PTR: 111265 NAME:  LEN: 0 -> reg4",
      "111263 JUMP      111777",
      "111777 SET MEMORY ELEMENT IF INIT      2647 = reg4",
      "111780 INIT FUNCTION STATE      PTR: 111789 NAME:  LEN: 0 -> reg4",
      "111787 JUMP      112667",
      "112667 SET MEMORY ELEMENT IF INIT      2648 = reg4",
      "112670 INIT FUNCTION STATE      PTR: 112679 NAME:  LEN: 0 -> reg4",
      "112677 JUMP      113178",
      "113178 SET MEMORY ELEMENT IF INIT      2649 = reg4",
      "113181 INIT FUNCTION STATE      PTR: 113190 NAME:  LEN: 0 -> reg4",
      "113188 JUMP      113493",
      "113493 SET MEMORY ELEMENT IF INIT      2650 = reg4",
      "113496 INIT FUNCTION STATE      PTR: 113505 NAME:  LEN: 1 -> reg6",
      "113503 JUMP      116747",
      "116747 SET MEMORY ELEMENT IF INIT      2651 = reg6",
      "116750 INIT FUNCTION STATE      PTR: 116759 NAME:  LEN: 0 -> reg4",
      "116757 JUMP      117111",
      "117111 SET MEMORY ELEMENT IF INIT      2652 = reg4",
      "117114 INIT FUNCTION STATE      PTR: 117123 NAME:  LEN: 0 -> reg7",
      "117121 JUMP      117443",
      "117443 SET MEMORY ELEMENT IF INIT      2653 = reg7",
      "117446 INIT FUNCTION STATE      PTR: 117455 NAME:  LEN: 0 -> reg4",
      "117453 JUMP      118267",
      "118267 SET MEMORY ELEMENT IF INIT      2654 = reg4",
      "118270 INIT FUNCTION STATE      PTR: 118279 NAME:  LEN: 0 -> reg4",
      "118277 JUMP      119342",
      "119342 SET MEMORY ELEMENT IF INIT      2655 = reg4",
      "119345 INIT FUNCTION STATE      PTR: 119354 NAME:  LEN: 0 -> reg4",
      "119352 JUMP      119525",
      "119525 SET MEMORY ELEMENT IF INIT      2656 = reg4",
      "119528 INIT FUNCTION STATE      PTR: 119537 NAME:  LEN: 0 -> reg4",
      "119535 JUMP      119749",
      "119749 SET MEMORY ELEMENT IF INIT      2657 = reg4",
      "119752 INIT FUNCTION STATE      PTR: 119761 NAME:  LEN: 0 -> reg4",
      "119759 JUMP      120246",
      "120246 SET MEMORY ELEMENT IF INIT      2658 = reg4",
      "120249 INIT FUNCTION STATE      PTR: 120258 NAME:  LEN: 0 -> reg4",
      "120256 JUMP      120630",
      "120630 SET MEMORY ELEMENT IF INIT      2659 = reg4",
      "120633 INIT FUNCTION STATE      PTR: 120642 NAME:  LEN: 0 -> reg4",
      "120640 JUMP      121152",
      "121152 SET MEMORY ELEMENT IF INIT      2660 = reg4",
      "121155 INIT FUNCTION STATE      PTR: 121164 NAME:  LEN: 0 -> reg7",
      "121162 JUMP      121936",
      "121936 SET MEMORY ELEMENT IF INIT      2661 = reg7",
      "121939 INIT FUNCTION STATE      PTR: 121948 NAME:  LEN: 0 -> reg4",
      "121946 JUMP      122431",
      "122431 SET MEMORY ELEMENT IF INIT      2662 = reg4",
      "122434 INIT FUNCTION STATE      PTR: 122443 NAME:  LEN: 0 -> reg7",
      "122441 JUMP      123609",
      "123609 SET MEMORY ELEMENT IF INIT      2663 = reg7",
      "123612 INIT FUNCTION STATE      PTR: 123621 NAME:  LEN: 0 -> reg4",
      "123619 JUMP      124896",
      "124896 SET MEMORY ELEMENT IF INIT      2664 = reg4",
      "124899 INIT FUNCTION STATE      PTR: 124908 NAME:  LEN: 0 -> reg4",
      "124906 JUMP      125152",
      "125152 SET MEMORY ELEMENT IF INIT      2665 = reg4",
      "125155 INIT FUNCTION STATE      PTR: 125164 NAME:  LEN: 0 -> reg4",
      "125162 JUMP      125320",
      "125320 SET MEMORY ELEMENT IF INIT      2666 = reg4",
      "125323 INIT FUNCTION STATE      PTR: 125332 NAME:  LEN: 0 -> reg7",
      "125330 JUMP      126011",
      "126011 SET MEMORY ELEMENT IF INIT      2667 = reg7",
      "126014 INIT FUNCTION STATE      PTR: 126023 NAME:  LEN: 0 -> reg4",
      "126021 JUMP      126241",
      "126241 SET MEMORY ELEMENT IF INIT      2668 = reg4",
      "126244 INIT FUNCTION STATE      PTR: 126253 NAME:  LEN: 1 -> reg4",
      "126251 JUMP      126848",
      "126848 SET MEMORY ELEMENT IF INIT      2669 = reg4",
      "126851 INIT FUNCTION STATE      PTR: 126860 NAME:  LEN: 1 -> reg4",
      "126858 JUMP      126895",
      "126895 SET MEMORY ELEMENT IF INIT      2670 = reg4",
      "126898 INIT FUNCTION STATE      PTR: 126907 NAME:  LEN: 0 -> reg6",
      "126905 JUMP      127958",
      "127958 SET MEMORY ELEMENT IF INIT      2671 = reg6",
      "127961 GET WINDOW PROP      Date -> reg7",
      "127966 GET      reg7[now] -> reg4",
      "127972 EMPTY ARRAY      -> reg8",
      "127974 CALL FUNCTION      OBJ: reg7 FUNC: reg4 ARGS: reg8",
      "127978 SET      reg2 -> reg6",
      "127981 SET MEMORY ELEMENT IF INIT      2672 = reg6",
      "127984 PUSH MEMORY ELEMENT IF INIT      2589 -> reg6",
      "127987 GET      reg6[ifr] -> reg9",
      "127993 EMPTY ARRAY      -> reg11",
      "127995 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg11",
      "127999 SET      reg2 -> reg4",
      "128002 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128005 PUT      reg4[type] = ab",
      "128013 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128016 PUT      reg4[action] = allow",
      "128024 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128027 GET WINDOW PROP      window -> reg8",
      "128032 GET      reg8[location] -> reg9",
      "128038 GET      reg9[origin] -> reg8",
      "128044 PUT      reg4[og] = reg8",
      "128050 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "128053 PUT      reg8[sid] = e0{WllSDlo0P1klP0tJBkBFXFZ3fwAYQWspBVpcWiQSWwgHXGNEQEYWMy0UBRtgFkYYKTkvSBUrPHgMAA==}",
      "128061 PUSH MEMORY ELEMENT IF INIT      2594 -> reg8",
      "128064 EMPTY ARRAY      -> reg9",
      "128066 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "128070 SET      reg2 -> reg4",
      "128073 SET MEMORY ELEMENT IF INIT      276 = reg4",
      "128076 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128079 PUSH MEMORY ELEMENT IF INIT      276 -> reg8",
      "128082 PUT      reg4[cmd] = reg8",
      "128088 PUSH MEMORY ELEMENT IF INIT      2588 -> reg10",
      "128091 PUSH MEMORY ELEMENT IF INIT      2670 -> reg8",
      "128094 NEW ARRAY      1 -> reg11",
      "128097 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "128100 NEW ARRAY      1 -> reg15",
      "128103 PUSH MEMORY ELEMENT IF INIT      2623 -> reg13",
      "128106 PUT      reg15[0] = reg13",
      "128110 CALL FUNCTION      PTR: reg12 MEM: reg15",
      "128114 SET      reg2 -> reg9",
      "128117 PUT      reg11[0] = reg9",
      "128121 CALL FUNCTION      PTR: reg8 MEM: reg11",
      "128125 SET      reg2 -> reg4",
      "128128 PUT      reg10[cnf] = reg4",
      "128134 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128137 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128140 NEW ARRAY      1 -> reg10",
      "128143 PUSH MEMORY ELEMENT IF INIT      2669 -> reg11",
      "128146 NEW ARRAY      1 -> reg14",
      "128149 PUSH MEMORY ELEMENT IF INIT      2602 -> reg13",
      "128152 PUT      reg14[0] = reg13",
      "128156 CALL FUNCTION      PTR: reg11 MEM: reg14",
      "128160 SET      reg2 -> reg12",
      "128163 PUT      reg10[0] = reg12",
      "128167 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "128171 SET      reg2 -> reg8",
      "128174 PUT      reg4[wdt] = reg8",
      "128180 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128183 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128186 NEW ARRAY      1 -> reg10",
      "128189 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "128192 NEW ARRAY      1 -> reg15",
      "128195 PUSH MEMORY ELEMENT IF INIT      2603 -> reg13",
      "128198 PUT      reg15[0] = reg13",
      "128202 CALL FUNCTION      PTR: reg12 MEM: reg15",
      "128206 SET      reg2 -> reg11",
      "128209 PUT      reg10[0] = reg11",
      "128213 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "128217 SET      reg2 -> reg8",
      "128220 PUT      reg4[ifw] = reg8",
      "128226 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128229 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128232 NEW ARRAY      1 -> reg10",
      "128235 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "128238 NEW ARRAY      1 -> reg14",
      "128241 PUSH MEMORY ELEMENT IF INIT      2604 -> reg13",
      "128244 PUT      reg14[0] = reg13",
      "128248 CALL FUNCTION      PTR: reg12 MEM: reg14",
      "128252 SET      reg2 -> reg11",
      "128255 PUT      reg10[0] = reg11",
      "128259 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "128263 SET      reg2 -> reg8",
      "128266 PUT      reg4[hsp] = reg8",
      "128272 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128275 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128278 NEW ARRAY      1 -> reg11",
      "128281 PUSH MEMORY ELEMENT IF INIT      2669 -> reg10",
      "128284 NEW ARRAY      1 -> reg13",
      "128287 PUSH MEMORY ELEMENT IF INIT      2605 -> reg14",
      "128290 PUT      reg13[0] = reg14",
      "128294 CALL FUNCTION      PTR: reg10 MEM: reg13",
      "128298 SET      reg2 -> reg12",
      "128301 PUT      reg11[0] = reg12",
      "128305 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "128309 SET      reg2 -> reg8",
      "128312 PUT      reg4[wgp] = reg8",
      "128318 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128321 PUSH MEMORY ELEMENT IF INIT      2670 -> reg10",
      "128324 NEW ARRAY      1 -> reg12",
      "128327 PUSH MEMORY ELEMENT IF INIT      2669 -> reg8",
      "128330 NEW ARRAY      1 -> reg13",
      "128333 PUSH MEMORY ELEMENT IF INIT      2606 -> reg14",
      "128336 PUT      reg13[0] = reg14",
      "128340 CALL FUNCTION      PTR: reg8 MEM: reg13",
      "128344 SET      reg2 -> reg11",
      "128347 PUT      reg12[0] = reg11",
      "128351 CALL FUNCTION      PTR: reg10 MEM: reg12",
      "128355 SET      reg2 -> reg9",
      "128358 PUT      reg4[tnp] = reg9",
      "128364 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128367 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128370 NEW ARRAY      1 -> reg11",
      "128373 PUSH MEMORY ELEMENT IF INIT      2669 -> reg10",
      "128376 NEW ARRAY      1 -> reg13",
      "128379 PUSH MEMORY ELEMENT IF INIT      2607 -> reg14",
      "128382 PUT      reg13[0] = reg14",
      "128386 CALL FUNCTION      PTR: reg10 MEM: reg13",
      "128390 SET      reg2 -> reg12",
      "128393 PUT      reg11[0] = reg12",
      "128397 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "128401 SET      reg2 -> reg8",
      "128404 PUT      reg4[nl] = reg8",
      "128410 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128413 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128416 NEW ARRAY      1 -> reg10",
      "128419 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "128422 NEW ARRAY      1 -> reg14",
      "128425 PUSH MEMORY ELEMENT IF INIT      2608 -> reg15",
      "128428 PUT      reg14[0] = reg15",
      "128432 CALL FUNCTION      PTR: reg12 MEM: reg14",
      "128436 SET      reg2 -> reg11",
      "128439 PUT      reg10[0] = reg11",
      "128443 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "128447 SET      reg2 -> reg8",
      "128450 PUT      reg4[sas] = reg8",
      "128456 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "128459 PUSH MEMORY ELEMENT IF INIT      2670 -> reg10",
      "128462 NEW ARRAY      1 -> reg9",
      "128465 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "128468 NEW ARRAY      1 -> reg13",
      "128471 PUSH MEMORY ELEMENT IF INIT      2610 -> reg14",
      "128474 PUT      reg13[0] = reg14",
      "128478 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "128482 SET      reg2 -> reg11",
      "128485 PUT      reg9[0] = reg11",
      "128489 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "128493 SET      reg2 -> reg4",
      "128496 PUT      reg8[ifc] = reg4",
      "128502 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128505 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128508 NEW ARRAY      1 -> reg11",
      "128511 PUSH MEMORY ELEMENT IF INIT      2669 -> reg16",
      "128514 NEW ARRAY      1 -> reg12",
      "128517 PUSH MEMORY ELEMENT IF INIT      2611 -> reg15",
      "128520 PUT      reg12[0] = reg15",
      "128524 CALL FUNCTION      PTR: reg16 MEM: reg12",
      "128528 SET      reg2 -> reg10",
      "128531 PUT      reg11[0] = reg10",
      "128535 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "128539 SET      reg2 -> reg8",
      "128542 PUT      reg4[puam] = reg8",
      "128548 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128551 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128554 NEW ARRAY      1 -> reg8",
      "128557 PUSH MEMORY ELEMENT IF INIT      2669 -> reg13",
      "128560 NEW ARRAY      1 -> reg12",
      "128563 PUSH MEMORY ELEMENT IF INIT      2613 -> reg14",
      "128566 PUT      reg12[0] = reg14",
      "128570 CALL FUNCTION      PTR: reg13 MEM: reg12",
      "128574 SET      reg2 -> reg11",
      "128577 PUT      reg8[0] = reg11",
      "128581 CALL FUNCTION      PTR: reg9 MEM: reg8",
      "128585 SET      reg2 -> reg10",
      "128588 PUT      reg4[wse] = reg10",
      "128594 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "128597 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128600 NEW ARRAY      1 -> reg10",
      "128603 PUSH MEMORY ELEMENT IF INIT      2669 -> reg14",
      "128606 NEW ARRAY      1 -> reg16",
      "128609 PUSH MEMORY ELEMENT IF INIT      2614 -> reg12",
      "128612 PUT      reg16[0] = reg12",
      "128616 CALL FUNCTION      PTR: reg14 MEM: reg16",
      "128620 SET      reg2 -> reg11",
      "128623 PUT      reg10[0] = reg11",
      "128627 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "128631 SET      reg2 -> reg4",
      "128634 PUT      reg8[dpi] = reg4",
      "128640 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128643 PUSH MEMORY ELEMENT IF INIT      2670 -> reg10",
      "128646 NEW ARRAY      1 -> reg9",
      "128649 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "128652 NEW ARRAY      1 -> reg13",
      "128655 PUSH MEMORY ELEMENT IF INIT      2620 -> reg14",
      "128658 PUT      reg13[0] = reg14",
      "128662 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "128666 SET      reg2 -> reg11",
      "128669 PUT      reg9[0] = reg11",
      "128673 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "128677 SET      reg2 -> reg8",
      "128680 PUT      reg4[fsc] = reg8",
      "128686 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128689 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128692 NEW ARRAY      1 -> reg11",
      "128695 PUSH MEMORY ELEMENT IF INIT      2669 -> reg14",
      "128698 NEW ARRAY      1 -> reg17",
      "128701 PUSH MEMORY ELEMENT IF INIT      2616 -> reg10",
      "128704 PUT      reg17[0] = reg10",
      "128708 CALL FUNCTION      PTR: reg14 MEM: reg17",
      "128712 SET      reg2 -> reg12",
      "128715 PUT      reg11[0] = reg12",
      "128719 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "128723 SET      reg2 -> reg8",
      "128726 PUT      reg4[bfe] = reg8",
      "128732 PUSH MEMORY ELEMENT IF INIT      2588 -> reg9",
      "128735 PUSH MEMORY ELEMENT IF INIT      2670 -> reg4",
      "128738 NEW ARRAY      1 -> reg11",
      "128741 PUSH MEMORY ELEMENT IF INIT      2669 -> reg8",
      "128744 NEW ARRAY      1 -> reg14",
      "128747 PUSH MEMORY ELEMENT IF INIT      2618 -> reg13",
      "128750 PUT      reg14[0] = reg13",
      "128754 CALL FUNCTION      PTR: reg8 MEM: reg14",
      "128758 SET      reg2 -> reg12",
      "128761 PUT      reg11[0] = reg12",
      "128765 CALL FUNCTION      PTR: reg4 MEM: reg11",
      "128769 SET      reg2 -> reg10",
      "128772 PUT      reg9[nppm] = reg10",
      "128778 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128781 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128784 NEW ARRAY      1 -> reg11",
      "128787 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "128790 NEW ARRAY      1 -> reg13",
      "128793 PUSH MEMORY ELEMENT IF INIT      2617 -> reg14",
      "128796 PUT      reg13[0] = reg14",
      "128800 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "128804 SET      reg2 -> reg10",
      "128807 PUT      reg11[0] = reg10",
      "128811 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "128815 SET      reg2 -> reg8",
      "128818 PUT      reg4[npf] = reg8",
      "128824 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128827 PUSH MEMORY ELEMENT IF INIT      2670 -> reg10",
      "128830 NEW ARRAY      1 -> reg9",
      "128833 PUSH MEMORY ELEMENT IF INIT      2669 -> reg11",
      "128836 NEW ARRAY      1 -> reg12",
      "128839 PUSH MEMORY ELEMENT IF INIT      2621 -> reg14",
      "128842 PUT      reg12[0] = reg14",
      "128846 CALL FUNCTION      PTR: reg11 MEM: reg12",
      "128850 SET      reg2 -> reg13",
      "128853 PUT      reg9[0] = reg13",
      "128857 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "128861 SET      reg2 -> reg8",
      "128864 PUT      reg4[crs] = reg8",
      "128870 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128873 PUSH MEMORY ELEMENT IF INIT      2670 -> reg11",
      "128876 NEW ARRAY      1 -> reg12",
      "128879 PUSH MEMORY ELEMENT IF INIT      2669 -> reg10",
      "128882 NEW ARRAY      1 -> reg13",
      "128885 PUSH MEMORY ELEMENT IF INIT      2619 -> reg14",
      "128888 PUT      reg13[0] = reg14",
      "128892 CALL FUNCTION      PTR: reg10 MEM: reg13",
      "128896 SET      reg2 -> reg9",
      "128899 PUT      reg12[0] = reg9",
      "128903 CALL FUNCTION      PTR: reg11 MEM: reg12",
      "128907 SET      reg2 -> reg8",
      "128910 PUT      reg4[npc] = reg8",
      "128916 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "128919 PUSH MEMORY ELEMENT IF INIT      2670 -> reg4",
      "128922 NEW ARRAY      1 -> reg9",
      "128925 PUSH MEMORY ELEMENT IF INIT      2669 -> reg13",
      "128928 NEW ARRAY      1 -> reg17",
      "128931 PUSH MEMORY ELEMENT IF INIT      2622 -> reg12",
      "128934 PUT      reg17[0] = reg12",
      "128938 CALL FUNCTION      PTR: reg13 MEM: reg17",
      "128942 SET      reg2 -> reg11",
      "128945 PUT      reg9[0] = reg11",
      "128949 CALL FUNCTION      PTR: reg4 MEM: reg9",
      "128953 SET      reg2 -> reg10",
      "128956 PUT      reg8[ecp] = reg10",
      "128962 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "128965 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "128968 NEW ARRAY      1 -> reg10",
      "128971 PUSH MEMORY ELEMENT IF INIT      2669 -> reg13",
      "128974 NEW ARRAY      1 -> reg12",
      "128977 PUSH MEMORY ELEMENT IF INIT      2625 -> reg14",
      "128980 PUT      reg12[0] = reg14",
      "128984 CALL FUNCTION      PTR: reg13 MEM: reg12",
      "128988 SET      reg2 -> reg11",
      "128991 PUT      reg10[0] = reg11",
      "128995 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "128999 SET      reg2 -> reg8",
      "129002 PUT      reg4[smc] = reg8",
      "129008 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129011 PUSH MEMORY ELEMENT IF INIT      2670 -> reg10",
      "129014 NEW ARRAY      1 -> reg11",
      "129017 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "129020 NEW ARRAY      1 -> reg13",
      "129023 PUSH MEMORY ELEMENT IF INIT      2626 -> reg14",
      "129026 PUT      reg13[0] = reg14",
      "129030 CALL FUNCTION      PTR: reg9 MEM: reg13",
      "129034 SET      reg2 -> reg12",
      "129037 PUT      reg11[0] = reg12",
      "129041 CALL FUNCTION      PTR: reg10 MEM: reg11",
      "129045 SET      reg2 -> reg8",
      "129048 PUT      reg4[gua] = reg8",
      "129054 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129057 PUSH MEMORY ELEMENT IF INIT      2670 -> reg8",
      "129060 NEW ARRAY      1 -> reg9",
      "129063 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "129066 NEW ARRAY      1 -> reg13",
      "129069 PUSH MEMORY ELEMENT IF INIT      2627 -> reg14",
      "129072 PUT      reg13[0] = reg14",
      "129076 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "129080 SET      reg2 -> reg11",
      "129083 PUT      reg9[0] = reg11",
      "129087 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "129091 SET      reg2 -> reg10",
      "129094 PUT      reg4[csd] = reg10",
      "129100 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "129103 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "129106 NEW ARRAY      1 -> reg10",
      "129109 PUSH MEMORY ELEMENT IF INIT      2669 -> reg15",
      "129112 NEW ARRAY      1 -> reg12",
      "129115 PUSH MEMORY ELEMENT IF INIT      2628 -> reg13",
      "129118 PUT      reg12[0] = reg13",
      "129122 CALL FUNCTION      PTR: reg15 MEM: reg12",
      "129126 SET      reg2 -> reg11",
      "129129 PUT      reg10[0] = reg11",
      "129133 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "129137 SET      reg2 -> reg4",
      "129140 PUT      reg8[wbn] = reg4",
      "129146 PUSH MEMORY ELEMENT IF INIT      2588 -> reg9",
      "129149 PUSH MEMORY ELEMENT IF INIT      2670 -> reg10",
      "129152 NEW ARRAY      1 -> reg8",
      "129155 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "129158 NEW ARRAY      1 -> reg13",
      "129161 PUSH MEMORY ELEMENT IF INIT      2629 -> reg14",
      "129164 PUT      reg13[0] = reg14",
      "129168 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "129172 SET      reg2 -> reg11",
      "129175 PUT      reg8[0] = reg11",
      "129179 CALL FUNCTION      PTR: reg10 MEM: reg8",
      "129183 SET      reg2 -> reg4",
      "129186 PUT      reg9[mnt] = reg4",
      "129192 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129195 PUSH MEMORY ELEMENT IF INIT      2670 -> reg8",
      "129198 NEW ARRAY      1 -> reg10",
      "129201 PUSH MEMORY ELEMENT IF INIT      2669 -> reg13",
      "129204 NEW ARRAY      1 -> reg12",
      "129207 PUSH MEMORY ELEMENT IF INIT      2612 -> reg17",
      "129210 PUT      reg12[0] = reg17",
      "129214 CALL FUNCTION      PTR: reg13 MEM: reg12",
      "129218 SET      reg2 -> reg11",
      "129221 PUT      reg10[0] = reg11",
      "129225 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "129229 SET      reg2 -> reg9",
      "129232 PUT      reg4[puam_dev] = reg9",
      "129238 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129241 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "129244 NEW ARRAY      1 -> reg10",
      "129247 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "129250 NEW ARRAY      1 -> reg15",
      "129253 PUSH MEMORY ELEMENT IF INIT      2597 -> reg13",
      "129256 PUT      reg15[0] = reg13",
      "129260 CALL FUNCTION      PTR: reg12 MEM: reg15",
      "129264 SET      reg2 -> reg11",
      "129267 PUT      reg10[0] = reg11",
      "129271 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "129275 SET      reg2 -> reg8",
      "129278 PUT      reg4[fif] = reg8",
      "129284 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129287 PUSH MEMORY ELEMENT IF INIT      2670 -> reg10",
      "129290 NEW ARRAY      1 -> reg8",
      "129293 PUSH MEMORY ELEMENT IF INIT      2669 -> reg13",
      "129296 NEW ARRAY      1 -> reg12",
      "129299 PUSH MEMORY ELEMENT IF INIT      2630 -> reg16",
      "129302 PUT      reg12[0] = reg16",
      "129306 CALL FUNCTION      PTR: reg13 MEM: reg12",
      "129310 SET      reg2 -> reg11",
      "129313 PUT      reg8[0] = reg11",
      "129317 CALL FUNCTION      PTR: reg10 MEM: reg8",
      "129321 SET      reg2 -> reg9",
      "129324 PUT      reg4[esce] = reg9",
      "129330 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129333 PUSH MEMORY ELEMENT IF INIT      2670 -> reg8",
      "129336 NEW ARRAY      1 -> reg10",
      "129339 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "129342 NEW ARRAY      1 -> reg13",
      "129345 PUSH MEMORY ELEMENT IF INIT      2632 -> reg14",
      "129348 PUT      reg13[0] = reg14",
      "129352 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "129356 SET      reg2 -> reg11",
      "129359 PUT      reg10[0] = reg11",
      "129363 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "129367 SET      reg2 -> reg9",
      "129370 PUT      reg4[snp] = reg9",
      "129376 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129379 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "129382 NEW ARRAY      1 -> reg10",
      "129385 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "129388 NEW ARRAY      1 -> reg11",
      "129391 PUSH MEMORY ELEMENT IF INIT      2598 -> reg14",
      "129394 PUT      reg11[0] = reg14",
      "129398 CALL FUNCTION      PTR: reg12 MEM: reg11",
      "129402 SET      reg2 -> reg13",
      "129405 PUT      reg10[0] = reg13",
      "129409 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "129413 SET      reg2 -> reg8",
      "129416 PUT      reg4[dpv] = reg8",
      "129422 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129425 PUSH MEMORY ELEMENT IF INIT      2670 -> reg10",
      "129428 NEW ARRAY      1 -> reg9",
      "129431 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "129434 NEW ARRAY      1 -> reg13",
      "129437 PUSH MEMORY ELEMENT IF INIT      2634 -> reg15",
      "129440 PUT      reg13[0] = reg15",
      "129444 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "129448 SET      reg2 -> reg11",
      "129451 PUT      reg9[0] = reg11",
      "129455 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "129459 SET      reg2 -> reg8",
      "129462 PUT      reg4[csc] = reg8",
      "129468 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "129471 PUSH MEMORY ELEMENT IF INIT      2670 -> reg10",
      "129474 NEW ARRAY      1 -> reg11",
      "129477 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "129480 NEW ARRAY      1 -> reg13",
      "129483 PUSH MEMORY ELEMENT IF INIT      2599 -> reg15",
      "129486 PUT      reg13[0] = reg15",
      "129490 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "129494 SET      reg2 -> reg9",
      "129497 PUT      reg11[0] = reg9",
      "129501 CALL FUNCTION      PTR: reg10 MEM: reg11",
      "129505 SET      reg2 -> reg4",
      "129508 PUT      reg8[spd] = reg4",
      "129514 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "129517 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "129520 NEW ARRAY      1 -> reg11",
      "129523 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "129526 NEW ARRAY      1 -> reg14",
      "129529 PUSH MEMORY ELEMENT IF INIT      2637 -> reg13",
      "129532 PUT      reg14[0] = reg13",
      "129536 CALL FUNCTION      PTR: reg12 MEM: reg14",
      "129540 SET      reg2 -> reg10",
      "129543 PUT      reg11[0] = reg10",
      "129547 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "129551 SET      reg2 -> reg4",
      "129554 PUT      reg8[gp] = reg4",
      "129560 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "129563 PUSH MEMORY ELEMENT IF INIT      2670 -> reg4",
      "129566 NEW ARRAY      1 -> reg11",
      "129569 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "129572 NEW ARRAY      1 -> reg13",
      "129575 PUSH MEMORY ELEMENT IF INIT      2648 -> reg14",
      "129578 PUT      reg13[0] = reg14",
      "129582 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "129586 SET      reg2 -> reg10",
      "129589 PUT      reg11[0] = reg10",
      "129593 CALL FUNCTION      PTR: reg4 MEM: reg11",
      "129597 SET      reg2 -> reg9",
      "129600 PUT      reg8[pr] = reg9",
      "129606 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "129609 PUSH MEMORY ELEMENT IF INIT      2670 -> reg10",
      "129612 NEW ARRAY      1 -> reg11",
      "129615 PUSH MEMORY ELEMENT IF INIT      2669 -> reg4",
      "129618 NEW ARRAY      1 -> reg13",
      "129621 PUSH MEMORY ELEMENT IF INIT      2652 -> reg15",
      "129624 PUT      reg13[0] = reg15",
      "129628 CALL FUNCTION      PTR: reg4 MEM: reg13",
      "129632 SET      reg2 -> reg12",
      "129635 PUT      reg11[0] = reg12",
      "129639 CALL FUNCTION      PTR: reg10 MEM: reg11",
      "129643 SET      reg2 -> reg9",
      "129646 PUT      reg8[acd] = reg9",
      "129652 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129655 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "129658 NEW ARRAY      1 -> reg10",
      "129661 PUSH MEMORY ELEMENT IF INIT      2669 -> reg12",
      "129664 NEW ARRAY      1 -> reg13",
      "129667 PUSH MEMORY ELEMENT IF INIT      2659 -> reg14",
      "129670 PUT      reg13[0] = reg14",
      "129674 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "129678 SET      reg2 -> reg11",
      "129681 PUT      reg10[0] = reg11",
      "129685 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "129689 SET      reg2 -> reg8",
      "129692 PUT      reg4[bas] = reg8",
      "129698 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129701 PUSH MEMORY ELEMENT IF INIT      2670 -> reg9",
      "129704 NEW ARRAY      1 -> reg10",
      "129707 PUSH MEMORY ELEMENT IF INIT      2669 -> reg14",
      "129710 NEW ARRAY      1 -> reg12",
      "129713 PUSH MEMORY ELEMENT IF INIT      2665 -> reg11",
      "129716 PUT      reg12[0] = reg11",
      "129720 CALL FUNCTION      PTR: reg14 MEM: reg12",
      "129724 SET      reg2 -> reg13",
      "129727 PUT      reg10[0] = reg13",
      "129731 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "129735 SET      reg2 -> reg8",
      "129738 PUT      reg4[ihs] = reg8",
      "129744 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129747 PUSH MEMORY ELEMENT IF INIT      2669 -> reg10",
      "129750 NEW ARRAY      1 -> reg11",
      "129753 PUSH MEMORY ELEMENT IF INIT      2646 -> reg13",
      "129756 PUT      reg11[0] = reg13",
      "129760 CALL FUNCTION      PTR: reg10 MEM: reg11",
      "129764 SET      reg2 -> reg9",
      "129767 PUT      reg4[ddt2] = reg9",
      "129773 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129776 PUSH MEMORY ELEMENT IF INIT      2669 -> reg10",
      "129779 NEW ARRAY      1 -> reg9",
      "129782 PUSH MEMORY ELEMENT IF INIT      2609 -> reg11",
      "129785 PUT      reg9[0] = reg11",
      "129789 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "129793 SET      reg2 -> reg8",
      "129796 PUT      reg4[cpl] = reg8",
      "129802 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "129805 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "129808 NEW ARRAY      1 -> reg11",
      "129811 PUSH MEMORY ELEMENT IF INIT      2595 -> reg12",
      "129814 PUT      reg11[0] = reg12",
      "129818 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "129822 SET      reg2 -> reg4",
      "129825 PUT      reg8[nvg] = reg4",
      "129831 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129834 PUSH MEMORY ELEMENT IF INIT      2669 -> reg10",
      "129837 NEW ARRAY      1 -> reg9",
      "129840 PUSH MEMORY ELEMENT IF INIT      2635 -> reg11",
      "129843 PUT      reg9[0] = reg11",
      "129847 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "129851 SET      reg2 -> reg8",
      "129854 PUT      reg4[sfc] = reg8",
      "129860 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "129863 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "129866 NEW ARRAY      1 -> reg11",
      "129869 PUSH MEMORY ELEMENT IF INIT      2596 -> reg10",
      "129872 PUT      reg11[0] = reg10",
      "129876 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "129880 SET      reg2 -> reg4",
      "129883 PUT      reg8[sbi] = reg4",
      "129889 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "129892 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "129895 NEW ARRAY      1 -> reg12",
      "129898 PUSH MEMORY ELEMENT IF INIT      2624 -> reg10",
      "129901 PUT      reg12[0] = reg10",
      "129905 CALL FUNCTION      PTR: reg9 MEM: reg12",
      "129909 SET      reg2 -> reg4",
      "129912 PUT      reg8[loc] = reg4",
      "129918 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129921 PUSH MEMORY ELEMENT IF INIT      2669 -> reg8",
      "129924 NEW ARRAY      1 -> reg11",
      "129927 PUSH MEMORY ELEMENT IF INIT      2615 -> reg9",
      "129930 PUT      reg11[0] = reg9",
      "129934 CALL FUNCTION      PTR: reg8 MEM: reg11",
      "129938 SET      reg2 -> reg10",
      "129941 PUT      reg4[hcp] = reg10",
      "129947 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129950 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "129953 NEW ARRAY      1 -> reg11",
      "129956 PUSH MEMORY ELEMENT IF INIT      2631 -> reg10",
      "129959 PUT      reg11[0] = reg10",
      "129963 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "129967 SET      reg2 -> reg8",
      "129970 PUT      reg4[phc] = reg8",
      "129976 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "129979 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "129982 NEW ARRAY      1 -> reg10",
      "129985 PUSH MEMORY ELEMENT IF INIT      2633 -> reg13",
      "129988 PUT      reg10[0] = reg13",
      "129992 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "129996 SET      reg2 -> reg8",
      "129999 PUT      reg4[ecs] = reg8",
      "130005 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130008 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130011 NEW ARRAY      1 -> reg10",
      "130014 PUSH MEMORY ELEMENT IF INIT      2636 -> reg11",
      "130017 PUT      reg10[0] = reg11",
      "130021 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "130025 SET      reg2 -> reg8",
      "130028 PUT      reg4[mwa] = reg8",
      "130034 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130037 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130040 NEW ARRAY      1 -> reg11",
      "130043 PUSH MEMORY ELEMENT IF INIT      2600 -> reg10",
      "130046 PUT      reg11[0] = reg10",
      "130050 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "130054 SET      reg2 -> reg8",
      "130057 PUT      reg4[iod] = reg8",
      "130063 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130066 PUSH MEMORY ELEMENT IF INIT      2669 -> reg8",
      "130069 NEW ARRAY      1 -> reg10",
      "130072 PUSH MEMORY ELEMENT IF INIT      2601 -> reg11",
      "130075 PUT      reg10[0] = reg11",
      "130079 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "130083 SET      reg2 -> reg9",
      "130086 PUT      reg4[cdt] = reg9",
      "130092 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130095 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130098 NEW ARRAY      1 -> reg11",
      "130101 PUSH MEMORY ELEMENT IF INIT      2641 -> reg10",
      "130104 PUT      reg11[0] = reg10",
      "130108 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "130112 SET      reg2 -> reg8",
      "130115 PUT      reg4[mtp] = reg8",
      "130121 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130124 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130127 NEW ARRAY      1 -> reg12",
      "130130 PUSH MEMORY ELEMENT IF INIT      2639 -> reg10",
      "130133 PUT      reg12[0] = reg10",
      "130137 CALL FUNCTION      PTR: reg9 MEM: reg12",
      "130141 SET      reg2 -> reg8",
      "130144 PUT      reg4[gcd3] = reg8",
      "130150 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "130153 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130156 NEW ARRAY      1 -> reg10",
      "130159 PUSH MEMORY ELEMENT IF INIT      2642 -> reg11",
      "130162 PUT      reg10[0] = reg11",
      "130166 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "130170 SET      reg2 -> reg4",
      "130173 PUT      reg8[lsr] = reg4",
      "130179 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130182 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130185 NEW ARRAY      1 -> reg12",
      "130188 PUSH MEMORY ELEMENT IF INIT      2640 -> reg10",
      "130191 PUT      reg12[0] = reg10",
      "130195 CALL FUNCTION      PTR: reg9 MEM: reg12",
      "130199 SET      reg2 -> reg8",
      "130202 PUT      reg4[dfp] = reg8",
      "130208 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130211 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130214 NEW ARRAY      1 -> reg10",
      "130217 PUSH MEMORY ELEMENT IF INIT      2643 -> reg11",
      "130220 PUT      reg10[0] = reg11",
      "130224 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "130228 SET      reg2 -> reg8",
      "130231 PUT      reg4[dis] = reg8",
      "130237 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130240 PUSH MEMORY ELEMENT IF INIT      2669 -> reg11",
      "130243 NEW ARRAY      1 -> reg10",
      "130246 PUSH MEMORY ELEMENT IF INIT      2644 -> reg9",
      "130249 PUT      reg10[0] = reg9",
      "130253 CALL FUNCTION      PTR: reg11 MEM: reg10",
      "130257 SET      reg2 -> reg8",
      "130260 PUT      reg4[fis] = reg8",
      "130266 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "130269 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130272 NEW ARRAY      1 -> reg10",
      "130275 PUSH MEMORY ELEMENT IF INIT      2645 -> reg11",
      "130278 PUT      reg10[0] = reg11",
      "130282 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "130286 SET      reg2 -> reg4",
      "130289 PUT      reg8[wv] = reg4",
      "130295 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130298 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130301 NEW ARRAY      1 -> reg10",
      "130304 PUSH MEMORY ELEMENT IF INIT      2647 -> reg13",
      "130307 PUT      reg10[0] = reg13",
      "130311 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "130315 SET      reg2 -> reg8",
      "130318 PUT      reg4[td] = reg8",
      "130324 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130327 PUSH MEMORY ELEMENT IF INIT      2669 -> reg8",
      "130330 NEW ARRAY      1 -> reg10",
      "130333 PUSH MEMORY ELEMENT IF INIT      2649 -> reg12",
      "130336 PUT      reg10[0] = reg12",
      "130340 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "130344 SET      reg2 -> reg9",
      "130347 PUT      reg4[dep] = reg9",
      "130353 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130356 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130359 NEW ARRAY      1 -> reg10",
      "130362 PUSH MEMORY ELEMENT IF INIT      2650 -> reg11",
      "130365 PUT      reg10[0] = reg11",
      "130369 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "130373 SET      reg2 -> reg8",
      "130376 PUT      reg4[ltk] = reg8",
      "130382 PUSH MEMORY ELEMENT IF INIT      2588 -> reg9",
      "130385 PUSH MEMORY ELEMENT IF INIT      2669 -> reg4",
      "130388 NEW ARRAY      1 -> reg13",
      "130391 PUSH MEMORY ELEMENT IF INIT      2653 -> reg10",
      "130394 PUT      reg13[0] = reg10",
      "130398 CALL FUNCTION      PTR: reg4 MEM: reg13",
      "130402 SET      reg2 -> reg8",
      "130405 PUT      reg9[csi] = reg8",
      "130411 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130414 PUSH MEMORY ELEMENT IF INIT      2669 -> reg8",
      "130417 NEW ARRAY      1 -> reg9",
      "130420 PUSH MEMORY ELEMENT IF INIT      2654 -> reg12",
      "130423 PUT      reg9[0] = reg12",
      "130427 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "130431 SET      reg2 -> reg11",
      "130434 PUT      reg4[hef] = reg11",
      "130440 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130443 PUSH MEMORY ELEMENT IF INIT      2669 -> reg10",
      "130446 NEW ARRAY      1 -> reg9",
      "130449 PUSH MEMORY ELEMENT IF INIT      2655 -> reg11",
      "130452 PUT      reg9[0] = reg11",
      "130456 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "130460 SET      reg2 -> reg8",
      "130463 PUT      reg4[dip] = reg8",
      "130469 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "130472 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130475 NEW ARRAY      1 -> reg10",
      "130478 PUSH MEMORY ELEMENT IF INIT      2656 -> reg12",
      "130481 PUT      reg10[0] = reg12",
      "130485 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "130489 SET      reg2 -> reg4",
      "130492 PUT      reg8[jdo] = reg4",
      "130498 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "130501 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130504 NEW ARRAY      1 -> reg13",
      "130507 PUSH MEMORY ELEMENT IF INIT      2657 -> reg10",
      "130510 PUT      reg13[0] = reg10",
      "130514 CALL FUNCTION      PTR: reg9 MEM: reg13",
      "130518 SET      reg2 -> reg4",
      "130521 PUT      reg8[tn] = reg4",
      "130527 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "130530 PUSH MEMORY ELEMENT IF INIT      2669 -> reg4",
      "130533 NEW ARRAY      1 -> reg10",
      "130536 PUSH MEMORY ELEMENT IF INIT      2658 -> reg11",
      "130539 PUT      reg10[0] = reg11",
      "130543 CALL FUNCTION      PTR: reg4 MEM: reg10",
      "130547 SET      reg2 -> reg9",
      "130550 PUT      reg8[kl] = reg9",
      "130556 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130559 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130562 NEW ARRAY      1 -> reg11",
      "130565 PUSH MEMORY ELEMENT IF INIT      2660 -> reg12",
      "130568 PUT      reg11[0] = reg12",
      "130572 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "130576 SET      reg2 -> reg8",
      "130579 PUT      reg4[nps] = reg8",
      "130585 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130588 PUSH MEMORY ELEMENT IF INIT      2669 -> reg11",
      "130591 NEW ARRAY      1 -> reg10",
      "130594 PUSH MEMORY ELEMENT IF INIT      2661 -> reg9",
      "130597 PUT      reg10[0] = reg9",
      "130601 CALL FUNCTION      PTR: reg11 MEM: reg10",
      "130605 SET      reg2 -> reg8",
      "130608 PUT      reg4[sem] = reg8",
      "130614 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130617 PUSH MEMORY ELEMENT IF INIT      2669 -> reg8",
      "130620 NEW ARRAY      1 -> reg10",
      "130623 PUSH MEMORY ELEMENT IF INIT      2662 -> reg11",
      "130626 PUT      reg10[0] = reg11",
      "130630 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "130634 SET      reg2 -> reg9",
      "130637 PUT      reg4[uad] = reg9",
      "130643 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "130646 PUSH MEMORY ELEMENT IF INIT      2669 -> reg10",
      "130649 NEW ARRAY      1 -> reg9",
      "130652 PUSH MEMORY ELEMENT IF INIT      2663 -> reg11",
      "130655 PUT      reg9[0] = reg11",
      "130659 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "130663 SET      reg2 -> reg4",
      "130666 PUT      reg8[nhp] = reg4",
      "130672 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130675 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130678 NEW ARRAY      1 -> reg10",
      "130681 PUSH MEMORY ELEMENT IF INIT      2664 -> reg11",
      "130684 PUT      reg10[0] = reg11",
      "130688 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "130692 SET      reg2 -> reg8",
      "130695 PUT      reg4[eem] = reg8",
      "130701 PUSH MEMORY ELEMENT IF INIT      2588 -> reg10",
      "130704 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130707 NEW ARRAY      1 -> reg11",
      "130710 PUSH MEMORY ELEMENT IF INIT      2666 -> reg8",
      "130713 PUT      reg11[0] = reg8",
      "130717 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "130721 SET      reg2 -> reg4",
      "130724 PUT      reg10[esr] = reg4",
      "130730 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130733 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130736 NEW ARRAY      1 -> reg10",
      "130739 PUSH MEMORY ELEMENT IF INIT      2667 -> reg11",
      "130742 PUT      reg10[0] = reg11",
      "130746 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "130750 SET      reg2 -> reg8",
      "130753 PUT      reg4[ofc] = reg8",
      "130759 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130762 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130765 NEW ARRAY      1 -> reg12",
      "130768 PUSH MEMORY ELEMENT IF INIT      2668 -> reg10",
      "130771 PUT      reg12[0] = reg10",
      "130775 CALL FUNCTION      PTR: reg9 MEM: reg12",
      "130779 SET      reg2 -> reg8",
      "130782 PUT      reg4[vum] = reg8",
      "130788 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "130791 PUSH MEMORY ELEMENT IF INIT      2669 -> reg9",
      "130794 NEW ARRAY      1 -> reg12",
      "130797 PUSH MEMORY ELEMENT IF INIT      2638 -> reg10",
      "130800 PUT      reg12[0] = reg10",
      "130804 CALL FUNCTION      PTR: reg9 MEM: reg12",
      "130808 SET      reg2 -> reg8",
      "130811 PUT      reg4[puam_dev_2] = reg8",
      "130817 SET I      130848",
      "130819 GET WINDOW PROP      Function -> reg11",
      "130824 NEW ARRAY      1 -> reg9",
      "130827 PUT      reg9[0] = class kek extends JSON.stringify {}",
      "130833 BIND APPLY      reg11 reg9 -> 8",
      "130837 EMPTY ARRAY      -> reg9",
      "130839 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "130843 SET      reg2 -> reg4",
      "130846 JUMP      130917",
      "130917 SET I      131579",
      "130919 SET I      130995",
      "130921 GET WINDOW PROP      Object -> reg11",
      "130926 GET      reg11[defineProperty] -> reg10",
      "130932 NEW ARRAY      3 -> reg12",
      "130935 GET WINDOW PROP      window -> reg4",
      "130940 GET      reg4[Crypto] -> reg13",
      "130946 GET      reg13[prototype] -> reg4",
      "130952 PUT      reg12[0] = reg4",
      "130956 PUT      reg12[1] = seedRandomValue",
      "130962 EMPTY OBJECT      -> reg16",
      "130964 INIT FUNCTION STATE      PTR: 130973 NAME:  LEN: 0 -> reg4",
      "130971 JUMP      130976",
      "130976 PUT      reg16[value] = reg4",
      "130982 PUT      reg12[2] = reg16",
      "130986 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg12",
      "130990 SET      reg2 -> reg8",
      "130993 JUMP      131003",
      "131003 SET I      131579",
      "131005 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "131008 PUSH MEMORY ELEMENT IF INIT      2669 -> reg13",
      "131011 NEW ARRAY      1 -> reg10",
      "131014 PUSH MEMORY ELEMENT IF INIT      2651 -> reg16",
      "131017 PUT      reg10[0] = reg16",
      "131021 CALL FUNCTION      PTR: reg13 MEM: reg10",
      "131025 SET      reg2 -> reg8",
      "131028 PUT      reg4[tv] = reg8",
      "131034 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "131037 PUSH MEMORY ELEMENT IF INIT      2669 -> reg4",
      "131040 NEW ARRAY      1 -> reg12",
      "131043 PUSH MEMORY ELEMENT IF INIT      2589 -> reg13",
      "131046 GET      reg13[at] -> reg14",
      "131052 PUT      reg12[0] = reg14",
      "131056 CALL FUNCTION      PTR: reg4 MEM: reg12",
      "131060 SET      reg2 -> reg10",
      "131063 PUT      reg8[ssc] = reg10",
      "131069 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "131072 GET WINDOW PROP      Date -> reg10",
      "131077 GET      reg10[now] -> reg12",
      "131083 EMPTY ARRAY      -> reg14",
      "131085 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg14",
      "131089 SET      reg2 -> reg8",
      "131092 PUSH MEMORY ELEMENT IF INIT      2672 -> reg12",
      "131095 SUBTRACT      reg8 - reg12 -> reg13",
      "131099 PUT      reg4[time] = reg13",
      "131105 PUSH MEMORY ELEMENT IF INIT      2588 -> reg12",
      "131108 GET      reg12[action] -> reg4",
      "131114 STRICT EQUAL      reg4 === block -> reg12",
      "131120 JUMP IF FALSE      reg12 TO: 131335 | 131123"
  ],
  "82447": [
      "82447 SET I      null",
      "82449 PUSH F.K      -> reg5",
      "82451 VOID F",
      "82452 SET MEMORY ELEMENT      0 = reg5",
      "82455 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "82458 GET      reg7[toString] -> reg5",
      "82464 EMPTY ARRAY      -> reg9",
      "82466 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg9",
      "82470 SET      reg2 -> reg4",
      "82473 JUMP OR RETURN VAL      reg4"
  ],
  "82612": [
      "82612 SET I      null",
      "82614 PUSH F.K      -> reg4",
      "82616 VOID F",
      "82617 SET MEMORY ELEMENT      0 = reg4",
      "82620 GET WINDOW PROP      Math -> reg5",
      "82625 GET      reg5[random] -> reg7",
      "82631 EMPTY ARRAY      -> reg8",
      "82633 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "82637 SET      reg2 -> reg4",
      "82640 MULTIPLY      reg4 * 16 -> reg8",
      "82644 OR      reg8 | 0 -> reg4",
      "82648 SET MEMORY ELEMENT IF INIT      2766 = reg4",
      "82651 SET I      null",
      "82653 PUSH MEMORY ELEMENT IF INIT      2766 -> reg8",
      "82656 GET      reg8[toString] -> reg7",
      "82662 NEW ARRAY      1 -> reg9",
      "82665 PUT      reg9[0] = 16",
      "82669 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "82673 SET      reg2 -> reg4",
      "82676 JUMP OR RETURN VAL      reg4"
  ],
  "82740": [
      "82740 PUSH MEMORY ELEMENT IF INIT      2770 -> reg5",
      "82743 SET      reg5 -> reg7",
      "82746 JUMP      82762",
      "82762 SET MEMORY ELEMENT IF INIT      2771 = reg7",
      "82765 PUSH MEMORY ELEMENT IF INIT      2771 -> reg7",
      "82768 GET      reg7[toString] -> reg6",
      "82774 NEW ARRAY      1 -> reg8",
      "82777 PUT      reg8[0] = 16",
      "82781 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg8",
      "82785 SET      reg2 -> reg5",
      "82788 JUMP OR RETURN VAL      reg5"
  ],
  "82748": [
      "82748 PUSH MEMORY ELEMENT IF INIT      2770 -> reg6",
      "82751 AND      reg6 & 3 -> reg5",
      "82755 OR      reg5 | 8 -> reg6",
      "82759 SET      reg6 -> reg7",
      "82762 SET MEMORY ELEMENT IF INIT      2771 = reg7",
      "82765 PUSH MEMORY ELEMENT IF INIT      2771 -> reg7",
      "82768 GET      reg7[toString] -> reg6",
      "82774 NEW ARRAY      1 -> reg8",
      "82777 PUT      reg8[0] = 16",
      "82781 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg8",
      "82785 SET      reg2 -> reg5",
      "82788 JUMP OR RETURN VAL      reg5"
  ],
  "82843": [
      "82843 PUSH MEMORY ELEMENT IF INIT      2777 -> reg4",
      "82846 MOD      reg4 % 2 -> reg5",
      "82850 EQUAL      reg5 == 0 -> reg4",
      "82854 JUMP IF FALSE      reg4 TO: 82902 | 82857"
  ],
  "82857": [
      "82857 PUSH MEMORY ELEMENT IF INIT      2776 -> reg6",
      "82860 GET WINDOW PROP      parseInt -> reg5",
      "82865 NEW ARRAY      2 -> reg7",
      "82868 PUSH MEMORY ELEMENT IF INIT      2774 -> reg8",
      "82871 PUSH MEMORY ELEMENT IF INIT      2777 -> reg11",
      "82874 GET      reg8[reg11] -> reg9",
      "82878 PUT      reg7[0] = reg9",
      "82882 PUT      reg7[1] = 16",
      "82886 CALL FUNCTION      PTR: reg5 MEM: reg7",
      "82890 SET      reg2 -> reg4",
      "82893 ADD      reg6NaN-> reg4",
      "82897 SET MEMORY ELEMENT IF INIT      2776 = reg4",
      "82900 JUMP      82945",
      "82945 PUSH MEMORY ELEMENT IF INIT      2777 -> reg4",
      "82948 SET      reg4 -> reg5",
      "82951 ADD      reg41-> reg4",
      "82955 SET MEMORY ELEMENT IF INIT      2777 = reg4",
      "82958 JUMP      82824",
      "82824 PUSH MEMORY ELEMENT IF INIT      2777 -> reg4",
      "82827 PUSH MEMORY ELEMENT IF INIT      2774 -> reg5",
      "82830 GET      reg5[length] -> reg6",
      "82836 LESS THAN      reg4 < reg6 -> reg7",
      "82840 JUMP IF FALSE      reg7 TO: 82960 | 82843"
  ],
  "82902": [
      "82902 PUSH MEMORY ELEMENT IF INIT      2775 -> reg5",
      "82905 GET WINDOW PROP      parseInt -> reg6",
      "82910 NEW ARRAY      2 -> reg7",
      "82913 PUSH MEMORY ELEMENT IF INIT      2774 -> reg9",
      "82916 PUSH MEMORY ELEMENT IF INIT      2777 -> reg10",
      "82919 GET      reg9[reg10] -> reg11",
      "82923 PUT      reg7[0] = reg11",
      "82927 PUT      reg7[1] = 16",
      "82931 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "82935 SET      reg2 -> reg4",
      "82938 ADD      reg5NaN-> reg4",
      "82942 SET MEMORY ELEMENT IF INIT      2775 = reg4",
      "82945 PUSH MEMORY ELEMENT IF INIT      2777 -> reg4",
      "82948 SET      reg4 -> reg5",
      "82951 ADD      reg41-> reg4",
      "82955 SET MEMORY ELEMENT IF INIT      2777 = reg4",
      "82958 JUMP      82824",
      "82824 PUSH MEMORY ELEMENT IF INIT      2777 -> reg4",
      "82827 PUSH MEMORY ELEMENT IF INIT      2774 -> reg5",
      "82830 GET      reg5[length] -> reg6",
      "82836 LESS THAN      reg4 < reg6 -> reg7",
      "82840 JUMP IF FALSE      reg7 TO: 82960 | 82843"
  ],
  "82960": [
      "82960 PUSH MEMORY ELEMENT IF INIT      2775 -> reg6",
      "82963 MOD      reg6 % 16 -> reg5",
      "82967 GET      reg5[toString] -> reg6",
      "82973 NEW ARRAY      1 -> reg7",
      "82976 PUT      reg7[0] = 16",
      "82980 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "82984 SET      reg2 -> reg4",
      "82987 SET MEMORY ELEMENT IF INIT      2778 = reg4",
      "82990 PUSH MEMORY ELEMENT IF INIT      2776 -> reg6",
      "82993 MOD      reg6 % 16 -> reg7",
      "82997 GET      reg7[toString] -> reg8",
      "83003 NEW ARRAY      1 -> reg9",
      "83006 PUT      reg9[0] = 16",
      "83010 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "83014 SET      reg2 -> reg4",
      "83017 SET MEMORY ELEMENT IF INIT      2779 = reg4",
      "83020 PUSH MEMORY ELEMENT IF INIT      2779 -> reg6",
      "83023 PUSH MEMORY ELEMENT IF INIT      2774 -> reg4",
      "83026 ADD      reg6NaN-> reg8",
      "83030 PUSH MEMORY ELEMENT IF INIT      2778 -> reg4",
      "83033 ADD      reg8NaN-> reg6",
      "83037 JUMP OR RETURN VAL      reg6"
  ],
  "83086": [
      "83086 SET MEMORY ELEMENT IF INIT      2785 = 6",
      "83089 SET MEMORY ELEMENT IF INIT      2784 = true",
      "83092 JUMP      83217",
      "83217 SET MEMORY ELEMENT IF INIT      2786 = 0",
      "83220 PUSH MEMORY ELEMENT IF INIT      2786 -> reg5",
      "83223 PUSH MEMORY ELEMENT IF INIT      2785 -> reg4",
      "83226 LESS THAN      reg5 < reg4 -> reg9",
      "83230 JUMP IF FALSE      reg9 TO: 83270 | 83233"
  ],
  "83094": [
      "83094 PUSH MEMORY ELEMENT IF INIT      2759 -> reg4",
      "83097 GET      reg4[length] -> reg5",
      "83103 STRICT EQUAL      reg5 === 9 -> reg4",
      "83107 JUMP IF FALSE      reg4 TO: 83130 | 83110"
  ],
  "83110": [
      "83110 SET MEMORY ELEMENT IF INIT      2785 = 3",
      "83113 PUSH MEMORY ELEMENT IF INIT      2761 -> reg5",
      "83116 EMPTY ARRAY      -> reg6",
      "83118 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "83122 SET      reg2 -> reg4",
      "83125 SET MEMORY ELEMENT IF INIT      2783 = reg4",
      "83128 JUMP      83217",
      "83217 SET MEMORY ELEMENT IF INIT      2786 = 0",
      "83220 PUSH MEMORY ELEMENT IF INIT      2786 -> reg5",
      "83223 PUSH MEMORY ELEMENT IF INIT      2785 -> reg4",
      "83226 LESS THAN      reg5 < reg4 -> reg9",
      "83230 JUMP IF FALSE      reg9 TO: 83270 | 83233"
  ],
  "83130": [
      "83130 PUSH MEMORY ELEMENT IF INIT      2759 -> reg4",
      "83133 GET      reg4[length] -> reg6",
      "83139 STRICT EQUAL      reg6 === 14 -> reg4",
      "83143 JUMP IF FALSE      reg4 TO: 83156 | 83146"
  ],
  "83146": [
      "83146 SET MEMORY ELEMENT IF INIT      2785 = 3",
      "83149 SET MEMORY ELEMENT IF INIT      2783 = 4",
      "83154 JUMP      83217",
      "83217 SET MEMORY ELEMENT IF INIT      2786 = 0",
      "83220 PUSH MEMORY ELEMENT IF INIT      2786 -> reg5",
      "83223 PUSH MEMORY ELEMENT IF INIT      2785 -> reg4",
      "83226 LESS THAN      reg5 < reg4 -> reg9",
      "83230 JUMP IF FALSE      reg9 TO: 83270 | 83233"
  ],
  "83156": [
      "83156 PUSH MEMORY ELEMENT IF INIT      2759 -> reg5",
      "83159 GET      reg5[length] -> reg6",
      "83165 STRICT EQUAL      reg6 === 19 -> reg4",
      "83169 JUMP IF FALSE      reg4 TO: 83192 | 83172"
  ],
  "83172": [
      "83172 SET MEMORY ELEMENT IF INIT      2785 = 3",
      "83175 PUSH MEMORY ELEMENT IF INIT      2761 -> reg5",
      "83178 EMPTY ARRAY      -> reg6",
      "83180 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "83184 SET      reg2 -> reg4",
      "83187 SET MEMORY ELEMENT IF INIT      2783 = reg4",
      "83190 JUMP      83217",
      "83217 SET MEMORY ELEMENT IF INIT      2786 = 0",
      "83220 PUSH MEMORY ELEMENT IF INIT      2786 -> reg5",
      "83223 PUSH MEMORY ELEMENT IF INIT      2785 -> reg4",
      "83226 LESS THAN      reg5 < reg4 -> reg9",
      "83230 JUMP IF FALSE      reg9 TO: 83270 | 83233"
  ],
  "83192": [
      "83192 PUSH MEMORY ELEMENT IF INIT      2759 -> reg5",
      "83195 GET      reg5[length] -> reg4",
      "83201 STRICT EQUAL      reg4 === 24 -> reg6",
      "83205 JUMP IF FALSE      reg6 TO: 83216 | 83208"
  ],
  "83208": [
      "83208 SET MEMORY ELEMENT IF INIT      2785 = 10",
      "83211 SET MEMORY ELEMENT IF INIT      2784 = true",
      "83214 JUMP      83217",
      "83217 SET MEMORY ELEMENT IF INIT      2786 = 0",
      "83220 PUSH MEMORY ELEMENT IF INIT      2786 -> reg5",
      "83223 PUSH MEMORY ELEMENT IF INIT      2785 -> reg4",
      "83226 LESS THAN      reg5 < reg4 -> reg9",
      "83230 JUMP IF FALSE      reg9 TO: 83270 | 83233"
  ],
  "83216": ["83216 JUMP OR RETURN"],
  "83233": [
      "83233 PUSH MEMORY ELEMENT IF INIT      2783 -> reg4",
      "83236 PUSH MEMORY ELEMENT IF INIT      2760 -> reg7",
      "83239 EMPTY ARRAY      -> reg5",
      "83241 CALL FUNCTION      PTR: reg7 MEM: reg5",
      "83245 SET      reg2 -> reg6",
      "83248 ADD      reg4NaN-> reg6",
      "83252 SET MEMORY ELEMENT IF INIT      2783 = reg6",
      "83255 PUSH MEMORY ELEMENT IF INIT      2786 -> reg4",
      "83258 SET      reg4 -> reg7",
      "83261 ADD      reg41-> reg4",
      "83265 SET MEMORY ELEMENT IF INIT      2786 = reg4",
      "83268 JUMP      83220",
      "83220 PUSH MEMORY ELEMENT IF INIT      2786 -> reg5",
      "83223 PUSH MEMORY ELEMENT IF INIT      2785 -> reg4",
      "83226 LESS THAN      reg5 < reg4 -> reg9",
      "83230 JUMP IF FALSE      reg9 TO: 83270 | 83233"
  ],
  "83270": [
      "83270 PUSH MEMORY ELEMENT IF INIT      2784 -> reg4",
      "83273 STRICT EQUAL      reg4 === true -> reg7",
      "83277 JUMP IF FALSE      reg7 TO: 83303 | 83280"
  ],
  "83280": [
      "83280 PUSH MEMORY ELEMENT IF INIT      2762 -> reg5",
      "83283 NEW ARRAY      1 -> reg6",
      "83286 PUSH MEMORY ELEMENT IF INIT      2783 -> reg7",
      "83289 PUT      reg6[0] = reg7",
      "83293 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "83297 SET      reg2 -> reg4",
      "83300 SET MEMORY ELEMENT IF INIT      2783 = reg4",
      "83303 PUSH MEMORY ELEMENT IF INIT      2759 -> reg6",
      "83306 PUSH MEMORY ELEMENT IF INIT      2783 -> reg4",
      "83309 ADD      -NaN-> reg7",
      "83315 ADD      reg6NaN-> reg7",
      "83319 SET MEMORY ELEMENT IF INIT      2759 = reg7",
      "83322 JUMP OR RETURN"
  ],
  "83303": [
      "83303 PUSH MEMORY ELEMENT IF INIT      2759 -> reg6",
      "83306 PUSH MEMORY ELEMENT IF INIT      2783 -> reg4",
      "83309 ADD      -NaN-> reg7",
      "83315 ADD      reg6NaN-> reg7",
      "83319 SET MEMORY ELEMENT IF INIT      2759 = reg7",
      "83322 JUMP OR RETURN"
  ],
  "83491": [
      "83491 SET I      null",
      "83493 PUSH F.K      -> reg4",
      "83495 VOID F",
      "83496 SET MEMORY ELEMENT      0 = reg4",
      "83499 JUMP OR RETURN VAL      uuf_imanb1"
  ],
  "83601": [
      "83601 SET I      null",
      "83603 PUSH F.K      -> reg5",
      "83605 VOID F",
      "83606 SET MEMORY ELEMENT      0 = reg5",
      "83609 JUMP OR RETURN VAL      unknown"
  ],
  "83655": [
      "83655 SET I      null",
      "83657 PUSH F.K      -> reg5",
      "83659 VOID F",
      "83660 SET MEMORY ELEMENT      0 = reg5",
      "83663 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "83666 GET      reg5[toString] -> reg7",
      "83672 EMPTY ARRAY      -> reg8",
      "83674 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "83678 SET      reg2 -> reg4",
      "83681 JUMP OR RETURN VAL      reg4"
  ],
  "83764": [
      "83764 PUSH MEMORY ELEMENT IF INIT      2815 -> reg6",
      "83767 GET      reg6[getContext] -> reg7",
      "83773 NEW ARRAY      1 -> reg8",
      "83776 PUT      reg8[0] = experimental-webgl2",
      "83782 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "83786 SET      reg2 -> reg11",
      "83789 SET      reg11 -> reg4",
      "83792 JUMP IF TRUE      reg4 TO: 83823 | 83795"
  ],
  "83792": ["83792 JUMP IF TRUE      reg4 TO: 83823 | 83795"],
  "83795": [
      "83795 PUSH MEMORY ELEMENT IF INIT      2815 -> reg8",
      "83798 GET      reg8[getContext] -> reg11",
      "83804 NEW ARRAY      1 -> reg9",
      "83807 PUT      reg9[0] = webgl",
      "83813 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg9",
      "83817 SET      reg2 -> reg7",
      "83820 SET      reg7 -> reg4",
      "83823 JUMP IF TRUE      reg4 TO: 83854 | 83826"
  ],
  "83823": ["83823 JUMP IF TRUE      reg4 TO: 83854 | 83826"],
  "83826": [
      "83826 PUSH MEMORY ELEMENT IF INIT      2815 -> reg11",
      "83829 GET      reg11[getContext] -> reg9",
      "83835 NEW ARRAY      1 -> reg12",
      "83838 PUT      reg12[0] = experimental-webgl",
      "83844 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg12",
      "83848 SET      reg2 -> reg7",
      "83851 SET      reg7 -> reg4",
      "83854 JUMP IF TRUE      reg4 TO: 83885 | 83857"
  ],
  "83854": ["83854 JUMP IF TRUE      reg4 TO: 83885 | 83857"],
  "83857": [
      "83857 PUSH MEMORY ELEMENT IF INIT      2815 -> reg7",
      "83860 GET      reg7[getContext] -> reg12",
      "83866 NEW ARRAY      1 -> reg13",
      "83869 PUT      reg13[0] = moz-webgl",
      "83875 CALL FUNCTION      OBJ: reg7 FUNC: reg12 ARGS: reg13",
      "83879 SET      reg2 -> reg9",
      "83882 SET      reg9 -> reg4",
      "83885 SET MEMORY ELEMENT IF INIT      2816 = reg4",
      "83888 PUSH MEMORY ELEMENT IF INIT      2816 -> reg4",
      "83891 JUMP IF FALSE      reg4 TO: 84002 | 83894"
  ],
  "83885": [
      "83885 SET MEMORY ELEMENT IF INIT      2816 = reg4",
      "83888 PUSH MEMORY ELEMENT IF INIT      2816 -> reg4",
      "83891 JUMP IF FALSE      reg4 TO: 84002 | 83894"
  ],
  "83894": [
      "83894 PUSH MEMORY ELEMENT IF INIT      2816 -> reg9",
      "83897 GET      reg9[getExtension] -> reg13",
      "83903 NEW ARRAY      1 -> reg15",
      "83906 PUT      reg15[0] = WEBGL_debug_renderer_info",
      "83912 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg15",
      "83916 SET      reg2 -> reg4",
      "83919 SET MEMORY ELEMENT IF INIT      2817 = reg4",
      "83922 EMPTY OBJECT      -> reg13",
      "83924 PUSH MEMORY ELEMENT IF INIT      2816 -> reg14",
      "83927 GET      reg14[getParameter] -> reg4",
      "83933 NEW ARRAY      1 -> reg15",
      "83936 PUSH MEMORY ELEMENT IF INIT      2817 -> reg16",
      "83939 GET      reg16[UNMASKED_VENDOR_WEBGL] -> reg17",
      "83945 PUT      reg15[0] = reg17",
      "83949 CALL FUNCTION      OBJ: reg14 FUNC: reg4 ARGS: reg15",
      "83953 SET      reg2 -> reg12",
      "83956 PUT      reg13[vendor] = reg12",
      "83962 PUSH MEMORY ELEMENT IF INIT      2816 -> reg12",
      "83965 GET      reg12[getParameter] -> reg15",
      "83971 NEW ARRAY      1 -> reg16",
      "83974 PUSH MEMORY ELEMENT IF INIT      2817 -> reg17",
      "83977 GET      reg17[UNMASKED_RENDERER_WEBGL] -> reg18",
      "83983 PUT      reg16[0] = reg18",
      "83987 CALL FUNCTION      OBJ: reg12 FUNC: reg15 ARGS: reg16",
      "83991 SET      reg2 -> reg4",
      "83994 PUT      reg13[renderer] = reg4",
      "84000 JUMP OR RETURN VAL      reg13"
  ],
  "84002": [
      "84002 EMPTY OBJECT      -> reg13",
      "84004 PUT      reg13[vendor] = unknown",
      "84012 PUT      reg13[renderer] = unknown",
      "84020 JUMP OR RETURN VAL      reg13"
  ],
  "84024": [
      "84024 SET I      null",
      "84026 PUSH F.K      -> reg4",
      "84028 VOID F",
      "84029 SET MEMORY ELEMENT      0 = reg4",
      "84032 EMPTY OBJECT      -> reg4",
      "84034 PUT      reg4[vendor] = unknown",
      "84042 PUT      reg4[renderer] = unknown",
      "84050 PUSH MEMORY ELEMENT IF INIT      0 -> reg13",
      "84053 GET      reg13[toString] -> reg16",
      "84059 EMPTY ARRAY      -> reg17",
      "84061 CALL FUNCTION      OBJ: reg13 FUNC: reg16 ARGS: reg17",
      "84065 SET      reg2 -> reg15",
      "84068 PUT      reg4[err] = reg15",
      "84074 JUMP OR RETURN VAL      reg4"
  ],
  "84114": [
      "84114 SET I      null",
      "84116 PUSH F.K      -> reg4",
      "84118 VOID F",
      "84119 SET MEMORY ELEMENT      0 = reg4",
      "84122 SET I      null",
      "84124 JUMP OR RETURN VAL      na"
  ],
  "84239": [
      "84239 SET I      null",
      "84241 PUSH F.K      -> reg6",
      "84243 VOID F",
      "84244 SET MEMORY ELEMENT      0 = reg6",
      "84247 SET I      null",
      "84249 JUMP OR RETURN VAL      na"
  ],
  "84342": [
      "84342 SUBTRACT      0 - 1 -> reg4",
      "84346 SET      reg4 -> reg6",
      "84349 SET MEMORY ELEMENT IF INIT      2805 = reg6",
      "84352 PUSH MEMORY ELEMENT IF INIT      2796 -> reg6",
      "84355 EMPTY ARRAY      -> reg8",
      "84357 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "84361 SET      reg2 -> reg4",
      "84364 SET MEMORY ELEMENT IF INIT      2806 = reg4",
      "84367 GET WINDOW PROP      document -> reg4",
      "84372 GET      reg4[readyState] -> reg6",
      "84378 SET MEMORY ELEMENT IF INIT      2807 = reg6",
      "84381 GET WINDOW PROP      setTimeout -> reg4",
      "84386 NEW ARRAY      2 -> reg7",
      "84389 INIT FUNCTION STATE      PTR: 84398 NAME:  LEN: 0 -> reg8",
      "84396 JUMP      84399",
      "84399 PUT      reg7[0] = reg8",
      "84403 PUT      reg7[1] = 10",
      "84407 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "84411 SET      reg2 -> reg6",
      "84414 SET MEMORY ELEMENT IF INIT      2808 = reg6",
      "84417 PUSH MEMORY ELEMENT IF INIT      2795 -> reg6",
      "84420 PUSH MEMORY ELEMENT IF INIT      2801 -> reg7",
      "84423 PUT      reg6[p] = reg7",
      "84429 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84432 PUSH MEMORY ELEMENT IF INIT      2802 -> reg6",
      "84435 PUT      reg4[ua] = reg6",
      "84441 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84444 PUSH MEMORY ELEMENT IF INIT      2803 -> reg4",
      "84447 PUT      reg7[to] = reg4",
      "84453 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84456 PUSH MEMORY ELEMENT IF INIT      2804 -> reg6",
      "84459 PUT      reg4[tz] = reg6",
      "84465 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84468 PUSH MEMORY ELEMENT IF INIT      2797 -> reg6",
      "84471 EMPTY ARRAY      -> reg9",
      "84473 CALL FUNCTION      PTR: reg6 MEM: reg9",
      "84477 SET      reg2 -> reg7",
      "84480 PUT      reg4[ce] = reg7",
      "84486 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84489 PUSH MEMORY ELEMENT IF INIT      2805 -> reg6",
      "84492 PUT      reg4[mtp] = reg6",
      "84498 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84501 PUSH MEMORY ELEMENT IF INIT      2806 -> reg7",
      "84504 PUT      reg4[eo] = reg7",
      "84510 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84513 GET WINDOW PROP      Object -> reg6",
      "84518 GET      reg6[getPrototypeOf] -> reg7",
      "84524 NEW ARRAY      1 -> reg9",
      "84527 GET WINDOW PROP      window -> reg10",
      "84532 GET      reg10[navigator] -> reg11",
      "84538 PUT      reg9[0] = reg11",
      "84542 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "84546 SET      reg2 -> reg8",
      "84549 IN      webdriver inreg8 -> reg9",
      "84555 PUT      reg4[hwd] = reg9",
      "84561 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84564 GET WINDOW PROP      document -> reg8",
      "84569 GET      reg8[head] -> reg7",
      "84575 GET      reg7[innerHTML] -> reg8",
      "84581 GET      reg8[length] -> reg9",
      "84587 PUT      reg4[dhl] = reg9",
      "84593 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84596 GET WINDOW PROP      document -> reg7",
      "84601 GET      reg7[body] -> reg10",
      "84607 GET      reg10[innerHTML] -> reg7",
      "84613 GET      reg7[length] -> reg9",
      "84619 PUT      reg4[dbl] = reg9",
      "84625 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84628 PUSH MEMORY ELEMENT IF INIT      2807 -> reg8",
      "84631 PUT      reg7[drs] = reg8",
      "84637 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84640 PUSH MEMORY ELEMENT IF INIT      2808 -> reg8",
      "84643 PUT      reg4[toid] = reg8",
      "84649 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84652 GET WINDOW PROP      navigator -> reg8",
      "84657 GET      reg8[hardwareConcurrency] -> reg9",
      "84663 PUT      reg7[hc] = reg9",
      "84669 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84672 GET WINDOW PROP      document -> reg4",
      "84677 GET      reg4[referrer] -> reg11",
      "84683 PUT      reg7[rfr] = reg11",
      "84689 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84692 PUSH MEMORY ELEMENT IF INIT      2798 -> reg8",
      "84695 EMPTY ARRAY      -> reg9",
      "84697 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "84701 SET      reg2 -> reg7",
      "84704 PUT      reg4[gpu] = reg7",
      "84710 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84713 PUSH MEMORY ELEMENT IF INIT      2799 -> reg8",
      "84716 EMPTY ARRAY      -> reg9",
      "84718 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "84722 SET      reg2 -> reg4",
      "84725 PUT      reg7[mem] = reg4",
      "84731 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84734 PUSH MEMORY ELEMENT IF INIT      2800 -> reg8",
      "84737 EMPTY ARRAY      -> reg9",
      "84739 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "84743 SET      reg2 -> reg7",
      "84746 PUT      reg4[nt] = reg7",
      "84752 SET I      84782",
      "84754 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84757 GET WINDOW PROP      Error -> reg4",
      "84762 GET      reg4[prepareStackTrace] -> reg8",
      "84768 NOT      reg8 -> reg4",
      "84771 NOT      reg4 -> reg8",
      "84774 PUT      reg7[pst] = reg8",
      "84780 JUMP      84817",
      "84817 SET I      84869",
      "84819 EMPTY OBJECT      -> reg4",
      "84821 PUT      reg4[verdict] = false",
      "84827 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "84830 GET      reg11[stringify] -> reg9",
      "84836 NEW ARRAY      1 -> reg10",
      "84839 PUSH MEMORY ELEMENT IF INIT      2795 -> reg13",
      "84842 PUT      reg10[0] = reg13",
      "84846 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg10",
      "84850 SET      reg2 -> reg8",
      "84853 PUT      reg4[raw] = reg8",
      "84859 PUT      reg4[error] = false",
      "84865 JUMP OR RETURN VAL      reg4"
  ],
  "84349": [
      "84349 SET MEMORY ELEMENT IF INIT      2805 = reg6",
      "84352 PUSH MEMORY ELEMENT IF INIT      2796 -> reg6",
      "84355 EMPTY ARRAY      -> reg8",
      "84357 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "84361 SET      reg2 -> reg4",
      "84364 SET MEMORY ELEMENT IF INIT      2806 = reg4",
      "84367 GET WINDOW PROP      document -> reg4",
      "84372 GET      reg4[readyState] -> reg6",
      "84378 SET MEMORY ELEMENT IF INIT      2807 = reg6",
      "84381 GET WINDOW PROP      setTimeout -> reg4",
      "84386 NEW ARRAY      2 -> reg7",
      "84389 INIT FUNCTION STATE      PTR: 84398 NAME:  LEN: 0 -> reg8",
      "84396 JUMP      84399",
      "84399 PUT      reg7[0] = reg8",
      "84403 PUT      reg7[1] = 10",
      "84407 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "84411 SET      reg2 -> reg6",
      "84414 SET MEMORY ELEMENT IF INIT      2808 = reg6",
      "84417 PUSH MEMORY ELEMENT IF INIT      2795 -> reg6",
      "84420 PUSH MEMORY ELEMENT IF INIT      2801 -> reg7",
      "84423 PUT      reg6[p] = reg7",
      "84429 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84432 PUSH MEMORY ELEMENT IF INIT      2802 -> reg6",
      "84435 PUT      reg4[ua] = reg6",
      "84441 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84444 PUSH MEMORY ELEMENT IF INIT      2803 -> reg4",
      "84447 PUT      reg7[to] = reg4",
      "84453 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84456 PUSH MEMORY ELEMENT IF INIT      2804 -> reg6",
      "84459 PUT      reg4[tz] = reg6",
      "84465 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84468 PUSH MEMORY ELEMENT IF INIT      2797 -> reg6",
      "84471 EMPTY ARRAY      -> reg9",
      "84473 CALL FUNCTION      PTR: reg6 MEM: reg9",
      "84477 SET      reg2 -> reg7",
      "84480 PUT      reg4[ce] = reg7",
      "84486 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84489 PUSH MEMORY ELEMENT IF INIT      2805 -> reg6",
      "84492 PUT      reg4[mtp] = reg6",
      "84498 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84501 PUSH MEMORY ELEMENT IF INIT      2806 -> reg7",
      "84504 PUT      reg4[eo] = reg7",
      "84510 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84513 GET WINDOW PROP      Object -> reg6",
      "84518 GET      reg6[getPrototypeOf] -> reg7",
      "84524 NEW ARRAY      1 -> reg9",
      "84527 GET WINDOW PROP      window -> reg10",
      "84532 GET      reg10[navigator] -> reg11",
      "84538 PUT      reg9[0] = reg11",
      "84542 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "84546 SET      reg2 -> reg8",
      "84549 IN      webdriver inreg8 -> reg9",
      "84555 PUT      reg4[hwd] = reg9",
      "84561 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84564 GET WINDOW PROP      document -> reg8",
      "84569 GET      reg8[head] -> reg7",
      "84575 GET      reg7[innerHTML] -> reg8",
      "84581 GET      reg8[length] -> reg9",
      "84587 PUT      reg4[dhl] = reg9",
      "84593 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84596 GET WINDOW PROP      document -> reg7",
      "84601 GET      reg7[body] -> reg10",
      "84607 GET      reg10[innerHTML] -> reg7",
      "84613 GET      reg7[length] -> reg9",
      "84619 PUT      reg4[dbl] = reg9",
      "84625 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84628 PUSH MEMORY ELEMENT IF INIT      2807 -> reg8",
      "84631 PUT      reg7[drs] = reg8",
      "84637 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84640 PUSH MEMORY ELEMENT IF INIT      2808 -> reg8",
      "84643 PUT      reg4[toid] = reg8",
      "84649 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84652 GET WINDOW PROP      navigator -> reg8",
      "84657 GET      reg8[hardwareConcurrency] -> reg9",
      "84663 PUT      reg7[hc] = reg9",
      "84669 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84672 GET WINDOW PROP      document -> reg4",
      "84677 GET      reg4[referrer] -> reg11",
      "84683 PUT      reg7[rfr] = reg11",
      "84689 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84692 PUSH MEMORY ELEMENT IF INIT      2798 -> reg8",
      "84695 EMPTY ARRAY      -> reg9",
      "84697 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "84701 SET      reg2 -> reg7",
      "84704 PUT      reg4[gpu] = reg7",
      "84710 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84713 PUSH MEMORY ELEMENT IF INIT      2799 -> reg8",
      "84716 EMPTY ARRAY      -> reg9",
      "84718 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "84722 SET      reg2 -> reg4",
      "84725 PUT      reg7[mem] = reg4",
      "84731 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84734 PUSH MEMORY ELEMENT IF INIT      2800 -> reg8",
      "84737 EMPTY ARRAY      -> reg9",
      "84739 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "84743 SET      reg2 -> reg7",
      "84746 PUT      reg4[nt] = reg7",
      "84752 SET I      84782",
      "84754 PUSH MEMORY ELEMENT IF INIT      2795 -> reg7",
      "84757 GET WINDOW PROP      Error -> reg4",
      "84762 GET      reg4[prepareStackTrace] -> reg8",
      "84768 NOT      reg8 -> reg4",
      "84771 NOT      reg4 -> reg8",
      "84774 PUT      reg7[pst] = reg8",
      "84780 JUMP      84817",
      "84817 SET I      84869",
      "84819 EMPTY OBJECT      -> reg4",
      "84821 PUT      reg4[verdict] = false",
      "84827 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "84830 GET      reg11[stringify] -> reg9",
      "84836 NEW ARRAY      1 -> reg10",
      "84839 PUSH MEMORY ELEMENT IF INIT      2795 -> reg13",
      "84842 PUT      reg10[0] = reg13",
      "84846 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg10",
      "84850 SET      reg2 -> reg8",
      "84853 PUT      reg4[raw] = reg8",
      "84859 PUT      reg4[error] = false",
      "84865 JUMP OR RETURN VAL      reg4"
  ],
  "84782": [
      "84782 SET I      84869",
      "84784 PUSH F.K      -> reg4",
      "84786 VOID F",
      "84787 SET MEMORY ELEMENT      0 = reg4",
      "84790 PUSH MEMORY ELEMENT IF INIT      2795 -> reg4",
      "84793 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "84796 GET      reg7[toString] -> reg9",
      "84802 EMPTY ARRAY      -> reg10",
      "84804 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "84808 SET      reg2 -> reg8",
      "84811 PUT      reg4[pst] = reg8",
      "84817 SET I      84869",
      "84819 EMPTY OBJECT      -> reg4",
      "84821 PUT      reg4[verdict] = false",
      "84827 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "84830 GET      reg11[stringify] -> reg9",
      "84836 NEW ARRAY      1 -> reg10",
      "84839 PUSH MEMORY ELEMENT IF INIT      2795 -> reg13",
      "84842 PUT      reg10[0] = reg13",
      "84846 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg10",
      "84850 SET      reg2 -> reg8",
      "84853 PUT      reg4[raw] = reg8",
      "84859 PUT      reg4[error] = false",
      "84865 JUMP OR RETURN VAL      reg4"
  ],
  "84869": [
      "84869 SET I      null",
      "84871 PUSH F.K      -> reg4",
      "84873 VOID F",
      "84874 SET MEMORY ELEMENT      0 = reg4",
      "84877 EMPTY OBJECT      -> reg4",
      "84879 PUT      reg4[verdict] = false",
      "84885 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "84888 GET      reg8[toString] -> reg12",
      "84894 EMPTY ARRAY      -> reg13",
      "84896 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg13",
      "84900 SET      reg2 -> reg9",
      "84903 PUT      reg4[raw] = reg9",
      "84909 PUT      reg4[error] = true",
      "84915 JUMP OR RETURN VAL      reg4"
  ],
  "84978": [
      "84978 PUSH MEMORY ELEMENT IF INIT      2834 -> reg6",
      "84981 PUSH MEMORY ELEMENT IF INIT      2833 -> reg7",
      "84984 GET      reg7[contentWindow] -> reg11",
      "84990 GET      reg11[Function] -> reg7",
      "84996 GET      reg7[prototype] -> reg9",
      "85002 GET      reg9[toString] -> reg7",
      "85008 GET      reg7[call] -> reg8",
      "85014 NEW ARRAY      1 -> reg9",
      "85017 GET WINDOW PROP      window -> reg10",
      "85022 GET      reg10[chrome] -> reg12",
      "85028 GET      reg12[csi] -> reg10",
      "85034 PUT      reg9[0] = reg10",
      "85038 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "85042 SET      reg2 -> reg4",
      "85045 PUT      reg6[csi] = reg4",
      "85051 PUSH MEMORY ELEMENT IF INIT      2834 -> reg8",
      "85054 PUSH MEMORY ELEMENT IF INIT      2833 -> reg6",
      "85057 GET      reg6[contentWindow] -> reg9",
      "85063 GET      reg9[Function] -> reg6",
      "85069 GET      reg6[prototype] -> reg10",
      "85075 GET      reg10[toString] -> reg6",
      "85081 GET      reg6[call] -> reg10",
      "85087 NEW ARRAY      1 -> reg9",
      "85090 GET WINDOW PROP      window -> reg11",
      "85095 GET      reg11[chrome] -> reg12",
      "85101 GET      reg12[app] -> reg13",
      "85107 GET      reg13[getDetails] -> reg11",
      "85113 PUT      reg9[0] = reg11",
      "85117 CALL FUNCTION      OBJ: reg6 FUNC: reg10 ARGS: reg9",
      "85121 SET      reg2 -> reg4",
      "85124 PUT      reg8[getDetails] = reg4",
      "85130 PUSH MEMORY ELEMENT IF INIT      2834 -> reg9",
      "85133 PUSH MEMORY ELEMENT IF INIT      2833 -> reg8",
      "85136 GET      reg8[contentWindow] -> reg10",
      "85142 GET      reg10[Function] -> reg8",
      "85148 GET      reg8[prototype] -> reg10",
      "85154 GET      reg10[toString] -> reg8",
      "85160 GET      reg8[call] -> reg12",
      "85166 NEW ARRAY      1 -> reg10",
      "85169 GET WINDOW PROP      window -> reg13",
      "85174 GET      reg13[chrome] -> reg14",
      "85180 GET      reg14[loadTimes] -> reg11",
      "85186 PUT      reg10[0] = reg11",
      "85190 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg10",
      "85194 SET      reg2 -> reg4",
      "85197 PUT      reg9[loadTimes] = reg4",
      "85203 PUSH MEMORY ELEMENT IF INIT      2834 -> reg4",
      "85206 PUSH MEMORY ELEMENT IF INIT      2833 -> reg9",
      "85209 GET      reg9[contentWindow] -> reg11",
      "85215 GET      reg11[Function] -> reg9",
      "85221 GET      reg9[prototype] -> reg11",
      "85227 GET      reg11[toString] -> reg12",
      "85233 GET      reg12[call] -> reg11",
      "85239 NEW ARRAY      1 -> reg14",
      "85242 GET WINDOW PROP      document -> reg9",
      "85247 GET      reg9[createElement] -> reg13",
      "85253 PUT      reg14[0] = reg13",
      "85257 CALL FUNCTION      OBJ: reg12 FUNC: reg11 ARGS: reg14",
      "85261 SET      reg2 -> reg10",
      "85264 PUT      reg4[proxFn1] = reg10",
      "85270 PUSH MEMORY ELEMENT IF INIT      2834 -> reg4",
      "85273 PUSH MEMORY ELEMENT IF INIT      2833 -> reg11",
      "85276 GET      reg11[contentWindow] -> reg10",
      "85282 GET      reg10[Function] -> reg11",
      "85288 GET      reg11[prototype] -> reg10",
      "85294 GET      reg10[toString] -> reg11",
      "85300 GET      reg11[call] -> reg13",
      "85306 NEW ARRAY      1 -> reg10",
      "85309 GET WINDOW PROP      HTMLMediaElement -> reg14",
      "85314 GET      reg14[prototype] -> reg15",
      "85320 GET      reg15[canPlayType] -> reg14",
      "85326 PUT      reg10[0] = reg14",
      "85330 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg10",
      "85334 SET      reg2 -> reg9",
      "85337 PUT      reg4[proxFn2] = reg9",
      "85343 PUSH MEMORY ELEMENT IF INIT      2834 -> reg9",
      "85346 PUSH MEMORY ELEMENT IF INIT      2833 -> reg13",
      "85349 GET      reg13[contentWindow] -> reg15",
      "85355 GET      reg15[Function] -> reg4",
      "85361 GET      reg4[prototype] -> reg13",
      "85367 GET      reg13[toString] -> reg4",
      "85373 GET      reg4[call] -> reg14",
      "85379 NEW ARRAY      1 -> reg13",
      "85382 GET WINDOW PROP      navigator -> reg15",
      "85387 GET      reg15[permissions] -> reg16",
      "85393 GET      reg16[query] -> reg15",
      "85399 PUT      reg13[0] = reg15",
      "85403 CALL FUNCTION      OBJ: reg4 FUNC: reg14 ARGS: reg13",
      "85407 SET      reg2 -> reg10",
      "85410 PUT      reg9[proxFn3] = reg10",
      "85416 PUSH MEMORY ELEMENT IF INIT      2834 -> reg9",
      "85419 PUSH MEMORY ELEMENT IF INIT      2833 -> reg13",
      "85422 GET      reg13[contentWindow] -> reg14",
      "85428 GET      reg14[Function] -> reg13",
      "85434 GET      reg13[prototype] -> reg14",
      "85440 GET      reg14[toString] -> reg15",
      "85446 GET      reg15[call] -> reg13",
      "85452 NEW ARRAY      1 -> reg14",
      "85455 GET WINDOW PROP      WebGL2RenderingContext -> reg18",
      "85460 GET      reg18[prototype] -> reg17",
      "85466 GET      reg17[getParameter] -> reg16",
      "85472 PUT      reg14[0] = reg16",
      "85476 CALL FUNCTION      OBJ: reg15 FUNC: reg13 ARGS: reg14",
      "85480 SET      reg2 -> reg10",
      "85483 PUT      reg9[proxFn4] = reg10",
      "85489 EMPTY OBJECT      -> reg10",
      "85491 PUT      reg10[verdict] = false",
      "85497 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "85500 GET      reg13[stringify] -> reg14",
      "85506 NEW ARRAY      1 -> reg16",
      "85509 PUSH MEMORY ELEMENT IF INIT      2834 -> reg17",
      "85512 PUT      reg16[0] = reg17",
      "85516 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg16",
      "85520 SET      reg2 -> reg9",
      "85523 PUT      reg10[raw] = reg9",
      "85529 PUT      reg10[error] = false",
      "85535 JUMP OR RETURN VAL      reg10"
  ],
  "85489": [
      "85489 EMPTY OBJECT      -> reg10",
      "85491 PUT      reg10[verdict] = false",
      "85497 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "85500 GET      reg13[stringify] -> reg14",
      "85506 NEW ARRAY      1 -> reg16",
      "85509 PUSH MEMORY ELEMENT IF INIT      2834 -> reg17",
      "85512 PUT      reg16[0] = reg17",
      "85516 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg16",
      "85520 SET      reg2 -> reg9",
      "85523 PUT      reg10[raw] = reg9",
      "85529 PUT      reg10[error] = false",
      "85535 JUMP OR RETURN VAL      reg10"
  ],
  "85539": [
      "85539 SET I      null",
      "85541 PUSH F.K      -> reg9",
      "85543 VOID F",
      "85544 SET MEMORY ELEMENT      0 = reg9",
      "85547 EMPTY OBJECT      -> reg9",
      "85549 PUT      reg9[verdict] = false",
      "85555 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "85558 GET      reg10[toString] -> reg17",
      "85564 EMPTY ARRAY      -> reg14",
      "85566 CALL FUNCTION      OBJ: reg10 FUNC: reg17 ARGS: reg14",
      "85570 SET      reg2 -> reg16",
      "85573 PUT      reg9[raw] = reg16",
      "85579 PUT      reg9[error] = true",
      "85585 JUMP OR RETURN VAL      reg9"
  ],
  "85746": [
      "85746 SET I      null",
      "85748 PUSH F.K      -> reg5",
      "85750 VOID F",
      "85751 SET MEMORY ELEMENT      0 = reg5",
      "85754 EMPTY OBJECT      -> reg5",
      "85756 PUT      reg5[verdict] = false",
      "85762 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "85765 PUT      reg5[raw] = reg7",
      "85771 PUT      reg5[error] = true",
      "85777 JUMP OR RETURN VAL      reg5"
  ],
  "85859": [
      "85859 SET I      null",
      "85861 PUSH F.K      -> reg4",
      "85863 VOID F",
      "85864 SET MEMORY ELEMENT      0 = reg4",
      "85867 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "85870 GET      reg4[stack] -> reg6",
      "85876 GET      reg6[indexOf] -> reg4",
      "85882 NEW ARRAY      1 -> reg7",
      "85885 PUT      reg7[0] = arg.trim",
      "85891 CALL FUNCTION      OBJ: reg6 FUNC: reg4 ARGS: reg7",
      "85895 SET      reg2 -> reg5",
      "85898 SET MEMORY ELEMENT IF INIT      2843 = reg5",
      "85901 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "85904 GET      reg4[stack] -> reg5",
      "85910 SET MEMORY ELEMENT IF INIT      2844 = reg5",
      "85913 PUSH MEMORY ELEMENT IF INIT      2843 -> reg4",
      "85916 SUBTRACT      0 - 1 -> reg5",
      "85920 GREATER THAN      reg4 > reg5 -> reg7",
      "85924 SET MEMORY ELEMENT IF INIT      2845 = reg7",
      "85927 PUSH MEMORY ELEMENT IF INIT      2843 -> reg5",
      "85930 SUBTRACT      0 - 1 -> reg4",
      "85934 GREATER THAN      reg5 > reg4 -> reg7",
      "85938 JUMP IF FALSE      reg7 TO: 85979 | 85941"
  ],
  "85941": [
      "85941 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "85944 GET      reg5[stack] -> reg7",
      "85950 GET      reg7[substr] -> reg5",
      "85956 NEW ARRAY      2 -> reg8",
      "85959 PUT      reg8[0] = 0",
      "85963 PUT      reg8[1] = 250",
      "85967 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg8",
      "85971 SET      reg2 -> reg4",
      "85974 SET MEMORY ELEMENT IF INIT      2844 = reg4",
      "85977 JUMP      86022",
      "86022 EMPTY OBJECT      -> reg4",
      "86024 PUSH MEMORY ELEMENT IF INIT      2845 -> reg5",
      "86027 PUT      reg4[verdict] = reg5",
      "86033 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "86036 GET      reg8[stringify] -> reg11",
      "86042 NEW ARRAY      1 -> reg12",
      "86045 EMPTY OBJECT      -> reg13",
      "86047 PUSH MEMORY ELEMENT IF INIT      0 -> reg16",
      "86050 GET      reg16[toString] -> reg17",
      "86056 EMPTY ARRAY      -> reg18",
      "86058 CALL FUNCTION      OBJ: reg16 FUNC: reg17 ARGS: reg18",
      "86062 SET      reg2 -> reg15",
      "86065 PUT      reg13[err] = reg15",
      "86071 PUSH MEMORY ELEMENT IF INIT      2844 -> reg14",
      "86074 PUT      reg13[stack] = reg14",
      "86080 PUT      reg12[0] = reg13",
      "86084 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg12",
      "86088 SET      reg2 -> reg5",
      "86091 PUT      reg4[raw] = reg5",
      "86097 PUT      reg4[error] = false",
      "86103 JUMP OR RETURN VAL      reg4"
  ],
  "85979": [
      "85979 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "85982 GET      reg5[stack] -> reg10",
      "85988 GET      reg10[substr] -> reg5",
      "85994 NEW ARRAY      2 -> reg8",
      "85997 PUT      reg8[0] = 0",
      "86001 PUSH MEMORY ELEMENT IF INIT      2843 -> reg11",
      "86004 ADD      reg11100-> reg12",
      "86008 PUT      reg8[1] = reg12",
      "86012 CALL FUNCTION      OBJ: reg10 FUNC: reg5 ARGS: reg8",
      "86016 SET      reg2 -> reg4",
      "86019 SET MEMORY ELEMENT IF INIT      2844 = reg4",
      "86022 EMPTY OBJECT      -> reg4",
      "86024 PUSH MEMORY ELEMENT IF INIT      2845 -> reg5",
      "86027 PUT      reg4[verdict] = reg5",
      "86033 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "86036 GET      reg8[stringify] -> reg11",
      "86042 NEW ARRAY      1 -> reg12",
      "86045 EMPTY OBJECT      -> reg13",
      "86047 PUSH MEMORY ELEMENT IF INIT      0 -> reg16",
      "86050 GET      reg16[toString] -> reg17",
      "86056 EMPTY ARRAY      -> reg18",
      "86058 CALL FUNCTION      OBJ: reg16 FUNC: reg17 ARGS: reg18",
      "86062 SET      reg2 -> reg15",
      "86065 PUT      reg13[err] = reg15",
      "86071 PUSH MEMORY ELEMENT IF INIT      2844 -> reg14",
      "86074 PUT      reg13[stack] = reg14",
      "86080 PUT      reg12[0] = reg13",
      "86084 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg12",
      "86088 SET      reg2 -> reg5",
      "86091 PUT      reg4[raw] = reg5",
      "86097 PUT      reg4[error] = false",
      "86103 JUMP OR RETURN VAL      reg4"
  ],
  "86229": [
      "86229 PUSH MEMORY ELEMENT IF INIT      2851 -> reg4",
      "86232 PUSH MEMORY ELEMENT IF INIT      2853 -> reg8",
      "86235 GET      reg4[reg8] -> reg6",
      "86239 SET MEMORY ELEMENT IF INIT      2854 = reg6",
      "86242 PUSH MEMORY ELEMENT IF INIT      2850 -> reg4",
      "86245 PUSH MEMORY ELEMENT IF INIT      2854 -> reg5",
      "86248 GET WINDOW PROP      Object -> reg8",
      "86253 GET      reg8[getOwnPropertyDescriptor] -> reg9",
      "86259 NEW ARRAY      2 -> reg7",
      "86262 GET WINDOW PROP      window -> reg13",
      "86267 GET      reg13[screen] -> reg10",
      "86273 PUT      reg7[0] = reg10",
      "86277 PUSH MEMORY ELEMENT IF INIT      2854 -> reg10",
      "86280 PUT      reg7[1] = reg10",
      "86284 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg7",
      "86288 SET      reg2 -> reg6",
      "86291 JUMP IF FALSE      reg6 TO: 86346 | 86294"
  ],
  "86294": [
      "86294 GET WINDOW PROP      Object -> reg7",
      "86299 GET      reg7[getOwnPropertyDescriptor] -> reg11",
      "86305 NEW ARRAY      2 -> reg10",
      "86308 GET WINDOW PROP      window -> reg12",
      "86313 GET      reg12[screen] -> reg13",
      "86319 PUT      reg10[0] = reg13",
      "86323 PUSH MEMORY ELEMENT IF INIT      2854 -> reg12",
      "86326 PUT      reg10[1] = reg12",
      "86330 CALL FUNCTION      OBJ: reg7 FUNC: reg11 ARGS: reg10",
      "86334 SET      reg2 -> reg9",
      "86337 GET      reg9[get] -> reg10",
      "86343 SET      reg10 -> reg6",
      "86346 JUMP IF FALSE      reg6 TO: 86416 | 86349"
  ],
  "86346": ["86346 JUMP IF FALSE      reg6 TO: 86416 | 86349"],
  "86349": [
      "86349 GET WINDOW PROP      Object -> reg9",
      "86354 GET      reg9[getOwnPropertyDescriptor] -> reg12",
      "86360 NEW ARRAY      2 -> reg13",
      "86363 GET WINDOW PROP      window -> reg14",
      "86368 GET      reg14[screen] -> reg15",
      "86374 PUT      reg13[0] = reg15",
      "86378 PUSH MEMORY ELEMENT IF INIT      2854 -> reg14",
      "86381 PUT      reg13[1] = reg14",
      "86385 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg13",
      "86389 SET      reg2 -> reg11",
      "86392 GET      reg11[get] -> reg12",
      "86398 GET      reg12[toString] -> reg13",
      "86404 EMPTY ARRAY      -> reg11",
      "86406 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg11",
      "86410 SET      reg2 -> reg10",
      "86413 SET      reg10 -> reg6",
      "86416 JUMP IF TRUE      reg6 TO: 86424 | 86419"
  ],
  "86416": ["86416 JUMP IF TRUE      reg6 TO: 86424 | 86419"],
  "86419": [
      "86419 SET      n/a -> reg6",
      "86424 PUT      reg4[reg5] = reg6",
      "86428 PUSH MEMORY ELEMENT IF INIT      2852 -> reg5",
      "86431 NOT      reg5 -> reg4",
      "86434 JUMP IF FALSE      reg4 TO: 86473 | 86437"
  ],
  "86424": [
      "86424 PUT      reg4[reg5] = reg6",
      "86428 PUSH MEMORY ELEMENT IF INIT      2852 -> reg5",
      "86431 NOT      reg5 -> reg4",
      "86434 JUMP IF FALSE      reg4 TO: 86473 | 86437"
  ],
  "86437": [
      "86437 PUSH MEMORY ELEMENT IF INIT      2849 -> reg5",
      "86440 GET      reg5[test] -> reg10",
      "86446 NEW ARRAY      1 -> reg11",
      "86449 PUSH MEMORY ELEMENT IF INIT      2850 -> reg13",
      "86452 PUSH MEMORY ELEMENT IF INIT      2854 -> reg15",
      "86455 GET      reg13[reg15] -> reg14",
      "86459 PUT      reg11[0] = reg14",
      "86463 CALL FUNCTION      OBJ: reg5 FUNC: reg10 ARGS: reg11",
      "86467 SET      reg2 -> reg6",
      "86470 SET      reg6 -> reg4",
      "86473 JUMP IF FALSE      reg4 TO: 86479 | 86476"
  ],
  "86473": ["86473 JUMP IF FALSE      reg4 TO: 86479 | 86476"],
  "86476": [
      "86476 SET MEMORY ELEMENT IF INIT      2852 = true",
      "86479 PUSH MEMORY ELEMENT IF INIT      2853 -> reg4",
      "86482 SET      reg4 -> reg10",
      "86485 ADD      reg41-> reg4",
      "86489 SET MEMORY ELEMENT IF INIT      2853 = reg4",
      "86492 JUMP      86210",
      "86210 PUSH MEMORY ELEMENT IF INIT      2853 -> reg4",
      "86213 PUSH MEMORY ELEMENT IF INIT      2851 -> reg7",
      "86216 GET      reg7[length] -> reg5",
      "86222 LESS THAN      reg4 < reg5 -> reg6",
      "86226 JUMP IF FALSE      reg6 TO: 86494 | 86229"
  ],
  "86479": [
      "86479 PUSH MEMORY ELEMENT IF INIT      2853 -> reg4",
      "86482 SET      reg4 -> reg10",
      "86485 ADD      reg41-> reg4",
      "86489 SET MEMORY ELEMENT IF INIT      2853 = reg4",
      "86492 JUMP      86210",
      "86210 PUSH MEMORY ELEMENT IF INIT      2853 -> reg4",
      "86213 PUSH MEMORY ELEMENT IF INIT      2851 -> reg7",
      "86216 GET      reg7[length] -> reg5",
      "86222 LESS THAN      reg4 < reg5 -> reg6",
      "86226 JUMP IF FALSE      reg6 TO: 86494 | 86229"
  ],
  "86494": [
      "86494 PUSH MEMORY ELEMENT IF INIT      2852 -> reg4",
      "86497 JUMP IF TRUE      reg4 TO: 86518 | 86500"
  ],
  "86500": [
      "86500 PUSH MEMORY ELEMENT IF INIT      2850 -> reg10",
      "86503 GET      reg10[availWidth] -> reg11",
      "86509 STRICT NOT EQUAL      reg11 !== n/a -> reg10",
      "86515 SET      reg10 -> reg4",
      "86518 SET MEMORY ELEMENT IF INIT      2852 = reg4",
      "86521 EMPTY OBJECT      -> reg4",
      "86523 PUSH MEMORY ELEMENT IF INIT      2852 -> reg6",
      "86526 PUT      reg4[verdict] = reg6",
      "86532 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "86535 GET      reg11[stringify] -> reg10",
      "86541 NEW ARRAY      1 -> reg14",
      "86544 PUSH MEMORY ELEMENT IF INIT      2850 -> reg13",
      "86547 PUT      reg14[0] = reg13",
      "86551 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg14",
      "86555 SET      reg2 -> reg6",
      "86558 PUT      reg4[raw] = reg6",
      "86564 PUT      reg4[error] = false",
      "86570 JUMP OR RETURN VAL      reg4"
  ],
  "86518": [
      "86518 SET MEMORY ELEMENT IF INIT      2852 = reg4",
      "86521 EMPTY OBJECT      -> reg4",
      "86523 PUSH MEMORY ELEMENT IF INIT      2852 -> reg6",
      "86526 PUT      reg4[verdict] = reg6",
      "86532 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "86535 GET      reg11[stringify] -> reg10",
      "86541 NEW ARRAY      1 -> reg14",
      "86544 PUSH MEMORY ELEMENT IF INIT      2850 -> reg13",
      "86547 PUT      reg14[0] = reg13",
      "86551 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg14",
      "86555 SET      reg2 -> reg6",
      "86558 PUT      reg4[raw] = reg6",
      "86564 PUT      reg4[error] = false",
      "86570 JUMP OR RETURN VAL      reg4"
  ],
  "86574": [
      "86574 SET I      null",
      "86576 PUSH F.K      -> reg13",
      "86578 VOID F",
      "86579 SET MEMORY ELEMENT      0 = reg13",
      "86582 EMPTY OBJECT      -> reg4",
      "86584 PUT      reg4[verdict] = false",
      "86590 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "86593 GET      reg6[toString] -> reg13",
      "86599 EMPTY ARRAY      -> reg15",
      "86601 CALL FUNCTION      OBJ: reg6 FUNC: reg13 ARGS: reg15",
      "86605 SET      reg2 -> reg10",
      "86608 PUT      reg4[raw] = reg10",
      "86614 PUT      reg4[error] = true",
      "86620 JUMP OR RETURN VAL      reg4"
  ],
  "86741": [
      "86741 PUSH MEMORY ELEMENT IF INIT      2864 -> reg4",
      "86744 GET      reg4[iw] -> reg5",
      "86750 PUSH MEMORY ELEMENT IF INIT      2864 -> reg8",
      "86753 GET      reg8[ow] -> reg9",
      "86759 GREATER THAN      reg5 > reg9 -> reg7",
      "86763 SET      reg7 -> reg6",
      "86766 SET MEMORY ELEMENT IF INIT      2865 = reg6",
      "86769 EMPTY OBJECT      -> reg4",
      "86771 PUSH MEMORY ELEMENT IF INIT      2865 -> reg5",
      "86774 PUT      reg4[verdict] = reg5",
      "86780 PUSH MEMORY ELEMENT IF INIT      280 -> reg5",
      "86783 GET      reg5[stringify] -> reg7",
      "86789 NEW ARRAY      1 -> reg8",
      "86792 PUSH MEMORY ELEMENT IF INIT      2864 -> reg9",
      "86795 PUT      reg8[0] = reg9",
      "86799 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "86803 SET      reg2 -> reg6",
      "86806 PUT      reg4[raw] = reg6",
      "86812 PUT      reg4[error] = false",
      "86818 JUMP OR RETURN VAL      reg4"
  ],
  "86766": [
      "86766 SET MEMORY ELEMENT IF INIT      2865 = reg6",
      "86769 EMPTY OBJECT      -> reg4",
      "86771 PUSH MEMORY ELEMENT IF INIT      2865 -> reg5",
      "86774 PUT      reg4[verdict] = reg5",
      "86780 PUSH MEMORY ELEMENT IF INIT      280 -> reg5",
      "86783 GET      reg5[stringify] -> reg7",
      "86789 NEW ARRAY      1 -> reg8",
      "86792 PUSH MEMORY ELEMENT IF INIT      2864 -> reg9",
      "86795 PUT      reg8[0] = reg9",
      "86799 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "86803 SET      reg2 -> reg6",
      "86806 PUT      reg4[raw] = reg6",
      "86812 PUT      reg4[error] = false",
      "86818 JUMP OR RETURN VAL      reg4"
  ],
  "86822": [
      "86822 SET I      null",
      "86824 PUSH F.K      -> reg4",
      "86826 VOID F",
      "86827 SET MEMORY ELEMENT      0 = reg4",
      "86830 EMPTY OBJECT      -> reg6",
      "86832 PUT      reg6[verdict] = false",
      "86838 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "86841 GET      reg4[toString] -> reg8",
      "86847 EMPTY ARRAY      -> reg9",
      "86849 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg9",
      "86853 SET      reg2 -> reg7",
      "86856 PUT      reg6[raw] = reg7",
      "86862 PUT      reg6[error] = true",
      "86868 JUMP OR RETURN VAL      reg6"
  ],
  "87207": [
      "87207 SET      0 -> reg7",
      "87210 GET      reg5[reg7] -> reg4",
      "87214 SET MEMORY ELEMENT IF INIT      2883 = reg4",
      "87217 PUSH MEMORY ELEMENT IF INIT      2882 -> reg6",
      "87220 PUSH MEMORY ELEMENT IF INIT      2883 -> reg10",
      "87223 GET      reg6[reg10] -> reg9",
      "87227 LESS THAN      reg9 < 0 -> reg6",
      "87231 JUMP IF FALSE      reg6 TO: 87236 | 87234"
  ],
  "87210": [
      "87210 GET      reg5[reg7] -> reg4",
      "87214 SET MEMORY ELEMENT IF INIT      2883 = reg4",
      "87217 PUSH MEMORY ELEMENT IF INIT      2882 -> reg6",
      "87220 PUSH MEMORY ELEMENT IF INIT      2883 -> reg10",
      "87223 GET      reg6[reg10] -> reg9",
      "87227 LESS THAN      reg9 < 0 -> reg6",
      "87231 JUMP IF FALSE      reg6 TO: 87236 | 87234"
  ],
  "87234": ["87234 JUMP OR RETURN VAL      true"],
  "87236": [
      "87236 ADD      reg71-> reg7",
      "87240 LESS THAN      reg7 < reg8 -> reg6",
      "87244 JUMP IF TRUE      reg6 TO: 87210 | 87247"
  ],
  "87247": ["87247 JUMP OR RETURN VAL      false"],
  "87311": [
      "87311 PUSH MEMORY ELEMENT IF INIT      2873 -> reg5",
      "87314 SET      reg5 -> reg4",
      "87317 SET MEMORY ELEMENT IF INIT      2875 = reg4",
      "87320 EMPTY OBJECT      -> reg5",
      "87322 PUSH MEMORY ELEMENT IF INIT      2875 -> reg4",
      "87325 PUT      reg5[verdict] = reg4",
      "87331 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "87334 GET      reg7[stringify] -> reg9",
      "87340 NEW ARRAY      1 -> reg6",
      "87343 EMPTY OBJECT      -> reg8",
      "87345 PUSH MEMORY ELEMENT IF INIT      2872 -> reg10",
      "87348 PUT      reg8[d] = reg10",
      "87354 PUSH MEMORY ELEMENT IF INIT      2874 -> reg10",
      "87357 PUT      reg8[dv] = reg10",
      "87363 GET WINDOW PROP      window -> reg12",
      "87368 GET      reg12[screen] -> reg10",
      "87374 GET      reg10[colorDepth] -> reg11",
      "87380 PUT      reg8[c] = reg11",
      "87386 PUSH MEMORY ELEMENT IF INIT      2873 -> reg10",
      "87389 PUT      reg8[cv] = reg10",
      "87395 PUT      reg6[0] = reg8",
      "87399 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg6",
      "87403 SET      reg2 -> reg4",
      "87406 PUT      reg5[raw] = reg4",
      "87412 PUT      reg5[error] = false",
      "87418 JUMP OR RETURN VAL      reg5"
  ],
  "87317": [
      "87317 SET MEMORY ELEMENT IF INIT      2875 = reg4",
      "87320 EMPTY OBJECT      -> reg5",
      "87322 PUSH MEMORY ELEMENT IF INIT      2875 -> reg4",
      "87325 PUT      reg5[verdict] = reg4",
      "87331 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "87334 GET      reg7[stringify] -> reg9",
      "87340 NEW ARRAY      1 -> reg6",
      "87343 EMPTY OBJECT      -> reg8",
      "87345 PUSH MEMORY ELEMENT IF INIT      2872 -> reg10",
      "87348 PUT      reg8[d] = reg10",
      "87354 PUSH MEMORY ELEMENT IF INIT      2874 -> reg10",
      "87357 PUT      reg8[dv] = reg10",
      "87363 GET WINDOW PROP      window -> reg12",
      "87368 GET      reg12[screen] -> reg10",
      "87374 GET      reg10[colorDepth] -> reg11",
      "87380 PUT      reg8[c] = reg11",
      "87386 PUSH MEMORY ELEMENT IF INIT      2873 -> reg10",
      "87389 PUT      reg8[cv] = reg10",
      "87395 PUT      reg6[0] = reg8",
      "87399 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg6",
      "87403 SET      reg2 -> reg4",
      "87406 PUT      reg5[raw] = reg4",
      "87412 PUT      reg5[error] = false",
      "87418 JUMP OR RETURN VAL      reg5"
  ],
  "87422": [
      "87422 SET I      null",
      "87424 PUSH F.K      -> reg4",
      "87426 VOID F",
      "87427 SET MEMORY ELEMENT      0 = reg4",
      "87430 EMPTY OBJECT      -> reg4",
      "87432 PUT      reg4[verdict] = false",
      "87438 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "87441 GET      reg6[toString] -> reg8",
      "87447 EMPTY ARRAY      -> reg9",
      "87449 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "87453 SET      reg2 -> reg5",
      "87456 PUT      reg4[raw] = reg5",
      "87462 PUT      reg4[error] = true",
      "87468 JUMP OR RETURN VAL      reg4"
  ],
  "87655": [
      "87655 PUSH MEMORY ELEMENT IF INIT      2890 -> reg5",
      "87658 GET WINDOW PROP      window -> reg7",
      "87663 GET      reg7[clientInformation] -> reg6",
      "87669 JUMP IF FALSE      reg6 TO: 87692 | 87672"
  ],
  "87672": [
      "87672 GET WINDOW PROP      window -> reg8",
      "87677 GET      reg8[clientInformation] -> reg7",
      "87683 GET      reg7[webdriver] -> reg8",
      "87689 SET      reg8 -> reg6",
      "87692 JUMP IF TRUE      reg6 TO: 87698 | 87695"
  ],
  "87692": ["87692 JUMP IF TRUE      reg6 TO: 87698 | 87695"],
  "87695": [
      "87695 SET      false -> reg6",
      "87698 PUT      reg5[i_ciw] = reg6",
      "87704 PUSH MEMORY ELEMENT IF INIT      2890 -> reg6",
      "87707 PUSH MEMORY ELEMENT IF INIT      2889 -> reg5",
      "87710 GET      reg5[contentWindow] -> reg7",
      "87716 GET      reg7[navigator] -> reg5",
      "87722 JUMP IF FALSE      reg5 TO: 87749 | 87725"
  ],
  "87698": [
      "87698 PUT      reg5[i_ciw] = reg6",
      "87704 PUSH MEMORY ELEMENT IF INIT      2890 -> reg6",
      "87707 PUSH MEMORY ELEMENT IF INIT      2889 -> reg5",
      "87710 GET      reg5[contentWindow] -> reg7",
      "87716 GET      reg7[navigator] -> reg5",
      "87722 JUMP IF FALSE      reg5 TO: 87749 | 87725"
  ],
  "87725": [
      "87725 PUSH MEMORY ELEMENT IF INIT      2889 -> reg8",
      "87728 GET      reg8[contentWindow] -> reg7",
      "87734 GET      reg7[navigator] -> reg9",
      "87740 GET      reg9[webdriver] -> reg7",
      "87746 SET      reg7 -> reg5",
      "87749 JUMP IF TRUE      reg5 TO: 87755 | 87752"
  ],
  "87749": ["87749 JUMP IF TRUE      reg5 TO: 87755 | 87752"],
  "87752": [
      "87752 SET      false -> reg5",
      "87755 PUT      reg6[i_nwd] = reg5",
      "87761 PUSH MEMORY ELEMENT IF INIT      2890 -> reg7",
      "87764 PUSH MEMORY ELEMENT IF INIT      2889 -> reg5",
      "87767 GET      reg5[contentWindow] -> reg6",
      "87773 GET      reg6[clientInformation] -> reg5",
      "87779 JUMP IF FALSE      reg5 TO: 87806 | 87782"
  ],
  "87755": [
      "87755 PUT      reg6[i_nwd] = reg5",
      "87761 PUSH MEMORY ELEMENT IF INIT      2890 -> reg7",
      "87764 PUSH MEMORY ELEMENT IF INIT      2889 -> reg5",
      "87767 GET      reg5[contentWindow] -> reg6",
      "87773 GET      reg6[clientInformation] -> reg5",
      "87779 JUMP IF FALSE      reg5 TO: 87806 | 87782"
  ],
  "87782": [
      "87782 PUSH MEMORY ELEMENT IF INIT      2889 -> reg6",
      "87785 GET      reg6[contentWindow] -> reg8",
      "87791 GET      reg8[clientInformation] -> reg6",
      "87797 GET      reg6[webdriver] -> reg8",
      "87803 SET      reg8 -> reg5",
      "87806 JUMP IF TRUE      reg5 TO: 87812 | 87809"
  ],
  "87806": ["87806 JUMP IF TRUE      reg5 TO: 87812 | 87809"],
  "87809": [
      "87809 SET      false -> reg5",
      "87812 PUT      reg7[i_cwwd] = reg5",
      "87818 PUSH MEMORY ELEMENT IF INIT      2890 -> reg7",
      "87821 GET WINDOW PROP      window -> reg5",
      "87826 GET      reg5[navigator] -> reg6",
      "87832 GET      reg6[webdriver] -> reg8",
      "87838 TYPEOF      reg8 -> reg5",
      "87841 PUSH MEMORY ELEMENT IF INIT      2889 -> reg6",
      "87844 GET      reg6[contentWindow] -> reg8",
      "87850 GET      reg8[navigator] -> reg9",
      "87856 GET      reg9[webdriver] -> reg6",
      "87862 TYPEOF      reg6 -> reg9",
      "87865 STRICT NOT EQUAL      reg5 !== reg9 -> reg6",
      "87869 PUT      reg7[i_nwd_c] = reg6",
      "87875 PUSH MEMORY ELEMENT IF INIT      2890 -> reg5",
      "87878 GET WINDOW PROP      window -> reg8",
      "87883 GET      reg8[clientInformation] -> reg6",
      "87889 JUMP IF FALSE      reg6 TO: 87943 | 87892"
  ],
  "87812": [
      "87812 PUT      reg7[i_cwwd] = reg5",
      "87818 PUSH MEMORY ELEMENT IF INIT      2890 -> reg7",
      "87821 GET WINDOW PROP      window -> reg5",
      "87826 GET      reg5[navigator] -> reg6",
      "87832 GET      reg6[webdriver] -> reg8",
      "87838 TYPEOF      reg8 -> reg5",
      "87841 PUSH MEMORY ELEMENT IF INIT      2889 -> reg6",
      "87844 GET      reg6[contentWindow] -> reg8",
      "87850 GET      reg8[navigator] -> reg9",
      "87856 GET      reg9[webdriver] -> reg6",
      "87862 TYPEOF      reg6 -> reg9",
      "87865 STRICT NOT EQUAL      reg5 !== reg9 -> reg6",
      "87869 PUT      reg7[i_nwd_c] = reg6",
      "87875 PUSH MEMORY ELEMENT IF INIT      2890 -> reg5",
      "87878 GET WINDOW PROP      window -> reg8",
      "87883 GET      reg8[clientInformation] -> reg6",
      "87889 JUMP IF FALSE      reg6 TO: 87943 | 87892"
  ],
  "87892": [
      "87892 GET WINDOW PROP      window -> reg7",
      "87897 GET      reg7[clientInformation] -> reg8",
      "87903 GET      reg8[webdriver] -> reg7",
      "87909 TYPEOF      reg7 -> reg9",
      "87912 PUSH MEMORY ELEMENT IF INIT      2889 -> reg10",
      "87915 GET      reg10[contentWindow] -> reg7",
      "87921 GET      reg7[clientInformation] -> reg8",
      "87927 GET      reg8[webdriver] -> reg12",
      "87933 TYPEOF      reg12 -> reg8",
      "87936 STRICT NOT EQUAL      reg9 !== reg8 -> reg7",
      "87940 SET      reg7 -> reg6",
      "87943 JUMP IF TRUE      reg6 TO: 87949 | 87946"
  ],
  "87943": ["87943 JUMP IF TRUE      reg6 TO: 87949 | 87946"],
  "87946": [
      "87946 SET      false -> reg6",
      "87949 PUT      reg5[i_cwwd_c] = reg6",
      "87955 PUSH MEMORY ELEMENT IF INIT      2890 -> reg5",
      "87958 GET      reg5[i_ciw] -> reg6",
      "87964 JUMP IF TRUE      reg6 TO: 87979 | 87967"
  ],
  "87949": [
      "87949 PUT      reg5[i_cwwd_c] = reg6",
      "87955 PUSH MEMORY ELEMENT IF INIT      2890 -> reg5",
      "87958 GET      reg5[i_ciw] -> reg6",
      "87964 JUMP IF TRUE      reg6 TO: 87979 | 87967"
  ],
  "87967": [
      "87967 PUSH MEMORY ELEMENT IF INIT      2890 -> reg5",
      "87970 GET      reg5[i_nwd] -> reg10",
      "87976 SET      reg10 -> reg6",
      "87979 JUMP IF TRUE      reg6 TO: 87994 | 87982"
  ],
  "87979": ["87979 JUMP IF TRUE      reg6 TO: 87994 | 87982"],
  "87982": [
      "87982 PUSH MEMORY ELEMENT IF INIT      2890 -> reg5",
      "87985 GET      reg5[i_cwwd] -> reg7",
      "87991 SET      reg7 -> reg6",
      "87994 JUMP IF TRUE      reg6 TO: 88009 | 87997"
  ],
  "87994": ["87994 JUMP IF TRUE      reg6 TO: 88009 | 87997"],
  "87997": [
      "87997 PUSH MEMORY ELEMENT IF INIT      2890 -> reg5",
      "88000 GET      reg5[i_nwd_c] -> reg8",
      "88006 SET      reg8 -> reg6",
      "88009 JUMP IF TRUE      reg6 TO: 88024 | 88012"
  ],
  "88009": ["88009 JUMP IF TRUE      reg6 TO: 88024 | 88012"],
  "88012": [
      "88012 PUSH MEMORY ELEMENT IF INIT      2890 -> reg5",
      "88015 GET      reg5[i_cwwd_c] -> reg7",
      "88021 SET      reg7 -> reg6",
      "88024 STRICT EQUAL      reg6 === true -> reg5",
      "88028 SET MEMORY ELEMENT IF INIT      2891 = reg5",
      "88031 EMPTY OBJECT      -> reg5",
      "88033 PUSH MEMORY ELEMENT IF INIT      2891 -> reg6",
      "88036 PUT      reg5[verdict] = reg6",
      "88042 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "88045 GET      reg10[stringify] -> reg7",
      "88051 NEW ARRAY      1 -> reg9",
      "88054 PUSH MEMORY ELEMENT IF INIT      2890 -> reg11",
      "88057 PUT      reg9[0] = reg11",
      "88061 CALL FUNCTION      OBJ: reg10 FUNC: reg7 ARGS: reg9",
      "88065 SET      reg2 -> reg6",
      "88068 PUT      reg5[raw] = reg6",
      "88074 PUT      reg5[error] = false",
      "88080 JUMP OR RETURN VAL      reg5"
  ],
  "88024": [
      "88024 STRICT EQUAL      reg6 === true -> reg5",
      "88028 SET MEMORY ELEMENT IF INIT      2891 = reg5",
      "88031 EMPTY OBJECT      -> reg5",
      "88033 PUSH MEMORY ELEMENT IF INIT      2891 -> reg6",
      "88036 PUT      reg5[verdict] = reg6",
      "88042 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "88045 GET      reg10[stringify] -> reg7",
      "88051 NEW ARRAY      1 -> reg9",
      "88054 PUSH MEMORY ELEMENT IF INIT      2890 -> reg11",
      "88057 PUT      reg9[0] = reg11",
      "88061 CALL FUNCTION      OBJ: reg10 FUNC: reg7 ARGS: reg9",
      "88065 SET      reg2 -> reg6",
      "88068 PUT      reg5[raw] = reg6",
      "88074 PUT      reg5[error] = false",
      "88080 JUMP OR RETURN VAL      reg5"
  ],
  "88031": [
      "88031 EMPTY OBJECT      -> reg5",
      "88033 PUSH MEMORY ELEMENT IF INIT      2891 -> reg6",
      "88036 PUT      reg5[verdict] = reg6",
      "88042 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "88045 GET      reg10[stringify] -> reg7",
      "88051 NEW ARRAY      1 -> reg9",
      "88054 PUSH MEMORY ELEMENT IF INIT      2890 -> reg11",
      "88057 PUT      reg9[0] = reg11",
      "88061 CALL FUNCTION      OBJ: reg10 FUNC: reg7 ARGS: reg9",
      "88065 SET      reg2 -> reg6",
      "88068 PUT      reg5[raw] = reg6",
      "88074 PUT      reg5[error] = false",
      "88080 JUMP OR RETURN VAL      reg5"
  ],
  "88084": [
      "88084 SET I      null",
      "88086 PUSH F.K      -> reg6",
      "88088 VOID F",
      "88089 SET MEMORY ELEMENT      0 = reg6",
      "88092 EMPTY OBJECT      -> reg5",
      "88094 PUT      reg5[verdict] = false",
      "88100 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "88103 GET      reg8[toString] -> reg7",
      "88109 EMPTY ARRAY      -> reg9",
      "88111 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "88115 SET      reg2 -> reg6",
      "88118 PUT      reg5[raw] = reg6",
      "88124 PUT      reg5[error] = true",
      "88130 JUMP OR RETURN VAL      reg5"
  ],
  "88184": [
      "88184 SET      0 -> reg6",
      "88187 GET      reg5[reg6] -> reg7",
      "88191 SET MEMORY ELEMENT IF INIT      2909 = reg7",
      "88194 PUSH MEMORY ELEMENT IF INIT      2909 -> reg8",
      "88197 GET      reg8[indexOf] -> reg11",
      "88203 NEW ARRAY      1 -> reg10",
      "88206 PUT      reg10[0] = _Array",
      "88212 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg10",
      "88216 SET      reg2 -> reg9",
      "88219 SUBTRACT      0 - 1 -> reg10",
      "88223 GREATER THAN      reg9 > reg10 -> reg13",
      "88227 JUMP IF FALSE      reg13 TO: 88259 | 88230"
  ],
  "88187": [
      "88187 GET      reg5[reg6] -> reg7",
      "88191 SET MEMORY ELEMENT IF INIT      2909 = reg7",
      "88194 PUSH MEMORY ELEMENT IF INIT      2909 -> reg8",
      "88197 GET      reg8[indexOf] -> reg11",
      "88203 NEW ARRAY      1 -> reg10",
      "88206 PUT      reg10[0] = _Array",
      "88212 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg10",
      "88216 SET      reg2 -> reg9",
      "88219 SUBTRACT      0 - 1 -> reg10",
      "88223 GREATER THAN      reg9 > reg10 -> reg13",
      "88227 JUMP IF FALSE      reg13 TO: 88259 | 88230"
  ],
  "88230": [
      "88230 PUSH MEMORY ELEMENT IF INIT      2907 -> reg9",
      "88233 GET      reg9[push] -> reg11",
      "88239 NEW ARRAY      1 -> reg12",
      "88242 PUSH MEMORY ELEMENT IF INIT      2909 -> reg13",
      "88245 PUT      reg12[0] = reg13",
      "88249 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg12",
      "88253 SET      reg2 -> reg10",
      "88256 SET MEMORY ELEMENT IF INIT      2908 = true",
      "88259 PUSH MEMORY ELEMENT IF INIT      2909 -> reg11",
      "88262 GET      reg11[indexOf] -> reg13",
      "88268 NEW ARRAY      1 -> reg15",
      "88271 PUT      reg15[0] = _Promise",
      "88277 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg15",
      "88281 SET      reg2 -> reg10",
      "88284 SUBTRACT      0 - 1 -> reg12",
      "88288 GREATER THAN      reg10 > reg12 -> reg13",
      "88292 JUMP IF FALSE      reg13 TO: 88324 | 88295"
  ],
  "88259": [
      "88259 PUSH MEMORY ELEMENT IF INIT      2909 -> reg11",
      "88262 GET      reg11[indexOf] -> reg13",
      "88268 NEW ARRAY      1 -> reg15",
      "88271 PUT      reg15[0] = _Promise",
      "88277 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg15",
      "88281 SET      reg2 -> reg10",
      "88284 SUBTRACT      0 - 1 -> reg12",
      "88288 GREATER THAN      reg10 > reg12 -> reg13",
      "88292 JUMP IF FALSE      reg13 TO: 88324 | 88295"
  ],
  "88295": [
      "88295 PUSH MEMORY ELEMENT IF INIT      2907 -> reg10",
      "88298 GET      reg10[push] -> reg12",
      "88304 NEW ARRAY      1 -> reg14",
      "88307 PUSH MEMORY ELEMENT IF INIT      2909 -> reg13",
      "88310 PUT      reg14[0] = reg13",
      "88314 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg14",
      "88318 SET      reg2 -> reg15",
      "88321 SET MEMORY ELEMENT IF INIT      2908 = true",
      "88324 PUSH MEMORY ELEMENT IF INIT      2909 -> reg13",
      "88327 GET      reg13[indexOf] -> reg14",
      "88333 NEW ARRAY      1 -> reg17",
      "88336 PUT      reg17[0] = _Symbol",
      "88342 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg17",
      "88346 SET      reg2 -> reg12",
      "88349 SUBTRACT      0 - 1 -> reg15",
      "88353 GREATER THAN      reg12 > reg15 -> reg14",
      "88357 JUMP IF FALSE      reg14 TO: 88389 | 88360"
  ],
  "88324": [
      "88324 PUSH MEMORY ELEMENT IF INIT      2909 -> reg13",
      "88327 GET      reg13[indexOf] -> reg14",
      "88333 NEW ARRAY      1 -> reg17",
      "88336 PUT      reg17[0] = _Symbol",
      "88342 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg17",
      "88346 SET      reg2 -> reg12",
      "88349 SUBTRACT      0 - 1 -> reg15",
      "88353 GREATER THAN      reg12 > reg15 -> reg14",
      "88357 JUMP IF FALSE      reg14 TO: 88389 | 88360"
  ],
  "88360": [
      "88360 PUSH MEMORY ELEMENT IF INIT      2907 -> reg14",
      "88363 GET      reg14[push] -> reg15",
      "88369 NEW ARRAY      1 -> reg18",
      "88372 PUSH MEMORY ELEMENT IF INIT      2909 -> reg16",
      "88375 PUT      reg18[0] = reg16",
      "88379 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg18",
      "88383 SET      reg2 -> reg12",
      "88386 SET MEMORY ELEMENT IF INIT      2908 = true",
      "88389 ADD      reg61-> reg6",
      "88393 LESS THAN      reg6 < reg4 -> reg16",
      "88397 JUMP IF TRUE      reg16 TO: 88187 | 88400"
  ],
  "88389": [
      "88389 ADD      reg61-> reg6",
      "88393 LESS THAN      reg6 < reg4 -> reg16",
      "88397 JUMP IF TRUE      reg16 TO: 88187 | 88400"
  ],
  "88400": [
      "88400 EMPTY OBJECT      -> reg5",
      "88402 PUSH MEMORY ELEMENT IF INIT      2908 -> reg4",
      "88405 PUT      reg5[verdict] = reg4",
      "88411 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "88414 GET      reg6[stringify] -> reg7",
      "88420 NEW ARRAY      1 -> reg12",
      "88423 PUSH MEMORY ELEMENT IF INIT      2907 -> reg15",
      "88426 PUT      reg12[0] = reg15",
      "88430 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg12",
      "88434 SET      reg2 -> reg4",
      "88437 PUT      reg5[raw] = reg4",
      "88443 PUT      reg5[error] = false",
      "88449 JUMP OR RETURN VAL      reg5"
  ],
  "88453": [
      "88453 SET I      null",
      "88455 PUSH F.K      -> reg4",
      "88457 VOID F",
      "88458 SET MEMORY ELEMENT      0 = reg4",
      "88461 EMPTY OBJECT      -> reg4",
      "88463 PUT      reg4[verdict] = false",
      "88469 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "88472 GET      reg7[toString] -> reg15",
      "88478 EMPTY ARRAY      -> reg12",
      "88480 CALL FUNCTION      OBJ: reg7 FUNC: reg15 ARGS: reg12",
      "88484 SET      reg2 -> reg5",
      "88487 PUT      reg4[raw] = reg5",
      "88493 PUT      reg4[error] = true",
      "88499 JUMP OR RETURN VAL      reg4"
  ],
  "88588": [
      "88588 SET I      88843",
      "88590 PUSH F.K      -> reg4",
      "88592 VOID F",
      "88593 SET MEMORY ELEMENT      0 = reg4",
      "88596 SET I      88843",
      "88598 SET I      88661",
      "88600 GET WINDOW PROP      WebGLRenderingContext -> reg7",
      "88605 GET      reg7[prototype] -> reg4",
      "88611 GET      reg4[getParameter] -> reg9",
      "88617 NEW ARRAY      1 -> reg7",
      "88620 PUT      reg7[0] = 37446",
      "88624 CALL FUNCTION      OBJ: reg4 FUNC: reg9 ARGS: reg7",
      "88628 SET      reg2 -> reg5",
      "88631 SET MEMORY ELEMENT IF INIT      2916 = reg5",
      "88634 EMPTY OBJECT      -> reg5",
      "88636 PUT      reg5[verdict] = true",
      "88642 PUSH MEMORY ELEMENT IF INIT      2916 -> reg7",
      "88645 PUT      reg5[raw] = reg7",
      "88651 PUT      reg5[error] = false",
      "88657 JUMP OR RETURN VAL      reg5"
  ],
  "88661": [
      "88661 SET I      88843",
      "88663 PUSH F.K      -> reg5",
      "88665 VOID F",
      "88666 SET MEMORY ELEMENT      0 = reg5",
      "88669 SET I      88843",
      "88671 SET I      88734",
      "88673 GET WINDOW PROP      WebGL2RenderingContext -> reg10",
      "88678 GET      reg10[prototype] -> reg7",
      "88684 GET      reg7[getParameter] -> reg8",
      "88690 NEW ARRAY      1 -> reg9",
      "88693 PUT      reg9[0] = 37445",
      "88697 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "88701 SET      reg2 -> reg5",
      "88704 SET MEMORY ELEMENT IF INIT      2916 = reg5",
      "88707 EMPTY OBJECT      -> reg9",
      "88709 PUT      reg9[verdict] = true",
      "88715 PUSH MEMORY ELEMENT IF INIT      2916 -> reg5",
      "88718 PUT      reg9[raw] = reg5",
      "88724 PUT      reg9[error] = false",
      "88730 JUMP OR RETURN VAL      reg9"
  ],
  "88734": [
      "88734 SET I      88843",
      "88736 PUSH F.K      -> reg5",
      "88738 VOID F",
      "88739 SET MEMORY ELEMENT      0 = reg5",
      "88742 SET I      88843",
      "88744 SET I      88807",
      "88746 GET WINDOW PROP      WebGL2RenderingContext -> reg8",
      "88751 GET      reg8[prototype] -> reg12",
      "88757 GET      reg12[getParameter] -> reg8",
      "88763 NEW ARRAY      1 -> reg10",
      "88766 PUT      reg10[0] = 37446",
      "88770 CALL FUNCTION      OBJ: reg12 FUNC: reg8 ARGS: reg10",
      "88774 SET      reg2 -> reg5",
      "88777 SET MEMORY ELEMENT IF INIT      2916 = reg5",
      "88780 EMPTY OBJECT      -> reg5",
      "88782 PUT      reg5[verdict] = true",
      "88788 PUSH MEMORY ELEMENT IF INIT      2916 -> reg8",
      "88791 PUT      reg5[raw] = reg8",
      "88797 PUT      reg5[error] = false",
      "88803 JUMP OR RETURN VAL      reg5"
  ],
  "88807": [
      "88807 SET I      88843",
      "88809 PUSH F.K      -> reg5",
      "88811 VOID F",
      "88812 SET MEMORY ELEMENT      0 = reg5",
      "88815 SET I      88843",
      "88817 EMPTY OBJECT      -> reg8",
      "88819 PUT      reg8[verdict] = false",
      "88825 PUT      reg8[raw] = ",
      "88833 PUT      reg8[error] = false",
      "88839 JUMP OR RETURN VAL      reg8"
  ],
  "88843": [
      "88843 SET I      null",
      "88845 PUSH F.K      -> reg9",
      "88847 VOID F",
      "88848 SET MEMORY ELEMENT      0 = reg9",
      "88851 EMPTY OBJECT      -> reg8",
      "88853 PUT      reg8[verdict] = false",
      "88859 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "88862 PUT      reg8[raw] = reg5",
      "88868 PUT      reg8[error] = true",
      "88874 JUMP OR RETURN VAL      reg8"
  ],
  "88929": [
      "88929 SET I      null",
      "88931 PUSH F.K      -> reg4",
      "88933 VOID F",
      "88934 SET MEMORY ELEMENT      0 = reg4",
      "88937 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "88940 GET      reg4[stack] -> reg5",
      "88946 SET MEMORY ELEMENT IF INIT      2923 = reg5",
      "88949 SET I      null",
      "88951 SET MEMORY ELEMENT IF INIT      2924 = false",
      "88954 PUSH MEMORY ELEMENT IF INIT      2923 -> reg4",
      "88957 JUMP IF FALSE      reg4 TO: 89035 | 88960"
  ],
  "88960": [
      "88960 PUSH MEMORY ELEMENT IF INIT      2923 -> reg5",
      "88963 GET      reg5[indexOf] -> reg7",
      "88969 NEW ARRAY      1 -> reg8",
      "88972 PUT      reg8[0] = 'name'",
      "88978 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "88982 SET      reg2 -> reg6",
      "88985 SUBTRACT      0 - 1 -> reg7",
      "88989 GREATER THAN      reg6 > reg7 -> reg8",
      "88993 JUMP IF TRUE      reg8 TO: 89032 | 88996"
  ],
  "88996": [
      "88996 PUSH MEMORY ELEMENT IF INIT      2923 -> reg9",
      "88999 GET      reg9[indexOf] -> reg7",
      "89005 NEW ARRAY      1 -> reg10",
      "89008 PUT      reg10[0] = .apply",
      "89014 CALL FUNCTION      OBJ: reg9 FUNC: reg7 ARGS: reg10",
      "89018 SET      reg2 -> reg6",
      "89021 SUBTRACT      0 - 1 -> reg10",
      "89025 GREATER THAN      reg6 > reg10 -> reg7",
      "89029 SET      reg7 -> reg8",
      "89032 SET      reg8 -> reg4",
      "89035 JUMP IF FALSE      reg4 TO: 89041 | 89038"
  ],
  "89032": [
      "89032 SET      reg8 -> reg4",
      "89035 JUMP IF FALSE      reg4 TO: 89041 | 89038"
  ],
  "89035": ["89035 JUMP IF FALSE      reg4 TO: 89041 | 89038"],
  "89038": [
      "89038 SET MEMORY ELEMENT IF INIT      2924 = true",
      "89041 EMPTY OBJECT      -> reg6",
      "89043 PUSH MEMORY ELEMENT IF INIT      2924 -> reg4",
      "89046 PUT      reg6[verdict] = reg4",
      "89052 PUSH MEMORY ELEMENT IF INIT      2923 -> reg8",
      "89055 JUMP IF TRUE      reg8 TO: 89063 | 89058"
  ],
  "89041": [
      "89041 EMPTY OBJECT      -> reg6",
      "89043 PUSH MEMORY ELEMENT IF INIT      2924 -> reg4",
      "89046 PUT      reg6[verdict] = reg4",
      "89052 PUSH MEMORY ELEMENT IF INIT      2923 -> reg8",
      "89055 JUMP IF TRUE      reg8 TO: 89063 | 89058"
  ],
  "89058": [
      "89058 SET       -> reg8",
      "89063 PUT      reg6[raw] = reg8",
      "89069 PUT      reg6[error] = false",
      "89075 JUMP OR RETURN VAL      reg6"
  ],
  "89063": [
      "89063 PUT      reg6[raw] = reg8",
      "89069 PUT      reg6[error] = false",
      "89075 JUMP OR RETURN VAL      reg6"
  ],
  "89151": [
      "89151 GET WINDOW PROP      navigator -> reg9",
      "89156 GET      reg9[userAgent] -> reg6",
      "89162 GET      reg6[indexOf] -> reg9",
      "89168 NEW ARRAY      1 -> reg11",
      "89171 PUT      reg11[0] = Trident/",
      "89177 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg11",
      "89181 SET      reg2 -> reg4",
      "89184 SUBTRACT      0 - 1 -> reg7",
      "89188 GREATER THAN      reg4 > reg7 -> reg9",
      "89192 SET      reg9 -> reg8",
      "89195 JUMP IF FALSE      reg8 TO: 89222 | 89198"
  ],
  "89195": ["89195 JUMP IF FALSE      reg8 TO: 89222 | 89198"],
  "89198": [
      "89198 EMPTY OBJECT      -> reg7",
      "89200 PUT      reg7[verdict] = false",
      "89206 PUT      reg7[raw] = trident",
      "89214 PUT      reg7[error] = false",
      "89220 JUMP OR RETURN VAL      reg7"
  ],
  "89222": [
      "89222 PUSH MEMORY ELEMENT IF INIT      2931 -> reg7",
      "89225 GET      reg7[get] -> reg8",
      "89231 GET      reg8[toString] -> reg12",
      "89237 EMPTY ARRAY      -> reg7",
      "89239 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg7",
      "89243 SET      reg2 -> reg4",
      "89246 SET MEMORY ELEMENT IF INIT      2932 = reg4",
      "89249 PUSH MEMORY ELEMENT IF INIT      2932 -> reg9",
      "89252 GET      reg9[indexOf] -> reg10",
      "89258 NEW ARRAY      1 -> reg7",
      "89261 PUT      reg7[0] = opts.languages",
      "89267 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg7",
      "89271 SET      reg2 -> reg4",
      "89274 SUBTRACT      0 - 1 -> reg10",
      "89278 GREATER THAN      reg4 > reg10 -> reg7",
      "89282 JUMP IF TRUE      reg7 TO: 89297 | 89285"
  ],
  "89285": [
      "89285 PUSH MEMORY ELEMENT IF INIT      2932 -> reg4",
      "89288 STRICT EQUAL      reg4 === () => ['en-US', 'en'] -> reg10",
      "89294 SET      reg10 -> reg7",
      "89297 JUMP IF TRUE      reg7 TO: 89312 | 89300"
  ],
  "89297": ["89297 JUMP IF TRUE      reg7 TO: 89312 | 89300"],
  "89300": [
      "89300 PUSH MEMORY ELEMENT IF INIT      2932 -> reg4",
      "89303 STRICT EQUAL      reg4 === () => [language] -> reg10",
      "89309 SET      reg10 -> reg7",
      "89312 JUMP IF TRUE      reg7 TO: 89327 | 89315"
  ],
  "89312": ["89312 JUMP IF TRUE      reg7 TO: 89327 | 89315"],
  "89315": [
      "89315 PUSH MEMORY ELEMENT IF INIT      2932 -> reg4",
      "89318 STRICT EQUAL      reg4 === ()=>['en-GB','en-US','en'] -> reg11",
      "89324 SET      reg11 -> reg7",
      "89327 JUMP IF TRUE      reg7 TO: 89342 | 89330"
  ],
  "89327": ["89327 JUMP IF TRUE      reg7 TO: 89342 | 89330"],
  "89330": [
      "89330 PUSH MEMORY ELEMENT IF INIT      2932 -> reg10",
      "89333 STRICT EQUAL      reg10 === () => languages || ['en-US', 'en'] -> reg4",
      "89339 SET      reg4 -> reg7",
      "89342 JUMP IF TRUE      reg7 TO: 89357 | 89345"
  ],
  "89342": ["89342 JUMP IF TRUE      reg7 TO: 89357 | 89345"],
  "89345": [
      "89345 PUSH MEMORY ELEMENT IF INIT      2932 -> reg10",
      "89348 STRICT EQUAL      reg10 === ()=>o.preferences[e] -> reg11",
      "89354 SET      reg11 -> reg7",
      "89357 SET MEMORY ELEMENT IF INIT      2933 = reg7",
      "89360 EMPTY OBJECT      -> reg7",
      "89362 PUSH MEMORY ELEMENT IF INIT      2933 -> reg4",
      "89365 PUT      reg7[verdict] = reg4",
      "89371 PUSH MEMORY ELEMENT IF INIT      2932 -> reg10",
      "89374 PUT      reg7[raw] = reg10",
      "89380 PUT      reg7[error] = false",
      "89386 JUMP OR RETURN VAL      reg7"
  ],
  "89357": [
      "89357 SET MEMORY ELEMENT IF INIT      2933 = reg7",
      "89360 EMPTY OBJECT      -> reg7",
      "89362 PUSH MEMORY ELEMENT IF INIT      2933 -> reg4",
      "89365 PUT      reg7[verdict] = reg4",
      "89371 PUSH MEMORY ELEMENT IF INIT      2932 -> reg10",
      "89374 PUT      reg7[raw] = reg10",
      "89380 PUT      reg7[error] = false",
      "89386 JUMP OR RETURN VAL      reg7"
  ],
  "89390": [
      "89390 SET I      null",
      "89392 PUSH F.K      -> reg4",
      "89394 VOID F",
      "89395 SET MEMORY ELEMENT      0 = reg4",
      "89398 EMPTY OBJECT      -> reg4",
      "89400 PUT      reg4[verdict] = false",
      "89406 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "89409 PUT      reg4[raw] = reg7",
      "89415 PUT      reg4[error] = true",
      "89421 JUMP OR RETURN VAL      reg4"
  ],
  "89478": [
      "89478 NEW REGEXP      Linux|Android|X11 ,  -> reg7",
      "89486 GET      reg7[test] -> reg6",
      "89492 NEW ARRAY      1 -> reg9",
      "89495 GET WINDOW PROP      navigator -> reg10",
      "89500 GET      reg10[userAgent] -> reg8",
      "89506 PUT      reg9[0] = reg8",
      "89510 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg9",
      "89514 SET      reg2 -> reg5",
      "89517 SET      reg5 -> reg4",
      "89520 NOT      reg4 -> reg5",
      "89523 NOT      reg5 -> reg4",
      "89526 SET MEMORY ELEMENT IF INIT      2943 = reg4",
      "89529 NEW ARRAY      22 -> reg4",
      "89532 PUT      reg4[0] = 4212003075",
      "89538 PUT      reg4[1] = 3055151938",
      "89544 PUT      reg4[2] = 508153085",
      "89548 PUT      reg4[3] = 1485515647",
      "89554 PUT      reg4[4] = 320544745",
      "89558 PUT      reg4[5] = 3091243004",
      "89564 PUT      reg4[6] = 634679355",
      "89568 PUT      reg4[7] = 2028886731",
      "89574 PUT      reg4[8] = 2982665864",
      "89580 PUT      reg4[9] = 1107204573",
      "89586 PUT      reg4[10] = 2171003250",
      "89592 PUT      reg4[11] = 509532937",
      "89596 PUT      reg4[12] = 1492579560",
      "89602 PUT      reg4[13] = 770604794",
      "89606 PUT      reg4[14] = 4169976567",
      "89612 PUT      reg4[15] = 256619023",
      "89616 PUT      reg4[16] = 2362783731",
      "89622 PUT      reg4[17] = 2670168131",
      "89628 PUT      reg4[18] = 2817337800",
      "89634 PUT      reg4[19] = 2064507843",
      "89640 PUT      reg4[20] = 437910695",
      "89644 PUT      reg4[21] = 1244774778",
      "89650 SET MEMORY ELEMENT IF INIT      2944 = reg4",
      "89653 SET MEMORY ELEMENT IF INIT      2945 = false",
      "89656 PUSH MEMORY ELEMENT IF INIT      24 -> reg4",
      "89659 NEW ARRAY      2 -> reg6",
      "89662 NEW REGEXP      Chrome\\/(\\d+)\\. ,  -> reg8",
      "89670 PUT      reg6[0] = reg8",
      "89674 EMPTY OBJECT      -> reg8",
      "89676 PUT      reg8[ver] = 1",
      "89682 PUT      reg6[1] = reg8",
      "89686 CALL FUNCTION      PTR: reg4 MEM: reg6",
      "89690 SET      reg2 -> reg10",
      "89693 GET      reg10[exec] -> reg4",
      "89699 NEW ARRAY      1 -> reg8",
      "89702 GET WINDOW PROP      navigator -> reg6",
      "89707 GET      reg6[userAgent] -> reg9",
      "89713 PUT      reg8[0] = reg9",
      "89717 CALL FUNCTION      OBJ: reg10 FUNC: reg4 ARGS: reg8",
      "89721 SET      reg2 -> reg5",
      "89724 SET MEMORY ELEMENT IF INIT      2946 = reg5",
      "89727 PUSH MEMORY ELEMENT IF INIT      2946 -> reg4",
      "89730 JUMP IF FALSE      reg4 TO: 89745 | 89733"
  ],
  "89520": [
      "89520 NOT      reg4 -> reg5",
      "89523 NOT      reg5 -> reg4",
      "89526 SET MEMORY ELEMENT IF INIT      2943 = reg4",
      "89529 NEW ARRAY      22 -> reg4",
      "89532 PUT      reg4[0] = 4212003075",
      "89538 PUT      reg4[1] = 3055151938",
      "89544 PUT      reg4[2] = 508153085",
      "89548 PUT      reg4[3] = 1485515647",
      "89554 PUT      reg4[4] = 320544745",
      "89558 PUT      reg4[5] = 3091243004",
      "89564 PUT      reg4[6] = 634679355",
      "89568 PUT      reg4[7] = 2028886731",
      "89574 PUT      reg4[8] = 2982665864",
      "89580 PUT      reg4[9] = 1107204573",
      "89586 PUT      reg4[10] = 2171003250",
      "89592 PUT      reg4[11] = 509532937",
      "89596 PUT      reg4[12] = 1492579560",
      "89602 PUT      reg4[13] = 770604794",
      "89606 PUT      reg4[14] = 4169976567",
      "89612 PUT      reg4[15] = 256619023",
      "89616 PUT      reg4[16] = 2362783731",
      "89622 PUT      reg4[17] = 2670168131",
      "89628 PUT      reg4[18] = 2817337800",
      "89634 PUT      reg4[19] = 2064507843",
      "89640 PUT      reg4[20] = 437910695",
      "89644 PUT      reg4[21] = 1244774778",
      "89650 SET MEMORY ELEMENT IF INIT      2944 = reg4",
      "89653 SET MEMORY ELEMENT IF INIT      2945 = false",
      "89656 PUSH MEMORY ELEMENT IF INIT      24 -> reg4",
      "89659 NEW ARRAY      2 -> reg6",
      "89662 NEW REGEXP      Chrome\\/(\\d+)\\. ,  -> reg8",
      "89670 PUT      reg6[0] = reg8",
      "89674 EMPTY OBJECT      -> reg8",
      "89676 PUT      reg8[ver] = 1",
      "89682 PUT      reg6[1] = reg8",
      "89686 CALL FUNCTION      PTR: reg4 MEM: reg6",
      "89690 SET      reg2 -> reg10",
      "89693 GET      reg10[exec] -> reg4",
      "89699 NEW ARRAY      1 -> reg8",
      "89702 GET WINDOW PROP      navigator -> reg6",
      "89707 GET      reg6[userAgent] -> reg9",
      "89713 PUT      reg8[0] = reg9",
      "89717 CALL FUNCTION      OBJ: reg10 FUNC: reg4 ARGS: reg8",
      "89721 SET      reg2 -> reg5",
      "89724 SET MEMORY ELEMENT IF INIT      2946 = reg5",
      "89727 PUSH MEMORY ELEMENT IF INIT      2946 -> reg4",
      "89730 JUMP IF FALSE      reg4 TO: 89745 | 89733"
  ],
  "89733": [
      "89733 PUSH MEMORY ELEMENT IF INIT      2946 -> reg5",
      "89736 GET      reg5[groups] -> reg9",
      "89742 SET      reg9 -> reg4",
      "89745 JUMP IF FALSE      reg4 TO: 89766 | 89748"
  ],
  "89745": ["89745 JUMP IF FALSE      reg4 TO: 89766 | 89748"],
  "89748": [
      "89748 PUSH MEMORY ELEMENT IF INIT      2946 -> reg6",
      "89751 GET      reg6[groups] -> reg5",
      "89757 GET      reg5[ver] -> reg6",
      "89763 SET      reg6 -> reg4",
      "89766 JUMP IF FALSE      reg4 TO: 89819 | 89769"
  ],
  "89766": ["89766 JUMP IF FALSE      reg4 TO: 89819 | 89769"],
  "89769": [
      "89769 GET WINDOW PROP      parseInt -> reg5",
      "89774 NEW ARRAY      1 -> reg6",
      "89777 PUSH MEMORY ELEMENT IF INIT      2946 -> reg11",
      "89780 GET      reg11[groups] -> reg8",
      "89786 GET      reg8[ver] -> reg9",
      "89792 PUT      reg6[0] = reg9",
      "89796 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "89800 SET      reg2 -> reg4",
      "89803 SET MEMORY ELEMENT IF INIT      2947 = reg4",
      "89806 PUSH MEMORY ELEMENT IF INIT      2947 -> reg4",
      "89809 LESS THAN      reg4 < 81 -> reg9",
      "89813 JUMP IF FALSE      reg9 TO: 89819 | 89816"
  ],
  "89816": [
      "89816 SET MEMORY ELEMENT IF INIT      2945 = true",
      "89819 GET WINDOW PROP      Date -> reg8",
      "89824 EMPTY ARRAY      -> reg14",
      "89826 BIND APPLY      reg8 reg14 -> 6",
      "89830 GET      reg6[toString] -> reg8",
      "89836 EMPTY ARRAY      -> reg9",
      "89838 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "89842 SET      reg2 -> reg4",
      "89845 GET      reg4[match] -> reg8",
      "89851 NEW ARRAY      1 -> reg12",
      "89854 NEW REGEXP      \\((.+)\\) ,  -> reg9",
      "89862 PUT      reg12[0] = reg9",
      "89866 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg12",
      "89870 SET      reg2 -> reg5",
      "89873 GET      reg5[1] -> reg9",
      "89877 SET MEMORY ELEMENT IF INIT      2948 = reg9",
      "89880 PUSH MEMORY ELEMENT IF INIT      2944 -> reg8",
      "89883 GET      reg8[indexOf] -> reg9",
      "89889 NEW ARRAY      1 -> reg12",
      "89892 PUSH MEMORY ELEMENT IF INIT      2589 -> reg14",
      "89895 GET      reg14[hash2] -> reg11",
      "89901 NEW ARRAY      1 -> reg15",
      "89904 PUSH MEMORY ELEMENT IF INIT      2948 -> reg16",
      "89907 PUT      reg15[0] = reg16",
      "89911 CALL FUNCTION      OBJ: reg14 FUNC: reg11 ARGS: reg15",
      "89915 SET      reg2 -> reg13",
      "89918 PUT      reg12[0] = reg13",
      "89922 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg12",
      "89926 SET      reg2 -> reg5",
      "89929 SUBTRACT      0 - 1 -> reg9",
      "89933 GREATER THAN      reg5 > reg9 -> reg11",
      "89937 SET MEMORY ELEMENT IF INIT      2949 = reg11",
      "89940 PUSH MEMORY ELEMENT IF INIT      2949 -> reg5",
      "89943 JUMP IF FALSE      reg5 TO: 89961 | 89946"
  ],
  "89819": [
      "89819 GET WINDOW PROP      Date -> reg8",
      "89824 EMPTY ARRAY      -> reg14",
      "89826 BIND APPLY      reg8 reg14 -> 6",
      "89830 GET      reg6[toString] -> reg8",
      "89836 EMPTY ARRAY      -> reg9",
      "89838 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "89842 SET      reg2 -> reg4",
      "89845 GET      reg4[match] -> reg8",
      "89851 NEW ARRAY      1 -> reg12",
      "89854 NEW REGEXP      \\((.+)\\) ,  -> reg9",
      "89862 PUT      reg12[0] = reg9",
      "89866 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg12",
      "89870 SET      reg2 -> reg5",
      "89873 GET      reg5[1] -> reg9",
      "89877 SET MEMORY ELEMENT IF INIT      2948 = reg9",
      "89880 PUSH MEMORY ELEMENT IF INIT      2944 -> reg8",
      "89883 GET      reg8[indexOf] -> reg9",
      "89889 NEW ARRAY      1 -> reg12",
      "89892 PUSH MEMORY ELEMENT IF INIT      2589 -> reg14",
      "89895 GET      reg14[hash2] -> reg11",
      "89901 NEW ARRAY      1 -> reg15",
      "89904 PUSH MEMORY ELEMENT IF INIT      2948 -> reg16",
      "89907 PUT      reg15[0] = reg16",
      "89911 CALL FUNCTION      OBJ: reg14 FUNC: reg11 ARGS: reg15",
      "89915 SET      reg2 -> reg13",
      "89918 PUT      reg12[0] = reg13",
      "89922 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg12",
      "89926 SET      reg2 -> reg5",
      "89929 SUBTRACT      0 - 1 -> reg9",
      "89933 GREATER THAN      reg5 > reg9 -> reg11",
      "89937 SET MEMORY ELEMENT IF INIT      2949 = reg11",
      "89940 PUSH MEMORY ELEMENT IF INIT      2949 -> reg5",
      "89943 JUMP IF FALSE      reg5 TO: 89961 | 89946"
  ],
  "89946": [
      "89946 PUSH MEMORY ELEMENT IF INIT      2943 -> reg9",
      "89949 JUMP IF TRUE      reg9 TO: 89958 | 89952"
  ],
  "89952": [
      "89952 PUSH MEMORY ELEMENT IF INIT      2945 -> reg11",
      "89955 SET      reg11 -> reg9",
      "89958 SET      reg9 -> reg5",
      "89961 SET MEMORY ELEMENT IF INIT      2950 = reg5",
      "89964 GET WINDOW PROP      undefined -> reg5",
      "89969 SET MEMORY ELEMENT IF INIT      2951 = reg5",
      "89972 PUSH MEMORY ELEMENT IF INIT      2950 -> reg5",
      "89975 NOT      reg5 -> reg11",
      "89978 JUMP IF FALSE      reg11 TO: 89987 | 89981"
  ],
  "89958": [
      "89958 SET      reg9 -> reg5",
      "89961 SET MEMORY ELEMENT IF INIT      2950 = reg5",
      "89964 GET WINDOW PROP      undefined -> reg5",
      "89969 SET MEMORY ELEMENT IF INIT      2951 = reg5",
      "89972 PUSH MEMORY ELEMENT IF INIT      2950 -> reg5",
      "89975 NOT      reg5 -> reg11",
      "89978 JUMP IF FALSE      reg11 TO: 89987 | 89981"
  ],
  "89961": [
      "89961 SET MEMORY ELEMENT IF INIT      2950 = reg5",
      "89964 GET WINDOW PROP      undefined -> reg5",
      "89969 SET MEMORY ELEMENT IF INIT      2951 = reg5",
      "89972 PUSH MEMORY ELEMENT IF INIT      2950 -> reg5",
      "89975 NOT      reg5 -> reg11",
      "89978 JUMP IF FALSE      reg11 TO: 89987 | 89981"
  ],
  "89981": [
      "89981 PUSH MEMORY ELEMENT IF INIT      2949 -> reg5",
      "89984 SET      reg5 -> reg11",
      "89987 JUMP IF FALSE      reg11 TO: 89993 | 89990"
  ],
  "89987": ["89987 JUMP IF FALSE      reg11 TO: 89993 | 89990"],
  "89990": [
      "89990 SET MEMORY ELEMENT IF INIT      2951 = 50",
      "89993 EMPTY OBJECT      -> reg12",
      "89995 PUSH MEMORY ELEMENT IF INIT      2950 -> reg5",
      "89998 PUT      reg12[verdict] = reg5",
      "90004 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "90007 GET      reg9[stringify] -> reg11",
      "90013 NEW ARRAY      1 -> reg13",
      "90016 EMPTY OBJECT      -> reg16",
      "90018 GET WINDOW PROP      navigator -> reg15",
      "90023 GET      reg15[userAgent] -> reg17",
      "90029 PUT      reg16[ua] = reg17",
      "90035 GET WINDOW PROP      navigator -> reg15",
      "90040 GET      reg15[platform] -> reg18",
      "90046 PUT      reg16[plat] = reg18",
      "90052 PUSH MEMORY ELEMENT IF INIT      2948 -> reg15",
      "90055 PUT      reg16[ds] = reg15",
      "90061 PUSH MEMORY ELEMENT IF INIT      2945 -> reg17",
      "90064 PUT      reg16[old] = reg17",
      "90070 PUSH MEMORY ELEMENT IF INIT      2949 -> reg15",
      "90073 PUT      reg16[hm] = reg15",
      "90079 PUT      reg13[0] = reg16",
      "90083 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg13",
      "90087 SET      reg2 -> reg5",
      "90090 PUT      reg12[raw] = reg5",
      "90096 PUSH MEMORY ELEMENT IF INIT      2951 -> reg5",
      "90099 PUT      reg12[score] = reg5",
      "90105 PUT      reg12[error] = false",
      "90111 JUMP OR RETURN VAL      reg12"
  ],
  "89993": [
      "89993 EMPTY OBJECT      -> reg12",
      "89995 PUSH MEMORY ELEMENT IF INIT      2950 -> reg5",
      "89998 PUT      reg12[verdict] = reg5",
      "90004 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "90007 GET      reg9[stringify] -> reg11",
      "90013 NEW ARRAY      1 -> reg13",
      "90016 EMPTY OBJECT      -> reg16",
      "90018 GET WINDOW PROP      navigator -> reg15",
      "90023 GET      reg15[userAgent] -> reg17",
      "90029 PUT      reg16[ua] = reg17",
      "90035 GET WINDOW PROP      navigator -> reg15",
      "90040 GET      reg15[platform] -> reg18",
      "90046 PUT      reg16[plat] = reg18",
      "90052 PUSH MEMORY ELEMENT IF INIT      2948 -> reg15",
      "90055 PUT      reg16[ds] = reg15",
      "90061 PUSH MEMORY ELEMENT IF INIT      2945 -> reg17",
      "90064 PUT      reg16[old] = reg17",
      "90070 PUSH MEMORY ELEMENT IF INIT      2949 -> reg15",
      "90073 PUT      reg16[hm] = reg15",
      "90079 PUT      reg13[0] = reg16",
      "90083 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg13",
      "90087 SET      reg2 -> reg5",
      "90090 PUT      reg12[raw] = reg5",
      "90096 PUSH MEMORY ELEMENT IF INIT      2951 -> reg5",
      "90099 PUT      reg12[score] = reg5",
      "90105 PUT      reg12[error] = false",
      "90111 JUMP OR RETURN VAL      reg12"
  ],
  "90115": [
      "90115 SET I      null",
      "90117 PUSH F.K      -> reg5",
      "90119 VOID F",
      "90120 SET MEMORY ELEMENT      0 = reg5",
      "90123 EMPTY OBJECT      -> reg5",
      "90125 PUT      reg5[verdict] = false",
      "90131 PUSH MEMORY ELEMENT IF INIT      0 -> reg11",
      "90134 GET      reg11[toString] -> reg15",
      "90140 EMPTY ARRAY      -> reg16",
      "90142 CALL FUNCTION      OBJ: reg11 FUNC: reg15 ARGS: reg16",
      "90146 SET      reg2 -> reg12",
      "90149 PUT      reg5[raw] = reg12",
      "90155 PUT      reg5[error] = true",
      "90161 JUMP OR RETURN VAL      reg5"
  ],
  "90462": [
      "90462 PUSH MEMORY ELEMENT IF INIT      2965 -> reg5",
      "90465 GET      reg5[groups] -> reg7",
      "90471 SET      reg7 -> reg8",
      "90474 JUMP IF FALSE      reg8 TO: 90495 | 90477"
  ],
  "90474": ["90474 JUMP IF FALSE      reg8 TO: 90495 | 90477"],
  "90477": [
      "90477 PUSH MEMORY ELEMENT IF INIT      2965 -> reg7",
      "90480 GET      reg7[groups] -> reg5",
      "90486 GET      reg5[ver] -> reg7",
      "90492 SET      reg7 -> reg8",
      "90495 JUMP IF FALSE      reg8 TO: 90859 | 90498"
  ],
  "90495": ["90495 JUMP IF FALSE      reg8 TO: 90859 | 90498"],
  "90498": [
      "90498 GET WINDOW PROP      parseInt -> reg9",
      "90503 NEW ARRAY      1 -> reg10",
      "90506 PUSH MEMORY ELEMENT IF INIT      2965 -> reg7",
      "90509 GET      reg7[groups] -> reg8",
      "90515 GET      reg8[ver] -> reg7",
      "90521 PUT      reg10[0] = reg7",
      "90525 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "90529 SET      reg2 -> reg5",
      "90532 SET MEMORY ELEMENT IF INIT      2966 = reg5",
      "90535 PUSH MEMORY ELEMENT IF INIT      2966 -> reg5",
      "90538 LESS THAN      reg5 < 94 -> reg7",
      "90542 JUMP IF FALSE      reg7 TO: 90859 | 90545"
  ],
  "90545": [
      "90545 PUSH MEMORY ELEMENT IF INIT      2963 -> reg5",
      "90548 GET      reg5[contentWindow] -> reg8",
      "90554 GET      reg8[navigator] -> reg5",
      "90560 GET      reg5[userAgent] -> reg8",
      "90566 GET      reg8[indexOf] -> reg5",
      "90572 NEW ARRAY      1 -> reg9",
      "90575 PUT      reg9[0] = Chrome",
      "90581 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg9",
      "90585 SET      reg2 -> reg7",
      "90588 SUBTRACT      0 - 1 -> reg5",
      "90592 GREATER THAN      reg7 > reg5 -> reg9",
      "90596 JUMP IF FALSE      reg9 TO: 90816 | 90599"
  ],
  "90599": [
      "90599 PUSH MEMORY ELEMENT IF INIT      2963 -> reg10",
      "90602 GET      reg10[contentWindow] -> reg5",
      "90608 GET      reg5[navigator] -> reg10",
      "90614 GET      reg10[userAgent] -> reg5",
      "90620 GET      reg5[indexOf] -> reg13",
      "90626 NEW ARRAY      1 -> reg10",
      "90629 PUT      reg10[0] = Windows",
      "90635 CALL FUNCTION      OBJ: reg5 FUNC: reg13 ARGS: reg10",
      "90639 SET      reg2 -> reg7",
      "90642 SUBTRACT      0 - 1 -> reg10",
      "90646 GREATER THAN      reg7 > reg10 -> reg11",
      "90650 JUMP IF FALSE      reg11 TO: 90703 | 90653"
  ],
  "90653": [
      "90653 GET WINDOW PROP      window -> reg7",
      "90658 GET      reg7[navigator] -> reg10",
      "90664 GET      reg10[userAgent] -> reg14",
      "90670 GET      reg14[indexOf] -> reg7",
      "90676 NEW ARRAY      1 -> reg10",
      "90679 PUT      reg10[0] = OPR",
      "90685 CALL FUNCTION      OBJ: reg14 FUNC: reg7 ARGS: reg10",
      "90689 SET      reg2 -> reg12",
      "90692 SUBTRACT      0 - 1 -> reg7",
      "90696 STRICT EQUAL      reg12 === reg7 -> reg10",
      "90700 SET      reg10 -> reg11",
      "90703 JUMP IF FALSE      reg11 TO: 90756 | 90706"
  ],
  "90703": ["90703 JUMP IF FALSE      reg11 TO: 90756 | 90706"],
  "90706": [
      "90706 GET WINDOW PROP      window -> reg10",
      "90711 GET      reg10[navigator] -> reg12",
      "90717 GET      reg12[userAgent] -> reg10",
      "90723 GET      reg10[indexOf] -> reg13",
      "90729 NEW ARRAY      1 -> reg12",
      "90732 PUT      reg12[0] = Edg",
      "90738 CALL FUNCTION      OBJ: reg10 FUNC: reg13 ARGS: reg12",
      "90742 SET      reg2 -> reg7",
      "90745 SUBTRACT      0 - 1 -> reg12",
      "90749 STRICT EQUAL      reg7 === reg12 -> reg13",
      "90753 SET      reg13 -> reg11",
      "90756 JUMP IF TRUE      reg11 TO: 90813 | 90759"
  ],
  "90756": ["90756 JUMP IF TRUE      reg11 TO: 90813 | 90759"],
  "90759": [
      "90759 PUSH MEMORY ELEMENT IF INIT      2963 -> reg7",
      "90762 GET      reg7[contentWindow] -> reg13",
      "90768 GET      reg13[navigator] -> reg7",
      "90774 GET      reg7[userAgent] -> reg13",
      "90780 GET      reg13[indexOf] -> reg7",
      "90786 NEW ARRAY      1 -> reg15",
      "90789 PUT      reg15[0] = Macintosh",
      "90795 CALL FUNCTION      OBJ: reg13 FUNC: reg7 ARGS: reg15",
      "90799 SET      reg2 -> reg12",
      "90802 SUBTRACT      0 - 1 -> reg7",
      "90806 GREATER THAN      reg12 > reg7 -> reg15",
      "90810 SET      reg15 -> reg11",
      "90813 SET      reg11 -> reg9",
      "90816 JUMP IF FALSE      reg9 TO: 90859 | 90819"
  ],
  "90813": [
      "90813 SET      reg11 -> reg9",
      "90816 JUMP IF FALSE      reg9 TO: 90859 | 90819"
  ],
  "90816": ["90816 JUMP IF FALSE      reg9 TO: 90859 | 90819"],
  "90819": [
      "90819 PUSH MEMORY ELEMENT IF INIT      2964 -> reg7",
      "90822 PUSH MEMORY ELEMENT IF INIT      2963 -> reg11",
      "90825 GET      reg11[contentWindow] -> reg12",
      "90831 GET      reg12[navigator] -> reg9",
      "90837 GET      reg9[plugins] -> reg11",
      "90843 GET      reg11[length] -> reg9",
      "90849 STRICT EQUAL      reg9 === 0 -> reg15",
      "90853 PUT      reg7[if_p0] = reg15",
      "90859 PUSH MEMORY ELEMENT IF INIT      2964 -> reg7",
      "90862 GET      reg7[nav] -> reg11",
      "90868 PUSH MEMORY ELEMENT IF INIT      2964 -> reg7",
      "90871 GET      reg7[ifr] -> reg12",
      "90877 STRICT NOT EQUAL      reg11 !== reg12 -> reg9",
      "90881 JUMP IF TRUE      reg9 TO: 90896 | 90884"
  ],
  "90859": [
      "90859 PUSH MEMORY ELEMENT IF INIT      2964 -> reg7",
      "90862 GET      reg7[nav] -> reg11",
      "90868 PUSH MEMORY ELEMENT IF INIT      2964 -> reg7",
      "90871 GET      reg7[ifr] -> reg12",
      "90877 STRICT NOT EQUAL      reg11 !== reg12 -> reg9",
      "90881 JUMP IF TRUE      reg9 TO: 90896 | 90884"
  ],
  "90884": [
      "90884 PUSH MEMORY ELEMENT IF INIT      2964 -> reg7",
      "90887 GET      reg7[if_p0] -> reg11",
      "90893 SET      reg11 -> reg9",
      "90896 SET MEMORY ELEMENT IF INIT      2967 = reg9",
      "90899 EMPTY OBJECT      -> reg7",
      "90901 PUSH MEMORY ELEMENT IF INIT      2967 -> reg9",
      "90904 PUT      reg7[verdict] = reg9",
      "90910 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "90913 GET      reg9[stringify] -> reg11",
      "90919 NEW ARRAY      1 -> reg15",
      "90922 PUSH MEMORY ELEMENT IF INIT      2964 -> reg16",
      "90925 PUT      reg15[0] = reg16",
      "90929 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg15",
      "90933 SET      reg2 -> reg12",
      "90936 PUT      reg7[raw] = reg12",
      "90942 PUT      reg7[error] = false",
      "90948 JUMP OR RETURN VAL      reg7"
  ],
  "90896": [
      "90896 SET MEMORY ELEMENT IF INIT      2967 = reg9",
      "90899 EMPTY OBJECT      -> reg7",
      "90901 PUSH MEMORY ELEMENT IF INIT      2967 -> reg9",
      "90904 PUT      reg7[verdict] = reg9",
      "90910 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "90913 GET      reg9[stringify] -> reg11",
      "90919 NEW ARRAY      1 -> reg15",
      "90922 PUSH MEMORY ELEMENT IF INIT      2964 -> reg16",
      "90925 PUT      reg15[0] = reg16",
      "90929 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg15",
      "90933 SET      reg2 -> reg12",
      "90936 PUT      reg7[raw] = reg12",
      "90942 PUT      reg7[error] = false",
      "90948 JUMP OR RETURN VAL      reg7"
  ],
  "90952": [
      "90952 SET I      null",
      "90954 PUSH F.K      -> reg7",
      "90956 VOID F",
      "90957 SET MEMORY ELEMENT      0 = reg7",
      "90960 EMPTY OBJECT      -> reg7",
      "90962 PUT      reg7[verdict] = false",
      "90968 PUSH MEMORY ELEMENT IF INIT      0 -> reg11",
      "90971 GET      reg11[toString] -> reg18",
      "90977 EMPTY ARRAY      -> reg12",
      "90979 CALL FUNCTION      OBJ: reg11 FUNC: reg18 ARGS: reg12",
      "90983 SET      reg2 -> reg15",
      "90986 PUT      reg7[raw] = reg15",
      "90992 PUT      reg7[error] = true",
      "90998 JUMP OR RETURN VAL      reg7"
  ],
  "91099": [
      "91099 PUSH MEMORY ELEMENT IF INIT      2980 -> reg7",
      "91102 GET      reg7[contentWindow] -> reg4",
      "91108 GET      reg4[navigator] -> reg7",
      "91114 SET      reg7 -> reg6",
      "91117 JUMP IF FALSE      reg6 TO: 91358 | 91120"
  ],
  "91117": ["91117 JUMP IF FALSE      reg6 TO: 91358 | 91120"],
  "91120": [
      "91120 SET MEMORY ELEMENT IF INIT      2983 = 0",
      "91123 PUSH MEMORY ELEMENT IF INIT      2983 -> reg6",
      "91126 PUSH MEMORY ELEMENT IF INIT      2981 -> reg4",
      "91129 GET      reg4[length] -> reg8",
      "91135 LESS THAN      reg6 < reg8 -> reg4",
      "91139 JUMP IF FALSE      reg4 TO: 91297 | 91142"
  ],
  "91142": [
      "91142 PUSH MEMORY ELEMENT IF INIT      2981 -> reg4",
      "91145 PUSH MEMORY ELEMENT IF INIT      2983 -> reg7",
      "91148 GET      reg4[reg7] -> reg6",
      "91152 SET MEMORY ELEMENT IF INIT      2984 = reg6",
      "91155 PUSH MEMORY ELEMENT IF INIT      2982 -> reg4",
      "91158 GET      reg4[nav] -> reg8",
      "91164 PUSH MEMORY ELEMENT IF INIT      2984 -> reg6",
      "91167 GET WINDOW PROP      navigator -> reg4",
      "91172 PUSH MEMORY ELEMENT IF INIT      2984 -> reg9",
      "91175 GET      reg4[reg9] -> reg7",
      "91179 PUT      reg8[reg6] = reg7",
      "91183 PUSH MEMORY ELEMENT IF INIT      2982 -> reg4",
      "91186 GET      reg4[iframe] -> reg7",
      "91192 PUSH MEMORY ELEMENT IF INIT      2984 -> reg4",
      "91195 PUSH MEMORY ELEMENT IF INIT      2980 -> reg6",
      "91198 GET      reg6[contentWindow] -> reg8",
      "91204 GET      reg8[navigator] -> reg10",
      "91210 PUSH MEMORY ELEMENT IF INIT      2984 -> reg8",
      "91213 GET      reg10[reg8] -> reg6",
      "91217 PUT      reg7[reg4] = reg6",
      "91221 PUSH MEMORY ELEMENT IF INIT      2982 -> reg4",
      "91224 GET      reg4[nav] -> reg6",
      "91230 PUSH MEMORY ELEMENT IF INIT      2984 -> reg12",
      "91233 GET      reg6[reg12] -> reg4",
      "91237 PUSH MEMORY ELEMENT IF INIT      2982 -> reg6",
      "91240 GET      reg6[iframe] -> reg7",
      "91246 PUSH MEMORY ELEMENT IF INIT      2984 -> reg9",
      "91249 GET      reg7[reg9] -> reg6",
      "91253 STRICT NOT EQUAL      reg4 !== reg6 -> reg7",
      "91257 JUMP IF FALSE      reg7 TO: 91282 | 91260"
  ],
  "91260": [
      "91260 PUSH MEMORY ELEMENT IF INIT      2982 -> reg4",
      "91263 GET      reg4[mismatches] -> reg8",
      "91269 SET      1 -> reg6",
      "91272 ADD      reg8NaN-> reg6",
      "91276 PUT      reg4[mismatches] = reg6",
      "91282 PUSH MEMORY ELEMENT IF INIT      2983 -> reg4",
      "91285 SET      reg4 -> reg7",
      "91288 ADD      reg41-> reg4",
      "91292 SET MEMORY ELEMENT IF INIT      2983 = reg4",
      "91295 JUMP      91123",
      "91123 PUSH MEMORY ELEMENT IF INIT      2983 -> reg6",
      "91126 PUSH MEMORY ELEMENT IF INIT      2981 -> reg4",
      "91129 GET      reg4[length] -> reg8",
      "91135 LESS THAN      reg6 < reg8 -> reg4",
      "91139 JUMP IF FALSE      reg4 TO: 91297 | 91142"
  ],
  "91282": [
      "91282 PUSH MEMORY ELEMENT IF INIT      2983 -> reg4",
      "91285 SET      reg4 -> reg7",
      "91288 ADD      reg41-> reg4",
      "91292 SET MEMORY ELEMENT IF INIT      2983 = reg4",
      "91295 JUMP      91123",
      "91123 PUSH MEMORY ELEMENT IF INIT      2983 -> reg6",
      "91126 PUSH MEMORY ELEMENT IF INIT      2981 -> reg4",
      "91129 GET      reg4[length] -> reg8",
      "91135 LESS THAN      reg6 < reg8 -> reg4",
      "91139 JUMP IF FALSE      reg4 TO: 91297 | 91142"
  ],
  "91297": [
      "91297 EMPTY OBJECT      -> reg4",
      "91299 PUSH MEMORY ELEMENT IF INIT      2982 -> reg7",
      "91302 GET      reg7[mismatches] -> reg8",
      "91308 GREATER THAN      reg8 > 0 -> reg6",
      "91312 PUT      reg4[verdict] = reg6",
      "91318 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "91321 GET      reg6[stringify] -> reg8",
      "91327 NEW ARRAY      1 -> reg9",
      "91330 PUSH MEMORY ELEMENT IF INIT      2982 -> reg10",
      "91333 PUT      reg9[0] = reg10",
      "91337 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "91341 SET      reg2 -> reg7",
      "91344 PUT      reg4[raw] = reg7",
      "91350 PUT      reg4[error] = false",
      "91356 JUMP OR RETURN VAL      reg4"
  ],
  "91358": [
      "91358 EMPTY OBJECT      -> reg4",
      "91360 PUT      reg4[verdict] = false",
      "91366 PUT      reg4[raw] = no contentwindow/navigator",
      "91374 PUT      reg4[error] = true",
      "91380 JUMP OR RETURN VAL      reg4"
  ],
  "91384": [
      "91384 SET I      null",
      "91386 PUSH F.K      -> reg7",
      "91388 VOID F",
      "91389 SET MEMORY ELEMENT      0 = reg7",
      "91392 EMPTY OBJECT      -> reg7",
      "91394 PUT      reg7[verdict] = false",
      "91400 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "91403 GET      reg4[toString] -> reg8",
      "91409 EMPTY ARRAY      -> reg10",
      "91411 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg10",
      "91415 SET      reg2 -> reg9",
      "91418 PUT      reg7[raw] = reg9",
      "91424 PUT      reg7[error] = true",
      "91430 JUMP OR RETURN VAL      reg7"
  ],
  "91469": [
      "91469 GET WINDOW PROP      navigator -> reg5",
      "91474 GET      reg5[platform] -> reg6",
      "91480 EQUAL      reg6 == Win64 -> reg8",
      "91486 SET      reg8 -> reg4",
      "91489 JUMP IF FALSE      reg4 TO: 91537 | 91492"
  ],
  "91489": ["91489 JUMP IF FALSE      reg4 TO: 91537 | 91492"],
  "91492": [
      "91492 NEW REGEXP      Win32|Win64|Windows|WOW64|WOW32 ,  -> reg5",
      "91500 GET      reg5[test] -> reg7",
      "91506 NEW ARRAY      1 -> reg8",
      "91509 GET WINDOW PROP      navigator -> reg9",
      "91514 GET      reg9[userAgent] -> reg13",
      "91520 PUT      reg8[0] = reg13",
      "91524 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "91528 SET      reg2 -> reg6",
      "91531 NOT      reg6 -> reg8",
      "91534 SET      reg8 -> reg4",
      "91537 JUMP IF FALSE      reg4 TO: 91623 | 91540"
  ],
  "91537": ["91537 JUMP IF FALSE      reg4 TO: 91623 | 91540"],
  "91540": [
      "91540 EMPTY OBJECT      -> reg6",
      "91542 PUT      reg6[verdict] = true",
      "91548 PUSH MEMORY ELEMENT IF INIT      280 -> reg4",
      "91551 GET      reg4[stringify] -> reg7",
      "91557 NEW ARRAY      1 -> reg9",
      "91560 EMPTY OBJECT      -> reg10",
      "91562 GET WINDOW PROP      navigator -> reg11",
      "91567 GET      reg11[userAgent] -> reg12",
      "91573 PUT      reg10[ua] = reg12",
      "91579 GET WINDOW PROP      navigator -> reg11",
      "91584 GET      reg11[platform] -> reg12",
      "91590 PUT      reg10[plat] = reg12",
      "91596 PUT      reg9[0] = reg10",
      "91600 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg9",
      "91604 SET      reg2 -> reg8",
      "91607 PUT      reg6[raw] = reg8",
      "91613 PUT      reg6[error] = false",
      "91619 JUMP OR RETURN VAL      reg6"
  ],
  "91623": [
      "91623 EMPTY OBJECT      -> reg6",
      "91625 PUT      reg6[verdict] = false",
      "91631 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "91634 GET      reg8[stringify] -> reg9",
      "91640 NEW ARRAY      1 -> reg10",
      "91643 EMPTY OBJECT      -> reg12",
      "91645 GET WINDOW PROP      navigator -> reg11",
      "91650 GET      reg11[userAgent] -> reg14",
      "91656 PUT      reg12[ua] = reg14",
      "91662 GET WINDOW PROP      navigator -> reg11",
      "91667 GET      reg11[platform] -> reg14",
      "91673 PUT      reg12[plat] = reg14",
      "91679 PUT      reg10[0] = reg12",
      "91683 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "91687 SET      reg2 -> reg7",
      "91690 PUT      reg6[raw] = reg7",
      "91696 PUT      reg6[error] = false",
      "91702 JUMP OR RETURN VAL      reg6"
  ],
  "91706": [
      "91706 SET I      null",
      "91708 PUSH F.K      -> reg7",
      "91710 VOID F",
      "91711 SET MEMORY ELEMENT      0 = reg7",
      "91714 EMPTY OBJECT      -> reg6",
      "91716 PUT      reg6[verdict] = false",
      "91722 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "91725 GET      reg7[toString] -> reg9",
      "91731 EMPTY ARRAY      -> reg12",
      "91733 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg12",
      "91737 SET      reg2 -> reg10",
      "91740 PUT      reg6[raw] = reg10",
      "91746 PUT      reg6[error] = true",
      "91752 JUMP OR RETURN VAL      reg6"
  ],
  "91838": [
      "91838 NEW REGEXP      iPad ,  -> reg6",
      "91846 GET      reg6[test] -> reg10",
      "91852 NEW ARRAY      1 -> reg8",
      "91855 PUSH MEMORY ELEMENT IF INIT      3005 -> reg11",
      "91858 PUT      reg8[0] = reg11",
      "91862 CALL FUNCTION      OBJ: reg6 FUNC: reg10 ARGS: reg8",
      "91866 SET      reg2 -> reg7",
      "91869 SET      reg7 -> reg4",
      "91872 JUMP IF TRUE      reg4 TO: 91909 | 91875"
  ],
  "91872": ["91872 JUMP IF TRUE      reg4 TO: 91909 | 91875"],
  "91875": [
      "91875 NEW REGEXP      Mac ,  -> reg7",
      "91883 GET      reg7[test] -> reg9",
      "91889 NEW ARRAY      1 -> reg10",
      "91892 PUSH MEMORY ELEMENT IF INIT      3005 -> reg12",
      "91895 PUT      reg10[0] = reg12",
      "91899 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "91903 SET      reg2 -> reg8",
      "91906 SET      reg8 -> reg4",
      "91909 JUMP IF TRUE      reg4 TO: 91946 | 91912"
  ],
  "91909": ["91909 JUMP IF TRUE      reg4 TO: 91946 | 91912"],
  "91912": [
      "91912 NEW REGEXP      iOS ,  -> reg9",
      "91920 GET      reg9[test] -> reg10",
      "91926 NEW ARRAY      1 -> reg11",
      "91929 PUSH MEMORY ELEMENT IF INIT      3005 -> reg12",
      "91932 PUT      reg11[0] = reg12",
      "91936 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "91940 SET      reg2 -> reg8",
      "91943 SET      reg8 -> reg4",
      "91946 JUMP IF TRUE      reg4 TO: 91983 | 91949"
  ],
  "91946": ["91946 JUMP IF TRUE      reg4 TO: 91983 | 91949"],
  "91949": [
      "91949 NEW REGEXP      Macintosh ,  -> reg11",
      "91957 GET      reg11[test] -> reg13",
      "91963 NEW ARRAY      1 -> reg12",
      "91966 PUSH MEMORY ELEMENT IF INIT      3005 -> reg10",
      "91969 PUT      reg12[0] = reg10",
      "91973 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg12",
      "91977 SET      reg2 -> reg8",
      "91980 SET      reg8 -> reg4",
      "91983 JUMP IF FALSE      reg4 TO: 92011 | 91986"
  ],
  "91983": ["91983 JUMP IF FALSE      reg4 TO: 92011 | 91986"],
  "91986": [
      "91986 PUSH MEMORY ELEMENT IF INIT      3006 -> reg4",
      "91989 GET      reg4[push] -> reg12",
      "91995 NEW ARRAY      1 -> reg10",
      "91998 PUT      reg10[0] = Apple",
      "92004 CALL FUNCTION      OBJ: reg4 FUNC: reg12 ARGS: reg10",
      "92008 SET      reg2 -> reg8",
      "92011 NEW REGEXP      Windows ,  -> reg10",
      "92019 GET      reg10[test] -> reg12",
      "92025 NEW ARRAY      1 -> reg13",
      "92028 PUSH MEMORY ELEMENT IF INIT      3005 -> reg14",
      "92031 PUT      reg13[0] = reg14",
      "92035 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg13",
      "92039 SET      reg2 -> reg8",
      "92042 JUMP IF FALSE      reg8 TO: 92070 | 92045"
  ],
  "92011": [
      "92011 NEW REGEXP      Windows ,  -> reg10",
      "92019 GET      reg10[test] -> reg12",
      "92025 NEW ARRAY      1 -> reg13",
      "92028 PUSH MEMORY ELEMENT IF INIT      3005 -> reg14",
      "92031 PUT      reg13[0] = reg14",
      "92035 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg13",
      "92039 SET      reg2 -> reg8",
      "92042 JUMP IF FALSE      reg8 TO: 92070 | 92045"
  ],
  "92045": [
      "92045 PUSH MEMORY ELEMENT IF INIT      3006 -> reg8",
      "92048 GET      reg8[push] -> reg13",
      "92054 NEW ARRAY      1 -> reg15",
      "92057 PUT      reg15[0] = Microsoft",
      "92063 CALL FUNCTION      OBJ: reg8 FUNC: reg13 ARGS: reg15",
      "92067 SET      reg2 -> reg12",
      "92070 NEW REGEXP      Linux ,  -> reg14",
      "92078 GET      reg14[test] -> reg12",
      "92084 NEW ARRAY      1 -> reg15",
      "92087 PUSH MEMORY ELEMENT IF INIT      3005 -> reg16",
      "92090 PUT      reg15[0] = reg16",
      "92094 CALL FUNCTION      OBJ: reg14 FUNC: reg12 ARGS: reg15",
      "92098 SET      reg2 -> reg13",
      "92101 JUMP IF TRUE      reg13 TO: 92138 | 92104"
  ],
  "92070": [
      "92070 NEW REGEXP      Linux ,  -> reg14",
      "92078 GET      reg14[test] -> reg12",
      "92084 NEW ARRAY      1 -> reg15",
      "92087 PUSH MEMORY ELEMENT IF INIT      3005 -> reg16",
      "92090 PUT      reg15[0] = reg16",
      "92094 CALL FUNCTION      OBJ: reg14 FUNC: reg12 ARGS: reg15",
      "92098 SET      reg2 -> reg13",
      "92101 JUMP IF TRUE      reg13 TO: 92138 | 92104"
  ],
  "92104": [
      "92104 NEW REGEXP      Android ,  -> reg12",
      "92112 GET      reg12[test] -> reg16",
      "92118 NEW ARRAY      1 -> reg17",
      "92121 PUSH MEMORY ELEMENT IF INIT      3005 -> reg18",
      "92124 PUT      reg17[0] = reg18",
      "92128 CALL FUNCTION      OBJ: reg12 FUNC: reg16 ARGS: reg17",
      "92132 SET      reg2 -> reg15",
      "92135 SET      reg15 -> reg13",
      "92138 JUMP IF TRUE      reg13 TO: 92175 | 92141"
  ],
  "92138": ["92138 JUMP IF TRUE      reg13 TO: 92175 | 92141"],
  "92141": [
      "92141 NEW REGEXP      SM- ,  -> reg19",
      "92149 GET      reg19[test] -> reg16",
      "92155 NEW ARRAY      1 -> reg18",
      "92158 PUSH MEMORY ELEMENT IF INIT      3005 -> reg17",
      "92161 PUT      reg18[0] = reg17",
      "92165 CALL FUNCTION      OBJ: reg19 FUNC: reg16 ARGS: reg18",
      "92169 SET      reg2 -> reg15",
      "92172 SET      reg15 -> reg13",
      "92175 JUMP IF FALSE      reg13 TO: 92203 | 92178"
  ],
  "92175": ["92175 JUMP IF FALSE      reg13 TO: 92203 | 92178"],
  "92178": [
      "92178 PUSH MEMORY ELEMENT IF INIT      3006 -> reg15",
      "92181 GET      reg15[push] -> reg17",
      "92187 NEW ARRAY      1 -> reg21",
      "92190 PUT      reg21[0] = Linux",
      "92196 CALL FUNCTION      OBJ: reg15 FUNC: reg17 ARGS: reg21",
      "92200 SET      reg2 -> reg13",
      "92203 PUSH MEMORY ELEMENT IF INIT      3006 -> reg16",
      "92206 JUMP OR RETURN VAL      reg16"
  ],
  "92203": [
      "92203 PUSH MEMORY ELEMENT IF INIT      3006 -> reg16",
      "92206 JUMP OR RETURN VAL      reg16"
  ],
  "92280": [
      "92280 SET MEMORY ELEMENT IF INIT      3019 = Microsoft",
      "92285 JUMP      92362",
      "92362 PUSH MEMORY ELEMENT IF INIT      3019 -> reg8",
      "92365 JUMP OR RETURN VAL      reg8"
  ],
  "92287": [
      "92287 PUSH MEMORY ELEMENT IF INIT      2999 -> reg4",
      "92290 GET      reg4[includes] -> reg7",
      "92296 NEW ARRAY      1 -> reg9",
      "92299 PUSH MEMORY ELEMENT IF INIT      3018 -> reg11",
      "92302 PUT      reg9[0] = reg11",
      "92306 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg9",
      "92310 SET      reg2 -> reg8",
      "92313 JUMP IF FALSE      reg8 TO: 92323 | 92316"
  ],
  "92316": [
      "92316 SET MEMORY ELEMENT IF INIT      3019 = Linux",
      "92321 JUMP      92362",
      "92362 PUSH MEMORY ELEMENT IF INIT      3019 -> reg8",
      "92365 JUMP OR RETURN VAL      reg8"
  ],
  "92323": [
      "92323 PUSH MEMORY ELEMENT IF INIT      3000 -> reg9",
      "92326 GET      reg9[includes] -> reg10",
      "92332 NEW ARRAY      1 -> reg13",
      "92335 PUSH MEMORY ELEMENT IF INIT      3018 -> reg8",
      "92338 PUT      reg13[0] = reg8",
      "92342 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg13",
      "92346 SET      reg2 -> reg7",
      "92349 JUMP IF FALSE      reg7 TO: 92359 | 92352"
  ],
  "92352": [
      "92352 SET MEMORY ELEMENT IF INIT      3019 = Apple",
      "92357 JUMP      92362",
      "92362 PUSH MEMORY ELEMENT IF INIT      3019 -> reg8",
      "92365 JUMP OR RETURN VAL      reg8"
  ],
  "92359": [
      "92359 SET MEMORY ELEMENT IF INIT      3019 = null",
      "92362 PUSH MEMORY ELEMENT IF INIT      3019 -> reg8",
      "92365 JUMP OR RETURN VAL      reg8"
  ],
  "92550": [
      "92550 PUSH MEMORY ELEMENT IF INIT      3002 -> reg4",
      "92553 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "92557 SET      reg5 -> reg6",
      "92560 JUMP IF FALSE      reg6 TO: 92573 | 92563"
  ],
  "92560": ["92560 JUMP IF FALSE      reg6 TO: 92573 | 92563"],
  "92563": [
      "92563 PUSH MEMORY ELEMENT IF INIT      3001 -> reg5",
      "92566 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "92570 SET      reg4 -> reg6",
      "92573 JUMP IF FALSE      reg6 TO: 92711 | 92576"
  ],
  "92573": ["92573 JUMP IF FALSE      reg6 TO: 92711 | 92576"],
  "92576": [
      "92576 PUSH MEMORY ELEMENT IF INIT      3001 -> reg4",
      "92579 GET      reg4[length] -> reg5",
      "92585 GREATER THAN      reg5 > 1 -> reg4",
      "92589 JUMP IF TRUE      reg4 TO: 92609 | 92592"
  ],
  "92592": [
      "92592 PUSH MEMORY ELEMENT IF INIT      3002 -> reg5",
      "92595 PUSH MEMORY ELEMENT IF INIT      3001 -> reg7",
      "92598 GET      reg7[0] -> reg8",
      "92602 STRICT NOT EQUAL      reg5 !== reg8 -> reg6",
      "92606 SET      reg6 -> reg4",
      "92609 JUMP IF FALSE      reg4 TO: 92711 | 92612"
  ],
  "92609": ["92609 JUMP IF FALSE      reg4 TO: 92711 | 92612"],
  "92612": [
      "92612 EMPTY OBJECT      -> reg4",
      "92614 PUT      reg4[verdict] = true",
      "92620 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "92623 GET      reg6[stringify] -> reg8",
      "92629 NEW ARRAY      1 -> reg7",
      "92632 EMPTY OBJECT      -> reg11",
      "92634 GET WINDOW PROP      navigator -> reg9",
      "92639 GET      reg9[userAgent] -> reg10",
      "92645 PUT      reg11[ua] = reg10",
      "92651 GET WINDOW PROP      navigator -> reg9",
      "92656 GET      reg9[platform] -> reg12",
      "92662 PUT      reg11[plat] = reg12",
      "92668 PUSH MEMORY ELEMENT IF INIT      3001 -> reg9",
      "92671 PUT      reg11[c_useragent] = reg9",
      "92677 PUSH MEMORY ELEMENT IF INIT      3002 -> reg9",
      "92680 PUT      reg11[c_platform] = reg9",
      "92686 PUT      reg7[0] = reg11",
      "92690 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg7",
      "92694 SET      reg2 -> reg5",
      "92697 PUT      reg4[raw] = reg5",
      "92703 PUT      reg4[error] = false",
      "92709 JUMP OR RETURN VAL      reg4"
  ],
  "92711": [
      "92711 EMPTY OBJECT      -> reg4",
      "92713 PUT      reg4[verdict] = false",
      "92719 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "92722 GET      reg9[stringify] -> reg8",
      "92728 NEW ARRAY      1 -> reg5",
      "92731 EMPTY OBJECT      -> reg10",
      "92733 GET WINDOW PROP      navigator -> reg11",
      "92738 GET      reg11[userAgent] -> reg12",
      "92744 PUT      reg10[ua] = reg12",
      "92750 GET WINDOW PROP      navigator -> reg12",
      "92755 GET      reg12[platform] -> reg11",
      "92761 PUT      reg10[plat] = reg11",
      "92767 PUSH MEMORY ELEMENT IF INIT      3001 -> reg11",
      "92770 PUT      reg10[c_useragent] = reg11",
      "92776 PUSH MEMORY ELEMENT IF INIT      3002 -> reg11",
      "92779 PUT      reg10[c_platform] = reg11",
      "92785 PUT      reg5[0] = reg10",
      "92789 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg5",
      "92793 SET      reg2 -> reg7",
      "92796 PUT      reg4[raw] = reg7",
      "92802 PUT      reg4[error] = false",
      "92808 JUMP OR RETURN VAL      reg4"
  ],
  "92812": [
      "92812 SET I      null",
      "92814 PUSH F.K      -> reg4",
      "92816 VOID F",
      "92817 SET MEMORY ELEMENT      0 = reg4",
      "92820 EMPTY OBJECT      -> reg4",
      "92822 PUT      reg4[verdict] = false",
      "92828 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "92831 GET      reg7[toString] -> reg8",
      "92837 EMPTY ARRAY      -> reg10",
      "92839 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "92843 SET      reg2 -> reg5",
      "92846 PUT      reg4[raw] = reg5",
      "92852 PUT      reg4[error] = true",
      "92858 JUMP OR RETURN VAL      reg4"
  ],
  "92944": [
      "92944 SET I      null",
      "92946 PUSH F.K      -> reg4",
      "92948 VOID F",
      "92949 SET MEMORY ELEMENT      0 = reg4",
      "92952 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "92955 GET      reg5[stack] -> reg6",
      "92961 GET      reg6[toString] -> reg5",
      "92967 EMPTY ARRAY      -> reg7",
      "92969 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg7",
      "92973 SET      reg2 -> reg4",
      "92976 SET MEMORY ELEMENT IF INIT      3029 = reg4",
      "92979 PUSH MEMORY ELEMENT IF INIT      3029 -> reg7",
      "92982 GET      reg7[indexOf] -> reg4",
      "92988 NEW ARRAY      1 -> reg8",
      "92991 PUT      reg8[0] = localhost",
      "92997 CALL FUNCTION      OBJ: reg7 FUNC: reg4 ARGS: reg8",
      "93001 SET      reg2 -> reg5",
      "93004 SUBTRACT      0 - 1 -> reg4",
      "93008 GREATER THAN      reg5 > reg4 -> reg8",
      "93012 SET MEMORY ELEMENT IF INIT      3030 = reg8",
      "93015 PUSH MEMORY ELEMENT IF INIT      3030 -> reg4",
      "93018 NOT      reg4 -> reg5",
      "93021 JUMP IF FALSE      reg5 TO: 93079 | 93024"
  ],
  "93024": [
      "93024 PUSH MEMORY ELEMENT IF INIT      3029 -> reg8",
      "93027 GET      reg8[substr] -> reg9",
      "93033 NEW ARRAY      2 -> reg4",
      "93036 PUT      reg4[0] = 0",
      "93040 PUSH MEMORY ELEMENT IF INIT      3029 -> reg10",
      "93043 GET      reg10[indexOf] -> reg11",
      "93049 NEW ARRAY      1 -> reg14",
      "93052 PUT      reg14[0] = \n",
      "93058 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg14",
      "93062 SET      reg2 -> reg12",
      "93065 PUT      reg4[1] = reg12",
      "93069 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg4",
      "93073 SET      reg2 -> reg5",
      "93076 SET MEMORY ELEMENT IF INIT      3029 = reg5",
      "93079 EMPTY OBJECT      -> reg4",
      "93081 PUSH MEMORY ELEMENT IF INIT      3030 -> reg5",
      "93084 PUT      reg4[verdict] = reg5",
      "93090 PUSH MEMORY ELEMENT IF INIT      3029 -> reg9",
      "93093 PUT      reg4[raw] = reg9",
      "93099 PUT      reg4[error] = false",
      "93105 JUMP OR RETURN VAL      reg4"
  ],
  "93079": [
      "93079 EMPTY OBJECT      -> reg4",
      "93081 PUSH MEMORY ELEMENT IF INIT      3030 -> reg5",
      "93084 PUT      reg4[verdict] = reg5",
      "93090 PUSH MEMORY ELEMENT IF INIT      3029 -> reg9",
      "93093 PUT      reg4[raw] = reg9",
      "93099 PUT      reg4[error] = false",
      "93105 JUMP OR RETURN VAL      reg4"
  ],
  "93219": [
      "93219 GET WINDOW PROP      Object -> reg10",
      "93224 GET      reg10[getOwnPropertyDescriptor] -> reg9",
      "93230 NEW ARRAY      2 -> reg8",
      "93233 PUSH MEMORY ELEMENT IF INIT      3036 -> reg13",
      "93236 PUT      reg8[0] = reg13",
      "93240 PUT      reg8[1] = srcdoc",
      "93246 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg8",
      "93250 SET      reg2 -> reg6",
      "93253 GET      reg6[get] -> reg9",
      "93259 SET      reg9 -> reg4",
      "93262 JUMP IF FALSE      reg4 TO: 93323 | 93265"
  ],
  "93262": ["93262 JUMP IF FALSE      reg4 TO: 93323 | 93265"],
  "93265": [
      "93265 GET WINDOW PROP      Object -> reg13",
      "93270 GET      reg13[getOwnPropertyDescriptor] -> reg9",
      "93276 NEW ARRAY      2 -> reg12",
      "93279 PUSH MEMORY ELEMENT IF INIT      3036 -> reg11",
      "93282 PUT      reg12[0] = reg11",
      "93286 PUT      reg12[1] = srcdoc",
      "93292 CALL FUNCTION      OBJ: reg13 FUNC: reg9 ARGS: reg12",
      "93296 SET      reg2 -> reg6",
      "93299 GET      reg6[get] -> reg9",
      "93305 GET      reg9[toString] -> reg12",
      "93311 EMPTY ARRAY      -> reg6",
      "93313 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg6",
      "93317 SET      reg2 -> reg8",
      "93320 SET      reg8 -> reg4",
      "93323 JUMP IF TRUE      reg4 TO: 93331 | 93326"
  ],
  "93323": ["93323 JUMP IF TRUE      reg4 TO: 93331 | 93326"],
  "93326": [
      "93326 SET      n/a -> reg4",
      "93331 SET MEMORY ELEMENT IF INIT      3037 = reg4",
      "93334 GET WINDOW PROP      Object -> reg6",
      "93339 GET      reg6[getOwnPropertyDescriptor] -> reg8",
      "93345 NEW ARRAY      2 -> reg11",
      "93348 PUSH MEMORY ELEMENT IF INIT      3036 -> reg12",
      "93351 PUT      reg11[0] = reg12",
      "93355 PUT      reg11[1] = srcdoc",
      "93361 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg11",
      "93365 SET      reg2 -> reg4",
      "93368 JUMP IF FALSE      reg4 TO: 93414 | 93371"
  ],
  "93331": [
      "93331 SET MEMORY ELEMENT IF INIT      3037 = reg4",
      "93334 GET WINDOW PROP      Object -> reg6",
      "93339 GET      reg6[getOwnPropertyDescriptor] -> reg8",
      "93345 NEW ARRAY      2 -> reg11",
      "93348 PUSH MEMORY ELEMENT IF INIT      3036 -> reg12",
      "93351 PUT      reg11[0] = reg12",
      "93355 PUT      reg11[1] = srcdoc",
      "93361 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg11",
      "93365 SET      reg2 -> reg4",
      "93368 JUMP IF FALSE      reg4 TO: 93414 | 93371"
  ],
  "93371": [
      "93371 GET WINDOW PROP      Object -> reg12",
      "93376 GET      reg12[getOwnPropertyDescriptor] -> reg11",
      "93382 NEW ARRAY      2 -> reg15",
      "93385 PUSH MEMORY ELEMENT IF INIT      3036 -> reg14",
      "93388 PUT      reg15[0] = reg14",
      "93392 PUT      reg15[1] = srcdoc",
      "93398 CALL FUNCTION      OBJ: reg12 FUNC: reg11 ARGS: reg15",
      "93402 SET      reg2 -> reg8",
      "93405 GET      reg8[set] -> reg14",
      "93411 SET      reg14 -> reg4",
      "93414 JUMP IF FALSE      reg4 TO: 93475 | 93417"
  ],
  "93414": ["93414 JUMP IF FALSE      reg4 TO: 93475 | 93417"],
  "93417": [
      "93417 GET WINDOW PROP      Object -> reg11",
      "93422 GET      reg11[getOwnPropertyDescriptor] -> reg16",
      "93428 NEW ARRAY      2 -> reg15",
      "93431 PUSH MEMORY ELEMENT IF INIT      3036 -> reg17",
      "93434 PUT      reg15[0] = reg17",
      "93438 PUT      reg15[1] = srcdoc",
      "93444 CALL FUNCTION      OBJ: reg11 FUNC: reg16 ARGS: reg15",
      "93448 SET      reg2 -> reg14",
      "93451 GET      reg14[set] -> reg15",
      "93457 GET      reg15[toString] -> reg16",
      "93463 EMPTY ARRAY      -> reg17",
      "93465 CALL FUNCTION      OBJ: reg15 FUNC: reg16 ARGS: reg17",
      "93469 SET      reg2 -> reg8",
      "93472 SET      reg8 -> reg4",
      "93475 JUMP IF TRUE      reg4 TO: 93483 | 93478"
  ],
  "93475": ["93475 JUMP IF TRUE      reg4 TO: 93483 | 93478"],
  "93478": [
      "93478 SET      n/a -> reg4",
      "93483 SET MEMORY ELEMENT IF INIT      3038 = reg4",
      "93486 EMPTY OBJECT      -> reg4",
      "93488 PUSH MEMORY ELEMENT IF INIT      3037 -> reg8",
      "93491 PUT      reg4[getter] = reg8",
      "93497 PUSH MEMORY ELEMENT IF INIT      3038 -> reg14",
      "93500 PUT      reg4[setter] = reg14",
      "93506 SET MEMORY ELEMENT IF INIT      3039 = reg4",
      "93509 NEW ARRAY      2 -> reg16",
      "93512 PUT      reg16[0] = abcd1234b",
      "93518 PUT      reg16[1] = addContentWindowProxy",
      "93524 SET MEMORY ELEMENT IF INIT      3040 = reg16",
      "93527 SET MEMORY ELEMENT IF INIT      3041 = false",
      "93530 SET MEMORY ELEMENT IF INIT      3042 = 0",
      "93533 PUSH MEMORY ELEMENT IF INIT      3042 -> reg4",
      "93536 PUSH MEMORY ELEMENT IF INIT      3040 -> reg8",
      "93539 GET      reg8[length] -> reg14",
      "93545 LESS THAN      reg4 < reg14 -> reg8",
      "93549 JUMP IF FALSE      reg8 TO: 93661 | 93552"
  ],
  "93483": [
      "93483 SET MEMORY ELEMENT IF INIT      3038 = reg4",
      "93486 EMPTY OBJECT      -> reg4",
      "93488 PUSH MEMORY ELEMENT IF INIT      3037 -> reg8",
      "93491 PUT      reg4[getter] = reg8",
      "93497 PUSH MEMORY ELEMENT IF INIT      3038 -> reg14",
      "93500 PUT      reg4[setter] = reg14",
      "93506 SET MEMORY ELEMENT IF INIT      3039 = reg4",
      "93509 NEW ARRAY      2 -> reg16",
      "93512 PUT      reg16[0] = abcd1234b",
      "93518 PUT      reg16[1] = addContentWindowProxy",
      "93524 SET MEMORY ELEMENT IF INIT      3040 = reg16",
      "93527 SET MEMORY ELEMENT IF INIT      3041 = false",
      "93530 SET MEMORY ELEMENT IF INIT      3042 = 0",
      "93533 PUSH MEMORY ELEMENT IF INIT      3042 -> reg4",
      "93536 PUSH MEMORY ELEMENT IF INIT      3040 -> reg8",
      "93539 GET      reg8[length] -> reg14",
      "93545 LESS THAN      reg4 < reg14 -> reg8",
      "93549 JUMP IF FALSE      reg8 TO: 93661 | 93552"
  ],
  "93552": [
      "93552 PUSH MEMORY ELEMENT IF INIT      3037 -> reg16",
      "93555 GET      reg16[indexOf] -> reg14",
      "93561 NEW ARRAY      1 -> reg8",
      "93564 PUSH MEMORY ELEMENT IF INIT      3040 -> reg17",
      "93567 PUSH MEMORY ELEMENT IF INIT      3042 -> reg20",
      "93570 GET      reg17[reg20] -> reg18",
      "93574 PUT      reg8[0] = reg18",
      "93578 CALL FUNCTION      OBJ: reg16 FUNC: reg14 ARGS: reg8",
      "93582 SET      reg2 -> reg4",
      "93585 SUBTRACT      0 - 1 -> reg8",
      "93589 GREATER THAN      reg4 > reg8 -> reg14",
      "93593 JUMP IF TRUE      reg14 TO: 93640 | 93596"
  ],
  "93596": [
      "93596 PUSH MEMORY ELEMENT IF INIT      3038 -> reg17",
      "93599 GET      reg17[indexOf] -> reg19",
      "93605 NEW ARRAY      1 -> reg8",
      "93608 PUSH MEMORY ELEMENT IF INIT      3040 -> reg18",
      "93611 PUSH MEMORY ELEMENT IF INIT      3042 -> reg23",
      "93614 GET      reg18[reg23] -> reg20",
      "93618 PUT      reg8[0] = reg20",
      "93622 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg8",
      "93626 SET      reg2 -> reg4",
      "93629 SUBTRACT      0 - 1 -> reg8",
      "93633 GREATER THAN      reg4 > reg8 -> reg19",
      "93637 SET      reg19 -> reg14",
      "93640 JUMP IF FALSE      reg14 TO: 93646 | 93643"
  ],
  "93640": ["93640 JUMP IF FALSE      reg14 TO: 93646 | 93643"],
  "93643": [
      "93643 SET MEMORY ELEMENT IF INIT      3041 = true",
      "93646 PUSH MEMORY ELEMENT IF INIT      3042 -> reg4",
      "93649 SET      reg4 -> reg8",
      "93652 ADD      reg41-> reg4",
      "93656 SET MEMORY ELEMENT IF INIT      3042 = reg4",
      "93659 JUMP      93533",
      "93533 PUSH MEMORY ELEMENT IF INIT      3042 -> reg4",
      "93536 PUSH MEMORY ELEMENT IF INIT      3040 -> reg8",
      "93539 GET      reg8[length] -> reg14",
      "93545 LESS THAN      reg4 < reg14 -> reg8",
      "93549 JUMP IF FALSE      reg8 TO: 93661 | 93552"
  ],
  "93646": [
      "93646 PUSH MEMORY ELEMENT IF INIT      3042 -> reg4",
      "93649 SET      reg4 -> reg8",
      "93652 ADD      reg41-> reg4",
      "93656 SET MEMORY ELEMENT IF INIT      3042 = reg4",
      "93659 JUMP      93533",
      "93533 PUSH MEMORY ELEMENT IF INIT      3042 -> reg4",
      "93536 PUSH MEMORY ELEMENT IF INIT      3040 -> reg8",
      "93539 GET      reg8[length] -> reg14",
      "93545 LESS THAN      reg4 < reg14 -> reg8",
      "93549 JUMP IF FALSE      reg8 TO: 93661 | 93552"
  ],
  "93661": [
      "93661 EMPTY OBJECT      -> reg4",
      "93663 PUSH MEMORY ELEMENT IF INIT      3041 -> reg14",
      "93666 PUT      reg4[verdict] = reg14",
      "93672 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "93675 GET      reg8[stringify] -> reg18",
      "93681 NEW ARRAY      1 -> reg19",
      "93684 PUSH MEMORY ELEMENT IF INIT      3039 -> reg22",
      "93687 PUT      reg19[0] = reg22",
      "93691 CALL FUNCTION      OBJ: reg8 FUNC: reg18 ARGS: reg19",
      "93695 SET      reg2 -> reg14",
      "93698 PUT      reg4[raw] = reg14",
      "93704 PUT      reg4[error] = false",
      "93710 JUMP OR RETURN VAL      reg4"
  ],
  "93714": [
      "93714 SET I      null",
      "93716 PUSH F.K      -> reg4",
      "93718 VOID F",
      "93719 SET MEMORY ELEMENT      0 = reg4",
      "93722 EMPTY OBJECT      -> reg4",
      "93724 PUT      reg4[verdict] = false",
      "93730 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "93733 PUT      reg4[raw] = reg14",
      "93739 PUT      reg4[error] = true",
      "93745 JUMP OR RETURN VAL      reg4"
  ],
  "93852": [
      "93852 PUSH MEMORY ELEMENT IF INIT      3054 -> reg8",
      "93855 GET      reg8[contentWindow] -> reg10",
      "93861 GET      reg10[navigator] -> reg8",
      "93867 GET      reg8[userAgent] -> reg10",
      "93873 GET      reg10[indexOf] -> reg8",
      "93879 NEW ARRAY      1 -> reg9",
      "93882 PUT      reg9[0] = Windows",
      "93888 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg9",
      "93892 SET      reg2 -> reg6",
      "93895 SUBTRACT      0 - 1 -> reg8",
      "93899 GREATER THAN      reg6 > reg8 -> reg9",
      "93903 JUMP IF FALSE      reg9 TO: 93956 | 93906"
  ],
  "93906": [
      "93906 GET WINDOW PROP      window -> reg8",
      "93911 GET      reg8[navigator] -> reg11",
      "93917 GET      reg11[userAgent] -> reg8",
      "93923 GET      reg8[indexOf] -> reg11",
      "93929 NEW ARRAY      1 -> reg12",
      "93932 PUT      reg12[0] = OPR",
      "93938 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg12",
      "93942 SET      reg2 -> reg6",
      "93945 SUBTRACT      0 - 1 -> reg11",
      "93949 STRICT EQUAL      reg6 === reg11 -> reg12",
      "93953 SET      reg12 -> reg9",
      "93956 JUMP IF FALSE      reg9 TO: 94009 | 93959"
  ],
  "93956": ["93956 JUMP IF FALSE      reg9 TO: 94009 | 93959"],
  "93959": [
      "93959 GET WINDOW PROP      window -> reg11",
      "93964 GET      reg11[navigator] -> reg12",
      "93970 GET      reg12[userAgent] -> reg11",
      "93976 GET      reg11[indexOf] -> reg12",
      "93982 NEW ARRAY      1 -> reg13",
      "93985 PUT      reg13[0] = Edg",
      "93991 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg13",
      "93995 SET      reg2 -> reg6",
      "93998 SUBTRACT      0 - 1 -> reg12",
      "94002 STRICT EQUAL      reg6 === reg12 -> reg13",
      "94006 SET      reg13 -> reg9",
      "94009 JUMP IF TRUE      reg9 TO: 94066 | 94012"
  ],
  "94009": ["94009 JUMP IF TRUE      reg9 TO: 94066 | 94012"],
  "94012": [
      "94012 PUSH MEMORY ELEMENT IF INIT      3054 -> reg13",
      "94015 GET      reg13[contentWindow] -> reg12",
      "94021 GET      reg12[navigator] -> reg13",
      "94027 GET      reg13[userAgent] -> reg14",
      "94033 GET      reg14[indexOf] -> reg12",
      "94039 NEW ARRAY      1 -> reg15",
      "94042 PUT      reg15[0] = Macintosh",
      "94048 CALL FUNCTION      OBJ: reg14 FUNC: reg12 ARGS: reg15",
      "94052 SET      reg2 -> reg6",
      "94055 SUBTRACT      0 - 1 -> reg12",
      "94059 GREATER THAN      reg6 > reg12 -> reg13",
      "94063 SET      reg13 -> reg9",
      "94066 SET      reg9 -> reg4",
      "94069 JUMP IF FALSE      reg4 TO: 94295 | 94072"
  ],
  "94066": [
      "94066 SET      reg9 -> reg4",
      "94069 JUMP IF FALSE      reg4 TO: 94295 | 94072"
  ],
  "94069": ["94069 JUMP IF FALSE      reg4 TO: 94295 | 94072"],
  "94072": [
      "94072 PUSH MEMORY ELEMENT IF INIT      3055 -> reg9",
      "94075 PUSH MEMORY ELEMENT IF INIT      3054 -> reg4",
      "94078 GET      reg4[contentWindow] -> reg6",
      "94084 GET      reg6[navigator] -> reg13",
      "94090 GET      reg13[plugins] -> reg4",
      "94096 GET      reg4[length] -> reg6",
      "94102 PUT      reg9[if_pl] = reg6",
      "94108 SET I      94272",
      "94110 PUSH MEMORY ELEMENT IF INIT      3055 -> reg6",
      "94113 EMPTY ARRAY      -> reg4",
      "94115 PUT      reg6[if_pn] = reg4",
      "94121 SET MEMORY ELEMENT IF INIT      3056 = 0",
      "94124 PUSH MEMORY ELEMENT IF INIT      3056 -> reg4",
      "94127 PUSH MEMORY ELEMENT IF INIT      3054 -> reg6",
      "94130 GET      reg6[contentWindow] -> reg9",
      "94136 GET      reg9[navigator] -> reg6",
      "94142 GET      reg6[plugins] -> reg9",
      "94148 GET      reg9[length] -> reg6",
      "94154 LESS THAN      reg4 < reg6 -> reg9",
      "94158 JUMP IF FALSE      reg9 TO: 94270 | 94161"
  ],
  "94161": [
      "94161 PUSH MEMORY ELEMENT IF INIT      3054 -> reg4",
      "94164 GET      reg4[contentWindow] -> reg9",
      "94170 GET      reg9[navigator] -> reg6",
      "94176 GET      reg6[plugins] -> reg4",
      "94182 PUSH MEMORY ELEMENT IF INIT      3056 -> reg12",
      "94185 GET      reg4[reg12] -> reg6",
      "94189 JUMP IF FALSE      reg6 TO: 94255 | 94192"
  ],
  "94192": [
      "94192 PUSH MEMORY ELEMENT IF INIT      3055 -> reg9",
      "94195 GET      reg9[if_pn] -> reg12",
      "94201 GET      reg12[push] -> reg6",
      "94207 NEW ARRAY      1 -> reg9",
      "94210 PUSH MEMORY ELEMENT IF INIT      3054 -> reg13",
      "94213 GET      reg13[contentWindow] -> reg15",
      "94219 GET      reg15[navigator] -> reg17",
      "94225 GET      reg17[plugins] -> reg13",
      "94231 PUSH MEMORY ELEMENT IF INIT      3056 -> reg16",
      "94234 GET      reg13[reg16] -> reg15",
      "94238 GET      reg15[name] -> reg17",
      "94244 PUT      reg9[0] = reg17",
      "94248 CALL FUNCTION      OBJ: reg12 FUNC: reg6 ARGS: reg9",
      "94252 SET      reg2 -> reg4",
      "94255 PUSH MEMORY ELEMENT IF INIT      3056 -> reg4",
      "94258 SET      reg4 -> reg6",
      "94261 ADD      reg41-> reg4",
      "94265 SET MEMORY ELEMENT IF INIT      3056 = reg4",
      "94268 JUMP      94124",
      "94124 PUSH MEMORY ELEMENT IF INIT      3056 -> reg4",
      "94127 PUSH MEMORY ELEMENT IF INIT      3054 -> reg6",
      "94130 GET      reg6[contentWindow] -> reg9",
      "94136 GET      reg9[navigator] -> reg6",
      "94142 GET      reg6[plugins] -> reg9",
      "94148 GET      reg9[length] -> reg6",
      "94154 LESS THAN      reg4 < reg6 -> reg9",
      "94158 JUMP IF FALSE      reg9 TO: 94270 | 94161"
  ],
  "94255": [
      "94255 PUSH MEMORY ELEMENT IF INIT      3056 -> reg4",
      "94258 SET      reg4 -> reg6",
      "94261 ADD      reg41-> reg4",
      "94265 SET MEMORY ELEMENT IF INIT      3056 = reg4",
      "94268 JUMP      94124",
      "94124 PUSH MEMORY ELEMENT IF INIT      3056 -> reg4",
      "94127 PUSH MEMORY ELEMENT IF INIT      3054 -> reg6",
      "94130 GET      reg6[contentWindow] -> reg9",
      "94136 GET      reg9[navigator] -> reg6",
      "94142 GET      reg6[plugins] -> reg9",
      "94148 GET      reg9[length] -> reg6",
      "94154 LESS THAN      reg4 < reg6 -> reg9",
      "94158 JUMP IF FALSE      reg9 TO: 94270 | 94161"
  ],
  "94270": [
      "94270 JUMP      94291",
      "94291 SET I      94373",
      "94293 JUMP      94304",
      "94304 PUSH MEMORY ELEMENT IF INIT      3055 -> reg4",
      "94307 GET      reg4[if_pl] -> reg6",
      "94313 LESS THAN      reg6 < 3 -> reg9",
      "94317 SET MEMORY ELEMENT IF INIT      3057 = reg9",
      "94320 EMPTY OBJECT      -> reg4",
      "94322 PUSH MEMORY ELEMENT IF INIT      3057 -> reg6",
      "94325 PUT      reg4[verdict] = reg6",
      "94331 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "94334 GET      reg13[stringify] -> reg9",
      "94340 NEW ARRAY      1 -> reg15",
      "94343 PUSH MEMORY ELEMENT IF INIT      3055 -> reg16",
      "94346 PUT      reg15[0] = reg16",
      "94350 CALL FUNCTION      OBJ: reg13 FUNC: reg9 ARGS: reg15",
      "94354 SET      reg2 -> reg6",
      "94357 PUT      reg4[raw] = reg6",
      "94363 PUT      reg4[error] = false",
      "94369 JUMP OR RETURN VAL      reg4"
  ],
  "94272": [
      "94272 SET I      94373",
      "94274 PUSH F.K      -> reg4",
      "94276 VOID F",
      "94277 SET MEMORY ELEMENT      0 = reg4",
      "94280 PUSH MEMORY ELEMENT IF INIT      3055 -> reg9",
      "94283 PUT      reg9[if_pn] = error",
      "94291 SET I      94373",
      "94293 JUMP      94304",
      "94304 PUSH MEMORY ELEMENT IF INIT      3055 -> reg4",
      "94307 GET      reg4[if_pl] -> reg6",
      "94313 LESS THAN      reg6 < 3 -> reg9",
      "94317 SET MEMORY ELEMENT IF INIT      3057 = reg9",
      "94320 EMPTY OBJECT      -> reg4",
      "94322 PUSH MEMORY ELEMENT IF INIT      3057 -> reg6",
      "94325 PUT      reg4[verdict] = reg6",
      "94331 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "94334 GET      reg13[stringify] -> reg9",
      "94340 NEW ARRAY      1 -> reg15",
      "94343 PUSH MEMORY ELEMENT IF INIT      3055 -> reg16",
      "94346 PUT      reg15[0] = reg16",
      "94350 CALL FUNCTION      OBJ: reg13 FUNC: reg9 ARGS: reg15",
      "94354 SET      reg2 -> reg6",
      "94357 PUT      reg4[raw] = reg6",
      "94363 PUT      reg4[error] = false",
      "94369 JUMP OR RETURN VAL      reg4"
  ],
  "94295": [
      "94295 PUSH MEMORY ELEMENT IF INIT      3055 -> reg4",
      "94298 PUT      reg4[if_pl] = 4",
      "94304 PUSH MEMORY ELEMENT IF INIT      3055 -> reg4",
      "94307 GET      reg4[if_pl] -> reg6",
      "94313 LESS THAN      reg6 < 3 -> reg9",
      "94317 SET MEMORY ELEMENT IF INIT      3057 = reg9",
      "94320 EMPTY OBJECT      -> reg4",
      "94322 PUSH MEMORY ELEMENT IF INIT      3057 -> reg6",
      "94325 PUT      reg4[verdict] = reg6",
      "94331 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "94334 GET      reg13[stringify] -> reg9",
      "94340 NEW ARRAY      1 -> reg15",
      "94343 PUSH MEMORY ELEMENT IF INIT      3055 -> reg16",
      "94346 PUT      reg15[0] = reg16",
      "94350 CALL FUNCTION      OBJ: reg13 FUNC: reg9 ARGS: reg15",
      "94354 SET      reg2 -> reg6",
      "94357 PUT      reg4[raw] = reg6",
      "94363 PUT      reg4[error] = false",
      "94369 JUMP OR RETURN VAL      reg4"
  ],
  "94373": [
      "94373 SET I      null",
      "94375 PUSH F.K      -> reg4",
      "94377 VOID F",
      "94378 SET MEMORY ELEMENT      0 = reg4",
      "94381 EMPTY OBJECT      -> reg4",
      "94383 PUT      reg4[verdict] = false",
      "94389 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "94392 GET      reg9[toString] -> reg16",
      "94398 EMPTY ARRAY      -> reg15",
      "94400 CALL FUNCTION      OBJ: reg9 FUNC: reg16 ARGS: reg15",
      "94404 SET      reg2 -> reg6",
      "94407 PUT      reg4[raw] = reg6",
      "94413 PUT      reg4[error] = true",
      "94419 JUMP OR RETURN VAL      reg4"
  ],
  "94644": [
      "94644 SET I      94980",
      "94646 PUSH F.K      -> reg4",
      "94648 VOID F",
      "94649 SET MEMORY ELEMENT      0 = reg4",
      "94652 PUSH MEMORY ELEMENT IF INIT      3071 -> reg4",
      "94655 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "94658 GET      reg5[stack] -> reg11",
      "94664 PUT      reg4[win] = reg11",
      "94670 SET I      94980",
      "94672 SET I      94688",
      "94674 PUSH MEMORY ELEMENT IF INIT      3070 -> reg4",
      "94677 EMPTY ARRAY      -> reg12",
      "94679 CALL FUNCTION      PTR: reg4 MEM: reg12",
      "94683 SET      reg2 -> reg5",
      "94686 JUMP      94714",
      "94714 SET I      94980",
      "94716 SET MEMORY ELEMENT IF INIT      3072 = false",
      "94719 PUSH MEMORY ELEMENT IF INIT      3071 -> reg5",
      "94722 GET      reg5[ifr] -> reg11",
      "94728 GET      reg11[indexOf] -> reg5",
      "94734 NEW ARRAY      1 -> reg12",
      "94737 PUT      reg12[0] = Array.toString",
      "94743 CALL FUNCTION      OBJ: reg11 FUNC: reg5 ARGS: reg12",
      "94747 SET      reg2 -> reg4",
      "94750 SUBTRACT      0 - 1 -> reg5",
      "94754 GREATER THAN      reg4 > reg5 -> reg13",
      "94758 JUMP IF FALSE      reg13 TO: 94803 | 94761"
  ],
  "94688": [
      "94688 SET I      94980",
      "94690 PUSH F.K      -> reg5",
      "94692 VOID F",
      "94693 SET MEMORY ELEMENT      0 = reg5",
      "94696 PUSH MEMORY ELEMENT IF INIT      3071 -> reg5",
      "94699 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "94702 GET      reg4[stack] -> reg11",
      "94708 PUT      reg5[ifr] = reg11",
      "94714 SET I      94980",
      "94716 SET MEMORY ELEMENT IF INIT      3072 = false",
      "94719 PUSH MEMORY ELEMENT IF INIT      3071 -> reg5",
      "94722 GET      reg5[ifr] -> reg11",
      "94728 GET      reg11[indexOf] -> reg5",
      "94734 NEW ARRAY      1 -> reg12",
      "94737 PUT      reg12[0] = Array.toString",
      "94743 CALL FUNCTION      OBJ: reg11 FUNC: reg5 ARGS: reg12",
      "94747 SET      reg2 -> reg4",
      "94750 SUBTRACT      0 - 1 -> reg5",
      "94754 GREATER THAN      reg4 > reg5 -> reg13",
      "94758 JUMP IF FALSE      reg13 TO: 94803 | 94761"
  ],
  "94761": [
      "94761 PUSH MEMORY ELEMENT IF INIT      3071 -> reg12",
      "94764 GET      reg12[win] -> reg4",
      "94770 GET      reg4[indexOf] -> reg14",
      "94776 NEW ARRAY      1 -> reg15",
      "94779 PUT      reg15[0] = Array.toString",
      "94785 CALL FUNCTION      OBJ: reg4 FUNC: reg14 ARGS: reg15",
      "94789 SET      reg2 -> reg5",
      "94792 SUBTRACT      0 - 1 -> reg12",
      "94796 STRICT EQUAL      reg5 === reg12 -> reg14",
      "94800 SET      reg14 -> reg13",
      "94803 JUMP IF FALSE      reg13 TO: 94811 | 94806"
  ],
  "94803": ["94803 JUMP IF FALSE      reg13 TO: 94811 | 94806"],
  "94806": [
      "94806 SET MEMORY ELEMENT IF INIT      3072 = true",
      "94809 JUMP      94927",
      "94927 EMPTY OBJECT      -> reg5",
      "94929 PUSH MEMORY ELEMENT IF INIT      3072 -> reg12",
      "94932 PUT      reg5[verdict] = reg12",
      "94938 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "94941 GET      reg13[stringify] -> reg14",
      "94947 NEW ARRAY      1 -> reg15",
      "94950 PUSH MEMORY ELEMENT IF INIT      3071 -> reg17",
      "94953 PUT      reg15[0] = reg17",
      "94957 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg15",
      "94961 SET      reg2 -> reg12",
      "94964 PUT      reg5[raw] = reg12",
      "94970 PUT      reg5[error] = false",
      "94976 JUMP OR RETURN VAL      reg5"
  ],
  "94811": [
      "94811 PUSH MEMORY ELEMENT IF INIT      3071 -> reg5",
      "94814 COPY ENUMERABLE      reg5 -> reg14",
      "94817 GET      reg14[length] -> reg12",
      "94823 EQUAL      reg12 == 0 -> reg15",
      "94827 JUMP IF TRUE      reg15 TO: 94927 | 94830"
  ],
  "94830": [
      "94830 SET      0 -> reg15",
      "94833 GET      reg14[reg15] -> reg5",
      "94837 SET MEMORY ELEMENT IF INIT      3073 = reg5",
      "94840 PUSH MEMORY ELEMENT IF INIT      3071 -> reg13",
      "94843 PUSH MEMORY ELEMENT IF INIT      3073 -> reg16",
      "94846 PUSH MEMORY ELEMENT IF INIT      3071 -> reg18",
      "94849 PUSH MEMORY ELEMENT IF INIT      3073 -> reg20",
      "94852 GET      reg18[reg20] -> reg19",
      "94856 GET      reg19[substr] -> reg20",
      "94862 NEW ARRAY      2 -> reg21",
      "94865 PUT      reg21[0] = 0",
      "94869 PUSH MEMORY ELEMENT IF INIT      3071 -> reg22",
      "94872 PUSH MEMORY ELEMENT IF INIT      3073 -> reg24",
      "94875 GET      reg22[reg24] -> reg23",
      "94879 GET      reg23[indexOf] -> reg22",
      "94885 NEW ARRAY      1 -> reg25",
      "94888 PUT      reg25[0] = \n",
      "94894 CALL FUNCTION      OBJ: reg23 FUNC: reg22 ARGS: reg25",
      "94898 SET      reg2 -> reg18",
      "94901 PUT      reg21[1] = reg18",
      "94905 CALL FUNCTION      OBJ: reg19 FUNC: reg20 ARGS: reg21",
      "94909 SET      reg2 -> reg17",
      "94912 PUT      reg13[reg16] = reg17",
      "94916 ADD      reg151-> reg15",
      "94920 LESS THAN      reg15 < reg12 -> reg13",
      "94924 JUMP IF TRUE      reg13 TO: 94833 | 94927"
  ],
  "94833": [
      "94833 GET      reg14[reg15] -> reg5",
      "94837 SET MEMORY ELEMENT IF INIT      3073 = reg5",
      "94840 PUSH MEMORY ELEMENT IF INIT      3071 -> reg13",
      "94843 PUSH MEMORY ELEMENT IF INIT      3073 -> reg16",
      "94846 PUSH MEMORY ELEMENT IF INIT      3071 -> reg18",
      "94849 PUSH MEMORY ELEMENT IF INIT      3073 -> reg20",
      "94852 GET      reg18[reg20] -> reg19",
      "94856 GET      reg19[substr] -> reg20",
      "94862 NEW ARRAY      2 -> reg21",
      "94865 PUT      reg21[0] = 0",
      "94869 PUSH MEMORY ELEMENT IF INIT      3071 -> reg22",
      "94872 PUSH MEMORY ELEMENT IF INIT      3073 -> reg24",
      "94875 GET      reg22[reg24] -> reg23",
      "94879 GET      reg23[indexOf] -> reg22",
      "94885 NEW ARRAY      1 -> reg25",
      "94888 PUT      reg25[0] = \n",
      "94894 CALL FUNCTION      OBJ: reg23 FUNC: reg22 ARGS: reg25",
      "94898 SET      reg2 -> reg18",
      "94901 PUT      reg21[1] = reg18",
      "94905 CALL FUNCTION      OBJ: reg19 FUNC: reg20 ARGS: reg21",
      "94909 SET      reg2 -> reg17",
      "94912 PUT      reg13[reg16] = reg17",
      "94916 ADD      reg151-> reg15",
      "94920 LESS THAN      reg15 < reg12 -> reg13",
      "94924 JUMP IF TRUE      reg13 TO: 94833 | 94927"
  ],
  "94927": [
      "94927 EMPTY OBJECT      -> reg5",
      "94929 PUSH MEMORY ELEMENT IF INIT      3072 -> reg12",
      "94932 PUT      reg5[verdict] = reg12",
      "94938 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "94941 GET      reg13[stringify] -> reg14",
      "94947 NEW ARRAY      1 -> reg15",
      "94950 PUSH MEMORY ELEMENT IF INIT      3071 -> reg17",
      "94953 PUT      reg15[0] = reg17",
      "94957 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg15",
      "94961 SET      reg2 -> reg12",
      "94964 PUT      reg5[raw] = reg12",
      "94970 PUT      reg5[error] = false",
      "94976 JUMP OR RETURN VAL      reg5"
  ],
  "94980": [
      "94980 SET I      null",
      "94982 PUSH F.K      -> reg12",
      "94984 VOID F",
      "94985 SET MEMORY ELEMENT      0 = reg12",
      "94988 EMPTY OBJECT      -> reg12",
      "94990 PUT      reg12[verdict] = false",
      "94996 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "94999 GET      reg14[toString] -> reg15",
      "95005 EMPTY ARRAY      -> reg17",
      "95007 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg17",
      "95011 SET      reg2 -> reg5",
      "95014 PUT      reg12[raw] = reg5",
      "95020 PUT      reg12[error] = true",
      "95026 JUMP OR RETURN VAL      reg12"
  ],
  "95374": [
      "95374 PUSH MEMORY ELEMENT IF INIT      3082 -> reg4",
      "95377 GET      reg4[npn1] -> reg10",
      "95383 PUSH MEMORY ELEMENT IF INIT      3082 -> reg14",
      "95386 GET      reg14[npn2] -> reg4",
      "95392 STRICT NOT EQUAL      reg10 !== reg4 -> reg5",
      "95396 SET      reg5 -> reg8",
      "95399 SET MEMORY ELEMENT IF INIT      3083 = reg8",
      "95402 EMPTY OBJECT      -> reg4",
      "95404 PUSH MEMORY ELEMENT IF INIT      3083 -> reg5",
      "95407 PUT      reg4[verdict] = reg5",
      "95413 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "95416 GET      reg8[stringify] -> reg10",
      "95422 NEW ARRAY      1 -> reg12",
      "95425 PUSH MEMORY ELEMENT IF INIT      3082 -> reg14",
      "95428 PUT      reg12[0] = reg14",
      "95432 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg12",
      "95436 SET      reg2 -> reg5",
      "95439 PUT      reg4[raw] = reg5",
      "95445 PUT      reg4[error] = false",
      "95451 JUMP OR RETURN VAL      reg4"
  ],
  "95399": [
      "95399 SET MEMORY ELEMENT IF INIT      3083 = reg8",
      "95402 EMPTY OBJECT      -> reg4",
      "95404 PUSH MEMORY ELEMENT IF INIT      3083 -> reg5",
      "95407 PUT      reg4[verdict] = reg5",
      "95413 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "95416 GET      reg8[stringify] -> reg10",
      "95422 NEW ARRAY      1 -> reg12",
      "95425 PUSH MEMORY ELEMENT IF INIT      3082 -> reg14",
      "95428 PUT      reg12[0] = reg14",
      "95432 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg12",
      "95436 SET      reg2 -> reg5",
      "95439 PUT      reg4[raw] = reg5",
      "95445 PUT      reg4[error] = false",
      "95451 JUMP OR RETURN VAL      reg4"
  ],
  "95455": [
      "95455 SET I      null",
      "95457 PUSH F.K      -> reg4",
      "95459 VOID F",
      "95460 SET MEMORY ELEMENT      0 = reg4",
      "95463 EMPTY OBJECT      -> reg4",
      "95465 PUT      reg4[verdict] = false",
      "95471 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "95474 GET      reg5[toString] -> reg12",
      "95480 EMPTY ARRAY      -> reg14",
      "95482 CALL FUNCTION      OBJ: reg5 FUNC: reg12 ARGS: reg14",
      "95486 SET      reg2 -> reg10",
      "95489 PUT      reg4[raw] = reg10",
      "95495 PUT      reg4[error] = true",
      "95501 JUMP OR RETURN VAL      reg4"
  ],
  "95588": [
      "95588 SET I      null",
      "95590 PUSH F.K      -> reg4",
      "95592 VOID F",
      "95593 SET MEMORY ELEMENT      0 = reg4",
      "95596 EMPTY OBJECT      -> reg6",
      "95598 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "95601 GET      reg7[message] -> reg8",
      "95607 GET      reg8[indexOf] -> reg7",
      "95613 NEW ARRAY      1 -> reg9",
      "95616 PUT      reg9[0] = [object Object]",
      "95622 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "95626 SET      reg2 -> reg4",
      "95629 SUBTRACT      0 - 1 -> reg7",
      "95633 GREATER THAN      reg4 > reg7 -> reg10",
      "95637 PUT      reg6[verdict] = reg10",
      "95643 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "95646 GET      reg7[toString] -> reg9",
      "95652 EMPTY ARRAY      -> reg10",
      "95654 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "95658 SET      reg2 -> reg4",
      "95661 PUT      reg6[raw] = reg4",
      "95667 PUT      reg6[error] = false",
      "95673 JUMP OR RETURN VAL      reg6"
  ],
  "95749": [
      "95749 SET I      null",
      "95751 PUSH F.K      -> reg5",
      "95753 VOID F",
      "95754 SET MEMORY ELEMENT      0 = reg5",
      "95757 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "95760 GET      reg5[stack] -> reg6",
      "95766 GET      reg6[indexOf] -> reg5",
      "95772 NEW ARRAY      1 -> reg8",
      "95775 PUT      reg8[0] = [object Object]",
      "95781 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "95785 SET      reg2 -> reg4",
      "95788 SUBTRACT      0 - 1 -> reg5",
      "95792 GREATER THAN      reg4 > reg5 -> reg7",
      "95796 SET MEMORY ELEMENT IF INIT      3089 = reg7",
      "95799 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "95802 GET      reg4[stack] -> reg10",
      "95808 SET MEMORY ELEMENT IF INIT      3090 = reg10",
      "95811 PUSH MEMORY ELEMENT IF INIT      3089 -> reg4",
      "95814 NOT      reg4 -> reg5",
      "95817 JUMP IF FALSE      reg5 TO: 95875 | 95820"
  ],
  "95820": [
      "95820 PUSH MEMORY ELEMENT IF INIT      3090 -> reg5",
      "95823 GET      reg5[substr] -> reg7",
      "95829 NEW ARRAY      2 -> reg9",
      "95832 PUT      reg9[0] = 0",
      "95836 PUSH MEMORY ELEMENT IF INIT      3090 -> reg10",
      "95839 GET      reg10[indexOf] -> reg8",
      "95845 NEW ARRAY      1 -> reg11",
      "95848 PUT      reg11[0] = \n",
      "95854 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg11",
      "95858 SET      reg2 -> reg13",
      "95861 PUT      reg9[1] = reg13",
      "95865 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg9",
      "95869 SET      reg2 -> reg4",
      "95872 SET MEMORY ELEMENT IF INIT      3090 = reg4",
      "95875 EMPTY OBJECT      -> reg7",
      "95877 PUSH MEMORY ELEMENT IF INIT      3089 -> reg4",
      "95880 PUT      reg7[verdict] = reg4",
      "95886 PUSH MEMORY ELEMENT IF INIT      3090 -> reg4",
      "95889 PUT      reg7[raw] = reg4",
      "95895 PUT      reg7[error] = false",
      "95901 JUMP OR RETURN VAL      reg7"
  ],
  "95875": [
      "95875 EMPTY OBJECT      -> reg7",
      "95877 PUSH MEMORY ELEMENT IF INIT      3089 -> reg4",
      "95880 PUT      reg7[verdict] = reg4",
      "95886 PUSH MEMORY ELEMENT IF INIT      3090 -> reg4",
      "95889 PUT      reg7[raw] = reg4",
      "95895 PUT      reg7[error] = false",
      "95901 JUMP OR RETURN VAL      reg7"
  ],
  "95979": [
      "95979 SET I      null",
      "95981 PUSH F.K      -> reg7",
      "95983 VOID F",
      "95984 SET MEMORY ELEMENT      0 = reg7",
      "95987 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "95990 GET      reg5[stack] -> reg8",
      "95996 GET      reg8[indexOf] -> reg6",
      "96002 NEW ARRAY      1 -> reg5",
      "96005 PUT      reg5[0] = [object Function]",
      "96011 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg5",
      "96015 SET      reg2 -> reg4",
      "96018 SET MEMORY ELEMENT IF INIT      3094 = reg4",
      "96021 PUSH MEMORY ELEMENT IF INIT      3094 -> reg4",
      "96024 SUBTRACT      0 - 1 -> reg5",
      "96028 GREATER THAN      reg4 > reg5 -> reg6",
      "96032 SET MEMORY ELEMENT IF INIT      3095 = reg6",
      "96035 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "96038 GET      reg4[stack] -> reg6",
      "96044 GET      reg6[toString] -> reg7",
      "96050 EMPTY ARRAY      -> reg4",
      "96052 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg4",
      "96056 SET      reg2 -> reg5",
      "96059 SET MEMORY ELEMENT IF INIT      3096 = reg5",
      "96062 PUSH MEMORY ELEMENT IF INIT      3095 -> reg4",
      "96065 NOT      reg4 -> reg7",
      "96068 JUMP IF FALSE      reg7 TO: 96103 | 96071"
  ],
  "96071": [
      "96071 PUSH MEMORY ELEMENT IF INIT      3096 -> reg4",
      "96074 GET      reg4[substr] -> reg7",
      "96080 NEW ARRAY      2 -> reg10",
      "96083 PUT      reg10[0] = 0",
      "96087 PUT      reg10[1] = 250",
      "96091 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg10",
      "96095 SET      reg2 -> reg5",
      "96098 SET MEMORY ELEMENT IF INIT      3096 = reg5",
      "96101 JUMP      96140",
      "96140 EMPTY OBJECT      -> reg9",
      "96142 PUSH MEMORY ELEMENT IF INIT      3095 -> reg7",
      "96145 PUT      reg9[verdict] = reg7",
      "96151 PUSH MEMORY ELEMENT IF INIT      3096 -> reg7",
      "96154 PUT      reg9[raw] = reg7",
      "96160 PUT      reg9[error] = false",
      "96166 JUMP OR RETURN VAL      reg9"
  ],
  "96103": [
      "96103 PUSH MEMORY ELEMENT IF INIT      3096 -> reg5",
      "96106 GET      reg5[substr] -> reg10",
      "96112 NEW ARRAY      2 -> reg9",
      "96115 PUT      reg9[0] = 0",
      "96119 PUSH MEMORY ELEMENT IF INIT      3094 -> reg11",
      "96122 ADD      reg11100-> reg12",
      "96126 PUT      reg9[1] = reg12",
      "96130 CALL FUNCTION      OBJ: reg5 FUNC: reg10 ARGS: reg9",
      "96134 SET      reg2 -> reg7",
      "96137 SET MEMORY ELEMENT IF INIT      3096 = reg7",
      "96140 EMPTY OBJECT      -> reg9",
      "96142 PUSH MEMORY ELEMENT IF INIT      3095 -> reg7",
      "96145 PUT      reg9[verdict] = reg7",
      "96151 PUSH MEMORY ELEMENT IF INIT      3096 -> reg7",
      "96154 PUT      reg9[raw] = reg7",
      "96160 PUT      reg9[error] = false",
      "96166 JUMP OR RETURN VAL      reg9"
  ],
  "96254": [
      "96254 SET I      null",
      "96256 PUSH F.K      -> reg4",
      "96258 VOID F",
      "96259 SET MEMORY ELEMENT      0 = reg4",
      "96262 GET WINDOW PROP      Math -> reg6",
      "96267 GET      reg6[max] -> reg5",
      "96273 NEW ARRAY      2 -> reg8",
      "96276 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "96279 GET      reg9[stack] -> reg13",
      "96285 GET      reg13[indexOf] -> reg9",
      "96291 NEW ARRAY      1 -> reg11",
      "96294 PUT      reg11[0] = Object.ErrorInInvocation",
      "96300 CALL FUNCTION      OBJ: reg13 FUNC: reg9 ARGS: reg11",
      "96304 SET      reg2 -> reg10",
      "96307 PUT      reg8[0] = reg10",
      "96311 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "96314 GET      reg10[stack] -> reg11",
      "96320 GET      reg11[indexOf] -> reg10",
      "96326 NEW ARRAY      1 -> reg12",
      "96329 PUT      reg12[0] = Object.getDetails",
      "96335 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg12",
      "96339 SET      reg2 -> reg9",
      "96342 PUT      reg8[1] = reg9",
      "96346 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg8",
      "96350 SET      reg2 -> reg4",
      "96353 SET MEMORY ELEMENT IF INIT      3100 = reg4",
      "96356 PUSH MEMORY ELEMENT IF INIT      3100 -> reg4",
      "96359 SUBTRACT      0 - 1 -> reg5",
      "96363 GREATER THAN      reg4 > reg5 -> reg8",
      "96367 SET MEMORY ELEMENT IF INIT      3101 = reg8",
      "96370 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "96373 GET      reg5[stack] -> reg9",
      "96379 GET      reg9[toString] -> reg5",
      "96385 EMPTY ARRAY      -> reg8",
      "96387 CALL FUNCTION      OBJ: reg9 FUNC: reg5 ARGS: reg8",
      "96391 SET      reg2 -> reg4",
      "96394 SET MEMORY ELEMENT IF INIT      3102 = reg4",
      "96397 PUSH MEMORY ELEMENT IF INIT      3101 -> reg4",
      "96400 JUMP IF FALSE      reg4 TO: 96442 | 96403"
  ],
  "96403": [
      "96403 PUSH MEMORY ELEMENT IF INIT      3102 -> reg5",
      "96406 GET      reg5[substr] -> reg8",
      "96412 NEW ARRAY      2 -> reg14",
      "96415 PUT      reg14[0] = 0",
      "96419 PUSH MEMORY ELEMENT IF INIT      3100 -> reg12",
      "96422 ADD      reg12100-> reg10",
      "96426 PUT      reg14[1] = reg10",
      "96430 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg14",
      "96434 SET      reg2 -> reg4",
      "96437 SET MEMORY ELEMENT IF INIT      3102 = reg4",
      "96440 JUMP      96472",
      "96472 EMPTY OBJECT      -> reg10",
      "96474 PUSH MEMORY ELEMENT IF INIT      3101 -> reg8",
      "96477 PUT      reg10[verdict] = reg8",
      "96483 PUSH MEMORY ELEMENT IF INIT      3102 -> reg8",
      "96486 PUT      reg10[raw] = reg8",
      "96492 PUT      reg10[error] = false",
      "96498 JUMP OR RETURN VAL      reg10"
  ],
  "96442": [
      "96442 PUSH MEMORY ELEMENT IF INIT      3102 -> reg4",
      "96445 GET      reg4[substr] -> reg10",
      "96451 NEW ARRAY      2 -> reg12",
      "96454 PUT      reg12[0] = 0",
      "96458 PUT      reg12[1] = 250",
      "96462 CALL FUNCTION      OBJ: reg4 FUNC: reg10 ARGS: reg12",
      "96466 SET      reg2 -> reg8",
      "96469 SET MEMORY ELEMENT IF INIT      3102 = reg8",
      "96472 EMPTY OBJECT      -> reg10",
      "96474 PUSH MEMORY ELEMENT IF INIT      3101 -> reg8",
      "96477 PUT      reg10[verdict] = reg8",
      "96483 PUSH MEMORY ELEMENT IF INIT      3102 -> reg8",
      "96486 PUT      reg10[raw] = reg8",
      "96492 PUT      reg10[error] = false",
      "96498 JUMP OR RETURN VAL      reg10"
  ],
  "96584": [
      "96584 SET I      96804",
      "96586 PUSH F.K      -> reg4",
      "96588 VOID F",
      "96589 SET MEMORY ELEMENT      0 = reg4",
      "96592 PUSH MEMORY ELEMENT IF INIT      3106 -> reg4",
      "96595 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "96598 GET      reg6[toString] -> reg7",
      "96604 EMPTY ARRAY      -> reg10",
      "96606 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg10",
      "96610 SET      reg2 -> reg5",
      "96613 ADD      err: NaN-> reg8",
      "96619 PUT      reg4[rsn] = reg8",
      "96625 SET I      96804",
      "96627 SET I      96669",
      "96629 PUSH MEMORY ELEMENT IF INIT      3106 -> reg4",
      "96632 GET WINDOW PROP      window -> reg5",
      "96637 GET      reg5[chrome] -> reg8",
      "96643 GET      reg8[app] -> reg5",
      "96649 GET      reg5[getIsInstalled] -> reg7",
      "96655 GET      reg7[name] -> reg5",
      "96661 PUT      reg4[giin] = reg5",
      "96667 JUMP      96710",
      "96710 SET I      96804",
      "96712 PUSH MEMORY ELEMENT IF INIT      3106 -> reg4",
      "96715 GET      reg4[rsn] -> reg5",
      "96721 STRICT EQUAL      reg5 === getDetails -> reg4",
      "96727 JUMP IF TRUE      reg4 TO: 96748 | 96730"
  ],
  "96669": [
      "96669 SET I      96804",
      "96671 PUSH F.K      -> reg4",
      "96673 VOID F",
      "96674 SET MEMORY ELEMENT      0 = reg4",
      "96677 PUSH MEMORY ELEMENT IF INIT      3106 -> reg4",
      "96680 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "96683 GET      reg7[toString] -> reg8",
      "96689 EMPTY ARRAY      -> reg9",
      "96691 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "96695 SET      reg2 -> reg5",
      "96698 ADD      err: NaN-> reg9",
      "96704 PUT      reg4[giin] = reg9",
      "96710 SET I      96804",
      "96712 PUSH MEMORY ELEMENT IF INIT      3106 -> reg4",
      "96715 GET      reg4[rsn] -> reg5",
      "96721 STRICT EQUAL      reg5 === getDetails -> reg4",
      "96727 JUMP IF TRUE      reg4 TO: 96748 | 96730"
  ],
  "96730": [
      "96730 PUSH MEMORY ELEMENT IF INIT      3106 -> reg5",
      "96733 GET      reg5[giin] -> reg11",
      "96739 STRICT EQUAL      reg11 === getDetails -> reg5",
      "96745 SET      reg5 -> reg4",
      "96748 SET MEMORY ELEMENT IF INIT      3107 = reg4",
      "96751 EMPTY OBJECT      -> reg5",
      "96753 PUSH MEMORY ELEMENT IF INIT      3107 -> reg4",
      "96756 PUT      reg5[verdict] = reg4",
      "96762 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "96765 GET      reg9[stringify] -> reg10",
      "96771 NEW ARRAY      1 -> reg8",
      "96774 PUSH MEMORY ELEMENT IF INIT      3106 -> reg11",
      "96777 PUT      reg8[0] = reg11",
      "96781 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg8",
      "96785 SET      reg2 -> reg4",
      "96788 PUT      reg5[raw] = reg4",
      "96794 PUT      reg5[error] = false",
      "96800 JUMP OR RETURN VAL      reg5"
  ],
  "96748": [
      "96748 SET MEMORY ELEMENT IF INIT      3107 = reg4",
      "96751 EMPTY OBJECT      -> reg5",
      "96753 PUSH MEMORY ELEMENT IF INIT      3107 -> reg4",
      "96756 PUT      reg5[verdict] = reg4",
      "96762 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "96765 GET      reg9[stringify] -> reg10",
      "96771 NEW ARRAY      1 -> reg8",
      "96774 PUSH MEMORY ELEMENT IF INIT      3106 -> reg11",
      "96777 PUT      reg8[0] = reg11",
      "96781 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg8",
      "96785 SET      reg2 -> reg4",
      "96788 PUT      reg5[raw] = reg4",
      "96794 PUT      reg5[error] = false",
      "96800 JUMP OR RETURN VAL      reg5"
  ],
  "96804": [
      "96804 SET I      null",
      "96806 PUSH F.K      -> reg5",
      "96808 VOID F",
      "96809 SET MEMORY ELEMENT      0 = reg5",
      "96812 EMPTY OBJECT      -> reg5",
      "96814 PUT      reg5[verdict] = false",
      "96820 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "96823 GET      reg10[toString] -> reg8",
      "96829 EMPTY ARRAY      -> reg13",
      "96831 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg13",
      "96835 SET      reg2 -> reg4",
      "96838 PUT      reg5[raw] = reg4",
      "96844 PUT      reg5[error] = true",
      "96850 JUMP OR RETURN VAL      reg5"
  ],
  "97118": [
      "97118 PUSH MEMORY ELEMENT IF INIT      3113 -> reg4",
      "97121 PUT      reg4[verdict] = true",
      "97127 PUSH MEMORY ELEMENT IF INIT      3113 -> reg5",
      "97130 GET      reg5[raw] -> reg4",
      "97136 PUSH MEMORY ELEMENT IF INIT      3114 -> reg7",
      "97139 NEW ARRAY      2 -> reg8",
      "97142 GET WINDOW PROP      window -> reg10",
      "97147 GET      reg10[eval] -> reg9",
      "97153 PUT      reg8[0] = reg9",
      "97157 PUT      reg8[1] = eval",
      "97163 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "97167 SET      reg2 -> reg5",
      "97170 PUT      reg4[ev] = reg5",
      "97176 PUSH MEMORY ELEMENT IF INIT      3113 -> reg5",
      "97179 GET      reg5[raw] -> reg4",
      "97185 GET WINDOW PROP      window -> reg7",
      "97190 GET      reg7[eval] -> reg9",
      "97196 GET      reg9[toString] -> reg7",
      "97202 EMPTY ARRAY      -> reg8",
      "97204 CALL FUNCTION      OBJ: reg9 FUNC: reg7 ARGS: reg8",
      "97208 SET      reg2 -> reg5",
      "97211 PUT      reg4[evts] = reg5",
      "97217 PUSH MEMORY ELEMENT IF INIT      3113 -> reg8",
      "97220 GET      reg8[raw] -> reg4",
      "97226 GET      reg4[ev] -> reg8",
      "97232 NOT      reg8 -> reg4",
      "97235 JUMP IF FALSE      reg4 TO: 97247 | 97238"
  ],
  "97127": [
      "97127 PUSH MEMORY ELEMENT IF INIT      3113 -> reg5",
      "97130 GET      reg5[raw] -> reg4",
      "97136 PUSH MEMORY ELEMENT IF INIT      3114 -> reg7",
      "97139 NEW ARRAY      2 -> reg8",
      "97142 GET WINDOW PROP      window -> reg10",
      "97147 GET      reg10[eval] -> reg9",
      "97153 PUT      reg8[0] = reg9",
      "97157 PUT      reg8[1] = eval",
      "97163 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "97167 SET      reg2 -> reg5",
      "97170 PUT      reg4[ev] = reg5",
      "97176 PUSH MEMORY ELEMENT IF INIT      3113 -> reg5",
      "97179 GET      reg5[raw] -> reg4",
      "97185 GET WINDOW PROP      window -> reg7",
      "97190 GET      reg7[eval] -> reg9",
      "97196 GET      reg9[toString] -> reg7",
      "97202 EMPTY ARRAY      -> reg8",
      "97204 CALL FUNCTION      OBJ: reg9 FUNC: reg7 ARGS: reg8",
      "97208 SET      reg2 -> reg5",
      "97211 PUT      reg4[evts] = reg5",
      "97217 PUSH MEMORY ELEMENT IF INIT      3113 -> reg8",
      "97220 GET      reg8[raw] -> reg4",
      "97226 GET      reg4[ev] -> reg8",
      "97232 NOT      reg8 -> reg4",
      "97235 JUMP IF FALSE      reg4 TO: 97247 | 97238"
  ],
  "97238": [
      "97238 PUSH MEMORY ELEMENT IF INIT      3113 -> reg4",
      "97241 PUT      reg4[verdict] = true",
      "97247 JUMP      97293",
      "97293 SET I      null",
      "97295 PUSH MEMORY ELEMENT IF INIT      3113 -> reg4",
      "97298 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "97301 GET      reg8[stringify] -> reg11",
      "97307 NEW ARRAY      1 -> reg10",
      "97310 PUSH MEMORY ELEMENT IF INIT      3113 -> reg12",
      "97313 GET      reg12[raw] -> reg13",
      "97319 PUT      reg10[0] = reg13",
      "97323 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg10",
      "97327 SET      reg2 -> reg5",
      "97330 PUT      reg4[raw] = reg5",
      "97336 PUSH MEMORY ELEMENT IF INIT      3113 -> reg4",
      "97339 JUMP OR RETURN VAL      reg4"
  ],
  "97247": [
      "97247 JUMP      97293",
      "97293 SET I      null",
      "97295 PUSH MEMORY ELEMENT IF INIT      3113 -> reg4",
      "97298 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "97301 GET      reg8[stringify] -> reg11",
      "97307 NEW ARRAY      1 -> reg10",
      "97310 PUSH MEMORY ELEMENT IF INIT      3113 -> reg12",
      "97313 GET      reg12[raw] -> reg13",
      "97319 PUT      reg10[0] = reg13",
      "97323 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg10",
      "97327 SET      reg2 -> reg5",
      "97330 PUT      reg4[raw] = reg5",
      "97336 PUSH MEMORY ELEMENT IF INIT      3113 -> reg4",
      "97339 JUMP OR RETURN VAL      reg4"
  ],
  "97249": [
      "97249 SET I      null",
      "97251 PUSH F.K      -> reg5",
      "97253 VOID F",
      "97254 SET MEMORY ELEMENT      0 = reg5",
      "97257 PUSH MEMORY ELEMENT IF INIT      3113 -> reg5",
      "97260 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "97263 GET      reg7[toString] -> reg8",
      "97269 EMPTY ARRAY      -> reg10",
      "97271 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "97275 SET      reg2 -> reg4",
      "97278 PUT      reg5[raw] = reg4",
      "97284 PUSH MEMORY ELEMENT IF INIT      3113 -> reg4",
      "97287 PUT      reg4[error] = true",
      "97293 SET I      null",
      "97295 PUSH MEMORY ELEMENT IF INIT      3113 -> reg4",
      "97298 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "97301 GET      reg8[stringify] -> reg11",
      "97307 NEW ARRAY      1 -> reg10",
      "97310 PUSH MEMORY ELEMENT IF INIT      3113 -> reg12",
      "97313 GET      reg12[raw] -> reg13",
      "97319 PUT      reg10[0] = reg13",
      "97323 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg10",
      "97327 SET      reg2 -> reg5",
      "97330 PUT      reg4[raw] = reg5",
      "97336 PUSH MEMORY ELEMENT IF INIT      3113 -> reg4",
      "97339 JUMP OR RETURN VAL      reg4"
  ],
  "97445": [
      "97445 GET WINDOW PROP      window -> reg6",
      "97450 GET      reg6[location] -> reg5",
      "97456 GET      reg5[host] -> reg6",
      "97462 GET      reg6[indexOf] -> reg10",
      "97468 NEW ARRAY      1 -> reg5",
      "97471 PUT      reg5[0] = 127.0.0.1",
      "97477 CALL FUNCTION      OBJ: reg6 FUNC: reg10 ARGS: reg5",
      "97481 SET      reg2 -> reg4",
      "97484 SUBTRACT      0 - 1 -> reg5",
      "97488 GREATER THAN      reg4 > reg5 -> reg10",
      "97492 SET      reg10 -> reg9",
      "97495 JUMP IF TRUE      reg9 TO: 97524 | 97498"
  ],
  "97495": ["97495 JUMP IF TRUE      reg9 TO: 97524 | 97498"],
  "97498": [
      "97498 GET WINDOW PROP      window -> reg4",
      "97503 GET      reg4[location] -> reg5",
      "97509 GET      reg5[protocol] -> reg7",
      "97515 STRICT EQUAL      reg7 === file: -> reg4",
      "97521 SET      reg4 -> reg9",
      "97524 JUMP IF TRUE      reg9 TO: 97553 | 97527"
  ],
  "97524": ["97524 JUMP IF TRUE      reg9 TO: 97553 | 97527"],
  "97527": [
      "97527 GET WINDOW PROP      window -> reg4",
      "97532 GET      reg4[location] -> reg7",
      "97538 GET      reg7[protocol] -> reg11",
      "97544 STRICT EQUAL      reg11 === about: -> reg4",
      "97550 SET      reg4 -> reg9",
      "97553 JUMP IF TRUE      reg9 TO: 97582 | 97556"
  ],
  "97553": ["97553 JUMP IF TRUE      reg9 TO: 97582 | 97556"],
  "97556": [
      "97556 GET WINDOW PROP      window -> reg10",
      "97561 GET      reg10[location] -> reg4",
      "97567 GET      reg4[protocol] -> reg5",
      "97573 STRICT EQUAL      reg5 === data: -> reg7",
      "97579 SET      reg7 -> reg9",
      "97582 JUMP IF TRUE      reg9 TO: 97611 | 97585"
  ],
  "97582": ["97582 JUMP IF TRUE      reg9 TO: 97611 | 97585"],
  "97585": [
      "97585 GET WINDOW PROP      window -> reg4",
      "97590 GET      reg4[location] -> reg5",
      "97596 GET      reg5[port] -> reg4",
      "97602 STRICT NOT EQUAL      reg4 !==  -> reg7",
      "97608 SET      reg7 -> reg9",
      "97611 SET MEMORY ELEMENT IF INIT      3123 = reg9",
      "97614 PUSH MEMORY ELEMENT IF INIT      3123 -> reg4",
      "97617 JUMP IF FALSE      reg4 TO: 97670 | 97620"
  ],
  "97611": [
      "97611 SET MEMORY ELEMENT IF INIT      3123 = reg9",
      "97614 PUSH MEMORY ELEMENT IF INIT      3123 -> reg4",
      "97617 JUMP IF FALSE      reg4 TO: 97670 | 97620"
  ],
  "97620": [
      "97620 PUSH MEMORY ELEMENT IF INIT      3122 -> reg4",
      "97623 GET WINDOW PROP      document -> reg9",
      "97628 GET      reg9[documentElement] -> reg5",
      "97634 GET      reg5[innerHTML] -> reg9",
      "97640 GET      reg9[substr] -> reg5",
      "97646 NEW ARRAY      2 -> reg12",
      "97649 PUT      reg12[0] = 0",
      "97653 PUT      reg12[1] = 4000",
      "97657 CALL FUNCTION      OBJ: reg9 FUNC: reg5 ARGS: reg12",
      "97661 SET      reg2 -> reg7",
      "97664 PUT      reg4[d] = reg7",
      "97670 EMPTY OBJECT      -> reg4",
      "97672 PUSH MEMORY ELEMENT IF INIT      3123 -> reg5",
      "97675 PUT      reg4[verdict] = reg5",
      "97681 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "97684 GET      reg10[stringify] -> reg11",
      "97690 NEW ARRAY      1 -> reg12",
      "97693 PUSH MEMORY ELEMENT IF INIT      3122 -> reg7",
      "97696 PUT      reg12[0] = reg7",
      "97700 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "97704 SET      reg2 -> reg5",
      "97707 PUT      reg4[raw] = reg5",
      "97713 PUT      reg4[error] = false",
      "97719 JUMP OR RETURN VAL      reg4"
  ],
  "97670": [
      "97670 EMPTY OBJECT      -> reg4",
      "97672 PUSH MEMORY ELEMENT IF INIT      3123 -> reg5",
      "97675 PUT      reg4[verdict] = reg5",
      "97681 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "97684 GET      reg10[stringify] -> reg11",
      "97690 NEW ARRAY      1 -> reg12",
      "97693 PUSH MEMORY ELEMENT IF INIT      3122 -> reg7",
      "97696 PUT      reg12[0] = reg7",
      "97700 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "97704 SET      reg2 -> reg5",
      "97707 PUT      reg4[raw] = reg5",
      "97713 PUT      reg4[error] = false",
      "97719 JUMP OR RETURN VAL      reg4"
  ],
  "97723": [
      "97723 SET I      null",
      "97725 PUSH F.K      -> reg4",
      "97727 VOID F",
      "97728 SET MEMORY ELEMENT      0 = reg4",
      "97731 EMPTY OBJECT      -> reg4",
      "97733 PUT      reg4[verdict] = false",
      "97739 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "97742 GET      reg5[toString] -> reg7",
      "97748 EMPTY ARRAY      -> reg12",
      "97750 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg12",
      "97754 SET      reg2 -> reg11",
      "97757 PUT      reg4[raw] = reg11",
      "97763 PUT      reg4[error] = true",
      "97769 JUMP OR RETURN VAL      reg4"
  ],
  "97911": [
      "97911 SET      0 -> reg6",
      "97914 GET      reg12[reg6] -> reg4",
      "97918 SET MEMORY ELEMENT IF INIT      3134 = reg4",
      "97921 SET I      98007",
      "97923 PUSH MEMORY ELEMENT IF INIT      3132 -> reg7",
      "97926 PUSH MEMORY ELEMENT IF INIT      3134 -> reg8",
      "97929 GET      reg7[reg8] -> reg9",
      "97933 GET WINDOW PROP      HTMLMediaElement -> reg8",
      "97938 GET      reg8[prototype] -> reg10",
      "97944 GET      reg10[canPlayType] -> reg8",
      "97950 NEW ARRAY      1 -> reg11",
      "97953 PUSH MEMORY ELEMENT IF INIT      3132 -> reg13",
      "97956 PUSH MEMORY ELEMENT IF INIT      3134 -> reg16",
      "97959 GET      reg13[reg16] -> reg14",
      "97963 GET      reg14[c] -> reg13",
      "97969 PUT      reg11[0] = reg13",
      "97973 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg11",
      "97977 SET      reg2 -> reg7",
      "97980 PUT      reg9[o] = reg7",
      "97986 PUSH MEMORY ELEMENT IF INIT      3132 -> reg7",
      "97989 PUSH MEMORY ELEMENT IF INIT      3134 -> reg9",
      "97992 GET      reg7[reg9] -> reg8",
      "97996 PUT      reg8[v] = true",
      "98002 SET MEMORY ELEMENT IF INIT      3133 = true",
      "98005 JUMP      98065",
      "98065 SET I      98131",
      "98067 ADD      reg61-> reg6",
      "98071 LESS THAN      reg6 < reg5 -> reg7",
      "98075 JUMP IF TRUE      reg7 TO: 97914 | 98078"
  ],
  "97914": [
      "97914 GET      reg12[reg6] -> reg4",
      "97918 SET MEMORY ELEMENT IF INIT      3134 = reg4",
      "97921 SET I      98007",
      "97923 PUSH MEMORY ELEMENT IF INIT      3132 -> reg7",
      "97926 PUSH MEMORY ELEMENT IF INIT      3134 -> reg8",
      "97929 GET      reg7[reg8] -> reg9",
      "97933 GET WINDOW PROP      HTMLMediaElement -> reg8",
      "97938 GET      reg8[prototype] -> reg10",
      "97944 GET      reg10[canPlayType] -> reg8",
      "97950 NEW ARRAY      1 -> reg11",
      "97953 PUSH MEMORY ELEMENT IF INIT      3132 -> reg13",
      "97956 PUSH MEMORY ELEMENT IF INIT      3134 -> reg16",
      "97959 GET      reg13[reg16] -> reg14",
      "97963 GET      reg14[c] -> reg13",
      "97969 PUT      reg11[0] = reg13",
      "97973 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg11",
      "97977 SET      reg2 -> reg7",
      "97980 PUT      reg9[o] = reg7",
      "97986 PUSH MEMORY ELEMENT IF INIT      3132 -> reg7",
      "97989 PUSH MEMORY ELEMENT IF INIT      3134 -> reg9",
      "97992 GET      reg7[reg9] -> reg8",
      "97996 PUT      reg8[v] = true",
      "98002 SET MEMORY ELEMENT IF INIT      3133 = true",
      "98005 JUMP      98065",
      "98065 SET I      98131",
      "98067 ADD      reg61-> reg6",
      "98071 LESS THAN      reg6 < reg5 -> reg7",
      "98075 JUMP IF TRUE      reg7 TO: 97914 | 98078"
  ],
  "98007": [
      "98007 SET I      98131",
      "98009 PUSH F.K      -> reg7",
      "98011 VOID F",
      "98012 SET MEMORY ELEMENT      0 = reg7",
      "98015 PUSH MEMORY ELEMENT IF INIT      3132 -> reg7",
      "98018 PUSH MEMORY ELEMENT IF INIT      3134 -> reg9",
      "98021 GET      reg7[reg9] -> reg8",
      "98025 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "98028 GET      reg9[toString] -> reg13",
      "98034 EMPTY ARRAY      -> reg14",
      "98036 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg14",
      "98040 SET      reg2 -> reg7",
      "98043 PUT      reg8[o] = reg7",
      "98049 PUSH MEMORY ELEMENT IF INIT      3132 -> reg7",
      "98052 PUSH MEMORY ELEMENT IF INIT      3134 -> reg11",
      "98055 GET      reg7[reg11] -> reg8",
      "98059 PUT      reg8[v] = false",
      "98065 SET I      98131",
      "98067 ADD      reg61-> reg6",
      "98071 LESS THAN      reg6 < reg5 -> reg7",
      "98075 JUMP IF TRUE      reg7 TO: 97914 | 98078"
  ],
  "98078": [
      "98078 EMPTY OBJECT      -> reg6",
      "98080 PUSH MEMORY ELEMENT IF INIT      3133 -> reg4",
      "98083 PUT      reg6[verdict] = reg4",
      "98089 PUSH MEMORY ELEMENT IF INIT      280 -> reg5",
      "98092 GET      reg5[stringify] -> reg7",
      "98098 NEW ARRAY      1 -> reg8",
      "98101 PUSH MEMORY ELEMENT IF INIT      3132 -> reg11",
      "98104 PUT      reg8[0] = reg11",
      "98108 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "98112 SET      reg2 -> reg4",
      "98115 PUT      reg6[raw] = reg4",
      "98121 PUT      reg6[error] = false",
      "98127 JUMP OR RETURN VAL      reg6"
  ],
  "98131": [
      "98131 SET I      null",
      "98133 PUSH F.K      -> reg4",
      "98135 VOID F",
      "98136 SET MEMORY ELEMENT      0 = reg4",
      "98139 EMPTY OBJECT      -> reg4",
      "98141 PUT      reg4[verdict] = false",
      "98147 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "98150 GET      reg6[toString] -> reg11",
      "98156 EMPTY ARRAY      -> reg8",
      "98158 CALL FUNCTION      OBJ: reg6 FUNC: reg11 ARGS: reg8",
      "98162 SET      reg2 -> reg7",
      "98165 PUT      reg4[raw] = reg7",
      "98171 PUT      reg4[error] = true",
      "98177 JUMP OR RETURN VAL      reg4"
  ],
  "98289": [
      "98289 SET I      98758",
      "98291 PUSH F.K      -> reg4",
      "98293 VOID F",
      "98294 SET MEMORY ELEMENT      0 = reg4",
      "98297 PUSH MEMORY ELEMENT IF INIT      3139 -> reg4",
      "98300 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "98303 GET      reg6[toString] -> reg7",
      "98309 EMPTY ARRAY      -> reg8",
      "98311 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "98315 SET      reg2 -> reg5",
      "98318 PUT      reg4[moz] = reg5",
      "98324 SET I      98758",
      "98326 SET I      98384",
      "98328 PUSH MEMORY ELEMENT IF INIT      3139 -> reg4",
      "98331 NEW REGEXP      ^('.*')|(\".*\")$ ,  -> reg5",
      "98339 GET      reg5[test] -> reg8",
      "98345 NEW ARRAY      1 -> reg11",
      "98348 GET WINDOW PROP      navigator -> reg10",
      "98353 GET      reg10[userAgent] -> reg12",
      "98359 PUT      reg11[0] = reg12",
      "98363 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg11",
      "98367 SET      reg2 -> reg7",
      "98370 NOT      reg7 -> reg8",
      "98373 NOT      reg8 -> reg7",
      "98376 PUT      reg4[qtd] = reg7",
      "98382 JUMP      98419",
      "98419 SET I      98758",
      "98421 SET I      98481",
      "98423 PUSH MEMORY ELEMENT IF INIT      3139 -> reg4",
      "98426 GET WINDOW PROP      navigator -> reg10",
      "98431 GET      reg10[userAgent] -> reg11",
      "98437 GET      reg11[indexOf] -> reg10",
      "98443 NEW ARRAY      1 -> reg12",
      "98446 PUT      reg12[0] = PhantomJS/",
      "98452 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg12",
      "98456 SET      reg2 -> reg7",
      "98459 SUBTRACT      0 - 1 -> reg10",
      "98463 STRICT NOT EQUAL      reg7 !== reg10 -> reg13",
      "98467 NOT      reg13 -> reg10",
      "98470 NOT      reg10 -> reg7",
      "98473 PUT      reg4[ptm] = reg7",
      "98479 JUMP      98516",
      "98516 SET I      98758",
      "98518 SET I      98578",
      "98520 PUSH MEMORY ELEMENT IF INIT      3139 -> reg10",
      "98523 GET WINDOW PROP      navigator -> reg4",
      "98528 GET      reg4[userAgent] -> reg12",
      "98534 GET      reg12[indexOf] -> reg4",
      "98540 NEW ARRAY      1 -> reg14",
      "98543 PUT      reg14[0] = HeadlessChrome/",
      "98549 CALL FUNCTION      OBJ: reg12 FUNC: reg4 ARGS: reg14",
      "98553 SET      reg2 -> reg7",
      "98556 SUBTRACT      0 - 1 -> reg4",
      "98560 STRICT NOT EQUAL      reg7 !== reg4 -> reg17",
      "98564 NOT      reg17 -> reg7",
      "98567 NOT      reg7 -> reg14",
      "98570 PUT      reg10[hch] = reg14",
      "98576 JUMP      98613",
      "98613 SET I      98758",
      "98615 SET MEMORY ELEMENT IF INIT      3140 = false",
      "98618 PUSH MEMORY ELEMENT IF INIT      3139 -> reg4",
      "98621 COPY ENUMERABLE      reg4 -> reg15",
      "98624 GET      reg15[length] -> reg10",
      "98630 EQUAL      reg10 == 0 -> reg16",
      "98634 JUMP IF TRUE      reg16 TO: 98705 | 98637"
  ],
  "98384": [
      "98384 SET I      98758",
      "98386 PUSH F.K      -> reg8",
      "98388 VOID F",
      "98389 SET MEMORY ELEMENT      0 = reg8",
      "98392 PUSH MEMORY ELEMENT IF INIT      3139 -> reg7",
      "98395 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "98398 GET      reg8[toString] -> reg10",
      "98404 EMPTY ARRAY      -> reg11",
      "98406 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg11",
      "98410 SET      reg2 -> reg4",
      "98413 PUT      reg7[qtd] = reg4",
      "98419 SET I      98758",
      "98421 SET I      98481",
      "98423 PUSH MEMORY ELEMENT IF INIT      3139 -> reg4",
      "98426 GET WINDOW PROP      navigator -> reg10",
      "98431 GET      reg10[userAgent] -> reg11",
      "98437 GET      reg11[indexOf] -> reg10",
      "98443 NEW ARRAY      1 -> reg12",
      "98446 PUT      reg12[0] = PhantomJS/",
      "98452 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg12",
      "98456 SET      reg2 -> reg7",
      "98459 SUBTRACT      0 - 1 -> reg10",
      "98463 STRICT NOT EQUAL      reg7 !== reg10 -> reg13",
      "98467 NOT      reg13 -> reg10",
      "98470 NOT      reg10 -> reg7",
      "98473 PUT      reg4[ptm] = reg7",
      "98479 JUMP      98516",
      "98516 SET I      98758",
      "98518 SET I      98578",
      "98520 PUSH MEMORY ELEMENT IF INIT      3139 -> reg10",
      "98523 GET WINDOW PROP      navigator -> reg4",
      "98528 GET      reg4[userAgent] -> reg12",
      "98534 GET      reg12[indexOf] -> reg4",
      "98540 NEW ARRAY      1 -> reg14",
      "98543 PUT      reg14[0] = HeadlessChrome/",
      "98549 CALL FUNCTION      OBJ: reg12 FUNC: reg4 ARGS: reg14",
      "98553 SET      reg2 -> reg7",
      "98556 SUBTRACT      0 - 1 -> reg4",
      "98560 STRICT NOT EQUAL      reg7 !== reg4 -> reg17",
      "98564 NOT      reg17 -> reg7",
      "98567 NOT      reg7 -> reg14",
      "98570 PUT      reg10[hch] = reg14",
      "98576 JUMP      98613",
      "98613 SET I      98758",
      "98615 SET MEMORY ELEMENT IF INIT      3140 = false",
      "98618 PUSH MEMORY ELEMENT IF INIT      3139 -> reg4",
      "98621 COPY ENUMERABLE      reg4 -> reg15",
      "98624 GET      reg15[length] -> reg10",
      "98630 EQUAL      reg10 == 0 -> reg16",
      "98634 JUMP IF TRUE      reg16 TO: 98705 | 98637"
  ],
  "98481": [
      "98481 SET I      98758",
      "98483 PUSH F.K      -> reg7",
      "98485 VOID F",
      "98486 SET MEMORY ELEMENT      0 = reg7",
      "98489 PUSH MEMORY ELEMENT IF INIT      3139 -> reg7",
      "98492 PUSH MEMORY ELEMENT IF INIT      0 -> reg13",
      "98495 GET      reg13[toString] -> reg4",
      "98501 EMPTY ARRAY      -> reg14",
      "98503 CALL FUNCTION      OBJ: reg13 FUNC: reg4 ARGS: reg14",
      "98507 SET      reg2 -> reg10",
      "98510 PUT      reg7[ptm] = reg10",
      "98516 SET I      98758",
      "98518 SET I      98578",
      "98520 PUSH MEMORY ELEMENT IF INIT      3139 -> reg10",
      "98523 GET WINDOW PROP      navigator -> reg4",
      "98528 GET      reg4[userAgent] -> reg12",
      "98534 GET      reg12[indexOf] -> reg4",
      "98540 NEW ARRAY      1 -> reg14",
      "98543 PUT      reg14[0] = HeadlessChrome/",
      "98549 CALL FUNCTION      OBJ: reg12 FUNC: reg4 ARGS: reg14",
      "98553 SET      reg2 -> reg7",
      "98556 SUBTRACT      0 - 1 -> reg4",
      "98560 STRICT NOT EQUAL      reg7 !== reg4 -> reg17",
      "98564 NOT      reg17 -> reg7",
      "98567 NOT      reg7 -> reg14",
      "98570 PUT      reg10[hch] = reg14",
      "98576 JUMP      98613",
      "98613 SET I      98758",
      "98615 SET MEMORY ELEMENT IF INIT      3140 = false",
      "98618 PUSH MEMORY ELEMENT IF INIT      3139 -> reg4",
      "98621 COPY ENUMERABLE      reg4 -> reg15",
      "98624 GET      reg15[length] -> reg10",
      "98630 EQUAL      reg10 == 0 -> reg16",
      "98634 JUMP IF TRUE      reg16 TO: 98705 | 98637"
  ],
  "98578": [
      "98578 SET I      98758",
      "98580 PUSH F.K      -> reg4",
      "98582 VOID F",
      "98583 SET MEMORY ELEMENT      0 = reg4",
      "98586 PUSH MEMORY ELEMENT IF INIT      3139 -> reg4",
      "98589 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "98592 GET      reg7[toString] -> reg14",
      "98598 EMPTY ARRAY      -> reg15",
      "98600 CALL FUNCTION      OBJ: reg7 FUNC: reg14 ARGS: reg15",
      "98604 SET      reg2 -> reg10",
      "98607 PUT      reg4[hch] = reg10",
      "98613 SET I      98758",
      "98615 SET MEMORY ELEMENT IF INIT      3140 = false",
      "98618 PUSH MEMORY ELEMENT IF INIT      3139 -> reg4",
      "98621 COPY ENUMERABLE      reg4 -> reg15",
      "98624 GET      reg15[length] -> reg10",
      "98630 EQUAL      reg10 == 0 -> reg16",
      "98634 JUMP IF TRUE      reg16 TO: 98705 | 98637"
  ],
  "98637": [
      "98637 SET      0 -> reg16",
      "98640 GET      reg15[reg16] -> reg4",
      "98644 SET MEMORY ELEMENT IF INIT      3141 = reg4",
      "98647 PUSH MEMORY ELEMENT IF INIT      3139 -> reg17",
      "98650 PUSH MEMORY ELEMENT IF INIT      3141 -> reg18",
      "98653 GET      reg17[reg18] -> reg14",
      "98657 TYPEOF      reg14 -> reg17",
      "98660 STRICT EQUAL      reg17 === boolean -> reg14",
      "98666 JUMP IF FALSE      reg14 TO: 98686 | 98669"
  ],
  "98640": [
      "98640 GET      reg15[reg16] -> reg4",
      "98644 SET MEMORY ELEMENT IF INIT      3141 = reg4",
      "98647 PUSH MEMORY ELEMENT IF INIT      3139 -> reg17",
      "98650 PUSH MEMORY ELEMENT IF INIT      3141 -> reg18",
      "98653 GET      reg17[reg18] -> reg14",
      "98657 TYPEOF      reg14 -> reg17",
      "98660 STRICT EQUAL      reg17 === boolean -> reg14",
      "98666 JUMP IF FALSE      reg14 TO: 98686 | 98669"
  ],
  "98669": [
      "98669 PUSH MEMORY ELEMENT IF INIT      3139 -> reg18",
      "98672 PUSH MEMORY ELEMENT IF INIT      3141 -> reg20",
      "98675 GET      reg18[reg20] -> reg17",
      "98679 STRICT EQUAL      reg17 === true -> reg18",
      "98683 SET      reg18 -> reg14",
      "98686 JUMP IF FALSE      reg14 TO: 98694 | 98689"
  ],
  "98686": ["98686 JUMP IF FALSE      reg14 TO: 98694 | 98689"],
  "98689": [
      "98689 SET MEMORY ELEMENT IF INIT      3140 = true",
      "98692 JUMP      98705",
      "98705 EMPTY OBJECT      -> reg10",
      "98707 PUSH MEMORY ELEMENT IF INIT      3140 -> reg4",
      "98710 PUT      reg10[verdict] = reg4",
      "98716 PUSH MEMORY ELEMENT IF INIT      280 -> reg4",
      "98719 GET      reg4[stringify] -> reg14",
      "98725 NEW ARRAY      1 -> reg18",
      "98728 PUSH MEMORY ELEMENT IF INIT      3139 -> reg16",
      "98731 PUT      reg18[0] = reg16",
      "98735 CALL FUNCTION      OBJ: reg4 FUNC: reg14 ARGS: reg18",
      "98739 SET      reg2 -> reg15",
      "98742 PUT      reg10[raw] = reg15",
      "98748 PUT      reg10[error] = false",
      "98754 JUMP OR RETURN VAL      reg10"
  ],
  "98694": [
      "98694 ADD      reg161-> reg16",
      "98698 LESS THAN      reg16 < reg10 -> reg17",
      "98702 JUMP IF TRUE      reg17 TO: 98640 | 98705"
  ],
  "98705": [
      "98705 EMPTY OBJECT      -> reg10",
      "98707 PUSH MEMORY ELEMENT IF INIT      3140 -> reg4",
      "98710 PUT      reg10[verdict] = reg4",
      "98716 PUSH MEMORY ELEMENT IF INIT      280 -> reg4",
      "98719 GET      reg4[stringify] -> reg14",
      "98725 NEW ARRAY      1 -> reg18",
      "98728 PUSH MEMORY ELEMENT IF INIT      3139 -> reg16",
      "98731 PUT      reg18[0] = reg16",
      "98735 CALL FUNCTION      OBJ: reg4 FUNC: reg14 ARGS: reg18",
      "98739 SET      reg2 -> reg15",
      "98742 PUT      reg10[raw] = reg15",
      "98748 PUT      reg10[error] = false",
      "98754 JUMP OR RETURN VAL      reg10"
  ],
  "98758": [
      "98758 SET I      null",
      "98760 PUSH F.K      -> reg10",
      "98762 VOID F",
      "98763 SET MEMORY ELEMENT      0 = reg10",
      "98766 EMPTY OBJECT      -> reg14",
      "98768 PUT      reg14[verdict] = false",
      "98774 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "98777 GET      reg10[toString] -> reg18",
      "98783 EMPTY ARRAY      -> reg19",
      "98785 CALL FUNCTION      OBJ: reg10 FUNC: reg18 ARGS: reg19",
      "98789 SET      reg2 -> reg15",
      "98792 PUT      reg14[raw] = reg15",
      "98798 PUT      reg14[error] = true",
      "98804 JUMP OR RETURN VAL      reg14"
  ],
  "98934": [
      "98934 GET WINDOW PROP      CefSharp -> reg4",
      "98939 TYPEOF      reg4 -> reg6",
      "98942 SET      reg6 -> reg7",
      "98945 JUMP      98952",
      "98952 PUT      reg5[ut] = reg7",
      "98958 PUSH MEMORY ELEMENT IF INIT      3151 -> reg4",
      "98961 JUMP IF FALSE      reg4 TO: 99003 | 98964"
  ],
  "98947": [
      "98947 SET      NA -> reg7",
      "98952 PUT      reg5[ut] = reg7",
      "98958 PUSH MEMORY ELEMENT IF INIT      3151 -> reg4",
      "98961 JUMP IF FALSE      reg4 TO: 99003 | 98964"
  ],
  "98964": [
      "98964 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "98967 GET      reg7[stringify] -> reg11",
      "98973 NEW ARRAY      1 -> reg9",
      "98976 GET WINDOW PROP      window -> reg10",
      "98981 GET      reg10[CefSharp] -> reg13",
      "98987 PUT      reg9[0] = reg13",
      "98991 CALL FUNCTION      OBJ: reg7 FUNC: reg11 ARGS: reg9",
      "98995 SET      reg2 -> reg4",
      "98998 SET      reg4 -> reg6",
      "99001 JUMP      99008",
      "99008 PUT      reg5[us] = reg6",
      "99014 PUSH MEMORY ELEMENT IF INIT      3152 -> reg4",
      "99017 PUT      reg5[lp] = reg4",
      "99023 PUSH MEMORY ELEMENT IF INIT      3152 -> reg4",
      "99026 JUMP IF FALSE      reg4 TO: 99042 | 99029"
  ],
  "99003": [
      "99003 SET      NA -> reg6",
      "99008 PUT      reg5[us] = reg6",
      "99014 PUSH MEMORY ELEMENT IF INIT      3152 -> reg4",
      "99017 PUT      reg5[lp] = reg4",
      "99023 PUSH MEMORY ELEMENT IF INIT      3152 -> reg4",
      "99026 JUMP IF FALSE      reg4 TO: 99042 | 99029"
  ],
  "99029": [
      "99029 GET WINDOW PROP      cefSharp -> reg4",
      "99034 TYPEOF      reg4 -> reg9",
      "99037 SET      reg9 -> reg6",
      "99040 JUMP      99047",
      "99047 PUT      reg5[lt] = reg6",
      "99053 PUSH MEMORY ELEMENT IF INIT      3152 -> reg4",
      "99056 JUMP IF FALSE      reg4 TO: 99098 | 99059"
  ],
  "99042": [
      "99042 SET      NA -> reg6",
      "99047 PUT      reg5[lt] = reg6",
      "99053 PUSH MEMORY ELEMENT IF INIT      3152 -> reg4",
      "99056 JUMP IF FALSE      reg4 TO: 99098 | 99059"
  ],
  "99059": [
      "99059 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "99062 GET      reg10[stringify] -> reg9",
      "99068 NEW ARRAY      1 -> reg12",
      "99071 GET WINDOW PROP      window -> reg11",
      "99076 GET      reg11[cefSharp] -> reg14",
      "99082 PUT      reg12[0] = reg14",
      "99086 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg12",
      "99090 SET      reg2 -> reg4",
      "99093 SET      reg4 -> reg6",
      "99096 JUMP      99103",
      "99103 PUT      reg5[ls] = reg6",
      "99109 PUSH MEMORY ELEMENT IF INIT      3153 -> reg4",
      "99112 PUT      reg5[adg] = reg4",
      "99118 SET MEMORY ELEMENT IF INIT      3154 = reg5",
      "99121 PUSH MEMORY ELEMENT IF INIT      3153 -> reg4",
      "99124 NOT      reg4 -> reg5",
      "99127 JUMP IF FALSE      reg5 TO: 99145 | 99130"
  ],
  "99098": [
      "99098 SET      NA -> reg6",
      "99103 PUT      reg5[ls] = reg6",
      "99109 PUSH MEMORY ELEMENT IF INIT      3153 -> reg4",
      "99112 PUT      reg5[adg] = reg4",
      "99118 SET MEMORY ELEMENT IF INIT      3154 = reg5",
      "99121 PUSH MEMORY ELEMENT IF INIT      3153 -> reg4",
      "99124 NOT      reg4 -> reg5",
      "99127 JUMP IF FALSE      reg5 TO: 99145 | 99130"
  ],
  "99130": [
      "99130 PUSH MEMORY ELEMENT IF INIT      3151 -> reg6",
      "99133 JUMP IF TRUE      reg6 TO: 99142 | 99136"
  ],
  "99136": [
      "99136 PUSH MEMORY ELEMENT IF INIT      3152 -> reg11",
      "99139 SET      reg11 -> reg6",
      "99142 SET      reg6 -> reg5",
      "99145 SET MEMORY ELEMENT IF INIT      3155 = reg5",
      "99148 EMPTY OBJECT      -> reg4",
      "99150 PUSH MEMORY ELEMENT IF INIT      3155 -> reg5",
      "99153 PUT      reg4[verdict] = reg5",
      "99159 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "99162 GET      reg6[stringify] -> reg9",
      "99168 NEW ARRAY      1 -> reg12",
      "99171 PUSH MEMORY ELEMENT IF INIT      3154 -> reg11",
      "99174 PUT      reg12[0] = reg11",
      "99178 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg12",
      "99182 SET      reg2 -> reg5",
      "99185 PUT      reg4[raw] = reg5",
      "99191 PUT      reg4[error] = false",
      "99197 JUMP OR RETURN VAL      reg4"
  ],
  "99142": [
      "99142 SET      reg6 -> reg5",
      "99145 SET MEMORY ELEMENT IF INIT      3155 = reg5",
      "99148 EMPTY OBJECT      -> reg4",
      "99150 PUSH MEMORY ELEMENT IF INIT      3155 -> reg5",
      "99153 PUT      reg4[verdict] = reg5",
      "99159 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "99162 GET      reg6[stringify] -> reg9",
      "99168 NEW ARRAY      1 -> reg12",
      "99171 PUSH MEMORY ELEMENT IF INIT      3154 -> reg11",
      "99174 PUT      reg12[0] = reg11",
      "99178 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg12",
      "99182 SET      reg2 -> reg5",
      "99185 PUT      reg4[raw] = reg5",
      "99191 PUT      reg4[error] = false",
      "99197 JUMP OR RETURN VAL      reg4"
  ],
  "99145": [
      "99145 SET MEMORY ELEMENT IF INIT      3155 = reg5",
      "99148 EMPTY OBJECT      -> reg4",
      "99150 PUSH MEMORY ELEMENT IF INIT      3155 -> reg5",
      "99153 PUT      reg4[verdict] = reg5",
      "99159 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "99162 GET      reg6[stringify] -> reg9",
      "99168 NEW ARRAY      1 -> reg12",
      "99171 PUSH MEMORY ELEMENT IF INIT      3154 -> reg11",
      "99174 PUT      reg12[0] = reg11",
      "99178 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg12",
      "99182 SET      reg2 -> reg5",
      "99185 PUT      reg4[raw] = reg5",
      "99191 PUT      reg4[error] = false",
      "99197 JUMP OR RETURN VAL      reg4"
  ],
  "99201": [
      "99201 SET I      null",
      "99203 PUSH F.K      -> reg4",
      "99205 VOID F",
      "99206 SET MEMORY ELEMENT      0 = reg4",
      "99209 EMPTY OBJECT      -> reg4",
      "99211 PUT      reg4[verdict] = false",
      "99217 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "99220 GET      reg9[toString] -> reg13",
      "99226 EMPTY ARRAY      -> reg11",
      "99228 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg11",
      "99232 SET      reg2 -> reg5",
      "99235 PUT      reg4[raw] = reg5",
      "99241 PUT      reg4[error] = true",
      "99247 JUMP OR RETURN VAL      reg4"
  ],
  "99374": [
      "99374 PUSH MEMORY ELEMENT IF INIT      3168 -> reg4",
      "99377 PUSH MEMORY ELEMENT IF INIT      3167 -> reg5",
      "99380 GET      reg4[reg5] -> reg7",
      "99384 SET MEMORY ELEMENT IF INIT      3169 = reg7",
      "99387 GET WINDOW PROP      window -> reg5",
      "99392 PUSH MEMORY ELEMENT IF INIT      3169 -> reg7",
      "99395 GET      reg5[reg7] -> reg4",
      "99399 TYPEOF      reg4 -> reg5",
      "99402 STRICT EQUAL      reg5 === function -> reg4",
      "99408 JUMP IF FALSE      reg4 TO: 99612 | 99411"
  ],
  "99411": [
      "99411 PUSH MEMORY ELEMENT IF INIT      3165 -> reg7",
      "99414 GET      reg7[test] -> reg5",
      "99420 NEW ARRAY      1 -> reg8",
      "99423 GET WINDOW PROP      window -> reg10",
      "99428 PUSH MEMORY ELEMENT IF INIT      3169 -> reg12",
      "99431 GET      reg10[reg12] -> reg11",
      "99435 GET      reg11[toString] -> reg10",
      "99441 EMPTY ARRAY      -> reg13",
      "99443 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg13",
      "99447 SET      reg2 -> reg9",
      "99450 PUT      reg8[0] = reg9",
      "99454 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg8",
      "99458 SET      reg2 -> reg4",
      "99461 JUMP IF TRUE      reg4 TO: 99517 | 99464"
  ],
  "99464": [
      "99464 PUSH MEMORY ELEMENT IF INIT      3166 -> reg8",
      "99467 GET      reg8[test] -> reg5",
      "99473 NEW ARRAY      1 -> reg10",
      "99476 GET WINDOW PROP      window -> reg13",
      "99481 PUSH MEMORY ELEMENT IF INIT      3169 -> reg16",
      "99484 GET      reg13[reg16] -> reg14",
      "99488 GET      reg14[toString] -> reg13",
      "99494 EMPTY ARRAY      -> reg15",
      "99496 CALL FUNCTION      OBJ: reg14 FUNC: reg13 ARGS: reg15",
      "99500 SET      reg2 -> reg12",
      "99503 PUT      reg10[0] = reg12",
      "99507 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg10",
      "99511 SET      reg2 -> reg9",
      "99514 SET      reg9 -> reg4",
      "99517 JUMP IF FALSE      reg4 TO: 99612 | 99520"
  ],
  "99517": ["99517 JUMP IF FALSE      reg4 TO: 99612 | 99520"],
  "99520": [
      "99520 PUSH MEMORY ELEMENT IF INIT      3164 -> reg4",
      "99523 GET      reg4[funcs] -> reg10",
      "99529 PUSH MEMORY ELEMENT IF INIT      3169 -> reg4",
      "99532 GET WINDOW PROP      window -> reg13",
      "99537 PUSH MEMORY ELEMENT IF INIT      3169 -> reg15",
      "99540 GET      reg13[reg15] -> reg12",
      "99544 GET      reg12[toString] -> reg13",
      "99550 EMPTY ARRAY      -> reg15",
      "99552 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg15",
      "99556 SET      reg2 -> reg5",
      "99559 GET      reg5[substr] -> reg13",
      "99565 NEW ARRAY      2 -> reg15",
      "99568 PUT      reg15[0] = 0",
      "99572 PUT      reg15[1] = 200",
      "99576 CALL FUNCTION      OBJ: reg5 FUNC: reg13 ARGS: reg15",
      "99580 SET      reg2 -> reg9",
      "99583 PUT      reg10[reg4] = reg9",
      "99587 PUSH MEMORY ELEMENT IF INIT      3164 -> reg4",
      "99590 GET      reg4[count] -> reg9",
      "99596 SET      reg9 -> reg4",
      "99599 ADD      reg91-> reg9",
      "99603 PUSH MEMORY ELEMENT IF INIT      3164 -> reg10",
      "99606 PUT      reg10[count] = reg9",
      "99612 PUSH MEMORY ELEMENT IF INIT      3167 -> reg4",
      "99615 SET      reg4 -> reg9",
      "99618 ADD      reg41-> reg4",
      "99622 SET MEMORY ELEMENT IF INIT      3167 = reg4",
      "99625 JUMP      99355",
      "99355 PUSH MEMORY ELEMENT IF INIT      3167 -> reg7",
      "99358 PUSH MEMORY ELEMENT IF INIT      3168 -> reg9",
      "99361 GET      reg9[length] -> reg4",
      "99367 LESS THAN      reg7 < reg4 -> reg5",
      "99371 JUMP IF FALSE      reg5 TO: 99627 | 99374"
  ],
  "99612": [
      "99612 PUSH MEMORY ELEMENT IF INIT      3167 -> reg4",
      "99615 SET      reg4 -> reg9",
      "99618 ADD      reg41-> reg4",
      "99622 SET MEMORY ELEMENT IF INIT      3167 = reg4",
      "99625 JUMP      99355",
      "99355 PUSH MEMORY ELEMENT IF INIT      3167 -> reg7",
      "99358 PUSH MEMORY ELEMENT IF INIT      3168 -> reg9",
      "99361 GET      reg9[length] -> reg4",
      "99367 LESS THAN      reg7 < reg4 -> reg5",
      "99371 JUMP IF FALSE      reg5 TO: 99627 | 99374"
  ],
  "99627": [
      "99627 EMPTY OBJECT      -> reg4",
      "99629 PUSH MEMORY ELEMENT IF INIT      3164 -> reg9",
      "99632 GET      reg9[count] -> reg10",
      "99638 GREATER THAN      reg10 > 0 -> reg9",
      "99642 PUT      reg4[verdict] = reg9",
      "99648 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "99651 GET      reg9[stringify] -> reg10",
      "99657 NEW ARRAY      1 -> reg15",
      "99660 PUSH MEMORY ELEMENT IF INIT      3164 -> reg16",
      "99663 PUT      reg15[0] = reg16",
      "99667 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg15",
      "99671 SET      reg2 -> reg13",
      "99674 PUT      reg4[raw] = reg13",
      "99680 PUT      reg4[error] = false",
      "99686 JUMP OR RETURN VAL      reg4"
  ],
  "99690": [
      "99690 SET I      null",
      "99692 PUSH F.K      -> reg4",
      "99694 VOID F",
      "99695 SET MEMORY ELEMENT      0 = reg4",
      "99698 EMPTY OBJECT      -> reg4",
      "99700 PUT      reg4[verdict] = false",
      "99706 PUSH MEMORY ELEMENT IF INIT      0 -> reg15",
      "99709 GET      reg15[toString] -> reg13",
      "99715 EMPTY ARRAY      -> reg16",
      "99717 CALL FUNCTION      OBJ: reg15 FUNC: reg13 ARGS: reg16",
      "99721 SET      reg2 -> reg10",
      "99724 PUT      reg4[raw] = reg10",
      "99730 PUT      reg4[error] = true",
      "99736 JUMP OR RETURN VAL      reg4"
  ],
  "99862": [
      "99862 SET I      99987",
      "99864 PUSH F.K      -> reg6",
      "99866 VOID F",
      "99867 SET MEMORY ELEMENT      0 = reg6",
      "99870 SET MEMORY ELEMENT IF INIT      3178 = false",
      "99873 SET I      99987",
      "99875 PUSH MEMORY ELEMENT IF INIT      3176 -> reg4",
      "99878 JUMP IF FALSE      reg4 TO: 99887 | 99881"
  ],
  "99881": [
      "99881 PUSH MEMORY ELEMENT IF INIT      3177 -> reg6",
      "99884 SET      reg6 -> reg4",
      "99887 JUMP IF FALSE      reg4 TO: 99899 | 99890"
  ],
  "99887": ["99887 JUMP IF FALSE      reg4 TO: 99899 | 99890"],
  "99890": [
      "99890 PUSH MEMORY ELEMENT IF INIT      3178 -> reg8",
      "99893 NOT      reg8 -> reg6",
      "99896 SET      reg6 -> reg4",
      "99899 SET MEMORY ELEMENT IF INIT      3179 = reg4",
      "99902 EMPTY OBJECT      -> reg4",
      "99904 PUSH MEMORY ELEMENT IF INIT      3176 -> reg6",
      "99907 PUT      reg4[iip] = reg6",
      "99913 PUSH MEMORY ELEMENT IF INIT      3177 -> reg6",
      "99916 PUT      reg4[tpz] = reg6",
      "99922 PUSH MEMORY ELEMENT IF INIT      3178 -> reg9",
      "99925 PUT      reg4[dt] = reg9",
      "99931 SET MEMORY ELEMENT IF INIT      3180 = reg4",
      "99934 EMPTY OBJECT      -> reg4",
      "99936 PUSH MEMORY ELEMENT IF INIT      3179 -> reg6",
      "99939 PUT      reg4[verdict] = reg6",
      "99945 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "99948 GET      reg11[stringify] -> reg9",
      "99954 NEW ARRAY      1 -> reg12",
      "99957 PUSH MEMORY ELEMENT IF INIT      3180 -> reg10",
      "99960 PUT      reg12[0] = reg10",
      "99964 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg12",
      "99968 SET      reg2 -> reg6",
      "99971 PUT      reg4[raw] = reg6",
      "99977 PUT      reg4[error] = false",
      "99983 JUMP OR RETURN VAL      reg4"
  ],
  "99899": [
      "99899 SET MEMORY ELEMENT IF INIT      3179 = reg4",
      "99902 EMPTY OBJECT      -> reg4",
      "99904 PUSH MEMORY ELEMENT IF INIT      3176 -> reg6",
      "99907 PUT      reg4[iip] = reg6",
      "99913 PUSH MEMORY ELEMENT IF INIT      3177 -> reg6",
      "99916 PUT      reg4[tpz] = reg6",
      "99922 PUSH MEMORY ELEMENT IF INIT      3178 -> reg9",
      "99925 PUT      reg4[dt] = reg9",
      "99931 SET MEMORY ELEMENT IF INIT      3180 = reg4",
      "99934 EMPTY OBJECT      -> reg4",
      "99936 PUSH MEMORY ELEMENT IF INIT      3179 -> reg6",
      "99939 PUT      reg4[verdict] = reg6",
      "99945 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "99948 GET      reg11[stringify] -> reg9",
      "99954 NEW ARRAY      1 -> reg12",
      "99957 PUSH MEMORY ELEMENT IF INIT      3180 -> reg10",
      "99960 PUT      reg12[0] = reg10",
      "99964 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg12",
      "99968 SET      reg2 -> reg6",
      "99971 PUT      reg4[raw] = reg6",
      "99977 PUT      reg4[error] = false",
      "99983 JUMP OR RETURN VAL      reg4"
  ],
  "99987": [
      "99987 SET I      null",
      "99989 PUSH F.K      -> reg8",
      "99991 VOID F",
      "99992 SET MEMORY ELEMENT      0 = reg8",
      "99995 EMPTY OBJECT      -> reg4",
      "99997 PUT      reg4[verdict] = false",
      "100003 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "100006 GET      reg9[toString] -> reg6",
      "100012 EMPTY ARRAY      -> reg10",
      "100014 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg10",
      "100018 SET      reg2 -> reg8",
      "100021 PUT      reg4[raw] = reg8",
      "100027 PUT      reg4[error] = true",
      "100033 JUMP OR RETURN VAL      reg4"
  ],
  "100124": [
      "100124 PUSH MEMORY ELEMENT IF INIT      3191 -> reg5",
      "100127 GET      reg5[stack] -> reg8",
      "100133 GET      reg8[substr] -> reg5",
      "100139 NEW ARRAY      2 -> reg7",
      "100142 PUT      reg7[0] = 0",
      "100146 PUT      reg7[1] = 250",
      "100150 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg7",
      "100154 SET      reg2 -> reg4",
      "100157 JUMP OR RETURN VAL      reg4"
  ],
  "100161": [
      "100161 PUSH MEMORY ELEMENT IF INIT      3187 -> reg4",
      "100164 PUT      reg4[verdict] = true",
      "100170 PUSH MEMORY ELEMENT IF INIT      3191 -> reg4",
      "100173 GET      reg4[stack] -> reg7",
      "100179 GET      reg7[substr] -> reg9",
      "100185 NEW ARRAY      2 -> reg10",
      "100188 PUT      reg10[0] = 0",
      "100192 PUSH MEMORY ELEMENT IF INIT      3193 -> reg4",
      "100195 ADD      reg4100-> reg12",
      "100199 PUT      reg10[1] = reg12",
      "100203 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "100207 SET      reg2 -> reg5",
      "100210 JUMP OR RETURN VAL      reg5"
  ],
  "100387": [
      "100387 SET I      100665",
      "100389 PUSH F.K      -> reg4",
      "100391 VOID F",
      "100392 SET MEMORY ELEMENT      0 = reg4",
      "100395 PUSH MEMORY ELEMENT IF INIT      3188 -> reg4",
      "100398 PUSH MEMORY ELEMENT IF INIT      3186 -> reg9",
      "100401 NEW ARRAY      2 -> reg7",
      "100404 PUSH MEMORY ELEMENT IF INIT      0 -> reg11",
      "100407 PUT      reg7[0] = reg11",
      "100411 PUT      reg7[1] = Proxy",
      "100417 CALL FUNCTION      PTR: reg9 MEM: reg7",
      "100421 SET      reg2 -> reg5",
      "100424 PUT      reg4[ce] = reg5",
      "100430 SET I      100665",
      "100432 SET I      100557",
      "100434 PUSH MEMORY ELEMENT IF INIT      3188 -> reg4",
      "100437 GET WINDOW PROP      String -> reg7",
      "100442 GET      reg7[prototype] -> reg10",
      "100448 GET      reg10[toString] -> reg12",
      "100454 GET      reg12[call] -> reg11",
      "100460 NEW ARRAY      1 -> reg7",
      "100463 GET WINDOW PROP      Object -> reg13",
      "100468 GET      reg13[getOwnPropertyDescriptor] -> reg10",
      "100474 NEW ARRAY      2 -> reg14",
      "100477 GET WINDOW PROP      Notification -> reg15",
      "100482 PUT      reg14[0] = reg15",
      "100486 PUT      reg14[1] = permission",
      "100492 CALL FUNCTION      OBJ: reg13 FUNC: reg10 ARGS: reg14",
      "100496 SET      reg2 -> reg9",
      "100499 GET      reg9[get] -> reg16",
      "100505 PUT      reg7[0] = reg16",
      "100509 CALL FUNCTION      OBJ: reg12 FUNC: reg11 ARGS: reg7",
      "100513 SET      reg2 -> reg5",
      "100516 PUT      reg4[pg] = reg5",
      "100522 PUSH MEMORY ELEMENT IF INIT      3188 -> reg5",
      "100525 PUSH MEMORY ELEMENT IF INIT      3187 -> reg9",
      "100528 GET      reg9[raw] -> reg4",
      "100534 ADD      unexpected: NaN-> reg9",
      "100540 PUT      reg5[pg] = reg9",
      "100546 PUSH MEMORY ELEMENT IF INIT      3187 -> reg4",
      "100549 PUT      reg4[error] = true",
      "100555 JUMP      100600",
      "100600 SET I      100665",
      "100602 PUSH MEMORY ELEMENT IF INIT      3187 -> reg5",
      "100605 GET      reg5[error] -> reg7",
      "100611 JUMP IF FALSE      reg7 TO: 100623 | 100614"
  ],
  "100557": [
      "100557 SET I      100665",
      "100559 PUSH F.K      -> reg4",
      "100561 VOID F",
      "100562 SET MEMORY ELEMENT      0 = reg4",
      "100565 PUSH MEMORY ELEMENT IF INIT      3188 -> reg5",
      "100568 PUSH MEMORY ELEMENT IF INIT      3186 -> reg11",
      "100571 NEW ARRAY      2 -> reg7",
      "100574 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "100577 PUT      reg7[0] = reg10",
      "100581 PUT      reg7[1] = Proxy",
      "100587 CALL FUNCTION      PTR: reg11 MEM: reg7",
      "100591 SET      reg2 -> reg4",
      "100594 PUT      reg5[pg] = reg4",
      "100600 SET I      100665",
      "100602 PUSH MEMORY ELEMENT IF INIT      3187 -> reg5",
      "100605 GET      reg5[error] -> reg7",
      "100611 JUMP IF FALSE      reg7 TO: 100623 | 100614"
  ],
  "100614": [
      "100614 PUSH MEMORY ELEMENT IF INIT      3187 -> reg4",
      "100617 PUT      reg4[verdict] = false",
      "100623 PUSH MEMORY ELEMENT IF INIT      3187 -> reg5",
      "100626 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "100629 GET      reg7[stringify] -> reg9",
      "100635 NEW ARRAY      1 -> reg11",
      "100638 PUSH MEMORY ELEMENT IF INIT      3188 -> reg10",
      "100641 PUT      reg11[0] = reg10",
      "100645 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg11",
      "100649 SET      reg2 -> reg4",
      "100652 PUT      reg5[raw] = reg4",
      "100658 PUSH MEMORY ELEMENT IF INIT      3187 -> reg5",
      "100661 JUMP OR RETURN VAL      reg5"
  ],
  "100623": [
      "100623 PUSH MEMORY ELEMENT IF INIT      3187 -> reg5",
      "100626 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "100629 GET      reg7[stringify] -> reg9",
      "100635 NEW ARRAY      1 -> reg11",
      "100638 PUSH MEMORY ELEMENT IF INIT      3188 -> reg10",
      "100641 PUT      reg11[0] = reg10",
      "100645 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg11",
      "100649 SET      reg2 -> reg4",
      "100652 PUT      reg5[raw] = reg4",
      "100658 PUSH MEMORY ELEMENT IF INIT      3187 -> reg5",
      "100661 JUMP OR RETURN VAL      reg5"
  ],
  "100665": [
      "100665 SET I      null",
      "100667 PUSH F.K      -> reg5",
      "100669 VOID F",
      "100670 SET MEMORY ELEMENT      0 = reg5",
      "100673 EMPTY OBJECT      -> reg4",
      "100675 PUT      reg4[verdict] = false",
      "100681 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "100684 GET      reg9[toString] -> reg11",
      "100690 EMPTY ARRAY      -> reg10",
      "100692 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg10",
      "100696 SET      reg2 -> reg5",
      "100699 PUT      reg4[raw] = reg5",
      "100705 PUT      reg4[error] = true",
      "100711 JUMP OR RETURN VAL      reg4"
  ],
  "100879": [
      "100879 PUSH MEMORY ELEMENT IF INIT      3200 -> reg5",
      "100882 PUT      reg5[verdict] = true",
      "100888 JUMP      100925",
      "100925 SET I      null",
      "100927 PUSH MEMORY ELEMENT IF INIT      3200 -> reg6",
      "100930 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "100933 GET      reg9[stringify] -> reg5",
      "100939 NEW ARRAY      1 -> reg8",
      "100942 PUSH MEMORY ELEMENT IF INIT      3200 -> reg10",
      "100945 GET      reg10[raw] -> reg11",
      "100951 PUT      reg8[0] = reg11",
      "100955 CALL FUNCTION      OBJ: reg9 FUNC: reg5 ARGS: reg8",
      "100959 SET      reg2 -> reg7",
      "100962 PUT      reg6[raw] = reg7",
      "100968 PUSH MEMORY ELEMENT IF INIT      3200 -> reg7",
      "100971 JUMP OR RETURN VAL      reg7"
  ],
  "100888": [
      "100888 JUMP      100925",
      "100925 SET I      null",
      "100927 PUSH MEMORY ELEMENT IF INIT      3200 -> reg6",
      "100930 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "100933 GET      reg9[stringify] -> reg5",
      "100939 NEW ARRAY      1 -> reg8",
      "100942 PUSH MEMORY ELEMENT IF INIT      3200 -> reg10",
      "100945 GET      reg10[raw] -> reg11",
      "100951 PUT      reg8[0] = reg11",
      "100955 CALL FUNCTION      OBJ: reg9 FUNC: reg5 ARGS: reg8",
      "100959 SET      reg2 -> reg7",
      "100962 PUT      reg6[raw] = reg7",
      "100968 PUSH MEMORY ELEMENT IF INIT      3200 -> reg7",
      "100971 JUMP OR RETURN VAL      reg7"
  ],
  "100890": [
      "100890 SET I      null",
      "100892 PUSH F.K      -> reg6",
      "100894 VOID F",
      "100895 SET MEMORY ELEMENT      0 = reg6",
      "100898 PUSH MEMORY ELEMENT IF INIT      3200 -> reg5",
      "100901 PUT      reg5[error] = true",
      "100907 PUSH MEMORY ELEMENT IF INIT      3200 -> reg5",
      "100910 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "100913 GET      reg6[stack] -> reg8",
      "100919 PUT      reg5[raw] = reg8",
      "100925 SET I      null",
      "100927 PUSH MEMORY ELEMENT IF INIT      3200 -> reg6",
      "100930 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "100933 GET      reg9[stringify] -> reg5",
      "100939 NEW ARRAY      1 -> reg8",
      "100942 PUSH MEMORY ELEMENT IF INIT      3200 -> reg10",
      "100945 GET      reg10[raw] -> reg11",
      "100951 PUT      reg8[0] = reg11",
      "100955 CALL FUNCTION      OBJ: reg9 FUNC: reg5 ARGS: reg8",
      "100959 SET      reg2 -> reg7",
      "100962 PUT      reg6[raw] = reg7",
      "100968 PUSH MEMORY ELEMENT IF INIT      3200 -> reg7",
      "100971 JUMP OR RETURN VAL      reg7"
  ],
  "101118": [
      "101118 PUSH MEMORY ELEMENT IF INIT      3209 -> reg4",
      "101121 PUSH MEMORY ELEMENT IF INIT      3208 -> reg9",
      "101124 GET      reg4[reg9] -> reg6",
      "101128 SET MEMORY ELEMENT IF INIT      3210 = reg6",
      "101131 PUSH MEMORY ELEMENT IF INIT      3206 -> reg6",
      "101134 PUSH MEMORY ELEMENT IF INIT      3210 -> reg4",
      "101137 GET      reg4[0] -> reg7",
      "101141 EMPTY OBJECT      -> reg4",
      "101143 PUT      reg4[a] = ",
      "101151 PUT      reg4[i] = ",
      "101159 PUT      reg6[reg7] = reg4",
      "101163 PUSH MEMORY ELEMENT IF INIT      3207 -> reg6",
      "101166 NEW ARRAY      2 -> reg7",
      "101169 PUSH MEMORY ELEMENT IF INIT      3204 -> reg8",
      "101172 PUT      reg7[0] = reg8",
      "101176 GET WINDOW PROP      navigator -> reg8",
      "101181 PUSH MEMORY ELEMENT IF INIT      3210 -> reg10",
      "101184 GET      reg8[reg10] -> reg9",
      "101188 PUT      reg7[1] = reg9",
      "101192 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "101196 SET      reg2 -> reg4",
      "101199 PUSH MEMORY ELEMENT IF INIT      3206 -> reg6",
      "101202 PUSH MEMORY ELEMENT IF INIT      3210 -> reg7",
      "101205 GET      reg7[0] -> reg8",
      "101209 GET      reg6[reg8] -> reg4",
      "101213 PUSH MEMORY ELEMENT IF INIT      3204 -> reg8",
      "101216 GET      reg8[srcdoc] -> reg7",
      "101222 GET      reg7[toString] -> reg8",
      "101228 EMPTY ARRAY      -> reg9",
      "101230 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "101234 SET      reg2 -> reg6",
      "101237 PUT      reg4[i] = reg6",
      "101243 PUSH MEMORY ELEMENT IF INIT      3206 -> reg4",
      "101246 PUSH MEMORY ELEMENT IF INIT      3210 -> reg9",
      "101249 GET      reg9[0] -> reg6",
      "101253 GET      reg4[reg6] -> reg8",
      "101257 GET WINDOW PROP      navigator -> reg4",
      "101262 PUSH MEMORY ELEMENT IF INIT      3210 -> reg13",
      "101265 GET      reg4[reg13] -> reg11",
      "101269 GET      reg11[toString] -> reg4",
      "101275 EMPTY ARRAY      -> reg9",
      "101277 CALL FUNCTION      OBJ: reg11 FUNC: reg4 ARGS: reg9",
      "101281 SET      reg2 -> reg6",
      "101284 PUT      reg8[a] = reg6",
      "101290 PUSH MEMORY ELEMENT IF INIT      3204 -> reg6",
      "101293 GET      reg6[srcdoc] -> reg8",
      "101299 GET      reg8[toString] -> reg10",
      "101305 EMPTY ARRAY      -> reg6",
      "101307 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg6",
      "101311 SET      reg2 -> reg4",
      "101314 GET WINDOW PROP      navigator -> reg6",
      "101319 PUSH MEMORY ELEMENT IF INIT      3210 -> reg12",
      "101322 GET      reg6[reg12] -> reg10",
      "101326 GET      reg10[toString] -> reg6",
      "101332 EMPTY ARRAY      -> reg14",
      "101334 CALL FUNCTION      OBJ: reg10 FUNC: reg6 ARGS: reg14",
      "101338 SET      reg2 -> reg9",
      "101341 STRICT NOT EQUAL      reg4 !== reg9 -> reg6",
      "101345 JUMP IF FALSE      reg6 TO: 101351 | 101348"
  ],
  "101348": [
      "101348 SET MEMORY ELEMENT IF INIT      3205 = true",
      "101351 PUSH MEMORY ELEMENT IF INIT      3208 -> reg4",
      "101354 SET      reg4 -> reg6",
      "101357 ADD      reg41-> reg4",
      "101361 SET MEMORY ELEMENT IF INIT      3208 = reg4",
      "101364 JUMP      101099",
      "101099 PUSH MEMORY ELEMENT IF INIT      3208 -> reg4",
      "101102 PUSH MEMORY ELEMENT IF INIT      3209 -> reg6",
      "101105 GET      reg6[length] -> reg7",
      "101111 LESS THAN      reg4 < reg7 -> reg10",
      "101115 JUMP IF FALSE      reg10 TO: 101366 | 101118"
  ],
  "101351": [
      "101351 PUSH MEMORY ELEMENT IF INIT      3208 -> reg4",
      "101354 SET      reg4 -> reg6",
      "101357 ADD      reg41-> reg4",
      "101361 SET MEMORY ELEMENT IF INIT      3208 = reg4",
      "101364 JUMP      101099",
      "101099 PUSH MEMORY ELEMENT IF INIT      3208 -> reg4",
      "101102 PUSH MEMORY ELEMENT IF INIT      3209 -> reg6",
      "101105 GET      reg6[length] -> reg7",
      "101111 LESS THAN      reg4 < reg7 -> reg10",
      "101115 JUMP IF FALSE      reg10 TO: 101366 | 101118"
  ],
  "101366": [
      "101366 EMPTY OBJECT      -> reg4",
      "101368 PUSH MEMORY ELEMENT IF INIT      3205 -> reg12",
      "101371 PUT      reg4[verdict] = reg12",
      "101377 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "101380 GET      reg9[stringify] -> reg12",
      "101386 NEW ARRAY      1 -> reg14",
      "101389 PUSH MEMORY ELEMENT IF INIT      3206 -> reg13",
      "101392 PUT      reg14[0] = reg13",
      "101396 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg14",
      "101400 SET      reg2 -> reg6",
      "101403 PUT      reg4[raw] = reg6",
      "101409 PUT      reg4[error] = false",
      "101415 JUMP OR RETURN VAL      reg4"
  ],
  "101419": [
      "101419 SET I      null",
      "101421 PUSH F.K      -> reg4",
      "101423 VOID F",
      "101424 SET MEMORY ELEMENT      0 = reg4",
      "101427 EMPTY OBJECT      -> reg6",
      "101429 PUT      reg6[verdict] = false",
      "101435 PUSH MEMORY ELEMENT IF INIT      0 -> reg13",
      "101438 GET      reg13[toString] -> reg17",
      "101444 EMPTY ARRAY      -> reg14",
      "101446 CALL FUNCTION      OBJ: reg13 FUNC: reg17 ARGS: reg14",
      "101450 SET      reg2 -> reg12",
      "101453 PUT      reg6[raw] = reg12",
      "101459 PUT      reg6[error] = true",
      "101465 JUMP OR RETURN VAL      reg6"
  ],
  "101567": [
      "101567 PUSH MEMORY ELEMENT IF INIT      3216 -> reg7",
      "101570 PUSH MEMORY ELEMENT IF INIT      3217 -> reg9",
      "101573 GET      reg7[reg9] -> reg10",
      "101577 GET      reg10[src] -> reg8",
      "101583 GET      reg8[includes] -> reg7",
      "101589 NEW ARRAY      1 -> reg6",
      "101592 PUT      reg6[0] = moz-extension",
      "101598 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg6",
      "101602 SET      reg2 -> reg4",
      "101605 JUMP IF TRUE      reg4 TO: 101649 | 101608"
  ],
  "101608": [
      "101608 PUSH MEMORY ELEMENT IF INIT      3216 -> reg7",
      "101611 PUSH MEMORY ELEMENT IF INIT      3217 -> reg11",
      "101614 GET      reg7[reg11] -> reg9",
      "101618 GET      reg9[src] -> reg7",
      "101624 GET      reg7[includes] -> reg12",
      "101630 NEW ARRAY      1 -> reg9",
      "101633 PUT      reg9[0] = chrome-extension",
      "101639 CALL FUNCTION      OBJ: reg7 FUNC: reg12 ARGS: reg9",
      "101643 SET      reg2 -> reg6",
      "101646 SET      reg6 -> reg4",
      "101649 JUMP IF FALSE      reg4 TO: 101697 | 101652"
  ],
  "101649": ["101649 JUMP IF FALSE      reg4 TO: 101697 | 101652"],
  "101652": [
      "101652 PUSH MEMORY ELEMENT IF INIT      3215 -> reg9",
      "101655 GET      reg9[raw] -> reg10",
      "101661 GET      reg10[push] -> reg11",
      "101667 NEW ARRAY      1 -> reg6",
      "101670 PUSH MEMORY ELEMENT IF INIT      3216 -> reg9",
      "101673 PUSH MEMORY ELEMENT IF INIT      3217 -> reg14",
      "101676 GET      reg9[reg14] -> reg17",
      "101680 GET      reg17[src] -> reg12",
      "101686 PUT      reg6[0] = reg12",
      "101690 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg6",
      "101694 SET      reg2 -> reg4",
      "101697 PUSH MEMORY ELEMENT IF INIT      3217 -> reg4",
      "101700 SET      reg4 -> reg6",
      "101703 ADD      reg41-> reg4",
      "101707 SET MEMORY ELEMENT IF INIT      3217 = reg4",
      "101710 JUMP      101548",
      "101548 PUSH MEMORY ELEMENT IF INIT      3217 -> reg4",
      "101551 PUSH MEMORY ELEMENT IF INIT      3216 -> reg6",
      "101554 GET      reg6[length] -> reg7",
      "101560 LESS THAN      reg4 < reg7 -> reg8",
      "101564 JUMP IF FALSE      reg8 TO: 101712 | 101567"
  ],
  "101697": [
      "101697 PUSH MEMORY ELEMENT IF INIT      3217 -> reg4",
      "101700 SET      reg4 -> reg6",
      "101703 ADD      reg41-> reg4",
      "101707 SET MEMORY ELEMENT IF INIT      3217 = reg4",
      "101710 JUMP      101548",
      "101548 PUSH MEMORY ELEMENT IF INIT      3217 -> reg4",
      "101551 PUSH MEMORY ELEMENT IF INIT      3216 -> reg6",
      "101554 GET      reg6[length] -> reg7",
      "101560 LESS THAN      reg4 < reg7 -> reg8",
      "101564 JUMP IF FALSE      reg8 TO: 101712 | 101567"
  ],
  "101712": [
      "101712 PUSH MEMORY ELEMENT IF INIT      3215 -> reg6",
      "101715 PUSH MEMORY ELEMENT IF INIT      280 -> reg4",
      "101718 GET      reg4[stringify] -> reg11",
      "101724 NEW ARRAY      1 -> reg14",
      "101727 PUSH MEMORY ELEMENT IF INIT      3215 -> reg13",
      "101730 GET      reg13[raw] -> reg12",
      "101736 PUT      reg14[0] = reg12",
      "101740 CALL FUNCTION      OBJ: reg4 FUNC: reg11 ARGS: reg14",
      "101744 SET      reg2 -> reg9",
      "101747 PUT      reg6[raw] = reg9",
      "101753 PUSH MEMORY ELEMENT IF INIT      3215 -> reg6",
      "101756 JUMP OR RETURN VAL      reg6"
  ],
  "101760": [
      "101760 SET I      null",
      "101762 PUSH F.K      -> reg9",
      "101764 VOID F",
      "101765 SET MEMORY ELEMENT      0 = reg9",
      "101768 PUSH MEMORY ELEMENT IF INIT      3215 -> reg6",
      "101771 PUT      reg6[error] = true",
      "101777 PUSH MEMORY ELEMENT IF INIT      3215 -> reg6",
      "101780 PUSH MEMORY ELEMENT IF INIT      0 -> reg11",
      "101783 GET      reg11[toString] -> reg12",
      "101789 EMPTY ARRAY      -> reg15",
      "101791 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg15",
      "101795 SET      reg2 -> reg9",
      "101798 PUT      reg6[errStr] = reg9",
      "101804 PUSH MEMORY ELEMENT IF INIT      3215 -> reg6",
      "101807 PUSH MEMORY ELEMENT IF INIT      280 -> reg14",
      "101810 GET      reg14[stringify] -> reg15",
      "101816 NEW ARRAY      1 -> reg12",
      "101819 PUSH MEMORY ELEMENT IF INIT      3215 -> reg13",
      "101822 GET      reg13[raw] -> reg16",
      "101828 PUT      reg12[0] = reg16",
      "101832 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg12",
      "101836 SET      reg2 -> reg9",
      "101839 PUT      reg6[raw] = reg9",
      "101845 PUSH MEMORY ELEMENT IF INIT      3215 -> reg6",
      "101848 JUMP OR RETURN VAL      reg6"
  ],
  "101997": [
      "101997 PUSH MEMORY ELEMENT IF INIT      3227 -> reg7",
      "102000 GET      reg7[value] -> reg10",
      "102006 SET MEMORY ELEMENT IF INIT      3228 = reg10",
      "102009 PUSH MEMORY ELEMENT IF INIT      3228 -> reg7",
      "102012 GET      reg7[src] -> reg9",
      "102018 SET MEMORY ELEMENT IF INIT      3229 = reg9",
      "102021 PUSH MEMORY ELEMENT IF INIT      3229 -> reg10",
      "102024 GET      reg10[indexOf] -> reg11",
      "102030 NEW ARRAY      1 -> reg7",
      "102033 PUT      reg7[0] = 149e9513-01fa-4fb0-aad4-566afd725d1b/2d206a39-8ed7-437e-a3be-862e0f06eea3",
      "102039 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg7",
      "102043 SET      reg2 -> reg9",
      "102046 SUBTRACT      0 - 1 -> reg7",
      "102050 STRICT NOT EQUAL      reg9 !== reg7 -> reg11",
      "102054 JUMP IF FALSE      reg11 TO: 102059 | 102057"
  ],
  "102057": [
      "102057 JUMP      102334",
      "102334 JUMP      101964",
      "101964 PUSH MEMORY ELEMENT IF INIT      3226 -> reg8",
      "101967 GET      reg8[n] -> reg10",
      "101973 EMPTY ARRAY      -> reg12",
      "101975 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg12",
      "101979 SET      reg2 -> reg7",
      "101982 SET MEMORY ELEMENT IF INIT      3227 = reg7",
      "101985 GET      reg7[done] -> reg10",
      "101991 NOT      reg10 -> reg7",
      "101994 JUMP IF FALSE      reg7 TO: 102336 | 101997"
  ],
  "102059": [
      "102059 PUSH MEMORY ELEMENT IF INIT      3229 -> reg7",
      "102062 STRICT EQUAL      reg7 ===  -> reg11",
      "102068 JUMP IF FALSE      reg11 TO: 102107 | 102071"
  ],
  "102071": [
      "102071 PUSH MEMORY ELEMENT IF INIT      3228 -> reg9",
      "102074 GET      reg9[innerHTML] -> reg7",
      "102080 GET      reg7[substr] -> reg9",
      "102086 NEW ARRAY      2 -> reg11",
      "102089 PUT      reg11[0] = 0",
      "102093 PUT      reg11[1] = 250",
      "102097 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg11",
      "102101 SET      reg2 -> reg12",
      "102104 SET MEMORY ELEMENT IF INIT      3229 = reg12",
      "102107 PUSH MEMORY ELEMENT IF INIT      3228 -> reg12",
      "102110 GET      reg12[baseURI] -> reg11",
      "102116 GET      reg11[indexOf] -> reg12",
      "102122 NEW ARRAY      1 -> reg17",
      "102125 PUT      reg17[0] = dragon://",
      "102131 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg17",
      "102135 SET      reg2 -> reg9",
      "102138 SUBTRACT      0 - 1 -> reg14",
      "102142 STRICT NOT EQUAL      reg9 !== reg14 -> reg13",
      "102146 JUMP IF TRUE      reg13 TO: 102191 | 102149"
  ],
  "102107": [
      "102107 PUSH MEMORY ELEMENT IF INIT      3228 -> reg12",
      "102110 GET      reg12[baseURI] -> reg11",
      "102116 GET      reg11[indexOf] -> reg12",
      "102122 NEW ARRAY      1 -> reg17",
      "102125 PUT      reg17[0] = dragon://",
      "102131 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg17",
      "102135 SET      reg2 -> reg9",
      "102138 SUBTRACT      0 - 1 -> reg14",
      "102142 STRICT NOT EQUAL      reg9 !== reg14 -> reg13",
      "102146 JUMP IF TRUE      reg13 TO: 102191 | 102149"
  ],
  "102149": [
      "102149 PUSH MEMORY ELEMENT IF INIT      3228 -> reg9",
      "102152 GET      reg9[baseURI] -> reg14",
      "102158 GET      reg14[indexOf] -> reg9",
      "102164 NEW ARRAY      1 -> reg15",
      "102167 PUT      reg15[0] = file://",
      "102173 CALL FUNCTION      OBJ: reg14 FUNC: reg9 ARGS: reg15",
      "102177 SET      reg2 -> reg12",
      "102180 SUBTRACT      0 - 1 -> reg9",
      "102184 STRICT NOT EQUAL      reg12 !== reg9 -> reg16",
      "102188 SET      reg16 -> reg13",
      "102191 JUMP IF TRUE      reg13 TO: 102236 | 102194"
  ],
  "102191": ["102191 JUMP IF TRUE      reg13 TO: 102236 | 102194"],
  "102194": [
      "102194 PUSH MEMORY ELEMENT IF INIT      3228 -> reg12",
      "102197 GET      reg12[baseURI] -> reg15",
      "102203 GET      reg15[indexOf] -> reg12",
      "102209 NEW ARRAY      1 -> reg16",
      "102212 PUT      reg16[0] = ://localhost",
      "102218 CALL FUNCTION      OBJ: reg15 FUNC: reg12 ARGS: reg16",
      "102222 SET      reg2 -> reg9",
      "102225 SUBTRACT      0 - 1 -> reg12",
      "102229 STRICT NOT EQUAL      reg9 !== reg12 -> reg17",
      "102233 SET      reg17 -> reg13",
      "102236 JUMP IF TRUE      reg13 TO: 102279 | 102239"
  ],
  "102236": ["102236 JUMP IF TRUE      reg13 TO: 102279 | 102239"],
  "102239": [
      "102239 NEW REGEXP      ^[a-z]+:\\/\\/(\\d{1,3}\\.){3}\\d{1,3} ,  -> reg12",
      "102247 GET      reg12[test] -> reg16",
      "102253 NEW ARRAY      1 -> reg19",
      "102256 PUSH MEMORY ELEMENT IF INIT      3228 -> reg20",
      "102259 GET      reg20[baseURI] -> reg17",
      "102265 PUT      reg19[0] = reg17",
      "102269 CALL FUNCTION      OBJ: reg12 FUNC: reg16 ARGS: reg19",
      "102273 SET      reg2 -> reg9",
      "102276 SET      reg9 -> reg13",
      "102279 JUMP IF FALSE      reg13 TO: 102285 | 102282"
  ],
  "102279": ["102279 JUMP IF FALSE      reg13 TO: 102285 | 102282"],
  "102282": [
      "102282 SET MEMORY ELEMENT IF INIT      3225 = true",
      "102285 PUSH MEMORY ELEMENT IF INIT      3223 -> reg17",
      "102288 GET      reg17[push] -> reg9",
      "102294 NEW ARRAY      1 -> reg16",
      "102297 EMPTY OBJECT      -> reg18",
      "102299 PUSH MEMORY ELEMENT IF INIT      3228 -> reg19",
      "102302 GET      reg19[baseURI] -> reg20",
      "102308 PUT      reg18[baseURI] = reg20",
      "102314 PUSH MEMORY ELEMENT IF INIT      3229 -> reg20",
      "102317 PUT      reg18[src] = reg20",
      "102323 PUT      reg16[0] = reg18",
      "102327 CALL FUNCTION      OBJ: reg17 FUNC: reg9 ARGS: reg16",
      "102331 SET      reg2 -> reg13",
      "102334 JUMP      101964",
      "101964 PUSH MEMORY ELEMENT IF INIT      3226 -> reg8",
      "101967 GET      reg8[n] -> reg10",
      "101973 EMPTY ARRAY      -> reg12",
      "101975 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg12",
      "101979 SET      reg2 -> reg7",
      "101982 SET MEMORY ELEMENT IF INIT      3227 = reg7",
      "101985 GET      reg7[done] -> reg10",
      "101991 NOT      reg10 -> reg7",
      "101994 JUMP IF FALSE      reg7 TO: 102336 | 101997"
  ],
  "102285": [
      "102285 PUSH MEMORY ELEMENT IF INIT      3223 -> reg17",
      "102288 GET      reg17[push] -> reg9",
      "102294 NEW ARRAY      1 -> reg16",
      "102297 EMPTY OBJECT      -> reg18",
      "102299 PUSH MEMORY ELEMENT IF INIT      3228 -> reg19",
      "102302 GET      reg19[baseURI] -> reg20",
      "102308 PUT      reg18[baseURI] = reg20",
      "102314 PUSH MEMORY ELEMENT IF INIT      3229 -> reg20",
      "102317 PUT      reg18[src] = reg20",
      "102323 PUT      reg16[0] = reg18",
      "102327 CALL FUNCTION      OBJ: reg17 FUNC: reg9 ARGS: reg16",
      "102331 SET      reg2 -> reg13",
      "102334 JUMP      101964",
      "101964 PUSH MEMORY ELEMENT IF INIT      3226 -> reg8",
      "101967 GET      reg8[n] -> reg10",
      "101973 EMPTY ARRAY      -> reg12",
      "101975 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg12",
      "101979 SET      reg2 -> reg7",
      "101982 SET MEMORY ELEMENT IF INIT      3227 = reg7",
      "101985 GET      reg7[done] -> reg10",
      "101991 NOT      reg10 -> reg7",
      "101994 JUMP IF FALSE      reg7 TO: 102336 | 101997"
  ],
  "102336": [
      "102336 JUMP      102372",
      "102372 SET I      102450",
      "102374 SET N      null",
      "102376 PUSH MEMORY ELEMENT IF INIT      3226 -> reg18",
      "102379 GET      reg18[f] -> reg19",
      "102385 EMPTY ARRAY      -> reg9",
      "102387 CALL FUNCTION      OBJ: reg18 FUNC: reg19 ARGS: reg9",
      "102391 SET      reg2 -> reg16",
      "102394 HANDLE TRACE OR JUMP OR RETURN C",
      "102395 SET I      102450",
      "102397 EMPTY OBJECT      -> reg9",
      "102399 PUSH MEMORY ELEMENT IF INIT      3225 -> reg16",
      "102402 PUT      reg9[verdict] = reg16",
      "102408 PUSH MEMORY ELEMENT IF INIT      280 -> reg19",
      "102411 GET      reg19[stringify] -> reg20",
      "102417 NEW ARRAY      1 -> reg21",
      "102420 PUSH MEMORY ELEMENT IF INIT      3223 -> reg22",
      "102423 PUT      reg21[0] = reg22",
      "102427 CALL FUNCTION      OBJ: reg19 FUNC: reg20 ARGS: reg21",
      "102431 SET      reg2 -> reg16",
      "102434 PUT      reg9[raw] = reg16",
      "102440 PUT      reg9[error] = false",
      "102446 JUMP OR RETURN VAL      reg9"
  ],
  "102338": [
      "102338 SET I      102372",
      "102340 PUSH F.K      -> reg9",
      "102342 VOID F",
      "102343 SET MEMORY ELEMENT      0 = reg9",
      "102346 PUSH MEMORY ELEMENT IF INIT      3226 -> reg13",
      "102349 GET      reg13[e] -> reg16",
      "102355 NEW ARRAY      1 -> reg18",
      "102358 PUSH MEMORY ELEMENT IF INIT      0 -> reg19",
      "102361 PUT      reg18[0] = reg19",
      "102365 CALL FUNCTION      OBJ: reg13 FUNC: reg16 ARGS: reg18",
      "102369 SET      reg2 -> reg9",
      "102372 SET I      102450",
      "102374 SET N      null",
      "102376 PUSH MEMORY ELEMENT IF INIT      3226 -> reg18",
      "102379 GET      reg18[f] -> reg19",
      "102385 EMPTY ARRAY      -> reg9",
      "102387 CALL FUNCTION      OBJ: reg18 FUNC: reg19 ARGS: reg9",
      "102391 SET      reg2 -> reg16",
      "102394 HANDLE TRACE OR JUMP OR RETURN C",
      "102395 SET I      102450",
      "102397 EMPTY OBJECT      -> reg9",
      "102399 PUSH MEMORY ELEMENT IF INIT      3225 -> reg16",
      "102402 PUT      reg9[verdict] = reg16",
      "102408 PUSH MEMORY ELEMENT IF INIT      280 -> reg19",
      "102411 GET      reg19[stringify] -> reg20",
      "102417 NEW ARRAY      1 -> reg21",
      "102420 PUSH MEMORY ELEMENT IF INIT      3223 -> reg22",
      "102423 PUT      reg21[0] = reg22",
      "102427 CALL FUNCTION      OBJ: reg19 FUNC: reg20 ARGS: reg21",
      "102431 SET      reg2 -> reg16",
      "102434 PUT      reg9[raw] = reg16",
      "102440 PUT      reg9[error] = false",
      "102446 JUMP OR RETURN VAL      reg9"
  ],
  "102372": [
      "102372 SET I      102450",
      "102374 SET N      null",
      "102376 PUSH MEMORY ELEMENT IF INIT      3226 -> reg18",
      "102379 GET      reg18[f] -> reg19",
      "102385 EMPTY ARRAY      -> reg9",
      "102387 CALL FUNCTION      OBJ: reg18 FUNC: reg19 ARGS: reg9",
      "102391 SET      reg2 -> reg16",
      "102394 HANDLE TRACE OR JUMP OR RETURN C",
      "102395 SET I      102450",
      "102397 EMPTY OBJECT      -> reg9",
      "102399 PUSH MEMORY ELEMENT IF INIT      3225 -> reg16",
      "102402 PUT      reg9[verdict] = reg16",
      "102408 PUSH MEMORY ELEMENT IF INIT      280 -> reg19",
      "102411 GET      reg19[stringify] -> reg20",
      "102417 NEW ARRAY      1 -> reg21",
      "102420 PUSH MEMORY ELEMENT IF INIT      3223 -> reg22",
      "102423 PUT      reg21[0] = reg22",
      "102427 CALL FUNCTION      OBJ: reg19 FUNC: reg20 ARGS: reg21",
      "102431 SET      reg2 -> reg16",
      "102434 PUT      reg9[raw] = reg16",
      "102440 PUT      reg9[error] = false",
      "102446 JUMP OR RETURN VAL      reg9"
  ],
  "102450": [
      "102450 SET I      null",
      "102452 PUSH F.K      -> reg16",
      "102454 VOID F",
      "102455 SET MEMORY ELEMENT      0 = reg16",
      "102458 EMPTY OBJECT      -> reg9",
      "102460 PUT      reg9[verdict] = false",
      "102466 PUSH MEMORY ELEMENT IF INIT      0 -> reg21",
      "102469 GET      reg21[toString] -> reg20",
      "102475 EMPTY ARRAY      -> reg23",
      "102477 CALL FUNCTION      OBJ: reg21 FUNC: reg20 ARGS: reg23",
      "102481 SET      reg2 -> reg16",
      "102484 PUT      reg9[raw] = reg16",
      "102490 PUT      reg9[error] = true",
      "102496 JUMP OR RETURN VAL      reg9"
  ],
  "102599": [
      "102599 PUSH MEMORY ELEMENT IF INIT      3242 -> reg4",
      "102602 PUSH MEMORY ELEMENT IF INIT      3241 -> reg7",
      "102605 GET      reg4[reg7] -> reg5",
      "102609 SET MEMORY ELEMENT IF INIT      3243 = reg5",
      "102612 GET WINDOW PROP      window -> reg4",
      "102617 PUSH MEMORY ELEMENT IF INIT      3243 -> reg7",
      "102620 GET      reg4[reg7] -> reg5",
      "102624 TYPEOF      reg5 -> reg4",
      "102627 STRICT EQUAL      reg4 === function -> reg7",
      "102633 JUMP IF FALSE      reg7 TO: 102817 | 102636"
  ],
  "102636": [
      "102636 GET WINDOW PROP      window -> reg5",
      "102641 PUSH MEMORY ELEMENT IF INIT      3243 -> reg9",
      "102644 GET      reg5[reg9] -> reg7",
      "102648 GET      reg7[toString] -> reg5",
      "102654 EMPTY ARRAY      -> reg8",
      "102656 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg8",
      "102660 SET      reg2 -> reg4",
      "102663 GET WINDOW PROP      Error -> reg10",
      "102668 GET      reg10[toString] -> reg8",
      "102674 EMPTY ARRAY      -> reg11",
      "102676 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg11",
      "102680 SET      reg2 -> reg9",
      "102683 GET      reg9[replace] -> reg8",
      "102689 NEW ARRAY      2 -> reg12",
      "102692 NEW REGEXP      Error , g -> reg11",
      "102700 PUT      reg12[0] = reg11",
      "102704 PUSH MEMORY ELEMENT IF INIT      3243 -> reg11",
      "102707 PUT      reg12[1] = reg11",
      "102711 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg12",
      "102715 SET      reg2 -> reg5",
      "102718 STRICT NOT EQUAL      reg4 !== reg5 -> reg11",
      "102722 JUMP IF FALSE      reg11 TO: 102817 | 102725"
  ],
  "102725": [
      "102725 PUSH MEMORY ELEMENT IF INIT      3240 -> reg4",
      "102728 GET      reg4[funcs] -> reg5",
      "102734 PUSH MEMORY ELEMENT IF INIT      3243 -> reg4",
      "102737 GET WINDOW PROP      window -> reg12",
      "102742 PUSH MEMORY ELEMENT IF INIT      3243 -> reg15",
      "102745 GET      reg12[reg15] -> reg14",
      "102749 GET      reg14[toString] -> reg13",
      "102755 EMPTY ARRAY      -> reg12",
      "102757 CALL FUNCTION      OBJ: reg14 FUNC: reg13 ARGS: reg12",
      "102761 SET      reg2 -> reg11",
      "102764 GET      reg11[substr] -> reg12",
      "102770 NEW ARRAY      2 -> reg15",
      "102773 PUT      reg15[0] = 0",
      "102777 PUT      reg15[1] = 100",
      "102781 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg15",
      "102785 SET      reg2 -> reg8",
      "102788 PUT      reg5[reg4] = reg8",
      "102792 PUSH MEMORY ELEMENT IF INIT      3240 -> reg4",
      "102795 GET      reg4[count] -> reg5",
      "102801 SET      reg5 -> reg8",
      "102804 ADD      reg51-> reg5",
      "102808 PUSH MEMORY ELEMENT IF INIT      3240 -> reg4",
      "102811 PUT      reg4[count] = reg5",
      "102817 PUSH MEMORY ELEMENT IF INIT      3241 -> reg8",
      "102820 SET      reg8 -> reg4",
      "102823 ADD      reg81-> reg8",
      "102827 SET MEMORY ELEMENT IF INIT      3241 = reg8",
      "102830 JUMP      102580",
      "102580 PUSH MEMORY ELEMENT IF INIT      3241 -> reg5",
      "102583 PUSH MEMORY ELEMENT IF INIT      3242 -> reg7",
      "102586 GET      reg7[length] -> reg4",
      "102592 LESS THAN      reg5 < reg4 -> reg9",
      "102596 JUMP IF FALSE      reg9 TO: 102832 | 102599"
  ],
  "102817": [
      "102817 PUSH MEMORY ELEMENT IF INIT      3241 -> reg8",
      "102820 SET      reg8 -> reg4",
      "102823 ADD      reg81-> reg8",
      "102827 SET MEMORY ELEMENT IF INIT      3241 = reg8",
      "102830 JUMP      102580",
      "102580 PUSH MEMORY ELEMENT IF INIT      3241 -> reg5",
      "102583 PUSH MEMORY ELEMENT IF INIT      3242 -> reg7",
      "102586 GET      reg7[length] -> reg4",
      "102592 LESS THAN      reg5 < reg4 -> reg9",
      "102596 JUMP IF FALSE      reg9 TO: 102832 | 102599"
  ],
  "102832": [
      "102832 INIT FUNCTION STATE      PTR: 102841 NAME:  LEN: 1 -> reg5",
      "102839 JUMP      102967",
      "102967 SET MEMORY ELEMENT IF INIT      3244 = reg5",
      "102970 EMPTY OBJECT      -> reg4",
      "102972 PUSH MEMORY ELEMENT IF INIT      3244 -> reg8",
      "102975 NEW ARRAY      1 -> reg12",
      "102978 PUSH MEMORY ELEMENT IF INIT      3240 -> reg13",
      "102981 PUT      reg12[0] = reg13",
      "102985 CALL FUNCTION      PTR: reg8 MEM: reg12",
      "102989 SET      reg2 -> reg5",
      "102992 PUT      reg4[verdict] = reg5",
      "102998 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "103001 GET      reg8[stringify] -> reg12",
      "103007 NEW ARRAY      1 -> reg13",
      "103010 PUSH MEMORY ELEMENT IF INIT      3240 -> reg18",
      "103013 PUT      reg13[0] = reg18",
      "103017 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg13",
      "103021 SET      reg2 -> reg5",
      "103024 PUT      reg4[raw] = reg5",
      "103030 PUT      reg4[error] = false",
      "103036 JUMP OR RETURN VAL      reg4"
  ],
  "102878": [
      "102878 PUSH MEMORY ELEMENT IF INIT      3251 -> reg5",
      "102881 COPY ENUMERABLE      reg5 -> reg4",
      "102884 GET      reg4[length] -> reg5",
      "102890 EQUAL      reg5 == 0 -> reg7",
      "102894 JUMP IF TRUE      reg7 TO: 102962 | 102897"
  ],
  "102897": [
      "102897 SET      0 -> reg7",
      "102900 GET      reg4[reg7] -> reg6",
      "102904 SET MEMORY ELEMENT IF INIT      3253 = reg6",
      "102907 PUSH MEMORY ELEMENT IF INIT      3251 -> reg9",
      "102910 PUSH MEMORY ELEMENT IF INIT      3253 -> reg11",
      "102913 GET      reg9[reg11] -> reg8",
      "102917 SET MEMORY ELEMENT IF INIT      3254 = reg8",
      "102920 PUSH MEMORY ELEMENT IF INIT      3250 -> reg9",
      "102923 GET      reg9[funcs] -> reg12",
      "102929 PUSH MEMORY ELEMENT IF INIT      3254 -> reg8",
      "102932 GET      reg12[reg8] -> reg10",
      "102936 GET WINDOW PROP      undefined -> reg8",
      "102941 STRICT NOT EQUAL      reg10 !== reg8 -> reg9",
      "102945 JUMP IF FALSE      reg9 TO: 102951 | 102948"
  ],
  "102900": [
      "102900 GET      reg4[reg7] -> reg6",
      "102904 SET MEMORY ELEMENT IF INIT      3253 = reg6",
      "102907 PUSH MEMORY ELEMENT IF INIT      3251 -> reg9",
      "102910 PUSH MEMORY ELEMENT IF INIT      3253 -> reg11",
      "102913 GET      reg9[reg11] -> reg8",
      "102917 SET MEMORY ELEMENT IF INIT      3254 = reg8",
      "102920 PUSH MEMORY ELEMENT IF INIT      3250 -> reg9",
      "102923 GET      reg9[funcs] -> reg12",
      "102929 PUSH MEMORY ELEMENT IF INIT      3254 -> reg8",
      "102932 GET      reg12[reg8] -> reg10",
      "102936 GET WINDOW PROP      undefined -> reg8",
      "102941 STRICT NOT EQUAL      reg10 !== reg8 -> reg9",
      "102945 JUMP IF FALSE      reg9 TO: 102951 | 102948"
  ],
  "102948": [
      "102948 SET MEMORY ELEMENT IF INIT      3252 = true",
      "102951 ADD      reg71-> reg7",
      "102955 LESS THAN      reg7 < reg5 -> reg8",
      "102959 JUMP IF TRUE      reg8 TO: 102900 | 102962"
  ],
  "102951": [
      "102951 ADD      reg71-> reg7",
      "102955 LESS THAN      reg7 < reg5 -> reg8",
      "102959 JUMP IF TRUE      reg8 TO: 102900 | 102962"
  ],
  "102962": [
      "102962 PUSH MEMORY ELEMENT IF INIT      3252 -> reg4",
      "102965 JUMP OR RETURN VAL      reg4"
  ],
  "103040": [
      "103040 SET I      null",
      "103042 PUSH F.K      -> reg4",
      "103044 VOID F",
      "103045 SET MEMORY ELEMENT      0 = reg4",
      "103048 EMPTY OBJECT      -> reg4",
      "103050 PUT      reg4[verdict] = false",
      "103056 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "103059 GET      reg5[toString] -> reg15",
      "103065 EMPTY ARRAY      -> reg13",
      "103067 CALL FUNCTION      OBJ: reg5 FUNC: reg15 ARGS: reg13",
      "103071 SET      reg2 -> reg12",
      "103074 PUT      reg4[raw] = reg12",
      "103080 PUT      reg4[error] = true",
      "103086 JUMP OR RETURN VAL      reg4"
  ],
  "103728": [
      "103728 SET      0 -> reg9",
      "103731 GET      reg5[reg9] -> reg6",
      "103735 SET MEMORY ELEMENT IF INIT      3261 = reg6",
      "103738 GET WINDOW PROP      window -> reg10",
      "103743 PUSH MEMORY ELEMENT IF INIT      3261 -> reg11",
      "103746 GET      reg10[reg11] -> reg7",
      "103750 TYPEOF      reg7 -> reg10",
      "103753 SET MEMORY ELEMENT IF INIT      3262 = reg10",
      "103756 PUSH MEMORY ELEMENT IF INIT      3260 -> reg7",
      "103759 PUSH MEMORY ELEMENT IF INIT      3261 -> reg11",
      "103762 GET      reg7[reg11] -> reg8",
      "103766 SET MEMORY ELEMENT IF INIT      3263 = reg8",
      "103769 PUSH MEMORY ELEMENT IF INIT      3262 -> reg7",
      "103772 PUSH MEMORY ELEMENT IF INIT      3263 -> reg8",
      "103775 STRICT NOT EQUAL      reg7 !== reg8 -> reg10",
      "103779 JUMP IF FALSE      reg10 TO: 103866 | 103782"
  ],
  "103731": [
      "103731 GET      reg5[reg9] -> reg6",
      "103735 SET MEMORY ELEMENT IF INIT      3261 = reg6",
      "103738 GET WINDOW PROP      window -> reg10",
      "103743 PUSH MEMORY ELEMENT IF INIT      3261 -> reg11",
      "103746 GET      reg10[reg11] -> reg7",
      "103750 TYPEOF      reg7 -> reg10",
      "103753 SET MEMORY ELEMENT IF INIT      3262 = reg10",
      "103756 PUSH MEMORY ELEMENT IF INIT      3260 -> reg7",
      "103759 PUSH MEMORY ELEMENT IF INIT      3261 -> reg11",
      "103762 GET      reg7[reg11] -> reg8",
      "103766 SET MEMORY ELEMENT IF INIT      3263 = reg8",
      "103769 PUSH MEMORY ELEMENT IF INIT      3262 -> reg7",
      "103772 PUSH MEMORY ELEMENT IF INIT      3263 -> reg8",
      "103775 STRICT NOT EQUAL      reg7 !== reg8 -> reg10",
      "103779 JUMP IF FALSE      reg10 TO: 103866 | 103782"
  ],
  "103782": [
      "103782 PUSH MEMORY ELEMENT IF INIT      3259 -> reg7",
      "103785 GET      reg7[t] -> reg8",
      "103791 PUSH MEMORY ELEMENT IF INIT      3261 -> reg10",
      "103794 EMPTY OBJECT      -> reg7",
      "103796 PUSH MEMORY ELEMENT IF INIT      3262 -> reg13",
      "103799 GET      reg13[slice] -> reg15",
      "103805 NEW ARRAY      2 -> reg19",
      "103808 PUT      reg19[0] = 0",
      "103812 PUT      reg19[1] = 2",
      "103816 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg19",
      "103820 SET      reg2 -> reg11",
      "103823 PUT      reg7[g] = reg11",
      "103829 PUSH MEMORY ELEMENT IF INIT      3263 -> reg12",
      "103832 GET      reg12[slice] -> reg15",
      "103838 NEW ARRAY      2 -> reg16",
      "103841 PUT      reg16[0] = 0",
      "103845 PUT      reg16[1] = 2",
      "103849 CALL FUNCTION      OBJ: reg12 FUNC: reg15 ARGS: reg16",
      "103853 SET      reg2 -> reg11",
      "103856 PUT      reg7[e] = reg11",
      "103862 PUT      reg8[reg10] = reg7",
      "103866 ADD      reg91-> reg9",
      "103870 LESS THAN      reg9 < reg4 -> reg7",
      "103874 JUMP IF TRUE      reg7 TO: 103731 | 103877"
  ],
  "103866": [
      "103866 ADD      reg91-> reg9",
      "103870 LESS THAN      reg9 < reg4 -> reg7",
      "103874 JUMP IF TRUE      reg7 TO: 103731 | 103877"
  ],
  "103877": [
      "103877 EMPTY OBJECT      -> reg4",
      "103879 PUT      reg4[verdict] = false",
      "103885 PUSH MEMORY ELEMENT IF INIT      280 -> reg5",
      "103888 GET      reg5[stringify] -> reg9",
      "103894 NEW ARRAY      1 -> reg7",
      "103897 PUSH MEMORY ELEMENT IF INIT      3259 -> reg8",
      "103900 PUT      reg7[0] = reg8",
      "103904 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg7",
      "103908 SET      reg2 -> reg6",
      "103911 PUT      reg4[raw] = reg6",
      "103917 PUT      reg4[error] = false",
      "103923 JUMP OR RETURN VAL      reg4"
  ],
  "103927": [
      "103927 SET I      null",
      "103929 PUSH F.K      -> reg4",
      "103931 VOID F",
      "103932 SET MEMORY ELEMENT      0 = reg4",
      "103935 EMPTY OBJECT      -> reg6",
      "103937 PUT      reg6[verdict] = false",
      "103943 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "103946 GET      reg8[toString] -> reg9",
      "103952 EMPTY ARRAY      -> reg10",
      "103954 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "103958 SET      reg2 -> reg4",
      "103961 PUT      reg6[raw] = reg4",
      "103967 PUT      reg6[error] = true",
      "103973 JUMP OR RETURN VAL      reg6"
  ],
  "104090": [
      "104090 PUSH MEMORY ELEMENT IF INIT      3269 -> reg4",
      "104093 PUT      reg4[es] = true",
      "104099 JUMP      104136",
      "104136 SET I      104911",
      "104138 SET I      104163",
      "104140 PUSH MEMORY ELEMENT IF INIT      3268 -> reg5",
      "104143 STRICT EQUAL      reg5 === HAL-9000 -> reg4",
      "104149 JUMP IF FALSE      reg4 TO: 104161 | 104152"
  ],
  "104099": [
      "104099 JUMP      104136",
      "104136 SET I      104911",
      "104138 SET I      104163",
      "104140 PUSH MEMORY ELEMENT IF INIT      3268 -> reg5",
      "104143 STRICT EQUAL      reg5 === HAL-9000 -> reg4",
      "104149 JUMP IF FALSE      reg4 TO: 104161 | 104152"
  ],
  "104101": [
      "104101 SET I      104911",
      "104103 PUSH F.K      -> reg4",
      "104105 VOID F",
      "104106 SET MEMORY ELEMENT      0 = reg4",
      "104109 PUSH MEMORY ELEMENT IF INIT      3269 -> reg4",
      "104112 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "104115 GET      reg6[toString] -> reg7",
      "104121 EMPTY ARRAY      -> reg9",
      "104123 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "104127 SET      reg2 -> reg5",
      "104130 PUT      reg4[es] = reg5",
      "104136 SET I      104911",
      "104138 SET I      104163",
      "104140 PUSH MEMORY ELEMENT IF INIT      3268 -> reg5",
      "104143 STRICT EQUAL      reg5 === HAL-9000 -> reg4",
      "104149 JUMP IF FALSE      reg4 TO: 104161 | 104152"
  ],
  "104152": [
      "104152 PUSH MEMORY ELEMENT IF INIT      3269 -> reg4",
      "104155 PUT      reg4[hal] = true",
      "104161 JUMP      104198",
      "104198 SET I      104911",
      "104200 SET I      104225",
      "104202 PUSH MEMORY ELEMENT IF INIT      3268 -> reg7",
      "104205 STRICT EQUAL      reg7 === masking-agent -> reg4",
      "104211 JUMP IF FALSE      reg4 TO: 104223 | 104214"
  ],
  "104161": [
      "104161 JUMP      104198",
      "104198 SET I      104911",
      "104200 SET I      104225",
      "104202 PUSH MEMORY ELEMENT IF INIT      3268 -> reg7",
      "104205 STRICT EQUAL      reg7 === masking-agent -> reg4",
      "104211 JUMP IF FALSE      reg4 TO: 104223 | 104214"
  ],
  "104163": [
      "104163 SET I      104911",
      "104165 PUSH F.K      -> reg4",
      "104167 VOID F",
      "104168 SET MEMORY ELEMENT      0 = reg4",
      "104171 PUSH MEMORY ELEMENT IF INIT      3269 -> reg7",
      "104174 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "104177 GET      reg5[toString] -> reg8",
      "104183 EMPTY ARRAY      -> reg9",
      "104185 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg9",
      "104189 SET      reg2 -> reg4",
      "104192 PUT      reg7[hal] = reg4",
      "104198 SET I      104911",
      "104200 SET I      104225",
      "104202 PUSH MEMORY ELEMENT IF INIT      3268 -> reg7",
      "104205 STRICT EQUAL      reg7 === masking-agent -> reg4",
      "104211 JUMP IF FALSE      reg4 TO: 104223 | 104214"
  ],
  "104214": [
      "104214 PUSH MEMORY ELEMENT IF INIT      3269 -> reg7",
      "104217 PUT      reg7[ma] = true",
      "104223 JUMP      104260",
      "104260 SET I      104911",
      "104262 SET I      104344",
      "104264 NEW REGEXP      iPhone ,  -> reg8",
      "104272 GET      reg8[test] -> reg9",
      "104278 NEW ARRAY      1 -> reg10",
      "104281 PUSH MEMORY ELEMENT IF INIT      3268 -> reg11",
      "104284 PUT      reg10[0] = reg11",
      "104288 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "104292 SET      reg2 -> reg4",
      "104295 NEW REGEXP      iPhone , i -> reg10",
      "104303 GET      reg10[test] -> reg11",
      "104309 NEW ARRAY      1 -> reg14",
      "104312 PUSH MEMORY ELEMENT IF INIT      3268 -> reg12",
      "104315 PUT      reg14[0] = reg12",
      "104319 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg14",
      "104323 SET      reg2 -> reg9",
      "104326 STRICT NOT EQUAL      reg4 !== reg9 -> reg11",
      "104330 JUMP IF FALSE      reg11 TO: 104342 | 104333"
  ],
  "104223": [
      "104223 JUMP      104260",
      "104260 SET I      104911",
      "104262 SET I      104344",
      "104264 NEW REGEXP      iPhone ,  -> reg8",
      "104272 GET      reg8[test] -> reg9",
      "104278 NEW ARRAY      1 -> reg10",
      "104281 PUSH MEMORY ELEMENT IF INIT      3268 -> reg11",
      "104284 PUT      reg10[0] = reg11",
      "104288 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "104292 SET      reg2 -> reg4",
      "104295 NEW REGEXP      iPhone , i -> reg10",
      "104303 GET      reg10[test] -> reg11",
      "104309 NEW ARRAY      1 -> reg14",
      "104312 PUSH MEMORY ELEMENT IF INIT      3268 -> reg12",
      "104315 PUT      reg14[0] = reg12",
      "104319 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg14",
      "104323 SET      reg2 -> reg9",
      "104326 STRICT NOT EQUAL      reg4 !== reg9 -> reg11",
      "104330 JUMP IF FALSE      reg11 TO: 104342 | 104333"
  ],
  "104225": [
      "104225 SET I      104911",
      "104227 PUSH F.K      -> reg4",
      "104229 VOID F",
      "104230 SET MEMORY ELEMENT      0 = reg4",
      "104233 PUSH MEMORY ELEMENT IF INIT      3269 -> reg4",
      "104236 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "104239 GET      reg7[toString] -> reg8",
      "104245 EMPTY ARRAY      -> reg11",
      "104247 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg11",
      "104251 SET      reg2 -> reg9",
      "104254 PUT      reg4[ma] = reg9",
      "104260 SET I      104911",
      "104262 SET I      104344",
      "104264 NEW REGEXP      iPhone ,  -> reg8",
      "104272 GET      reg8[test] -> reg9",
      "104278 NEW ARRAY      1 -> reg10",
      "104281 PUSH MEMORY ELEMENT IF INIT      3268 -> reg11",
      "104284 PUT      reg10[0] = reg11",
      "104288 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "104292 SET      reg2 -> reg4",
      "104295 NEW REGEXP      iPhone , i -> reg10",
      "104303 GET      reg10[test] -> reg11",
      "104309 NEW ARRAY      1 -> reg14",
      "104312 PUSH MEMORY ELEMENT IF INIT      3268 -> reg12",
      "104315 PUT      reg14[0] = reg12",
      "104319 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg14",
      "104323 SET      reg2 -> reg9",
      "104326 STRICT NOT EQUAL      reg4 !== reg9 -> reg11",
      "104330 JUMP IF FALSE      reg11 TO: 104342 | 104333"
  ],
  "104333": [
      "104333 PUSH MEMORY ELEMENT IF INIT      3269 -> reg4",
      "104336 PUT      reg4[iph] = true",
      "104342 JUMP      104379",
      "104379 SET I      104911",
      "104381 SET I      104463",
      "104383 NEW REGEXP      Win32 ,  -> reg9",
      "104391 GET      reg9[test] -> reg12",
      "104397 NEW ARRAY      1 -> reg14",
      "104400 PUSH MEMORY ELEMENT IF INIT      3268 -> reg15",
      "104403 PUT      reg14[0] = reg15",
      "104407 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg14",
      "104411 SET      reg2 -> reg4",
      "104414 NEW REGEXP      Win32 , i -> reg13",
      "104422 GET      reg13[test] -> reg14",
      "104428 NEW ARRAY      1 -> reg16",
      "104431 PUSH MEMORY ELEMENT IF INIT      3268 -> reg17",
      "104434 PUT      reg16[0] = reg17",
      "104438 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg16",
      "104442 SET      reg2 -> reg12",
      "104445 STRICT NOT EQUAL      reg4 !== reg12 -> reg14",
      "104449 JUMP IF FALSE      reg14 TO: 104461 | 104452"
  ],
  "104342": [
      "104342 JUMP      104379",
      "104379 SET I      104911",
      "104381 SET I      104463",
      "104383 NEW REGEXP      Win32 ,  -> reg9",
      "104391 GET      reg9[test] -> reg12",
      "104397 NEW ARRAY      1 -> reg14",
      "104400 PUSH MEMORY ELEMENT IF INIT      3268 -> reg15",
      "104403 PUT      reg14[0] = reg15",
      "104407 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg14",
      "104411 SET      reg2 -> reg4",
      "104414 NEW REGEXP      Win32 , i -> reg13",
      "104422 GET      reg13[test] -> reg14",
      "104428 NEW ARRAY      1 -> reg16",
      "104431 PUSH MEMORY ELEMENT IF INIT      3268 -> reg17",
      "104434 PUT      reg16[0] = reg17",
      "104438 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg16",
      "104442 SET      reg2 -> reg12",
      "104445 STRICT NOT EQUAL      reg4 !== reg12 -> reg14",
      "104449 JUMP IF FALSE      reg14 TO: 104461 | 104452"
  ],
  "104344": [
      "104344 SET I      104911",
      "104346 PUSH F.K      -> reg4",
      "104348 VOID F",
      "104349 SET MEMORY ELEMENT      0 = reg4",
      "104352 PUSH MEMORY ELEMENT IF INIT      3269 -> reg4",
      "104355 PUSH MEMORY ELEMENT IF INIT      0 -> reg11",
      "104358 GET      reg11[toString] -> reg12",
      "104364 EMPTY ARRAY      -> reg13",
      "104366 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg13",
      "104370 SET      reg2 -> reg9",
      "104373 PUT      reg4[iph] = reg9",
      "104379 SET I      104911",
      "104381 SET I      104463",
      "104383 NEW REGEXP      Win32 ,  -> reg9",
      "104391 GET      reg9[test] -> reg12",
      "104397 NEW ARRAY      1 -> reg14",
      "104400 PUSH MEMORY ELEMENT IF INIT      3268 -> reg15",
      "104403 PUT      reg14[0] = reg15",
      "104407 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg14",
      "104411 SET      reg2 -> reg4",
      "104414 NEW REGEXP      Win32 , i -> reg13",
      "104422 GET      reg13[test] -> reg14",
      "104428 NEW ARRAY      1 -> reg16",
      "104431 PUSH MEMORY ELEMENT IF INIT      3268 -> reg17",
      "104434 PUT      reg16[0] = reg17",
      "104438 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg16",
      "104442 SET      reg2 -> reg12",
      "104445 STRICT NOT EQUAL      reg4 !== reg12 -> reg14",
      "104449 JUMP IF FALSE      reg14 TO: 104461 | 104452"
  ],
  "104452": [
      "104452 PUSH MEMORY ELEMENT IF INIT      3269 -> reg4",
      "104455 PUT      reg4[win] = true",
      "104461 JUMP      104498",
      "104498 SET I      104911",
      "104500 SET I      104582",
      "104502 NEW REGEXP      iPad ,  -> reg12",
      "104510 GET      reg12[test] -> reg16",
      "104516 NEW ARRAY      1 -> reg15",
      "104519 PUSH MEMORY ELEMENT IF INIT      3268 -> reg17",
      "104522 PUT      reg15[0] = reg17",
      "104526 CALL FUNCTION      OBJ: reg12 FUNC: reg16 ARGS: reg15",
      "104530 SET      reg2 -> reg4",
      "104533 NEW REGEXP      iPad , i -> reg16",
      "104541 GET      reg16[test] -> reg17",
      "104547 NEW ARRAY      1 -> reg19",
      "104550 PUSH MEMORY ELEMENT IF INIT      3268 -> reg18",
      "104553 PUT      reg19[0] = reg18",
      "104557 CALL FUNCTION      OBJ: reg16 FUNC: reg17 ARGS: reg19",
      "104561 SET      reg2 -> reg15",
      "104564 STRICT NOT EQUAL      reg4 !== reg15 -> reg17",
      "104568 JUMP IF FALSE      reg17 TO: 104580 | 104571"
  ],
  "104461": [
      "104461 JUMP      104498",
      "104498 SET I      104911",
      "104500 SET I      104582",
      "104502 NEW REGEXP      iPad ,  -> reg12",
      "104510 GET      reg12[test] -> reg16",
      "104516 NEW ARRAY      1 -> reg15",
      "104519 PUSH MEMORY ELEMENT IF INIT      3268 -> reg17",
      "104522 PUT      reg15[0] = reg17",
      "104526 CALL FUNCTION      OBJ: reg12 FUNC: reg16 ARGS: reg15",
      "104530 SET      reg2 -> reg4",
      "104533 NEW REGEXP      iPad , i -> reg16",
      "104541 GET      reg16[test] -> reg17",
      "104547 NEW ARRAY      1 -> reg19",
      "104550 PUSH MEMORY ELEMENT IF INIT      3268 -> reg18",
      "104553 PUT      reg19[0] = reg18",
      "104557 CALL FUNCTION      OBJ: reg16 FUNC: reg17 ARGS: reg19",
      "104561 SET      reg2 -> reg15",
      "104564 STRICT NOT EQUAL      reg4 !== reg15 -> reg17",
      "104568 JUMP IF FALSE      reg17 TO: 104580 | 104571"
  ],
  "104463": [
      "104463 SET I      104911",
      "104465 PUSH F.K      -> reg14",
      "104467 VOID F",
      "104468 SET MEMORY ELEMENT      0 = reg14",
      "104471 PUSH MEMORY ELEMENT IF INIT      3269 -> reg4",
      "104474 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "104477 GET      reg14[toString] -> reg15",
      "104483 EMPTY ARRAY      -> reg16",
      "104485 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg16",
      "104489 SET      reg2 -> reg12",
      "104492 PUT      reg4[win] = reg12",
      "104498 SET I      104911",
      "104500 SET I      104582",
      "104502 NEW REGEXP      iPad ,  -> reg12",
      "104510 GET      reg12[test] -> reg16",
      "104516 NEW ARRAY      1 -> reg15",
      "104519 PUSH MEMORY ELEMENT IF INIT      3268 -> reg17",
      "104522 PUT      reg15[0] = reg17",
      "104526 CALL FUNCTION      OBJ: reg12 FUNC: reg16 ARGS: reg15",
      "104530 SET      reg2 -> reg4",
      "104533 NEW REGEXP      iPad , i -> reg16",
      "104541 GET      reg16[test] -> reg17",
      "104547 NEW ARRAY      1 -> reg19",
      "104550 PUSH MEMORY ELEMENT IF INIT      3268 -> reg18",
      "104553 PUT      reg19[0] = reg18",
      "104557 CALL FUNCTION      OBJ: reg16 FUNC: reg17 ARGS: reg19",
      "104561 SET      reg2 -> reg15",
      "104564 STRICT NOT EQUAL      reg4 !== reg15 -> reg17",
      "104568 JUMP IF FALSE      reg17 TO: 104580 | 104571"
  ],
  "104571": [
      "104571 PUSH MEMORY ELEMENT IF INIT      3269 -> reg4",
      "104574 PUT      reg4[ipa] = true",
      "104580 JUMP      104617",
      "104617 SET I      104911",
      "104619 SET I      104644",
      "104621 PUSH MEMORY ELEMENT IF INIT      3268 -> reg4",
      "104624 STRICT EQUAL      reg4 === Windows -> reg15",
      "104630 JUMP IF FALSE      reg15 TO: 104642 | 104633"
  ],
  "104580": [
      "104580 JUMP      104617",
      "104617 SET I      104911",
      "104619 SET I      104644",
      "104621 PUSH MEMORY ELEMENT IF INIT      3268 -> reg4",
      "104624 STRICT EQUAL      reg4 === Windows -> reg15",
      "104630 JUMP IF FALSE      reg15 TO: 104642 | 104633"
  ],
  "104582": [
      "104582 SET I      104911",
      "104584 PUSH F.K      -> reg4",
      "104586 VOID F",
      "104587 SET MEMORY ELEMENT      0 = reg4",
      "104590 PUSH MEMORY ELEMENT IF INIT      3269 -> reg4",
      "104593 PUSH MEMORY ELEMENT IF INIT      0 -> reg20",
      "104596 GET      reg20[toString] -> reg19",
      "104602 EMPTY ARRAY      -> reg17",
      "104604 CALL FUNCTION      OBJ: reg20 FUNC: reg19 ARGS: reg17",
      "104608 SET      reg2 -> reg15",
      "104611 PUT      reg4[ipa] = reg15",
      "104617 SET I      104911",
      "104619 SET I      104644",
      "104621 PUSH MEMORY ELEMENT IF INIT      3268 -> reg4",
      "104624 STRICT EQUAL      reg4 === Windows -> reg15",
      "104630 JUMP IF FALSE      reg15 TO: 104642 | 104633"
  ],
  "104633": [
      "104633 PUSH MEMORY ELEMENT IF INIT      3269 -> reg15",
      "104636 PUT      reg15[fwin] = true",
      "104642 JUMP      104679",
      "104679 SET I      104911",
      "104681 SET I      104731",
      "104683 NEW REGEXP      ([A-Z])\\w+ , g -> reg17",
      "104691 GET      reg17[test] -> reg21",
      "104697 NEW ARRAY      1 -> reg18",
      "104700 PUSH MEMORY ELEMENT IF INIT      3268 -> reg19",
      "104703 PUT      reg18[0] = reg19",
      "104707 CALL FUNCTION      OBJ: reg17 FUNC: reg21 ARGS: reg18",
      "104711 SET      reg2 -> reg15",
      "104714 NOT      reg15 -> reg18",
      "104717 JUMP IF FALSE      reg18 TO: 104729 | 104720"
  ],
  "104642": [
      "104642 JUMP      104679",
      "104679 SET I      104911",
      "104681 SET I      104731",
      "104683 NEW REGEXP      ([A-Z])\\w+ , g -> reg17",
      "104691 GET      reg17[test] -> reg21",
      "104697 NEW ARRAY      1 -> reg18",
      "104700 PUSH MEMORY ELEMENT IF INIT      3268 -> reg19",
      "104703 PUT      reg18[0] = reg19",
      "104707 CALL FUNCTION      OBJ: reg17 FUNC: reg21 ARGS: reg18",
      "104711 SET      reg2 -> reg15",
      "104714 NOT      reg15 -> reg18",
      "104717 JUMP IF FALSE      reg18 TO: 104729 | 104720"
  ],
  "104644": [
      "104644 SET I      104911",
      "104646 PUSH F.K      -> reg15",
      "104648 VOID F",
      "104649 SET MEMORY ELEMENT      0 = reg15",
      "104652 PUSH MEMORY ELEMENT IF INIT      3269 -> reg18",
      "104655 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "104658 GET      reg4[toString] -> reg17",
      "104664 EMPTY ARRAY      -> reg19",
      "104666 CALL FUNCTION      OBJ: reg4 FUNC: reg17 ARGS: reg19",
      "104670 SET      reg2 -> reg15",
      "104673 PUT      reg18[fwin] = reg15",
      "104679 SET I      104911",
      "104681 SET I      104731",
      "104683 NEW REGEXP      ([A-Z])\\w+ , g -> reg17",
      "104691 GET      reg17[test] -> reg21",
      "104697 NEW ARRAY      1 -> reg18",
      "104700 PUSH MEMORY ELEMENT IF INIT      3268 -> reg19",
      "104703 PUT      reg18[0] = reg19",
      "104707 CALL FUNCTION      OBJ: reg17 FUNC: reg21 ARGS: reg18",
      "104711 SET      reg2 -> reg15",
      "104714 NOT      reg15 -> reg18",
      "104717 JUMP IF FALSE      reg18 TO: 104729 | 104720"
  ],
  "104720": [
      "104720 PUSH MEMORY ELEMENT IF INIT      3269 -> reg18",
      "104723 PUT      reg18[rdm] = true",
      "104729 JUMP      104766",
      "104766 SET I      104911",
      "104768 SET MEMORY ELEMENT IF INIT      3270 = false",
      "104771 PUSH MEMORY ELEMENT IF INIT      3269 -> reg15",
      "104774 COPY ENUMERABLE      reg15 -> reg21",
      "104777 GET      reg21[length] -> reg18",
      "104783 EQUAL      reg18 == 0 -> reg22",
      "104787 JUMP IF TRUE      reg22 TO: 104858 | 104790"
  ],
  "104729": [
      "104729 JUMP      104766",
      "104766 SET I      104911",
      "104768 SET MEMORY ELEMENT IF INIT      3270 = false",
      "104771 PUSH MEMORY ELEMENT IF INIT      3269 -> reg15",
      "104774 COPY ENUMERABLE      reg15 -> reg21",
      "104777 GET      reg21[length] -> reg18",
      "104783 EQUAL      reg18 == 0 -> reg22",
      "104787 JUMP IF TRUE      reg22 TO: 104858 | 104790"
  ],
  "104731": [
      "104731 SET I      104911",
      "104733 PUSH F.K      -> reg15",
      "104735 VOID F",
      "104736 SET MEMORY ELEMENT      0 = reg15",
      "104739 PUSH MEMORY ELEMENT IF INIT      3269 -> reg15",
      "104742 PUSH MEMORY ELEMENT IF INIT      0 -> reg19",
      "104745 GET      reg19[toString] -> reg21",
      "104751 EMPTY ARRAY      -> reg22",
      "104753 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg22",
      "104757 SET      reg2 -> reg18",
      "104760 PUT      reg15[rdm] = reg18",
      "104766 SET I      104911",
      "104768 SET MEMORY ELEMENT IF INIT      3270 = false",
      "104771 PUSH MEMORY ELEMENT IF INIT      3269 -> reg15",
      "104774 COPY ENUMERABLE      reg15 -> reg21",
      "104777 GET      reg21[length] -> reg18",
      "104783 EQUAL      reg18 == 0 -> reg22",
      "104787 JUMP IF TRUE      reg22 TO: 104858 | 104790"
  ],
  "104790": [
      "104790 SET      0 -> reg22",
      "104793 GET      reg21[reg22] -> reg15",
      "104797 SET MEMORY ELEMENT IF INIT      3271 = reg15",
      "104800 PUSH MEMORY ELEMENT IF INIT      3269 -> reg24",
      "104803 PUSH MEMORY ELEMENT IF INIT      3271 -> reg23",
      "104806 GET      reg24[reg23] -> reg25",
      "104810 TYPEOF      reg25 -> reg23",
      "104813 STRICT EQUAL      reg23 === boolean -> reg24",
      "104819 JUMP IF FALSE      reg24 TO: 104839 | 104822"
  ],
  "104793": [
      "104793 GET      reg21[reg22] -> reg15",
      "104797 SET MEMORY ELEMENT IF INIT      3271 = reg15",
      "104800 PUSH MEMORY ELEMENT IF INIT      3269 -> reg24",
      "104803 PUSH MEMORY ELEMENT IF INIT      3271 -> reg23",
      "104806 GET      reg24[reg23] -> reg25",
      "104810 TYPEOF      reg25 -> reg23",
      "104813 STRICT EQUAL      reg23 === boolean -> reg24",
      "104819 JUMP IF FALSE      reg24 TO: 104839 | 104822"
  ],
  "104822": [
      "104822 PUSH MEMORY ELEMENT IF INIT      3269 -> reg23",
      "104825 PUSH MEMORY ELEMENT IF INIT      3271 -> reg25",
      "104828 GET      reg23[reg25] -> reg26",
      "104832 STRICT EQUAL      reg26 === true -> reg25",
      "104836 SET      reg25 -> reg24",
      "104839 JUMP IF FALSE      reg24 TO: 104847 | 104842"
  ],
  "104839": ["104839 JUMP IF FALSE      reg24 TO: 104847 | 104842"],
  "104842": [
      "104842 SET MEMORY ELEMENT IF INIT      3270 = true",
      "104845 JUMP      104858",
      "104858 EMPTY OBJECT      -> reg21",
      "104860 PUSH MEMORY ELEMENT IF INIT      3270 -> reg15",
      "104863 PUT      reg21[verdict] = reg15",
      "104869 PUSH MEMORY ELEMENT IF INIT      280 -> reg15",
      "104872 GET      reg15[stringify] -> reg22",
      "104878 NEW ARRAY      1 -> reg23",
      "104881 PUSH MEMORY ELEMENT IF INIT      3269 -> reg24",
      "104884 PUT      reg23[0] = reg24",
      "104888 CALL FUNCTION      OBJ: reg15 FUNC: reg22 ARGS: reg23",
      "104892 SET      reg2 -> reg18",
      "104895 PUT      reg21[raw] = reg18",
      "104901 PUT      reg21[error] = false",
      "104907 JUMP OR RETURN VAL      reg21"
  ],
  "104847": [
      "104847 ADD      reg221-> reg22",
      "104851 LESS THAN      reg22 < reg18 -> reg23",
      "104855 JUMP IF TRUE      reg23 TO: 104793 | 104858"
  ],
  "104858": [
      "104858 EMPTY OBJECT      -> reg21",
      "104860 PUSH MEMORY ELEMENT IF INIT      3270 -> reg15",
      "104863 PUT      reg21[verdict] = reg15",
      "104869 PUSH MEMORY ELEMENT IF INIT      280 -> reg15",
      "104872 GET      reg15[stringify] -> reg22",
      "104878 NEW ARRAY      1 -> reg23",
      "104881 PUSH MEMORY ELEMENT IF INIT      3269 -> reg24",
      "104884 PUT      reg23[0] = reg24",
      "104888 CALL FUNCTION      OBJ: reg15 FUNC: reg22 ARGS: reg23",
      "104892 SET      reg2 -> reg18",
      "104895 PUT      reg21[raw] = reg18",
      "104901 PUT      reg21[error] = false",
      "104907 JUMP OR RETURN VAL      reg21"
  ],
  "104911": [
      "104911 SET I      null",
      "104913 PUSH F.K      -> reg18",
      "104915 VOID F",
      "104916 SET MEMORY ELEMENT      0 = reg18",
      "104919 EMPTY OBJECT      -> reg18",
      "104921 PUT      reg18[verdict] = false",
      "104927 PUSH MEMORY ELEMENT IF INIT      0 -> reg23",
      "104930 GET      reg23[toString] -> reg25",
      "104936 EMPTY ARRAY      -> reg24",
      "104938 CALL FUNCTION      OBJ: reg23 FUNC: reg25 ARGS: reg24",
      "104942 SET      reg2 -> reg21",
      "104945 PUT      reg18[raw] = reg21",
      "104951 PUT      reg18[error] = true",
      "104957 JUMP OR RETURN VAL      reg18"
  ],
  "105041": [
      "105041 SET MEMORY ELEMENT IF INIT      3303 = iPhone",
      "105046 JUMP      105289",
      "105289 PUSH MEMORY ELEMENT IF INIT      3303 -> reg12",
      "105292 JUMP OR RETURN VAL      reg12"
  ],
  "105048": [
      "105048 NEW REGEXP      iPad ,  -> reg9",
      "105056 GET      reg9[test] -> reg6",
      "105062 NEW ARRAY      1 -> reg7",
      "105065 PUSH MEMORY ELEMENT IF INIT      3302 -> reg11",
      "105068 PUT      reg7[0] = reg11",
      "105072 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg7",
      "105076 SET      reg2 -> reg4",
      "105079 JUMP IF FALSE      reg4 TO: 105089 | 105082"
  ],
  "105082": [
      "105082 SET MEMORY ELEMENT IF INIT      3303 = iPad",
      "105087 JUMP      105289",
      "105289 PUSH MEMORY ELEMENT IF INIT      3303 -> reg12",
      "105292 JUMP OR RETURN VAL      reg12"
  ],
  "105089": [
      "105089 NEW REGEXP      Mac ,  -> reg7",
      "105097 GET      reg7[test] -> reg4",
      "105103 NEW ARRAY      1 -> reg8",
      "105106 PUSH MEMORY ELEMENT IF INIT      3302 -> reg10",
      "105109 PUT      reg8[0] = reg10",
      "105113 CALL FUNCTION      OBJ: reg7 FUNC: reg4 ARGS: reg8",
      "105117 SET      reg2 -> reg6",
      "105120 JUMP IF TRUE      reg6 TO: 105157 | 105123"
  ],
  "105123": [
      "105123 NEW REGEXP      Macintosh ,  -> reg4",
      "105131 GET      reg4[test] -> reg8",
      "105137 NEW ARRAY      1 -> reg11",
      "105140 PUSH MEMORY ELEMENT IF INIT      3302 -> reg12",
      "105143 PUT      reg11[0] = reg12",
      "105147 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg11",
      "105151 SET      reg2 -> reg10",
      "105154 SET      reg10 -> reg6",
      "105157 JUMP IF FALSE      reg6 TO: 105167 | 105160"
  ],
  "105157": ["105157 JUMP IF FALSE      reg6 TO: 105167 | 105160"],
  "105160": [
      "105160 SET MEMORY ELEMENT IF INIT      3303 = Mac",
      "105165 JUMP      105289",
      "105289 PUSH MEMORY ELEMENT IF INIT      3303 -> reg12",
      "105292 JUMP OR RETURN VAL      reg12"
  ],
  "105167": [
      "105167 NEW REGEXP      Windows ,  -> reg6",
      "105175 GET      reg6[test] -> reg10",
      "105181 NEW ARRAY      1 -> reg11",
      "105184 PUSH MEMORY ELEMENT IF INIT      3302 -> reg13",
      "105187 PUT      reg11[0] = reg13",
      "105191 CALL FUNCTION      OBJ: reg6 FUNC: reg10 ARGS: reg11",
      "105195 SET      reg2 -> reg8",
      "105198 JUMP IF FALSE      reg8 TO: 105208 | 105201"
  ],
  "105201": [
      "105201 SET MEMORY ELEMENT IF INIT      3303 = Microsoft",
      "105206 JUMP      105289",
      "105289 PUSH MEMORY ELEMENT IF INIT      3303 -> reg12",
      "105292 JUMP OR RETURN VAL      reg12"
  ],
  "105208": [
      "105208 NEW REGEXP      Linux ,  -> reg10",
      "105216 GET      reg10[test] -> reg11",
      "105222 NEW ARRAY      1 -> reg13",
      "105225 PUSH MEMORY ELEMENT IF INIT      3302 -> reg12",
      "105228 PUT      reg13[0] = reg12",
      "105232 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg13",
      "105236 SET      reg2 -> reg8",
      "105239 JUMP IF TRUE      reg8 TO: 105276 | 105242"
  ],
  "105242": [
      "105242 NEW REGEXP      CrOS ,  -> reg11",
      "105250 GET      reg11[test] -> reg15",
      "105256 NEW ARRAY      1 -> reg13",
      "105259 PUSH MEMORY ELEMENT IF INIT      3302 -> reg14",
      "105262 PUT      reg13[0] = reg14",
      "105266 CALL FUNCTION      OBJ: reg11 FUNC: reg15 ARGS: reg13",
      "105270 SET      reg2 -> reg12",
      "105273 SET      reg12 -> reg8",
      "105276 JUMP IF FALSE      reg8 TO: 105286 | 105279"
  ],
  "105276": ["105276 JUMP IF FALSE      reg8 TO: 105286 | 105279"],
  "105279": [
      "105279 SET MEMORY ELEMENT IF INIT      3303 = Linux",
      "105284 JUMP      105289",
      "105289 PUSH MEMORY ELEMENT IF INIT      3303 -> reg12",
      "105292 JUMP OR RETURN VAL      reg12"
  ],
  "105286": [
      "105286 SET MEMORY ELEMENT IF INIT      3303 = null",
      "105289 PUSH MEMORY ELEMENT IF INIT      3303 -> reg12",
      "105292 JUMP OR RETURN VAL      reg12"
  ],
  "105366": [
      "105366 EMPTY OBJECT      -> reg4",
      "105368 NEW ARRAY      1 -> reg9",
      "105371 PUT      reg9[0] = Microsoft",
      "105377 PUT      reg4[platforms] = reg9",
      "105383 SET MEMORY ELEMENT IF INIT      3314 = reg4",
      "105386 JUMP      105550",
      "105550 PUSH MEMORY ELEMENT IF INIT      3314 -> reg11",
      "105553 JUMP OR RETURN VAL      reg11"
  ],
  "105388": [
      "105388 PUSH MEMORY ELEMENT IF INIT      3296 -> reg7",
      "105391 GET      reg7[includes] -> reg8",
      "105397 NEW ARRAY      1 -> reg9",
      "105400 PUSH MEMORY ELEMENT IF INIT      3313 -> reg12",
      "105403 PUT      reg9[0] = reg12",
      "105407 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "105411 SET      reg2 -> reg4",
      "105414 JUMP IF FALSE      reg4 TO: 105439 | 105417"
  ],
  "105417": [
      "105417 EMPTY OBJECT      -> reg4",
      "105419 NEW ARRAY      1 -> reg8",
      "105422 PUT      reg8[0] = Linux",
      "105428 PUT      reg4[platforms] = reg8",
      "105434 SET MEMORY ELEMENT IF INIT      3314 = reg4",
      "105437 JUMP      105550",
      "105550 PUSH MEMORY ELEMENT IF INIT      3314 -> reg11",
      "105553 JUMP OR RETURN VAL      reg11"
  ],
  "105439": [
      "105439 PUSH MEMORY ELEMENT IF INIT      3313 -> reg4",
      "105442 STRICT EQUAL      reg4 === IPHONE -> reg8",
      "105448 JUMP IF FALSE      reg8 TO: 105473 | 105451"
  ],
  "105451": [
      "105451 EMPTY OBJECT      -> reg4",
      "105453 NEW ARRAY      1 -> reg8",
      "105456 PUT      reg8[0] = iPhone",
      "105462 PUT      reg4[platforms] = reg8",
      "105468 SET MEMORY ELEMENT IF INIT      3314 = reg4",
      "105471 JUMP      105550",
      "105550 PUSH MEMORY ELEMENT IF INIT      3314 -> reg11",
      "105553 JUMP OR RETURN VAL      reg11"
  ],
  "105473": [
      "105473 PUSH MEMORY ELEMENT IF INIT      3313 -> reg4",
      "105476 STRICT EQUAL      reg4 === IPAD -> reg8",
      "105482 JUMP IF FALSE      reg8 TO: 105507 | 105485"
  ],
  "105485": [
      "105485 EMPTY OBJECT      -> reg4",
      "105487 NEW ARRAY      1 -> reg8",
      "105490 PUT      reg8[0] = iPad",
      "105496 PUT      reg4[platforms] = reg8",
      "105502 SET MEMORY ELEMENT IF INIT      3314 = reg4",
      "105505 JUMP      105550",
      "105550 PUSH MEMORY ELEMENT IF INIT      3314 -> reg11",
      "105553 JUMP OR RETURN VAL      reg11"
  ],
  "105507": [
      "105507 PUSH MEMORY ELEMENT IF INIT      3313 -> reg9",
      "105510 STRICT EQUAL      reg9 === MACINTEL -> reg4",
      "105516 JUMP IF FALSE      reg4 TO: 105547 | 105519"
  ],
  "105519": [
      "105519 EMPTY OBJECT      -> reg4",
      "105521 NEW ARRAY      2 -> reg9",
      "105524 PUT      reg9[0] = Mac",
      "105530 PUT      reg9[1] = iPad",
      "105536 PUT      reg4[platforms] = reg9",
      "105542 SET MEMORY ELEMENT IF INIT      3314 = reg4",
      "105545 JUMP      105550",
      "105550 PUSH MEMORY ELEMENT IF INIT      3314 -> reg11",
      "105553 JUMP OR RETURN VAL      reg11"
  ],
  "105547": [
      "105547 SET MEMORY ELEMENT IF INIT      3314 = null",
      "105550 PUSH MEMORY ELEMENT IF INIT      3314 -> reg11",
      "105553 JUMP OR RETURN VAL      reg11"
  ],
  "105690": [
      "105690 PUSH MEMORY ELEMENT IF INIT      3297 -> reg6",
      "105693 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "105697 SET      reg4 -> reg5",
      "105700 JUMP IF FALSE      reg5 TO: 105873 | 105703"
  ],
  "105700": ["105700 JUMP IF FALSE      reg5 TO: 105873 | 105703"],
  "105703": [
      "105703 SET MEMORY ELEMENT IF INIT      3299 = 0",
      "105706 PUSH MEMORY ELEMENT IF INIT      3299 -> reg4",
      "105709 PUSH MEMORY ELEMENT IF INIT      3298 -> reg5",
      "105712 GET      reg5[platforms] -> reg7",
      "105718 GET      reg7[length] -> reg5",
      "105724 LESS THAN      reg4 < reg5 -> reg6",
      "105728 JUMP IF FALSE      reg6 TO: 105871 | 105731"
  ],
  "105731": [
      "105731 PUSH MEMORY ELEMENT IF INIT      3298 -> reg4",
      "105734 GET      reg4[platforms] -> reg5",
      "105740 PUSH MEMORY ELEMENT IF INIT      3299 -> reg4",
      "105743 GET      reg5[reg4] -> reg8",
      "105747 PUSH MEMORY ELEMENT IF INIT      3297 -> reg5",
      "105750 EQUAL      reg8 == reg5 -> reg4",
      "105754 JUMP IF FALSE      reg4 TO: 105856 | 105757"
  ],
  "105757": [
      "105757 EMPTY OBJECT      -> reg4",
      "105759 PUT      reg4[verdict] = false",
      "105765 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "105768 GET      reg7[stringify] -> reg8",
      "105774 NEW ARRAY      1 -> reg5",
      "105777 EMPTY OBJECT      -> reg10",
      "105779 GET WINDOW PROP      navigator -> reg9",
      "105784 GET      reg9[userAgent] -> reg11",
      "105790 PUT      reg10[ua] = reg11",
      "105796 GET WINDOW PROP      navigator -> reg9",
      "105801 GET      reg9[platform] -> reg11",
      "105807 PUT      reg10[plat] = reg11",
      "105813 PUSH MEMORY ELEMENT IF INIT      3297 -> reg11",
      "105816 PUT      reg10[c_useragent] = reg11",
      "105822 PUSH MEMORY ELEMENT IF INIT      3298 -> reg9",
      "105825 PUT      reg10[c_platform] = reg9",
      "105831 PUT      reg5[0] = reg10",
      "105835 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg5",
      "105839 SET      reg2 -> reg6",
      "105842 PUT      reg4[raw] = reg6",
      "105848 PUT      reg4[error] = false",
      "105854 JUMP OR RETURN VAL      reg4"
  ],
  "105856": [
      "105856 PUSH MEMORY ELEMENT IF INIT      3299 -> reg5",
      "105859 SET      reg5 -> reg6",
      "105862 ADD      reg51-> reg5",
      "105866 SET MEMORY ELEMENT IF INIT      3299 = reg5",
      "105869 JUMP      105706",
      "105706 PUSH MEMORY ELEMENT IF INIT      3299 -> reg4",
      "105709 PUSH MEMORY ELEMENT IF INIT      3298 -> reg5",
      "105712 GET      reg5[platforms] -> reg7",
      "105718 GET      reg7[length] -> reg5",
      "105724 LESS THAN      reg4 < reg5 -> reg6",
      "105728 JUMP IF FALSE      reg6 TO: 105871 | 105731"
  ],
  "105871": [
      "105871 JUMP      105995",
      "105995 EMPTY OBJECT      -> reg4",
      "105997 PUT      reg4[verdict] = true",
      "106003 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "106006 GET      reg11[stringify] -> reg8",
      "106012 NEW ARRAY      1 -> reg9",
      "106015 EMPTY OBJECT      -> reg13",
      "106017 GET WINDOW PROP      navigator -> reg6",
      "106022 GET      reg6[userAgent] -> reg14",
      "106028 PUT      reg13[ua] = reg14",
      "106034 GET WINDOW PROP      navigator -> reg6",
      "106039 GET      reg6[platform] -> reg12",
      "106045 PUT      reg13[plat] = reg12",
      "106051 PUSH MEMORY ELEMENT IF INIT      3297 -> reg6",
      "106054 PUT      reg13[c_useragent] = reg6",
      "106060 PUSH MEMORY ELEMENT IF INIT      3298 -> reg12",
      "106063 PUT      reg13[c_platform] = reg12",
      "106069 PUT      reg9[0] = reg13",
      "106073 CALL FUNCTION      OBJ: reg11 FUNC: reg8 ARGS: reg9",
      "106077 SET      reg2 -> reg5",
      "106080 PUT      reg4[raw] = reg5",
      "106086 PUT      reg4[error] = false",
      "106092 JUMP OR RETURN VAL      reg4"
  ],
  "105873": [
      "105873 PUSH MEMORY ELEMENT IF INIT      3298 -> reg5",
      "105876 STRICT EQUAL      reg5 === null -> reg4",
      "105880 JUMP IF TRUE      reg4 TO: 105893 | 105883"
  ],
  "105883": [
      "105883 PUSH MEMORY ELEMENT IF INIT      3297 -> reg6",
      "105886 STRICT EQUAL      reg6 === null -> reg8",
      "105890 SET      reg8 -> reg4",
      "105893 JUMP IF FALSE      reg4 TO: 105995 | 105896"
  ],
  "105893": ["105893 JUMP IF FALSE      reg4 TO: 105995 | 105896"],
  "105896": [
      "105896 EMPTY OBJECT      -> reg4",
      "105898 PUT      reg4[verdict] = false",
      "105904 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "105907 GET      reg10[stringify] -> reg6",
      "105913 NEW ARRAY      1 -> reg11",
      "105916 EMPTY OBJECT      -> reg9",
      "105918 GET WINDOW PROP      navigator -> reg8",
      "105923 GET      reg8[userAgent] -> reg12",
      "105929 PUT      reg9[ua] = reg12",
      "105935 GET WINDOW PROP      navigator -> reg8",
      "105940 GET      reg8[platform] -> reg12",
      "105946 PUT      reg9[plat] = reg12",
      "105952 PUSH MEMORY ELEMENT IF INIT      3297 -> reg8",
      "105955 PUT      reg9[c_useragent] = reg8",
      "105961 PUSH MEMORY ELEMENT IF INIT      3298 -> reg8",
      "105964 PUT      reg9[c_platform] = reg8",
      "105970 PUT      reg11[0] = reg9",
      "105974 CALL FUNCTION      OBJ: reg10 FUNC: reg6 ARGS: reg11",
      "105978 SET      reg2 -> reg5",
      "105981 PUT      reg4[raw] = reg5",
      "105987 PUT      reg4[error] = false",
      "105993 JUMP OR RETURN VAL      reg4"
  ],
  "105995": [
      "105995 EMPTY OBJECT      -> reg4",
      "105997 PUT      reg4[verdict] = true",
      "106003 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "106006 GET      reg11[stringify] -> reg8",
      "106012 NEW ARRAY      1 -> reg9",
      "106015 EMPTY OBJECT      -> reg13",
      "106017 GET WINDOW PROP      navigator -> reg6",
      "106022 GET      reg6[userAgent] -> reg14",
      "106028 PUT      reg13[ua] = reg14",
      "106034 GET WINDOW PROP      navigator -> reg6",
      "106039 GET      reg6[platform] -> reg12",
      "106045 PUT      reg13[plat] = reg12",
      "106051 PUSH MEMORY ELEMENT IF INIT      3297 -> reg6",
      "106054 PUT      reg13[c_useragent] = reg6",
      "106060 PUSH MEMORY ELEMENT IF INIT      3298 -> reg12",
      "106063 PUT      reg13[c_platform] = reg12",
      "106069 PUT      reg9[0] = reg13",
      "106073 CALL FUNCTION      OBJ: reg11 FUNC: reg8 ARGS: reg9",
      "106077 SET      reg2 -> reg5",
      "106080 PUT      reg4[raw] = reg5",
      "106086 PUT      reg4[error] = false",
      "106092 JUMP OR RETURN VAL      reg4"
  ],
  "106096": [
      "106096 SET I      null",
      "106098 PUSH F.K      -> reg4",
      "106100 VOID F",
      "106101 SET MEMORY ELEMENT      0 = reg4",
      "106104 EMPTY OBJECT      -> reg4",
      "106106 PUT      reg4[verdict] = false",
      "106112 PUSH MEMORY ELEMENT IF INIT      0 -> reg12",
      "106115 GET      reg12[toString] -> reg5",
      "106121 EMPTY ARRAY      -> reg8",
      "106123 CALL FUNCTION      OBJ: reg12 FUNC: reg5 ARGS: reg8",
      "106127 SET      reg2 -> reg6",
      "106130 PUT      reg4[raw] = reg6",
      "106136 PUT      reg4[error] = true",
      "106142 JUMP OR RETURN VAL      reg4"
  ],
  "106322": [
      "106322 PUSH MEMORY ELEMENT IF INIT      3330 -> reg6",
      "106325 GET      reg6[value] -> reg8",
      "106331 SET MEMORY ELEMENT IF INIT      3331 = reg8",
      "106334 PUSH MEMORY ELEMENT IF INIT      3331 -> reg8",
      "106337 GET      reg8[href] -> reg9",
      "106343 JUMP IF FALSE      reg9 TO: 106386 | 106346"
  ],
  "106346": [
      "106346 PUSH MEMORY ELEMENT IF INIT      3327 -> reg9",
      "106349 GET      reg9[h] -> reg8",
      "106355 GET      reg8[push] -> reg9",
      "106361 NEW ARRAY      1 -> reg11",
      "106364 PUSH MEMORY ELEMENT IF INIT      3331 -> reg10",
      "106367 GET      reg10[href] -> reg12",
      "106373 PUT      reg11[0] = reg12",
      "106377 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg11",
      "106381 SET      reg2 -> reg6",
      "106384 JUMP      106649",
      "106649 JUMP      106289",
      "106289 PUSH MEMORY ELEMENT IF INIT      3329 -> reg7",
      "106292 GET      reg7[n] -> reg8",
      "106298 EMPTY ARRAY      -> reg9",
      "106300 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "106304 SET      reg2 -> reg6",
      "106307 SET MEMORY ELEMENT IF INIT      3330 = reg6",
      "106310 GET      reg6[done] -> reg9",
      "106316 NOT      reg9 -> reg10",
      "106319 JUMP IF FALSE      reg10 TO: 106651 | 106322"
  ],
  "106386": [
      "106386 PUSH MEMORY ELEMENT IF INIT      21 -> reg9",
      "106389 NEW ARRAY      1 -> reg10",
      "106392 PUSH MEMORY ELEMENT IF INIT      3331 -> reg11",
      "106395 GET      reg11[cssRules] -> reg12",
      "106401 PUT      reg10[0] = reg12",
      "106405 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "106409 SET      reg2 -> reg6",
      "106412 SET MEMORY ELEMENT IF INIT      3332 = reg6",
      "106415 SET I      106590",
      "106417 SET N      106624",
      "106419 PUSH MEMORY ELEMENT IF INIT      3332 -> reg10",
      "106422 GET      reg10[s] -> reg11",
      "106428 EMPTY ARRAY      -> reg6",
      "106430 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg6",
      "106434 SET      reg2 -> reg9",
      "106437 PUSH MEMORY ELEMENT IF INIT      3332 -> reg11",
      "106440 GET      reg11[n] -> reg12",
      "106446 EMPTY ARRAY      -> reg14",
      "106448 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg14",
      "106452 SET      reg2 -> reg6",
      "106455 SET MEMORY ELEMENT IF INIT      3333 = reg6",
      "106458 GET      reg6[done] -> reg12",
      "106464 NOT      reg12 -> reg6",
      "106467 JUMP IF FALSE      reg6 TO: 106588 | 106470"
  ],
  "106470": [
      "106470 PUSH MEMORY ELEMENT IF INIT      3333 -> reg13",
      "106473 GET      reg13[value] -> reg6",
      "106479 SET MEMORY ELEMENT IF INIT      3334 = reg6",
      "106482 PUSH MEMORY ELEMENT IF INIT      3334 -> reg6",
      "106485 GET      reg6[selectorText] -> reg12",
      "106491 TYPEOF      reg12 -> reg6",
      "106494 STRICT EQUAL      reg6 === string -> reg12",
      "106500 JUMP IF FALSE      reg12 TO: 106541 | 106503"
  ],
  "106503": [
      "106503 PUSH MEMORY ELEMENT IF INIT      3327 -> reg12",
      "106506 GET      reg12[st] -> reg14",
      "106512 GET      reg14[push] -> reg12",
      "106518 NEW ARRAY      1 -> reg13",
      "106521 PUSH MEMORY ELEMENT IF INIT      3334 -> reg16",
      "106524 GET      reg16[selectorText] -> reg17",
      "106530 PUT      reg13[0] = reg17",
      "106534 CALL FUNCTION      OBJ: reg14 FUNC: reg12 ARGS: reg13",
      "106538 SET      reg2 -> reg6",
      "106541 PUSH MEMORY ELEMENT IF INIT      3334 -> reg12",
      "106544 GET      reg12[cssText] -> reg13",
      "106550 GET      reg13[indexOf] -> reg12",
      "106556 NEW ARRAY      1 -> reg15",
      "106559 PUT      reg15[0] = p-mouse-pointer",
      "106565 CALL FUNCTION      OBJ: reg13 FUNC: reg12 ARGS: reg15",
      "106569 SET      reg2 -> reg6",
      "106572 SUBTRACT      0 - 1 -> reg12",
      "106576 GREATER THAN      reg6 > reg12 -> reg15",
      "106580 JUMP IF FALSE      reg15 TO: 106586 | 106583"
  ],
  "106541": [
      "106541 PUSH MEMORY ELEMENT IF INIT      3334 -> reg12",
      "106544 GET      reg12[cssText] -> reg13",
      "106550 GET      reg13[indexOf] -> reg12",
      "106556 NEW ARRAY      1 -> reg15",
      "106559 PUT      reg15[0] = p-mouse-pointer",
      "106565 CALL FUNCTION      OBJ: reg13 FUNC: reg12 ARGS: reg15",
      "106569 SET      reg2 -> reg6",
      "106572 SUBTRACT      0 - 1 -> reg12",
      "106576 GREATER THAN      reg6 > reg12 -> reg15",
      "106580 JUMP IF FALSE      reg15 TO: 106586 | 106583"
  ],
  "106583": [
      "106583 SET MEMORY ELEMENT IF INIT      3328 = true",
      "106586 JUMP      106437",
      "106437 PUSH MEMORY ELEMENT IF INIT      3332 -> reg11",
      "106440 GET      reg11[n] -> reg12",
      "106446 EMPTY ARRAY      -> reg14",
      "106448 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg14",
      "106452 SET      reg2 -> reg6",
      "106455 SET MEMORY ELEMENT IF INIT      3333 = reg6",
      "106458 GET      reg6[done] -> reg12",
      "106464 NOT      reg12 -> reg6",
      "106467 JUMP IF FALSE      reg6 TO: 106588 | 106470"
  ],
  "106586": [
      "106586 JUMP      106437",
      "106437 PUSH MEMORY ELEMENT IF INIT      3332 -> reg11",
      "106440 GET      reg11[n] -> reg12",
      "106446 EMPTY ARRAY      -> reg14",
      "106448 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg14",
      "106452 SET      reg2 -> reg6",
      "106455 SET MEMORY ELEMENT IF INIT      3333 = reg6",
      "106458 GET      reg6[done] -> reg12",
      "106464 NOT      reg12 -> reg6",
      "106467 JUMP IF FALSE      reg6 TO: 106588 | 106470"
  ],
  "106588": [
      "106588 JUMP      106624",
      "106624 SET I      106653",
      "106626 SET N      106687",
      "106628 PUSH MEMORY ELEMENT IF INIT      3332 -> reg6",
      "106631 GET      reg6[f] -> reg16",
      "106637 EMPTY ARRAY      -> reg19",
      "106639 CALL FUNCTION      OBJ: reg6 FUNC: reg16 ARGS: reg19",
      "106643 SET      reg2 -> reg15",
      "106646 HANDLE TRACE OR JUMP OR RETURN C",
      "106647 SET I      106653",
      "106649 JUMP      106289",
      "106289 PUSH MEMORY ELEMENT IF INIT      3329 -> reg7",
      "106292 GET      reg7[n] -> reg8",
      "106298 EMPTY ARRAY      -> reg9",
      "106300 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "106304 SET      reg2 -> reg6",
      "106307 SET MEMORY ELEMENT IF INIT      3330 = reg6",
      "106310 GET      reg6[done] -> reg9",
      "106316 NOT      reg9 -> reg10",
      "106319 JUMP IF FALSE      reg10 TO: 106651 | 106322"
  ],
  "106590": [
      "106590 SET I      106624",
      "106592 PUSH F.K      -> reg6",
      "106594 VOID F",
      "106595 SET MEMORY ELEMENT      0 = reg6",
      "106598 PUSH MEMORY ELEMENT IF INIT      3332 -> reg12",
      "106601 GET      reg12[e] -> reg15",
      "106607 NEW ARRAY      1 -> reg16",
      "106610 PUSH MEMORY ELEMENT IF INIT      0 -> reg18",
      "106613 PUT      reg16[0] = reg18",
      "106617 CALL FUNCTION      OBJ: reg12 FUNC: reg15 ARGS: reg16",
      "106621 SET      reg2 -> reg6",
      "106624 SET I      106653",
      "106626 SET N      106687",
      "106628 PUSH MEMORY ELEMENT IF INIT      3332 -> reg6",
      "106631 GET      reg6[f] -> reg16",
      "106637 EMPTY ARRAY      -> reg19",
      "106639 CALL FUNCTION      OBJ: reg6 FUNC: reg16 ARGS: reg19",
      "106643 SET      reg2 -> reg15",
      "106646 HANDLE TRACE OR JUMP OR RETURN C",
      "106647 SET I      106653",
      "106649 JUMP      106289",
      "106289 PUSH MEMORY ELEMENT IF INIT      3329 -> reg7",
      "106292 GET      reg7[n] -> reg8",
      "106298 EMPTY ARRAY      -> reg9",
      "106300 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "106304 SET      reg2 -> reg6",
      "106307 SET MEMORY ELEMENT IF INIT      3330 = reg6",
      "106310 GET      reg6[done] -> reg9",
      "106316 NOT      reg9 -> reg10",
      "106319 JUMP IF FALSE      reg10 TO: 106651 | 106322"
  ],
  "106624": [
      "106624 SET I      106653",
      "106626 SET N      106687",
      "106628 PUSH MEMORY ELEMENT IF INIT      3332 -> reg6",
      "106631 GET      reg6[f] -> reg16",
      "106637 EMPTY ARRAY      -> reg19",
      "106639 CALL FUNCTION      OBJ: reg6 FUNC: reg16 ARGS: reg19",
      "106643 SET      reg2 -> reg15",
      "106646 HANDLE TRACE OR JUMP OR RETURN C",
      "106647 SET I      106653",
      "106649 JUMP      106289",
      "106289 PUSH MEMORY ELEMENT IF INIT      3329 -> reg7",
      "106292 GET      reg7[n] -> reg8",
      "106298 EMPTY ARRAY      -> reg9",
      "106300 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "106304 SET      reg2 -> reg6",
      "106307 SET MEMORY ELEMENT IF INIT      3330 = reg6",
      "106310 GET      reg6[done] -> reg9",
      "106316 NOT      reg9 -> reg10",
      "106319 JUMP IF FALSE      reg10 TO: 106651 | 106322"
  ],
  "106651": [
      "106651 JUMP      106687",
      "106687 SET I      106765",
      "106689 SET N      null",
      "106691 PUSH MEMORY ELEMENT IF INIT      3329 -> reg16",
      "106694 GET      reg16[f] -> reg18",
      "106700 EMPTY ARRAY      -> reg19",
      "106702 CALL FUNCTION      OBJ: reg16 FUNC: reg18 ARGS: reg19",
      "106706 SET      reg2 -> reg15",
      "106709 HANDLE TRACE OR JUMP OR RETURN C",
      "106710 SET I      106765",
      "106712 EMPTY OBJECT      -> reg15",
      "106714 PUSH MEMORY ELEMENT IF INIT      3328 -> reg18",
      "106717 PUT      reg15[verdict] = reg18",
      "106723 PUSH MEMORY ELEMENT IF INIT      280 -> reg19",
      "106726 GET      reg19[stringify] -> reg20",
      "106732 NEW ARRAY      1 -> reg21",
      "106735 PUSH MEMORY ELEMENT IF INIT      3327 -> reg22",
      "106738 PUT      reg21[0] = reg22",
      "106742 CALL FUNCTION      OBJ: reg19 FUNC: reg20 ARGS: reg21",
      "106746 SET      reg2 -> reg18",
      "106749 PUT      reg15[raw] = reg18",
      "106755 PUT      reg15[error] = false",
      "106761 JUMP OR RETURN VAL      reg15"
  ],
  "106653": [
      "106653 SET I      106687",
      "106655 PUSH F.K      -> reg15",
      "106657 VOID F",
      "106658 SET MEMORY ELEMENT      0 = reg15",
      "106661 PUSH MEMORY ELEMENT IF INIT      3329 -> reg17",
      "106664 GET      reg17[e] -> reg19",
      "106670 NEW ARRAY      1 -> reg16",
      "106673 PUSH MEMORY ELEMENT IF INIT      0 -> reg18",
      "106676 PUT      reg16[0] = reg18",
      "106680 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg16",
      "106684 SET      reg2 -> reg15",
      "106687 SET I      106765",
      "106689 SET N      null",
      "106691 PUSH MEMORY ELEMENT IF INIT      3329 -> reg16",
      "106694 GET      reg16[f] -> reg18",
      "106700 EMPTY ARRAY      -> reg19",
      "106702 CALL FUNCTION      OBJ: reg16 FUNC: reg18 ARGS: reg19",
      "106706 SET      reg2 -> reg15",
      "106709 HANDLE TRACE OR JUMP OR RETURN C",
      "106710 SET I      106765",
      "106712 EMPTY OBJECT      -> reg15",
      "106714 PUSH MEMORY ELEMENT IF INIT      3328 -> reg18",
      "106717 PUT      reg15[verdict] = reg18",
      "106723 PUSH MEMORY ELEMENT IF INIT      280 -> reg19",
      "106726 GET      reg19[stringify] -> reg20",
      "106732 NEW ARRAY      1 -> reg21",
      "106735 PUSH MEMORY ELEMENT IF INIT      3327 -> reg22",
      "106738 PUT      reg21[0] = reg22",
      "106742 CALL FUNCTION      OBJ: reg19 FUNC: reg20 ARGS: reg21",
      "106746 SET      reg2 -> reg18",
      "106749 PUT      reg15[raw] = reg18",
      "106755 PUT      reg15[error] = false",
      "106761 JUMP OR RETURN VAL      reg15"
  ],
  "106687": [
      "106687 SET I      106765",
      "106689 SET N      null",
      "106691 PUSH MEMORY ELEMENT IF INIT      3329 -> reg16",
      "106694 GET      reg16[f] -> reg18",
      "106700 EMPTY ARRAY      -> reg19",
      "106702 CALL FUNCTION      OBJ: reg16 FUNC: reg18 ARGS: reg19",
      "106706 SET      reg2 -> reg15",
      "106709 HANDLE TRACE OR JUMP OR RETURN C",
      "106710 SET I      106765",
      "106712 EMPTY OBJECT      -> reg15",
      "106714 PUSH MEMORY ELEMENT IF INIT      3328 -> reg18",
      "106717 PUT      reg15[verdict] = reg18",
      "106723 PUSH MEMORY ELEMENT IF INIT      280 -> reg19",
      "106726 GET      reg19[stringify] -> reg20",
      "106732 NEW ARRAY      1 -> reg21",
      "106735 PUSH MEMORY ELEMENT IF INIT      3327 -> reg22",
      "106738 PUT      reg21[0] = reg22",
      "106742 CALL FUNCTION      OBJ: reg19 FUNC: reg20 ARGS: reg21",
      "106746 SET      reg2 -> reg18",
      "106749 PUT      reg15[raw] = reg18",
      "106755 PUT      reg15[error] = false",
      "106761 JUMP OR RETURN VAL      reg15"
  ],
  "106765": [
      "106765 SET I      null",
      "106767 PUSH F.K      -> reg15",
      "106769 VOID F",
      "106770 SET MEMORY ELEMENT      0 = reg15",
      "106773 EMPTY OBJECT      -> reg15",
      "106775 PUT      reg15[verdict] = false",
      "106781 PUSH MEMORY ELEMENT IF INIT      0 -> reg18",
      "106784 GET      reg18[stack] -> reg20",
      "106790 PUT      reg15[raw] = reg20",
      "106796 PUT      reg15[error] = true",
      "106802 JUMP OR RETURN VAL      reg15"
  ],
  "107046": [
      "107046 SET I      null",
      "107048 PUSH F.K      -> reg6",
      "107050 VOID F",
      "107051 SET MEMORY ELEMENT      0 = reg6",
      "107054 EMPTY OBJECT      -> reg5",
      "107056 PUT      reg5[verdict] = false",
      "107062 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "107065 GET      reg6[toString] -> reg9",
      "107071 EMPTY ARRAY      -> reg17",
      "107073 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg17",
      "107077 SET      reg2 -> reg13",
      "107080 PUT      reg5[raw] = reg13",
      "107086 PUT      reg5[error] = true",
      "107092 JUMP OR RETURN VAL      reg5"
  ],
  "107213": ["107213 JUMP OR RETURN VAL      false"],
  "107215": ["107215 JUMP OR RETURN VAL      true"],
  "107291": [
      "107291 PUSH MEMORY ELEMENT IF INIT      3349 -> reg5",
      "107294 STRICT EQUAL      reg5 === 0 -> reg7",
      "107298 SET      reg7 -> reg4",
      "107301 JUMP IF FALSE      reg4 TO: 107307 | 107304"
  ],
  "107301": ["107301 JUMP IF FALSE      reg4 TO: 107307 | 107304"],
  "107304": [
      "107304 SET MEMORY ELEMENT IF INIT      3351 = true",
      "107307 EMPTY OBJECT      -> reg6",
      "107309 PUSH MEMORY ELEMENT IF INIT      3348 -> reg7",
      "107312 PUT      reg6[pl] = reg7",
      "107318 PUSH MEMORY ELEMENT IF INIT      3349 -> reg4",
      "107321 PUT      reg6[mtp] = reg4",
      "107327 PUSH MEMORY ELEMENT IF INIT      3350 -> reg4",
      "107330 PUT      reg6[imr] = reg4",
      "107336 SET MEMORY ELEMENT IF INIT      3352 = reg6",
      "107339 EMPTY OBJECT      -> reg4",
      "107341 PUSH MEMORY ELEMENT IF INIT      3351 -> reg5",
      "107344 PUT      reg4[verdict] = reg5",
      "107350 PUSH MEMORY ELEMENT IF INIT      280 -> reg5",
      "107353 GET      reg5[stringify] -> reg8",
      "107359 NEW ARRAY      1 -> reg7",
      "107362 PUSH MEMORY ELEMENT IF INIT      3352 -> reg9",
      "107365 PUT      reg7[0] = reg9",
      "107369 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg7",
      "107373 SET      reg2 -> reg6",
      "107376 PUT      reg4[raw] = reg6",
      "107382 PUT      reg4[error] = false",
      "107388 JUMP OR RETURN VAL      reg4"
  ],
  "107307": [
      "107307 EMPTY OBJECT      -> reg6",
      "107309 PUSH MEMORY ELEMENT IF INIT      3348 -> reg7",
      "107312 PUT      reg6[pl] = reg7",
      "107318 PUSH MEMORY ELEMENT IF INIT      3349 -> reg4",
      "107321 PUT      reg6[mtp] = reg4",
      "107327 PUSH MEMORY ELEMENT IF INIT      3350 -> reg4",
      "107330 PUT      reg6[imr] = reg4",
      "107336 SET MEMORY ELEMENT IF INIT      3352 = reg6",
      "107339 EMPTY OBJECT      -> reg4",
      "107341 PUSH MEMORY ELEMENT IF INIT      3351 -> reg5",
      "107344 PUT      reg4[verdict] = reg5",
      "107350 PUSH MEMORY ELEMENT IF INIT      280 -> reg5",
      "107353 GET      reg5[stringify] -> reg8",
      "107359 NEW ARRAY      1 -> reg7",
      "107362 PUSH MEMORY ELEMENT IF INIT      3352 -> reg9",
      "107365 PUT      reg7[0] = reg9",
      "107369 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg7",
      "107373 SET      reg2 -> reg6",
      "107376 PUT      reg4[raw] = reg6",
      "107382 PUT      reg4[error] = false",
      "107388 JUMP OR RETURN VAL      reg4"
  ],
  "107392": [
      "107392 SET I      null",
      "107394 PUSH F.K      -> reg4",
      "107396 VOID F",
      "107397 SET MEMORY ELEMENT      0 = reg4",
      "107400 EMPTY OBJECT      -> reg4",
      "107402 PUT      reg4[verdict] = false",
      "107408 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "107411 GET      reg7[toString] -> reg8",
      "107417 EMPTY ARRAY      -> reg10",
      "107419 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "107423 SET      reg2 -> reg6",
      "107426 PUT      reg4[raw] = reg6",
      "107432 PUT      reg4[error] = true",
      "107438 JUMP OR RETURN VAL      reg4"
  ],
  "107580": [
      "107580 SET I      null",
      "107582 PUSH F.K      -> reg5",
      "107584 VOID F",
      "107585 SET MEMORY ELEMENT      0 = reg5",
      "107588 PUSH MEMORY ELEMENT IF INIT      3367 -> reg6",
      "107591 GET      reg6[push] -> reg8",
      "107597 NEW ARRAY      1 -> reg7",
      "107600 GET WINDOW PROP      Math -> reg11",
      "107605 GET      reg11[floor] -> reg12",
      "107611 NEW ARRAY      1 -> reg14",
      "107614 GET WINDOW PROP      Math -> reg15",
      "107619 GET      reg15[random] -> reg17",
      "107625 EMPTY ARRAY      -> reg18",
      "107627 CALL FUNCTION      OBJ: reg15 FUNC: reg17 ARGS: reg18",
      "107631 SET      reg2 -> reg16",
      "107634 PUSH MEMORY ELEMENT IF INIT      3368 -> reg17",
      "107637 MULTIPLY      reg16 * reg17 -> reg19",
      "107641 PUT      reg14[0] = reg19",
      "107645 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg14",
      "107649 SET      reg2 -> reg10",
      "107652 PUT      reg7[0] = reg10",
      "107656 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg7",
      "107660 SET      reg2 -> reg5",
      "107663 SET I      null",
      "107665 SET I      107737",
      "107667 PUSH MEMORY ELEMENT IF INIT      3367 -> reg7",
      "107670 GET      reg7[push] -> reg8",
      "107676 NEW ARRAY      1 -> reg10",
      "107679 GET WINDOW PROP      crypto -> reg17",
      "107684 GET      reg17[getRandomValues] -> reg14",
      "107690 NEW ARRAY      1 -> reg16",
      "107693 GET WINDOW PROP      Uint8Array -> reg18",
      "107698 NEW ARRAY      1 -> reg21",
      "107701 PUT      reg21[0] = 1",
      "107705 BIND APPLY      reg18 reg21 -> 19",
      "107709 PUT      reg16[0] = reg19",
      "107713 CALL FUNCTION      OBJ: reg17 FUNC: reg14 ARGS: reg16",
      "107717 SET      reg2 -> reg12",
      "107720 GET      reg12[0] -> reg14",
      "107724 PUT      reg10[0] = reg14",
      "107728 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "107732 SET      reg2 -> reg5",
      "107735 JUMP      107820",
      "107820 SET I      null",
      "107822 SET I      107880",
      "107824 PUSH MEMORY ELEMENT IF INIT      3367 -> reg8",
      "107827 GET      reg8[push] -> reg10",
      "107833 NEW ARRAY      1 -> reg16",
      "107836 GET WINDOW PROP      Event -> reg22",
      "107841 NEW ARRAY      1 -> reg19",
      "107844 PUT      reg19[0] = load",
      "107850 BIND APPLY      reg22 reg19 -> 18",
      "107854 GET      reg18[timeStamp] -> reg20",
      "107860 PUSH MEMORY ELEMENT IF INIT      3368 -> reg18",
      "107863 MOD      reg20 % reg18 -> reg22",
      "107867 PUT      reg16[0] = reg22",
      "107871 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg16",
      "107875 SET      reg2 -> reg5",
      "107878 JUMP      107963",
      "107963 SET I      null",
      "107965 PUSH MEMORY ELEMENT IF INIT      3367 -> reg18",
      "107968 GET      reg18[push] -> reg16",
      "107974 NEW ARRAY      1 -> reg19",
      "107977 PUT      reg19[0] = 0",
      "107981 CALL FUNCTION      OBJ: reg18 FUNC: reg16 ARGS: reg19",
      "107985 SET      reg2 -> reg5",
      "107988 SET MEMORY ELEMENT IF INIT      3370 = 0",
      "107991 SET MEMORY ELEMENT IF INIT      3371 = 0",
      "107994 SET MEMORY ELEMENT IF INIT      3372 = 0",
      "107997 PUSH MEMORY ELEMENT IF INIT      3372 -> reg16",
      "108000 PUSH MEMORY ELEMENT IF INIT      3367 -> reg5",
      "108003 GET      reg5[length] -> reg22",
      "108009 LESS THAN      reg16 < reg22 -> reg5",
      "108013 JUMP IF FALSE      reg5 TO: 108115 | 108016"
  ],
  "107737": [
      "107737 SET I      null",
      "107739 PUSH F.K      -> reg8",
      "107741 VOID F",
      "107742 SET MEMORY ELEMENT      0 = reg8",
      "107745 PUSH MEMORY ELEMENT IF INIT      3367 -> reg12",
      "107748 GET      reg12[push] -> reg8",
      "107754 NEW ARRAY      1 -> reg16",
      "107757 GET WINDOW PROP      Math -> reg14",
      "107762 GET      reg14[floor] -> reg18",
      "107768 NEW ARRAY      1 -> reg20",
      "107771 GET WINDOW PROP      Math -> reg21",
      "107776 GET      reg21[random] -> reg23",
      "107782 EMPTY ARRAY      -> reg22",
      "107784 CALL FUNCTION      OBJ: reg21 FUNC: reg23 ARGS: reg22",
      "107788 SET      reg2 -> reg19",
      "107791 PUSH MEMORY ELEMENT IF INIT      3368 -> reg24",
      "107794 MULTIPLY      reg19 * reg24 -> reg22",
      "107798 PUT      reg20[0] = reg22",
      "107802 CALL FUNCTION      OBJ: reg14 FUNC: reg18 ARGS: reg20",
      "107806 SET      reg2 -> reg10",
      "107809 PUT      reg16[0] = reg10",
      "107813 CALL FUNCTION      OBJ: reg12 FUNC: reg8 ARGS: reg16",
      "107817 SET      reg2 -> reg5",
      "107820 SET I      null",
      "107822 SET I      107880",
      "107824 PUSH MEMORY ELEMENT IF INIT      3367 -> reg8",
      "107827 GET      reg8[push] -> reg10",
      "107833 NEW ARRAY      1 -> reg16",
      "107836 GET WINDOW PROP      Event -> reg22",
      "107841 NEW ARRAY      1 -> reg19",
      "107844 PUT      reg19[0] = load",
      "107850 BIND APPLY      reg22 reg19 -> 18",
      "107854 GET      reg18[timeStamp] -> reg20",
      "107860 PUSH MEMORY ELEMENT IF INIT      3368 -> reg18",
      "107863 MOD      reg20 % reg18 -> reg22",
      "107867 PUT      reg16[0] = reg22",
      "107871 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg16",
      "107875 SET      reg2 -> reg5",
      "107878 JUMP      107963",
      "107963 SET I      null",
      "107965 PUSH MEMORY ELEMENT IF INIT      3367 -> reg18",
      "107968 GET      reg18[push] -> reg16",
      "107974 NEW ARRAY      1 -> reg19",
      "107977 PUT      reg19[0] = 0",
      "107981 CALL FUNCTION      OBJ: reg18 FUNC: reg16 ARGS: reg19",
      "107985 SET      reg2 -> reg5",
      "107988 SET MEMORY ELEMENT IF INIT      3370 = 0",
      "107991 SET MEMORY ELEMENT IF INIT      3371 = 0",
      "107994 SET MEMORY ELEMENT IF INIT      3372 = 0",
      "107997 PUSH MEMORY ELEMENT IF INIT      3372 -> reg16",
      "108000 PUSH MEMORY ELEMENT IF INIT      3367 -> reg5",
      "108003 GET      reg5[length] -> reg22",
      "108009 LESS THAN      reg16 < reg22 -> reg5",
      "108013 JUMP IF FALSE      reg5 TO: 108115 | 108016"
  ],
  "107880": [
      "107880 SET I      null",
      "107882 PUSH F.K      -> reg5",
      "107884 VOID F",
      "107885 SET MEMORY ELEMENT      0 = reg5",
      "107888 PUSH MEMORY ELEMENT IF INIT      3367 -> reg10",
      "107891 GET      reg10[push] -> reg16",
      "107897 NEW ARRAY      1 -> reg18",
      "107900 GET WINDOW PROP      Math -> reg20",
      "107905 GET      reg20[floor] -> reg22",
      "107911 NEW ARRAY      1 -> reg23",
      "107914 GET WINDOW PROP      Math -> reg24",
      "107919 GET      reg24[random] -> reg26",
      "107925 EMPTY ARRAY      -> reg27",
      "107927 CALL FUNCTION      OBJ: reg24 FUNC: reg26 ARGS: reg27",
      "107931 SET      reg2 -> reg25",
      "107934 PUSH MEMORY ELEMENT IF INIT      3368 -> reg27",
      "107937 MULTIPLY      reg25 * reg27 -> reg26",
      "107941 PUT      reg23[0] = reg26",
      "107945 CALL FUNCTION      OBJ: reg20 FUNC: reg22 ARGS: reg23",
      "107949 SET      reg2 -> reg19",
      "107952 PUT      reg18[0] = reg19",
      "107956 CALL FUNCTION      OBJ: reg10 FUNC: reg16 ARGS: reg18",
      "107960 SET      reg2 -> reg5",
      "107963 SET I      null",
      "107965 PUSH MEMORY ELEMENT IF INIT      3367 -> reg18",
      "107968 GET      reg18[push] -> reg16",
      "107974 NEW ARRAY      1 -> reg19",
      "107977 PUT      reg19[0] = 0",
      "107981 CALL FUNCTION      OBJ: reg18 FUNC: reg16 ARGS: reg19",
      "107985 SET      reg2 -> reg5",
      "107988 SET MEMORY ELEMENT IF INIT      3370 = 0",
      "107991 SET MEMORY ELEMENT IF INIT      3371 = 0",
      "107994 SET MEMORY ELEMENT IF INIT      3372 = 0",
      "107997 PUSH MEMORY ELEMENT IF INIT      3372 -> reg16",
      "108000 PUSH MEMORY ELEMENT IF INIT      3367 -> reg5",
      "108003 GET      reg5[length] -> reg22",
      "108009 LESS THAN      reg16 < reg22 -> reg5",
      "108013 JUMP IF FALSE      reg5 TO: 108115 | 108016"
  ],
  "108016": [
      "108016 PUSH MEMORY ELEMENT IF INIT      3367 -> reg16",
      "108019 PUSH MEMORY ELEMENT IF INIT      3367 -> reg5",
      "108022 GET      reg5[length] -> reg22",
      "108028 SUBTRACT      reg22 - 1 -> reg5",
      "108032 PUSH MEMORY ELEMENT IF INIT      3371 -> reg19",
      "108035 PUSH MEMORY ELEMENT IF INIT      3369 -> reg22",
      "108038 MOD      reg19 % reg22 -> reg23",
      "108042 PUT      reg16[reg5] = reg23",
      "108046 PUSH MEMORY ELEMENT IF INIT      3371 -> reg5",
      "108049 PUSH MEMORY ELEMENT IF INIT      3367 -> reg19",
      "108052 PUSH MEMORY ELEMENT IF INIT      3372 -> reg22",
      "108055 GET      reg19[reg22] -> reg16",
      "108059 ADD      reg5NaN-> reg16",
      "108063 SET MEMORY ELEMENT IF INIT      3371 = reg16",
      "108066 PUSH MEMORY ELEMENT IF INIT      3370 -> reg16",
      "108069 PUSH MEMORY ELEMENT IF INIT      3367 -> reg5",
      "108072 PUSH MEMORY ELEMENT IF INIT      3372 -> reg22",
      "108075 GET      reg5[reg22] -> reg19",
      "108079 PUSH MEMORY ELEMENT IF INIT      3372 -> reg5",
      "108082 PUSH MEMORY ELEMENT IF INIT      3369 -> reg22",
      "108085 MULTIPLY      reg5 * reg22 -> reg23",
      "108089 LSHIFT      reg19 << reg23 -> reg22",
      "108093 ADD      reg16NaN-> reg22",
      "108097 SET MEMORY ELEMENT IF INIT      3370 = reg22",
      "108100 PUSH MEMORY ELEMENT IF INIT      3372 -> reg5",
      "108103 SET      reg5 -> reg23",
      "108106 ADD      reg51-> reg5",
      "108110 SET MEMORY ELEMENT IF INIT      3372 = reg5",
      "108113 JUMP      107997",
      "107997 PUSH MEMORY ELEMENT IF INIT      3372 -> reg16",
      "108000 PUSH MEMORY ELEMENT IF INIT      3367 -> reg5",
      "108003 GET      reg5[length] -> reg22",
      "108009 LESS THAN      reg16 < reg22 -> reg5",
      "108013 JUMP IF FALSE      reg5 TO: 108115 | 108016"
  ],
  "108115": [
      "108115 PUSH MEMORY ELEMENT IF INIT      3370 -> reg16",
      "108118 GET      reg16[toString] -> reg22",
      "108124 NEW ARRAY      1 -> reg19",
      "108127 PUT      reg19[0] = 32",
      "108131 CALL FUNCTION      OBJ: reg16 FUNC: reg22 ARGS: reg19",
      "108135 SET      reg2 -> reg5",
      "108138 JUMP OR RETURN VAL      reg5"
  ],
  "108192": [
      "108192 SET MEMORY ELEMENT IF INIT      3364 = false",
      "108195 PUSH MEMORY ELEMENT IF INIT      3361 -> reg7",
      "108198 EMPTY ARRAY      -> reg6",
      "108200 CALL FUNCTION      PTR: reg7 MEM: reg6",
      "108204 SET      reg2 -> reg4",
      "108207 SET MEMORY ELEMENT IF INIT      3363 = reg4",
      "108210 GET WINDOW PROP      localStorage -> reg7",
      "108215 GET      reg7[setItem] -> reg8",
      "108221 NEW ARRAY      2 -> reg4",
      "108224 PUSH MEMORY ELEMENT IF INIT      3362 -> reg11",
      "108227 PUT      reg4[0] = reg11",
      "108231 PUSH MEMORY ELEMENT IF INIT      3363 -> reg9",
      "108234 PUT      reg4[1] = reg9",
      "108238 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg4",
      "108242 SET      reg2 -> reg6",
      "108245 EMPTY OBJECT      -> reg6",
      "108247 PUT      reg6[verdict] = false",
      "108253 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "108256 GET      reg9[stringify] -> reg10",
      "108262 NEW ARRAY      1 -> reg11",
      "108265 EMPTY OBJECT      -> reg12",
      "108267 PUSH MEMORY ELEMENT IF INIT      3363 -> reg4",
      "108270 PUT      reg12[v] = reg4",
      "108276 PUSH MEMORY ELEMENT IF INIT      3364 -> reg4",
      "108279 JUMP IF FALSE      reg4 TO: 108289 | 108282"
  ],
  "108245": [
      "108245 EMPTY OBJECT      -> reg6",
      "108247 PUT      reg6[verdict] = false",
      "108253 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "108256 GET      reg9[stringify] -> reg10",
      "108262 NEW ARRAY      1 -> reg11",
      "108265 EMPTY OBJECT      -> reg12",
      "108267 PUSH MEMORY ELEMENT IF INIT      3363 -> reg4",
      "108270 PUT      reg12[v] = reg4",
      "108276 PUSH MEMORY ELEMENT IF INIT      3364 -> reg4",
      "108279 JUMP IF FALSE      reg4 TO: 108289 | 108282"
  ],
  "108282": [
      "108282 SET      1 -> reg13",
      "108287 JUMP      108294",
      "108294 PUT      reg12[p] = reg13",
      "108300 PUT      reg11[0] = reg12",
      "108304 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "108308 SET      reg2 -> reg8",
      "108311 PUT      reg6[raw] = reg8",
      "108317 PUT      reg6[error] = false",
      "108323 JUMP OR RETURN VAL      reg6"
  ],
  "108289": [
      "108289 SET      0 -> reg13",
      "108294 PUT      reg12[p] = reg13",
      "108300 PUT      reg11[0] = reg12",
      "108304 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "108308 SET      reg2 -> reg8",
      "108311 PUT      reg6[raw] = reg8",
      "108317 PUT      reg6[error] = false",
      "108323 JUMP OR RETURN VAL      reg6"
  ],
  "108327": [
      "108327 SET I      null",
      "108329 PUSH F.K      -> reg4",
      "108331 VOID F",
      "108332 SET MEMORY ELEMENT      0 = reg4",
      "108335 EMPTY OBJECT      -> reg4",
      "108337 PUT      reg4[verdict] = false",
      "108343 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "108346 GET      reg6[toString] -> reg8",
      "108352 EMPTY ARRAY      -> reg10",
      "108354 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg10",
      "108358 SET      reg2 -> reg11",
      "108361 PUT      reg4[raw] = reg11",
      "108367 PUT      reg4[error] = true",
      "108373 JUMP OR RETURN VAL      reg4"
  ],
  "108547": [
      "108547 SET I      108559",
      "108549 PUSH F.K      -> reg5",
      "108551 VOID F",
      "108552 SET MEMORY ELEMENT      0 = reg5",
      "108555 JUMP OR RETURN VAL      NA"
  ],
  "108559": [
      "108559 SET I      null",
      "108561 SET N      null",
      "108563 PUSH MEMORY ELEMENT IF INIT      3385 -> reg5",
      "108566 JUMP IF FALSE      reg5 TO: 108603 | 108569"
  ],
  "108569": [
      "108569 GET WINDOW PROP      document -> reg6",
      "108574 GET      reg6[body] -> reg10",
      "108580 GET      reg10[removeChild] -> reg6",
      "108586 NEW ARRAY      1 -> reg9",
      "108589 PUSH MEMORY ELEMENT IF INIT      3385 -> reg8",
      "108592 PUT      reg9[0] = reg8",
      "108596 CALL FUNCTION      OBJ: reg10 FUNC: reg6 ARGS: reg9",
      "108600 SET      reg2 -> reg5",
      "108603 HANDLE TRACE OR JUMP OR RETURN C",
      "108604 SET I      null",
      "108606 JUMP OR RETURN"
  ],
  "108603": [
      "108603 HANDLE TRACE OR JUMP OR RETURN C",
      "108604 SET I      null",
      "108606 JUMP OR RETURN"
  ],
  "108815": [
      "108815 SET I      null",
      "108817 PUSH F.K      -> reg4",
      "108819 VOID F",
      "108820 SET MEMORY ELEMENT      0 = reg4",
      "108823 EMPTY OBJECT      -> reg4",
      "108825 PUT      reg4[verdict] = false",
      "108831 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "108834 GET      reg7[toString] -> reg8",
      "108840 EMPTY ARRAY      -> reg9",
      "108842 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "108846 SET      reg2 -> reg5",
      "108849 PUT      reg4[raw] = reg5",
      "108855 PUT      reg4[error] = true",
      "108861 JUMP OR RETURN VAL      reg4"
  ],
  "109267": [
      "109267 EMPTY OBJECT      -> reg4",
      "109269 PUT      reg4[verdict] = false",
      "109275 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "109278 GET      reg6[stringify] -> reg8",
      "109284 NEW ARRAY      1 -> reg11",
      "109287 PUSH MEMORY ELEMENT IF INIT      3393 -> reg10",
      "109290 PUT      reg11[0] = reg10",
      "109294 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg11",
      "109298 SET      reg2 -> reg5",
      "109301 PUT      reg4[raw] = reg5",
      "109307 PUT      reg4[error] = false",
      "109313 JUMP OR RETURN VAL      reg4"
  ],
  "109315": [
      "109315 PUSH MEMORY ELEMENT IF INIT      3393 -> reg4",
      "109318 PUSH MEMORY ELEMENT IF INIT      3391 -> reg8",
      "109321 NEW ARRAY      1 -> reg7",
      "109324 PUSH MEMORY ELEMENT IF INIT      3393 -> reg13",
      "109327 GET      reg13[vp] -> reg10",
      "109333 PUT      reg7[0] = reg10",
      "109337 CALL FUNCTION      PTR: reg8 MEM: reg7",
      "109341 SET      reg2 -> reg5",
      "109344 PUT      reg4[vvp] = reg5",
      "109350 PUSH MEMORY ELEMENT IF INIT      3393 -> reg4",
      "109353 PUSH MEMORY ELEMENT IF INIT      3393 -> reg7",
      "109356 GET      reg7[cd] -> reg5",
      "109362 STRICT EQUAL      reg5 === 32 -> reg7",
      "109366 PUT      reg4[vcd] = reg7",
      "109372 PUSH MEMORY ELEMENT IF INIT      3393 -> reg4",
      "109375 GET      reg4[vvp] -> reg5",
      "109381 STRICT EQUAL      reg5 === false -> reg4",
      "109385 JUMP IF FALSE      reg4 TO: 109404 | 109388"
  ],
  "109388": [
      "109388 PUSH MEMORY ELEMENT IF INIT      3393 -> reg5",
      "109391 GET      reg5[vcd] -> reg7",
      "109397 STRICT EQUAL      reg7 === false -> reg5",
      "109401 SET      reg5 -> reg4",
      "109404 SET MEMORY ELEMENT IF INIT      3394 = reg4",
      "109407 EMPTY OBJECT      -> reg4",
      "109409 PUSH MEMORY ELEMENT IF INIT      3394 -> reg5",
      "109412 PUT      reg4[verdict] = reg5",
      "109418 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "109421 GET      reg9[stringify] -> reg8",
      "109427 NEW ARRAY      1 -> reg10",
      "109430 PUSH MEMORY ELEMENT IF INIT      3393 -> reg5",
      "109433 PUT      reg10[0] = reg5",
      "109437 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg10",
      "109441 SET      reg2 -> reg7",
      "109444 PUT      reg4[raw] = reg7",
      "109450 PUT      reg4[error] = false",
      "109456 JUMP OR RETURN VAL      reg4"
  ],
  "109404": [
      "109404 SET MEMORY ELEMENT IF INIT      3394 = reg4",
      "109407 EMPTY OBJECT      -> reg4",
      "109409 PUSH MEMORY ELEMENT IF INIT      3394 -> reg5",
      "109412 PUT      reg4[verdict] = reg5",
      "109418 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "109421 GET      reg9[stringify] -> reg8",
      "109427 NEW ARRAY      1 -> reg10",
      "109430 PUSH MEMORY ELEMENT IF INIT      3393 -> reg5",
      "109433 PUT      reg10[0] = reg5",
      "109437 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg10",
      "109441 SET      reg2 -> reg7",
      "109444 PUT      reg4[raw] = reg7",
      "109450 PUT      reg4[error] = false",
      "109456 JUMP OR RETURN VAL      reg4"
  ],
  "109460": [
      "109460 SET I      null",
      "109462 PUSH F.K      -> reg4",
      "109464 VOID F",
      "109465 SET MEMORY ELEMENT      0 = reg4",
      "109468 EMPTY OBJECT      -> reg4",
      "109470 PUT      reg4[verdict] = false",
      "109476 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "109479 GET      reg7[toString] -> reg8",
      "109485 EMPTY ARRAY      -> reg11",
      "109487 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg11",
      "109491 SET      reg2 -> reg5",
      "109494 PUT      reg4[raw] = reg5",
      "109500 PUT      reg4[error] = true",
      "109506 JUMP OR RETURN VAL      reg4"
  ],
  "109605": [
      "109605 SET I      null",
      "109607 PUSH F.K      -> reg5",
      "109609 VOID F",
      "109610 SET MEMORY ELEMENT      0 = reg5",
      "109613 SET MEMORY ELEMENT IF INIT      3413 = err",
      "109618 SET I      null",
      "109620 SET MEMORY ELEMENT IF INIT      3414 = ",
      "109625 SET I      109650",
      "109627 PUSH MEMORY ELEMENT IF INIT      3412 -> reg5",
      "109630 GET      reg5[toString] -> reg6",
      "109636 EMPTY ARRAY      -> reg7",
      "109638 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "109642 SET      reg2 -> reg8",
      "109645 SET MEMORY ELEMENT IF INIT      3414 = reg8",
      "109648 JUMP      109663",
      "109663 SET I      null",
      "109665 EMPTY OBJECT      -> reg6",
      "109667 PUSH MEMORY ELEMENT IF INIT      3412 -> reg8",
      "109670 TYPEOF      reg8 -> reg9",
      "109673 PUT      reg6[_type_] = reg9",
      "109679 PUSH MEMORY ELEMENT IF INIT      3412 -> reg8",
      "109682 GET      reg8[toString] -> reg9",
      "109688 EMPTY ARRAY      -> reg10",
      "109690 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "109694 SET      reg2 -> reg7",
      "109697 PUT      reg6[_toString_] = reg7",
      "109703 PUSH MEMORY ELEMENT IF INIT      3413 -> reg11",
      "109706 PUT      reg6[_stringify_] = reg11",
      "109712 SET MEMORY ELEMENT IF INIT      3415 = reg6",
      "109715 SET MEMORY ELEMENT IF INIT      3416 = 0",
      "109718 GET WINDOW PROP      Object -> reg6",
      "109723 GET      reg6[keys] -> reg9",
      "109729 NEW ARRAY      1 -> reg10",
      "109732 PUSH MEMORY ELEMENT IF INIT      3412 -> reg11",
      "109735 PUT      reg10[0] = reg11",
      "109739 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg10",
      "109743 SET      reg2 -> reg7",
      "109746 SET MEMORY ELEMENT IF INIT      3417 = reg7",
      "109749 PUSH MEMORY ELEMENT IF INIT      3416 -> reg11",
      "109752 PUSH MEMORY ELEMENT IF INIT      3417 -> reg9",
      "109755 GET      reg9[length] -> reg7",
      "109761 LESS THAN      reg11 < reg7 -> reg10",
      "109765 JUMP IF FALSE      reg10 TO: 109845 | 109768"
  ],
  "109650": [
      "109650 SET I      null",
      "109652 PUSH F.K      -> reg6",
      "109654 VOID F",
      "109655 SET MEMORY ELEMENT      0 = reg6",
      "109658 SET MEMORY ELEMENT IF INIT      3414 = err",
      "109663 SET I      null",
      "109665 EMPTY OBJECT      -> reg6",
      "109667 PUSH MEMORY ELEMENT IF INIT      3412 -> reg8",
      "109670 TYPEOF      reg8 -> reg9",
      "109673 PUT      reg6[_type_] = reg9",
      "109679 PUSH MEMORY ELEMENT IF INIT      3412 -> reg8",
      "109682 GET      reg8[toString] -> reg9",
      "109688 EMPTY ARRAY      -> reg10",
      "109690 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "109694 SET      reg2 -> reg7",
      "109697 PUT      reg6[_toString_] = reg7",
      "109703 PUSH MEMORY ELEMENT IF INIT      3413 -> reg11",
      "109706 PUT      reg6[_stringify_] = reg11",
      "109712 SET MEMORY ELEMENT IF INIT      3415 = reg6",
      "109715 SET MEMORY ELEMENT IF INIT      3416 = 0",
      "109718 GET WINDOW PROP      Object -> reg6",
      "109723 GET      reg6[keys] -> reg9",
      "109729 NEW ARRAY      1 -> reg10",
      "109732 PUSH MEMORY ELEMENT IF INIT      3412 -> reg11",
      "109735 PUT      reg10[0] = reg11",
      "109739 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg10",
      "109743 SET      reg2 -> reg7",
      "109746 SET MEMORY ELEMENT IF INIT      3417 = reg7",
      "109749 PUSH MEMORY ELEMENT IF INIT      3416 -> reg11",
      "109752 PUSH MEMORY ELEMENT IF INIT      3417 -> reg9",
      "109755 GET      reg9[length] -> reg7",
      "109761 LESS THAN      reg11 < reg7 -> reg10",
      "109765 JUMP IF FALSE      reg10 TO: 109845 | 109768"
  ],
  "109768": [
      "109768 PUSH MEMORY ELEMENT IF INIT      3417 -> reg7",
      "109771 PUSH MEMORY ELEMENT IF INIT      3416 -> reg10",
      "109774 GET      reg7[reg10] -> reg9",
      "109778 SET MEMORY ELEMENT IF INIT      3418 = reg9",
      "109781 SET I      109820",
      "109783 PUSH MEMORY ELEMENT IF INIT      3415 -> reg9",
      "109786 PUSH MEMORY ELEMENT IF INIT      3418 -> reg11",
      "109789 PUSH MEMORY ELEMENT IF INIT      3412 -> reg7",
      "109792 PUSH MEMORY ELEMENT IF INIT      3418 -> reg13",
      "109795 GET      reg7[reg13] -> reg12",
      "109799 GET      reg12[toString] -> reg7",
      "109805 EMPTY ARRAY      -> reg14",
      "109807 CALL FUNCTION      OBJ: reg12 FUNC: reg7 ARGS: reg14",
      "109811 SET      reg2 -> reg10",
      "109814 PUT      reg9[reg11] = reg10",
      "109818 JUMP      109828",
      "109828 SET I      null",
      "109830 PUSH MEMORY ELEMENT IF INIT      3416 -> reg7",
      "109833 SET      reg7 -> reg9",
      "109836 ADD      reg71-> reg7",
      "109840 SET MEMORY ELEMENT IF INIT      3416 = reg7",
      "109843 JUMP      109749",
      "109749 PUSH MEMORY ELEMENT IF INIT      3416 -> reg11",
      "109752 PUSH MEMORY ELEMENT IF INIT      3417 -> reg9",
      "109755 GET      reg9[length] -> reg7",
      "109761 LESS THAN      reg11 < reg7 -> reg10",
      "109765 JUMP IF FALSE      reg10 TO: 109845 | 109768"
  ],
  "109820": [
      "109820 SET I      null",
      "109822 PUSH F.K      -> reg7",
      "109824 VOID F",
      "109825 SET MEMORY ELEMENT      0 = reg7",
      "109828 SET I      null",
      "109830 PUSH MEMORY ELEMENT IF INIT      3416 -> reg7",
      "109833 SET      reg7 -> reg9",
      "109836 ADD      reg71-> reg7",
      "109840 SET MEMORY ELEMENT IF INIT      3416 = reg7",
      "109843 JUMP      109749",
      "109749 PUSH MEMORY ELEMENT IF INIT      3416 -> reg11",
      "109752 PUSH MEMORY ELEMENT IF INIT      3417 -> reg9",
      "109755 GET      reg9[length] -> reg7",
      "109761 LESS THAN      reg11 < reg7 -> reg10",
      "109765 JUMP IF FALSE      reg10 TO: 109845 | 109768"
  ],
  "109845": [
      "109845 GET WINDOW PROP      Object -> reg9",
      "109850 GET      reg9[getOwnPropertyDescriptors] -> reg11",
      "109856 NEW ARRAY      1 -> reg10",
      "109859 PUSH MEMORY ELEMENT IF INIT      3412 -> reg13",
      "109862 PUT      reg10[0] = reg13",
      "109866 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg10",
      "109870 SET      reg2 -> reg7",
      "109873 COPY ENUMERABLE      reg7 -> reg10",
      "109876 GET      reg10[length] -> reg11",
      "109882 EQUAL      reg11 == 0 -> reg13",
      "109886 JUMP IF TRUE      reg13 TO: 109959 | 109889"
  ],
  "109889": [
      "109889 SET      0 -> reg13",
      "109892 GET      reg10[reg13] -> reg7",
      "109896 SET MEMORY ELEMENT IF INIT      3419 = reg7",
      "109899 SET I      109938",
      "109901 PUSH MEMORY ELEMENT IF INIT      3415 -> reg14",
      "109904 PUSH MEMORY ELEMENT IF INIT      3419 -> reg17",
      "109907 PUSH MEMORY ELEMENT IF INIT      3412 -> reg16",
      "109910 PUSH MEMORY ELEMENT IF INIT      3419 -> reg19",
      "109913 GET      reg16[reg19] -> reg18",
      "109917 GET      reg18[toString] -> reg19",
      "109923 EMPTY ARRAY      -> reg16",
      "109925 CALL FUNCTION      OBJ: reg18 FUNC: reg19 ARGS: reg16",
      "109929 SET      reg2 -> reg15",
      "109932 PUT      reg14[reg17] = reg15",
      "109936 JUMP      109946",
      "109946 SET I      null",
      "109948 ADD      reg131-> reg13",
      "109952 LESS THAN      reg13 < reg11 -> reg14",
      "109956 JUMP IF TRUE      reg14 TO: 109892 | 109959"
  ],
  "109892": [
      "109892 GET      reg10[reg13] -> reg7",
      "109896 SET MEMORY ELEMENT IF INIT      3419 = reg7",
      "109899 SET I      109938",
      "109901 PUSH MEMORY ELEMENT IF INIT      3415 -> reg14",
      "109904 PUSH MEMORY ELEMENT IF INIT      3419 -> reg17",
      "109907 PUSH MEMORY ELEMENT IF INIT      3412 -> reg16",
      "109910 PUSH MEMORY ELEMENT IF INIT      3419 -> reg19",
      "109913 GET      reg16[reg19] -> reg18",
      "109917 GET      reg18[toString] -> reg19",
      "109923 EMPTY ARRAY      -> reg16",
      "109925 CALL FUNCTION      OBJ: reg18 FUNC: reg19 ARGS: reg16",
      "109929 SET      reg2 -> reg15",
      "109932 PUT      reg14[reg17] = reg15",
      "109936 JUMP      109946",
      "109946 SET I      null",
      "109948 ADD      reg131-> reg13",
      "109952 LESS THAN      reg13 < reg11 -> reg14",
      "109956 JUMP IF TRUE      reg14 TO: 109892 | 109959"
  ],
  "109938": [
      "109938 SET I      null",
      "109940 PUSH F.K      -> reg14",
      "109942 VOID F",
      "109943 SET MEMORY ELEMENT      0 = reg14",
      "109946 SET I      null",
      "109948 ADD      reg131-> reg13",
      "109952 LESS THAN      reg13 < reg11 -> reg14",
      "109956 JUMP IF TRUE      reg14 TO: 109892 | 109959"
  ],
  "109959": [
      "109959 SET MEMORY ELEMENT IF INIT      3420 = 0",
      "109962 GET WINDOW PROP      Object -> reg10",
      "109967 GET      reg10[keys] -> reg11",
      "109973 NEW ARRAY      1 -> reg13",
      "109976 PUSH MEMORY ELEMENT IF INIT      3412 -> reg14",
      "109979 GET      reg14[__proto__] -> reg16",
      "109985 PUT      reg13[0] = reg16",
      "109989 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg13",
      "109993 SET      reg2 -> reg7",
      "109996 SET MEMORY ELEMENT IF INIT      3421 = reg7",
      "109999 PUSH MEMORY ELEMENT IF INIT      3420 -> reg7",
      "110002 PUSH MEMORY ELEMENT IF INIT      3421 -> reg14",
      "110005 GET      reg14[length] -> reg11",
      "110011 LESS THAN      reg7 < reg11 -> reg14",
      "110015 JUMP IF FALSE      reg14 TO: 110095 | 110018"
  ],
  "110018": [
      "110018 PUSH MEMORY ELEMENT IF INIT      3421 -> reg11",
      "110021 PUSH MEMORY ELEMENT IF INIT      3420 -> reg13",
      "110024 GET      reg11[reg13] -> reg7",
      "110028 SET MEMORY ELEMENT IF INIT      3422 = reg7",
      "110031 SET I      110070",
      "110033 PUSH MEMORY ELEMENT IF INIT      3415 -> reg7",
      "110036 PUSH MEMORY ELEMENT IF INIT      3422 -> reg16",
      "110039 PUSH MEMORY ELEMENT IF INIT      3412 -> reg15",
      "110042 PUSH MEMORY ELEMENT IF INIT      3422 -> reg19",
      "110045 GET      reg15[reg19] -> reg13",
      "110049 GET      reg13[toString] -> reg14",
      "110055 EMPTY ARRAY      -> reg15",
      "110057 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg15",
      "110061 SET      reg2 -> reg11",
      "110064 PUT      reg7[reg16] = reg11",
      "110068 JUMP      110078",
      "110078 SET I      null",
      "110080 PUSH MEMORY ELEMENT IF INIT      3420 -> reg7",
      "110083 SET      reg7 -> reg11",
      "110086 ADD      reg71-> reg7",
      "110090 SET MEMORY ELEMENT IF INIT      3420 = reg7",
      "110093 JUMP      109999",
      "109999 PUSH MEMORY ELEMENT IF INIT      3420 -> reg7",
      "110002 PUSH MEMORY ELEMENT IF INIT      3421 -> reg14",
      "110005 GET      reg14[length] -> reg11",
      "110011 LESS THAN      reg7 < reg11 -> reg14",
      "110015 JUMP IF FALSE      reg14 TO: 110095 | 110018"
  ],
  "110070": [
      "110070 SET I      null",
      "110072 PUSH F.K      -> reg7",
      "110074 VOID F",
      "110075 SET MEMORY ELEMENT      0 = reg7",
      "110078 SET I      null",
      "110080 PUSH MEMORY ELEMENT IF INIT      3420 -> reg7",
      "110083 SET      reg7 -> reg11",
      "110086 ADD      reg71-> reg7",
      "110090 SET MEMORY ELEMENT IF INIT      3420 = reg7",
      "110093 JUMP      109999",
      "109999 PUSH MEMORY ELEMENT IF INIT      3420 -> reg7",
      "110002 PUSH MEMORY ELEMENT IF INIT      3421 -> reg14",
      "110005 GET      reg14[length] -> reg11",
      "110011 LESS THAN      reg7 < reg11 -> reg14",
      "110015 JUMP IF FALSE      reg14 TO: 110095 | 110018"
  ],
  "110095": [
      "110095 PUSH MEMORY ELEMENT IF INIT      3415 -> reg7",
      "110098 JUMP OR RETURN VAL      reg7"
  ],
  "110385": [
      "110385 SET      0 -> reg9",
      "110388 GET      reg5[reg9] -> reg4",
      "110392 SET MEMORY ELEMENT IF INIT      3409 = reg4",
      "110395 SET I      110474",
      "110397 PUSH MEMORY ELEMENT IF INIT      3407 -> reg7",
      "110400 GET      reg7[w] -> reg10",
      "110406 PUSH MEMORY ELEMENT IF INIT      3409 -> reg11",
      "110409 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "110412 GET      reg12[stringify] -> reg13",
      "110418 NEW ARRAY      1 -> reg15",
      "110421 PUSH MEMORY ELEMENT IF INIT      3405 -> reg16",
      "110424 NEW ARRAY      1 -> reg18",
      "110427 GET WINDOW PROP      window -> reg17",
      "110432 PUSH MEMORY ELEMENT IF INIT      3406 -> reg20",
      "110435 PUSH MEMORY ELEMENT IF INIT      3409 -> reg21",
      "110438 GET      reg20[reg21] -> reg22",
      "110442 GET      reg17[reg22] -> reg19",
      "110446 PUT      reg18[0] = reg19",
      "110450 CALL FUNCTION      PTR: reg16 MEM: reg18",
      "110454 SET      reg2 -> reg14",
      "110457 PUT      reg15[0] = reg14",
      "110461 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg15",
      "110465 SET      reg2 -> reg7",
      "110468 PUT      reg10[reg11] = reg7",
      "110472 JUMP      110500",
      "110500 SET I      110674",
      "110502 SET I      110585",
      "110504 PUSH MEMORY ELEMENT IF INIT      3407 -> reg7",
      "110507 GET      reg7[i] -> reg10",
      "110513 PUSH MEMORY ELEMENT IF INIT      3409 -> reg7",
      "110516 PUSH MEMORY ELEMENT IF INIT      280 -> reg15",
      "110519 GET      reg15[stringify] -> reg13",
      "110525 NEW ARRAY      1 -> reg14",
      "110528 PUSH MEMORY ELEMENT IF INIT      3405 -> reg17",
      "110531 NEW ARRAY      1 -> reg18",
      "110534 PUSH MEMORY ELEMENT IF INIT      3408 -> reg20",
      "110537 GET      reg20[contentWindow] -> reg19",
      "110543 PUSH MEMORY ELEMENT IF INIT      3406 -> reg21",
      "110546 PUSH MEMORY ELEMENT IF INIT      3409 -> reg23",
      "110549 GET      reg21[reg23] -> reg22",
      "110553 GET      reg19[reg22] -> reg20",
      "110557 PUT      reg18[0] = reg20",
      "110561 CALL FUNCTION      PTR: reg17 MEM: reg18",
      "110565 SET      reg2 -> reg16",
      "110568 PUT      reg14[0] = reg16",
      "110572 CALL FUNCTION      OBJ: reg15 FUNC: reg13 ARGS: reg14",
      "110576 SET      reg2 -> reg11",
      "110579 PUT      reg10[reg7] = reg11",
      "110583 JUMP      110611",
      "110611 SET I      110674",
      "110613 ADD      reg91-> reg9",
      "110617 LESS THAN      reg9 < reg8 -> reg10",
      "110621 JUMP IF TRUE      reg10 TO: 110388 | 110624"
  ],
  "110388": [
      "110388 GET      reg5[reg9] -> reg4",
      "110392 SET MEMORY ELEMENT IF INIT      3409 = reg4",
      "110395 SET I      110474",
      "110397 PUSH MEMORY ELEMENT IF INIT      3407 -> reg7",
      "110400 GET      reg7[w] -> reg10",
      "110406 PUSH MEMORY ELEMENT IF INIT      3409 -> reg11",
      "110409 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "110412 GET      reg12[stringify] -> reg13",
      "110418 NEW ARRAY      1 -> reg15",
      "110421 PUSH MEMORY ELEMENT IF INIT      3405 -> reg16",
      "110424 NEW ARRAY      1 -> reg18",
      "110427 GET WINDOW PROP      window -> reg17",
      "110432 PUSH MEMORY ELEMENT IF INIT      3406 -> reg20",
      "110435 PUSH MEMORY ELEMENT IF INIT      3409 -> reg21",
      "110438 GET      reg20[reg21] -> reg22",
      "110442 GET      reg17[reg22] -> reg19",
      "110446 PUT      reg18[0] = reg19",
      "110450 CALL FUNCTION      PTR: reg16 MEM: reg18",
      "110454 SET      reg2 -> reg14",
      "110457 PUT      reg15[0] = reg14",
      "110461 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg15",
      "110465 SET      reg2 -> reg7",
      "110468 PUT      reg10[reg11] = reg7",
      "110472 JUMP      110500",
      "110500 SET I      110674",
      "110502 SET I      110585",
      "110504 PUSH MEMORY ELEMENT IF INIT      3407 -> reg7",
      "110507 GET      reg7[i] -> reg10",
      "110513 PUSH MEMORY ELEMENT IF INIT      3409 -> reg7",
      "110516 PUSH MEMORY ELEMENT IF INIT      280 -> reg15",
      "110519 GET      reg15[stringify] -> reg13",
      "110525 NEW ARRAY      1 -> reg14",
      "110528 PUSH MEMORY ELEMENT IF INIT      3405 -> reg17",
      "110531 NEW ARRAY      1 -> reg18",
      "110534 PUSH MEMORY ELEMENT IF INIT      3408 -> reg20",
      "110537 GET      reg20[contentWindow] -> reg19",
      "110543 PUSH MEMORY ELEMENT IF INIT      3406 -> reg21",
      "110546 PUSH MEMORY ELEMENT IF INIT      3409 -> reg23",
      "110549 GET      reg21[reg23] -> reg22",
      "110553 GET      reg19[reg22] -> reg20",
      "110557 PUT      reg18[0] = reg20",
      "110561 CALL FUNCTION      PTR: reg17 MEM: reg18",
      "110565 SET      reg2 -> reg16",
      "110568 PUT      reg14[0] = reg16",
      "110572 CALL FUNCTION      OBJ: reg15 FUNC: reg13 ARGS: reg14",
      "110576 SET      reg2 -> reg11",
      "110579 PUT      reg10[reg7] = reg11",
      "110583 JUMP      110611",
      "110611 SET I      110674",
      "110613 ADD      reg91-> reg9",
      "110617 LESS THAN      reg9 < reg8 -> reg10",
      "110621 JUMP IF TRUE      reg10 TO: 110388 | 110624"
  ],
  "110474": [
      "110474 SET I      110674",
      "110476 PUSH F.K      -> reg10",
      "110478 VOID F",
      "110479 SET MEMORY ELEMENT      0 = reg10",
      "110482 PUSH MEMORY ELEMENT IF INIT      3407 -> reg7",
      "110485 GET      reg7[w] -> reg10",
      "110491 PUSH MEMORY ELEMENT IF INIT      3409 -> reg7",
      "110494 PUT      reg10[reg7] = na",
      "110500 SET I      110674",
      "110502 SET I      110585",
      "110504 PUSH MEMORY ELEMENT IF INIT      3407 -> reg7",
      "110507 GET      reg7[i] -> reg10",
      "110513 PUSH MEMORY ELEMENT IF INIT      3409 -> reg7",
      "110516 PUSH MEMORY ELEMENT IF INIT      280 -> reg15",
      "110519 GET      reg15[stringify] -> reg13",
      "110525 NEW ARRAY      1 -> reg14",
      "110528 PUSH MEMORY ELEMENT IF INIT      3405 -> reg17",
      "110531 NEW ARRAY      1 -> reg18",
      "110534 PUSH MEMORY ELEMENT IF INIT      3408 -> reg20",
      "110537 GET      reg20[contentWindow] -> reg19",
      "110543 PUSH MEMORY ELEMENT IF INIT      3406 -> reg21",
      "110546 PUSH MEMORY ELEMENT IF INIT      3409 -> reg23",
      "110549 GET      reg21[reg23] -> reg22",
      "110553 GET      reg19[reg22] -> reg20",
      "110557 PUT      reg18[0] = reg20",
      "110561 CALL FUNCTION      PTR: reg17 MEM: reg18",
      "110565 SET      reg2 -> reg16",
      "110568 PUT      reg14[0] = reg16",
      "110572 CALL FUNCTION      OBJ: reg15 FUNC: reg13 ARGS: reg14",
      "110576 SET      reg2 -> reg11",
      "110579 PUT      reg10[reg7] = reg11",
      "110583 JUMP      110611",
      "110611 SET I      110674",
      "110613 ADD      reg91-> reg9",
      "110617 LESS THAN      reg9 < reg8 -> reg10",
      "110621 JUMP IF TRUE      reg10 TO: 110388 | 110624"
  ],
  "110585": [
      "110585 SET I      110674",
      "110587 PUSH F.K      -> reg7",
      "110589 VOID F",
      "110590 SET MEMORY ELEMENT      0 = reg7",
      "110593 PUSH MEMORY ELEMENT IF INIT      3407 -> reg7",
      "110596 GET      reg7[i] -> reg11",
      "110602 PUSH MEMORY ELEMENT IF INIT      3409 -> reg10",
      "110605 PUT      reg11[reg10] = na",
      "110611 SET I      110674",
      "110613 ADD      reg91-> reg9",
      "110617 LESS THAN      reg9 < reg8 -> reg10",
      "110621 JUMP IF TRUE      reg10 TO: 110388 | 110624"
  ],
  "110624": [
      "110624 EMPTY OBJECT      -> reg4",
      "110626 PUT      reg4[verdict] = false",
      "110632 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "110635 GET      reg7[stringify] -> reg8",
      "110641 NEW ARRAY      1 -> reg11",
      "110644 PUSH MEMORY ELEMENT IF INIT      3407 -> reg9",
      "110647 PUT      reg11[0] = reg9",
      "110651 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg11",
      "110655 SET      reg2 -> reg5",
      "110658 PUT      reg4[raw] = reg5",
      "110664 PUT      reg4[error] = false",
      "110670 JUMP OR RETURN VAL      reg4"
  ],
  "110674": [
      "110674 SET I      null",
      "110676 PUSH F.K      -> reg4",
      "110678 VOID F",
      "110679 SET MEMORY ELEMENT      0 = reg4",
      "110682 EMPTY OBJECT      -> reg4",
      "110684 PUT      reg4[verdict] = false",
      "110690 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "110693 GET      reg10[toString] -> reg9",
      "110699 EMPTY ARRAY      -> reg11",
      "110701 CALL FUNCTION      OBJ: reg10 FUNC: reg9 ARGS: reg11",
      "110705 SET      reg2 -> reg5",
      "110708 PUT      reg4[raw] = reg5",
      "110714 PUT      reg4[error] = true",
      "110720 JUMP OR RETURN VAL      reg4"
  ],
  "111080": [
      "111080 PUSH MEMORY ELEMENT IF INIT      3435 -> reg10",
      "111083 GET      reg10[n] -> reg8",
      "111089 GREATER THAN      reg8 > 0 -> reg11",
      "111093 SET      reg11 -> reg9",
      "111096 JUMP IF FALSE      reg9 TO: 111115 | 111099"
  ],
  "111096": ["111096 JUMP IF FALSE      reg9 TO: 111115 | 111099"],
  "111099": [
      "111099 PUSH MEMORY ELEMENT IF INIT      3435 -> reg8",
      "111102 GET      reg8[m] -> reg13",
      "111108 GREATER THAN      reg13 > 0 -> reg10",
      "111112 SET      reg10 -> reg9",
      "111115 SET MEMORY ELEMENT IF INIT      3437 = reg9",
      "111118 PUSH MEMORY ELEMENT IF INIT      3437 -> reg9",
      "111121 JUMP IF FALSE      reg9 TO: 111129 | 111124"
  ],
  "111115": [
      "111115 SET MEMORY ELEMENT IF INIT      3437 = reg9",
      "111118 PUSH MEMORY ELEMENT IF INIT      3437 -> reg9",
      "111121 JUMP IF FALSE      reg9 TO: 111129 | 111124"
  ],
  "111124": [
      "111124 SET      50 -> reg8",
      "111127 JUMP      111137",
      "111137 SET MEMORY ELEMENT IF INIT      3438 = reg8",
      "111140 EMPTY OBJECT      -> reg8",
      "111142 PUSH MEMORY ELEMENT IF INIT      3437 -> reg9",
      "111145 PUT      reg8[verdict] = reg9",
      "111151 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "111154 GET      reg11[stringify] -> reg10",
      "111160 NEW ARRAY      1 -> reg13",
      "111163 PUSH MEMORY ELEMENT IF INIT      3435 -> reg15",
      "111166 PUT      reg13[0] = reg15",
      "111170 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg13",
      "111174 SET      reg2 -> reg9",
      "111177 PUT      reg8[raw] = reg9",
      "111183 PUSH MEMORY ELEMENT IF INIT      3438 -> reg9",
      "111186 PUT      reg8[score] = reg9",
      "111192 PUT      reg8[error] = false",
      "111198 JUMP OR RETURN VAL      reg8"
  ],
  "111129": [
      "111129 GET WINDOW PROP      undefined -> reg9",
      "111134 SET      reg9 -> reg8",
      "111137 SET MEMORY ELEMENT IF INIT      3438 = reg8",
      "111140 EMPTY OBJECT      -> reg8",
      "111142 PUSH MEMORY ELEMENT IF INIT      3437 -> reg9",
      "111145 PUT      reg8[verdict] = reg9",
      "111151 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "111154 GET      reg11[stringify] -> reg10",
      "111160 NEW ARRAY      1 -> reg13",
      "111163 PUSH MEMORY ELEMENT IF INIT      3435 -> reg15",
      "111166 PUT      reg13[0] = reg15",
      "111170 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg13",
      "111174 SET      reg2 -> reg9",
      "111177 PUT      reg8[raw] = reg9",
      "111183 PUSH MEMORY ELEMENT IF INIT      3438 -> reg9",
      "111186 PUT      reg8[score] = reg9",
      "111192 PUT      reg8[error] = false",
      "111198 JUMP OR RETURN VAL      reg8"
  ],
  "111202": [
      "111202 SET I      null",
      "111204 PUSH F.K      -> reg8",
      "111206 VOID F",
      "111207 SET MEMORY ELEMENT      0 = reg8",
      "111210 EMPTY OBJECT      -> reg8",
      "111212 PUT      reg8[verdict] = false",
      "111218 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "111221 GET      reg10[toString] -> reg12",
      "111227 EMPTY ARRAY      -> reg13",
      "111229 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg13",
      "111233 SET      reg2 -> reg9",
      "111236 PUT      reg8[raw] = reg9",
      "111242 PUT      reg8[error] = true",
      "111248 JUMP OR RETURN VAL      reg8"
  ],
  "111726": [
      "111726 SET I      null",
      "111728 PUSH F.K      -> reg5",
      "111730 VOID F",
      "111731 SET MEMORY ELEMENT      0 = reg5",
      "111734 EMPTY OBJECT      -> reg4",
      "111736 PUT      reg4[verdict] = false",
      "111742 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "111745 GET      reg8[toString] -> reg5",
      "111751 EMPTY ARRAY      -> reg10",
      "111753 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg10",
      "111757 SET      reg2 -> reg7",
      "111760 PUT      reg4[raw] = reg7",
      "111766 PUT      reg4[error] = true",
      "111772 JUMP OR RETURN VAL      reg4"
  ],
  "111910": [
      "111910 SET I      111944",
      "111912 GET WINDOW PROP      window -> reg9",
      "111917 PUSH MEMORY ELEMENT IF INIT      3451 -> reg8",
      "111920 GET      reg9[reg8] -> reg4",
      "111924 GET      reg4[toString] -> reg8",
      "111930 EMPTY ARRAY      -> reg10",
      "111932 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg10",
      "111936 SET      reg2 -> reg7",
      "111939 SET MEMORY ELEMENT IF INIT      3455 = reg7",
      "111942 JUMP      111957",
      "111957 SET I      112616",
      "111959 SET I      112001",
      "111961 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "111964 GET      reg7[stringify] -> reg8",
      "111970 NEW ARRAY      1 -> reg10",
      "111973 GET WINDOW PROP      window -> reg11",
      "111978 PUSH MEMORY ELEMENT IF INIT      3451 -> reg15",
      "111981 GET      reg11[reg15] -> reg12",
      "111985 PUT      reg10[0] = reg12",
      "111989 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "111993 SET      reg2 -> reg9",
      "111996 SET MEMORY ELEMENT IF INIT      3456 = reg9",
      "111999 JUMP      112014",
      "112014 SET I      112616",
      "112016 SET I      112117",
      "112018 GET WINDOW PROP      window -> reg8",
      "112023 PUSH MEMORY ELEMENT IF INIT      3451 -> reg9",
      "112026 GET      reg8[reg9] -> reg10",
      "112030 GET      reg10[constructor] -> reg9",
      "112036 GET      reg9[name] -> reg8",
      "112042 STRICT EQUAL      reg8 === Window -> reg9",
      "112048 JUMP IF FALSE      reg9 TO: 112115 | 112051"
  ],
  "111944": [
      "111944 SET I      112616",
      "111946 PUSH F.K      -> reg7",
      "111948 VOID F",
      "111949 SET MEMORY ELEMENT      0 = reg7",
      "111952 SET MEMORY ELEMENT IF INIT      3455 = err",
      "111957 SET I      112616",
      "111959 SET I      112001",
      "111961 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "111964 GET      reg7[stringify] -> reg8",
      "111970 NEW ARRAY      1 -> reg10",
      "111973 GET WINDOW PROP      window -> reg11",
      "111978 PUSH MEMORY ELEMENT IF INIT      3451 -> reg15",
      "111981 GET      reg11[reg15] -> reg12",
      "111985 PUT      reg10[0] = reg12",
      "111989 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "111993 SET      reg2 -> reg9",
      "111996 SET MEMORY ELEMENT IF INIT      3456 = reg9",
      "111999 JUMP      112014",
      "112014 SET I      112616",
      "112016 SET I      112117",
      "112018 GET WINDOW PROP      window -> reg8",
      "112023 PUSH MEMORY ELEMENT IF INIT      3451 -> reg9",
      "112026 GET      reg8[reg9] -> reg10",
      "112030 GET      reg10[constructor] -> reg9",
      "112036 GET      reg9[name] -> reg8",
      "112042 STRICT EQUAL      reg8 === Window -> reg9",
      "112048 JUMP IF FALSE      reg9 TO: 112115 | 112051"
  ],
  "112001": [
      "112001 SET I      112616",
      "112003 PUSH F.K      -> reg10",
      "112005 VOID F",
      "112006 SET MEMORY ELEMENT      0 = reg10",
      "112009 SET MEMORY ELEMENT IF INIT      3456 = err",
      "112014 SET I      112616",
      "112016 SET I      112117",
      "112018 GET WINDOW PROP      window -> reg8",
      "112023 PUSH MEMORY ELEMENT IF INIT      3451 -> reg9",
      "112026 GET      reg8[reg9] -> reg10",
      "112030 GET      reg10[constructor] -> reg9",
      "112036 GET      reg9[name] -> reg8",
      "112042 STRICT EQUAL      reg8 === Window -> reg9",
      "112048 JUMP IF FALSE      reg9 TO: 112115 | 112051"
  ],
  "112051": [
      "112051 GET WINDOW PROP      Object -> reg10",
      "112056 GET      reg10[keys] -> reg11",
      "112062 NEW ARRAY      1 -> reg13",
      "112065 GET WINDOW PROP      window -> reg12",
      "112070 PUSH MEMORY ELEMENT IF INIT      3451 -> reg14",
      "112073 GET      reg12[reg14] -> reg15",
      "112077 PUT      reg13[0] = reg15",
      "112081 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg13",
      "112085 SET      reg2 -> reg9",
      "112088 GET      reg9[slice] -> reg13",
      "112094 NEW ARRAY      1 -> reg11",
      "112097 SUBTRACT      0 - 10 -> reg12",
      "112101 PUT      reg11[0] = reg12",
      "112105 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg11",
      "112109 SET      reg2 -> reg8",
      "112112 SET MEMORY ELEMENT IF INIT      3457 = reg8",
      "112115 JUMP      112130",
      "112130 SET I      112616",
      "112132 PUSH MEMORY ELEMENT IF INIT      3451 -> reg8",
      "112135 PUSH MEMORY ELEMENT IF INIT      3452 -> reg11",
      "112138 GET      reg11[contentWindow] -> reg12",
      "112144 IN      reg8 inreg12 -> reg13",
      "112148 SET MEMORY ELEMENT IF INIT      3458 = reg13",
      "112151 PUSH MEMORY ELEMENT IF INIT      3452 -> reg8",
      "112154 GET      reg8[contentWindow] -> reg12",
      "112160 GET      reg12[hasOwnProperty] -> reg8",
      "112166 NEW ARRAY      1 -> reg13",
      "112169 PUSH MEMORY ELEMENT IF INIT      3451 -> reg14",
      "112172 PUT      reg13[0] = reg14",
      "112176 CALL FUNCTION      OBJ: reg12 FUNC: reg8 ARGS: reg13",
      "112180 SET      reg2 -> reg11",
      "112183 SET MEMORY ELEMENT IF INIT      3459 = reg11",
      "112186 SET MEMORY ELEMENT IF INIT      3460 = na",
      "112191 SET MEMORY ELEMENT IF INIT      3461 = na",
      "112196 SET MEMORY ELEMENT IF INIT      3462 = na",
      "112201 PUSH MEMORY ELEMENT IF INIT      3458 -> reg8",
      "112204 JUMP IF FALSE      reg8 TO: 112441 | 112207"
  ],
  "112115": [
      "112115 JUMP      112130",
      "112130 SET I      112616",
      "112132 PUSH MEMORY ELEMENT IF INIT      3451 -> reg8",
      "112135 PUSH MEMORY ELEMENT IF INIT      3452 -> reg11",
      "112138 GET      reg11[contentWindow] -> reg12",
      "112144 IN      reg8 inreg12 -> reg13",
      "112148 SET MEMORY ELEMENT IF INIT      3458 = reg13",
      "112151 PUSH MEMORY ELEMENT IF INIT      3452 -> reg8",
      "112154 GET      reg8[contentWindow] -> reg12",
      "112160 GET      reg12[hasOwnProperty] -> reg8",
      "112166 NEW ARRAY      1 -> reg13",
      "112169 PUSH MEMORY ELEMENT IF INIT      3451 -> reg14",
      "112172 PUT      reg13[0] = reg14",
      "112176 CALL FUNCTION      OBJ: reg12 FUNC: reg8 ARGS: reg13",
      "112180 SET      reg2 -> reg11",
      "112183 SET MEMORY ELEMENT IF INIT      3459 = reg11",
      "112186 SET MEMORY ELEMENT IF INIT      3460 = na",
      "112191 SET MEMORY ELEMENT IF INIT      3461 = na",
      "112196 SET MEMORY ELEMENT IF INIT      3462 = na",
      "112201 PUSH MEMORY ELEMENT IF INIT      3458 -> reg8",
      "112204 JUMP IF FALSE      reg8 TO: 112441 | 112207"
  ],
  "112117": [
      "112117 SET I      112616",
      "112119 PUSH F.K      -> reg8",
      "112121 VOID F",
      "112122 SET MEMORY ELEMENT      0 = reg8",
      "112125 SET MEMORY ELEMENT IF INIT      3457 = err",
      "112130 SET I      112616",
      "112132 PUSH MEMORY ELEMENT IF INIT      3451 -> reg8",
      "112135 PUSH MEMORY ELEMENT IF INIT      3452 -> reg11",
      "112138 GET      reg11[contentWindow] -> reg12",
      "112144 IN      reg8 inreg12 -> reg13",
      "112148 SET MEMORY ELEMENT IF INIT      3458 = reg13",
      "112151 PUSH MEMORY ELEMENT IF INIT      3452 -> reg8",
      "112154 GET      reg8[contentWindow] -> reg12",
      "112160 GET      reg12[hasOwnProperty] -> reg8",
      "112166 NEW ARRAY      1 -> reg13",
      "112169 PUSH MEMORY ELEMENT IF INIT      3451 -> reg14",
      "112172 PUT      reg13[0] = reg14",
      "112176 CALL FUNCTION      OBJ: reg12 FUNC: reg8 ARGS: reg13",
      "112180 SET      reg2 -> reg11",
      "112183 SET MEMORY ELEMENT IF INIT      3459 = reg11",
      "112186 SET MEMORY ELEMENT IF INIT      3460 = na",
      "112191 SET MEMORY ELEMENT IF INIT      3461 = na",
      "112196 SET MEMORY ELEMENT IF INIT      3462 = na",
      "112201 PUSH MEMORY ELEMENT IF INIT      3458 -> reg8",
      "112204 JUMP IF FALSE      reg8 TO: 112441 | 112207"
  ],
  "112132": [
      "112132 PUSH MEMORY ELEMENT IF INIT      3451 -> reg8",
      "112135 PUSH MEMORY ELEMENT IF INIT      3452 -> reg11",
      "112138 GET      reg11[contentWindow] -> reg12",
      "112144 IN      reg8 inreg12 -> reg13",
      "112148 SET MEMORY ELEMENT IF INIT      3458 = reg13",
      "112151 PUSH MEMORY ELEMENT IF INIT      3452 -> reg8",
      "112154 GET      reg8[contentWindow] -> reg12",
      "112160 GET      reg12[hasOwnProperty] -> reg8",
      "112166 NEW ARRAY      1 -> reg13",
      "112169 PUSH MEMORY ELEMENT IF INIT      3451 -> reg14",
      "112172 PUT      reg13[0] = reg14",
      "112176 CALL FUNCTION      OBJ: reg12 FUNC: reg8 ARGS: reg13",
      "112180 SET      reg2 -> reg11",
      "112183 SET MEMORY ELEMENT IF INIT      3459 = reg11",
      "112186 SET MEMORY ELEMENT IF INIT      3460 = na",
      "112191 SET MEMORY ELEMENT IF INIT      3461 = na",
      "112196 SET MEMORY ELEMENT IF INIT      3462 = na",
      "112201 PUSH MEMORY ELEMENT IF INIT      3458 -> reg8",
      "112204 JUMP IF FALSE      reg8 TO: 112441 | 112207"
  ],
  "112207": [
      "112207 SET I      112245",
      "112209 PUSH MEMORY ELEMENT IF INIT      3452 -> reg11",
      "112212 GET      reg11[contentWindow] -> reg14",
      "112218 PUSH MEMORY ELEMENT IF INIT      3451 -> reg13",
      "112221 GET      reg14[reg13] -> reg11",
      "112225 GET      reg11[toString] -> reg14",
      "112231 EMPTY ARRAY      -> reg13",
      "112233 CALL FUNCTION      OBJ: reg11 FUNC: reg14 ARGS: reg13",
      "112237 SET      reg2 -> reg8",
      "112240 SET MEMORY ELEMENT IF INIT      3460 = reg8",
      "112243 JUMP      112258",
      "112258 SET I      112616",
      "112260 SET I      112306",
      "112262 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "112265 GET      reg13[stringify] -> reg14",
      "112271 NEW ARRAY      1 -> reg16",
      "112274 PUSH MEMORY ELEMENT IF INIT      3452 -> reg17",
      "112277 GET      reg17[contentWindow] -> reg15",
      "112283 PUSH MEMORY ELEMENT IF INIT      3451 -> reg19",
      "112286 GET      reg15[reg19] -> reg17",
      "112290 PUT      reg16[0] = reg17",
      "112294 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg16",
      "112298 SET      reg2 -> reg8",
      "112301 SET MEMORY ELEMENT IF INIT      3461 = reg8",
      "112304 JUMP      112319",
      "112319 SET I      112616",
      "112321 SET I      112426",
      "112323 PUSH MEMORY ELEMENT IF INIT      3452 -> reg8",
      "112326 GET      reg8[contentWindow] -> reg14",
      "112332 PUSH MEMORY ELEMENT IF INIT      3451 -> reg8",
      "112335 GET      reg14[reg8] -> reg15",
      "112339 GET      reg15[constructor] -> reg8",
      "112345 GET      reg8[name] -> reg14",
      "112351 STRICT EQUAL      reg14 === Window -> reg15",
      "112357 JUMP IF FALSE      reg15 TO: 112424 | 112360"
  ],
  "112245": [
      "112245 SET I      112616",
      "112247 PUSH F.K      -> reg14",
      "112249 VOID F",
      "112250 SET MEMORY ELEMENT      0 = reg14",
      "112253 SET MEMORY ELEMENT IF INIT      3460 = err",
      "112258 SET I      112616",
      "112260 SET I      112306",
      "112262 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "112265 GET      reg13[stringify] -> reg14",
      "112271 NEW ARRAY      1 -> reg16",
      "112274 PUSH MEMORY ELEMENT IF INIT      3452 -> reg17",
      "112277 GET      reg17[contentWindow] -> reg15",
      "112283 PUSH MEMORY ELEMENT IF INIT      3451 -> reg19",
      "112286 GET      reg15[reg19] -> reg17",
      "112290 PUT      reg16[0] = reg17",
      "112294 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg16",
      "112298 SET      reg2 -> reg8",
      "112301 SET MEMORY ELEMENT IF INIT      3461 = reg8",
      "112304 JUMP      112319",
      "112319 SET I      112616",
      "112321 SET I      112426",
      "112323 PUSH MEMORY ELEMENT IF INIT      3452 -> reg8",
      "112326 GET      reg8[contentWindow] -> reg14",
      "112332 PUSH MEMORY ELEMENT IF INIT      3451 -> reg8",
      "112335 GET      reg14[reg8] -> reg15",
      "112339 GET      reg15[constructor] -> reg8",
      "112345 GET      reg8[name] -> reg14",
      "112351 STRICT EQUAL      reg14 === Window -> reg15",
      "112357 JUMP IF FALSE      reg15 TO: 112424 | 112360"
  ],
  "112306": [
      "112306 SET I      112616",
      "112308 PUSH F.K      -> reg8",
      "112310 VOID F",
      "112311 SET MEMORY ELEMENT      0 = reg8",
      "112314 SET MEMORY ELEMENT IF INIT      3461 = err",
      "112319 SET I      112616",
      "112321 SET I      112426",
      "112323 PUSH MEMORY ELEMENT IF INIT      3452 -> reg8",
      "112326 GET      reg8[contentWindow] -> reg14",
      "112332 PUSH MEMORY ELEMENT IF INIT      3451 -> reg8",
      "112335 GET      reg14[reg8] -> reg15",
      "112339 GET      reg15[constructor] -> reg8",
      "112345 GET      reg8[name] -> reg14",
      "112351 STRICT EQUAL      reg14 === Window -> reg15",
      "112357 JUMP IF FALSE      reg15 TO: 112424 | 112360"
  ],
  "112360": [
      "112360 GET WINDOW PROP      Object -> reg15",
      "112365 GET      reg15[keys] -> reg16",
      "112371 NEW ARRAY      1 -> reg17",
      "112374 GET WINDOW PROP      window -> reg19",
      "112379 PUSH MEMORY ELEMENT IF INIT      3451 -> reg20",
      "112382 GET      reg19[reg20] -> reg18",
      "112386 PUT      reg17[0] = reg18",
      "112390 CALL FUNCTION      OBJ: reg15 FUNC: reg16 ARGS: reg17",
      "112394 SET      reg2 -> reg14",
      "112397 GET      reg14[slice] -> reg17",
      "112403 NEW ARRAY      1 -> reg18",
      "112406 SUBTRACT      0 - 10 -> reg20",
      "112410 PUT      reg18[0] = reg20",
      "112414 CALL FUNCTION      OBJ: reg14 FUNC: reg17 ARGS: reg18",
      "112418 SET      reg2 -> reg8",
      "112421 SET MEMORY ELEMENT IF INIT      3462 = reg8",
      "112424 JUMP      112439",
      "112439 SET I      112616",
      "112441 PUSH MEMORY ELEMENT IF INIT      3453 -> reg16",
      "112444 JUMP IF FALSE      reg16 TO: 112453 | 112447"
  ],
  "112424": [
      "112424 JUMP      112439",
      "112439 SET I      112616",
      "112441 PUSH MEMORY ELEMENT IF INIT      3453 -> reg16",
      "112444 JUMP IF FALSE      reg16 TO: 112453 | 112447"
  ],
  "112426": [
      "112426 SET I      112616",
      "112428 PUSH F.K      -> reg8",
      "112430 VOID F",
      "112431 SET MEMORY ELEMENT      0 = reg8",
      "112434 SET MEMORY ELEMENT IF INIT      3462 = err",
      "112439 SET I      112616",
      "112441 PUSH MEMORY ELEMENT IF INIT      3453 -> reg16",
      "112444 JUMP IF FALSE      reg16 TO: 112453 | 112447"
  ],
  "112441": [
      "112441 PUSH MEMORY ELEMENT IF INIT      3453 -> reg16",
      "112444 JUMP IF FALSE      reg16 TO: 112453 | 112447"
  ],
  "112447": [
      "112447 PUSH MEMORY ELEMENT IF INIT      3454 -> reg8",
      "112450 SET      reg8 -> reg16",
      "112453 JUMP IF FALSE      reg16 TO: 112462 | 112456"
  ],
  "112453": ["112453 JUMP IF FALSE      reg16 TO: 112462 | 112456"],
  "112456": [
      "112456 PUSH MEMORY ELEMENT IF INIT      3458 -> reg17",
      "112459 SET      reg17 -> reg16",
      "112462 JUMP IF FALSE      reg16 TO: 112471 | 112465"
  ],
  "112462": ["112462 JUMP IF FALSE      reg16 TO: 112471 | 112465"],
  "112465": [
      "112465 PUSH MEMORY ELEMENT IF INIT      3459 -> reg20",
      "112468 SET      reg20 -> reg16",
      "112471 SET MEMORY ELEMENT IF INIT      3463 = reg16",
      "112474 EMPTY OBJECT      -> reg8",
      "112476 PUSH MEMORY ELEMENT IF INIT      3463 -> reg16",
      "112479 PUT      reg8[verdict] = reg16",
      "112485 PUSH MEMORY ELEMENT IF INIT      280 -> reg19",
      "112488 GET      reg19[stringify] -> reg17",
      "112494 NEW ARRAY      1 -> reg20",
      "112497 EMPTY OBJECT      -> reg18",
      "112499 PUSH MEMORY ELEMENT IF INIT      3453 -> reg22",
      "112502 PUT      reg18[w] = reg22",
      "112508 PUSH MEMORY ELEMENT IF INIT      3454 -> reg21",
      "112511 PUT      reg18[wp] = reg21",
      "112517 PUSH MEMORY ELEMENT IF INIT      3458 -> reg21",
      "112520 PUT      reg18[i] = reg21",
      "112526 PUSH MEMORY ELEMENT IF INIT      3459 -> reg21",
      "112529 PUT      reg18[ip] = reg21",
      "112535 PUSH MEMORY ELEMENT IF INIT      3455 -> reg22",
      "112538 PUT      reg18[ts] = reg22",
      "112544 PUSH MEMORY ELEMENT IF INIT      3456 -> reg21",
      "112547 PUT      reg18[js] = reg21",
      "112553 PUSH MEMORY ELEMENT IF INIT      3460 -> reg21",
      "112556 PUT      reg18[its] = reg21",
      "112562 PUSH MEMORY ELEMENT IF INIT      3461 -> reg21",
      "112565 PUT      reg18[ijs] = reg21",
      "112571 PUSH MEMORY ELEMENT IF INIT      3462 -> reg21",
      "112574 PUT      reg18[ik] = reg21",
      "112580 PUSH MEMORY ELEMENT IF INIT      3457 -> reg21",
      "112583 PUT      reg18[wk] = reg21",
      "112589 PUT      reg20[0] = reg18",
      "112593 CALL FUNCTION      OBJ: reg19 FUNC: reg17 ARGS: reg20",
      "112597 SET      reg2 -> reg16",
      "112600 PUT      reg8[raw] = reg16",
      "112606 PUT      reg8[error] = false",
      "112612 JUMP OR RETURN VAL      reg8"
  ],
  "112471": [
      "112471 SET MEMORY ELEMENT IF INIT      3463 = reg16",
      "112474 EMPTY OBJECT      -> reg8",
      "112476 PUSH MEMORY ELEMENT IF INIT      3463 -> reg16",
      "112479 PUT      reg8[verdict] = reg16",
      "112485 PUSH MEMORY ELEMENT IF INIT      280 -> reg19",
      "112488 GET      reg19[stringify] -> reg17",
      "112494 NEW ARRAY      1 -> reg20",
      "112497 EMPTY OBJECT      -> reg18",
      "112499 PUSH MEMORY ELEMENT IF INIT      3453 -> reg22",
      "112502 PUT      reg18[w] = reg22",
      "112508 PUSH MEMORY ELEMENT IF INIT      3454 -> reg21",
      "112511 PUT      reg18[wp] = reg21",
      "112517 PUSH MEMORY ELEMENT IF INIT      3458 -> reg21",
      "112520 PUT      reg18[i] = reg21",
      "112526 PUSH MEMORY ELEMENT IF INIT      3459 -> reg21",
      "112529 PUT      reg18[ip] = reg21",
      "112535 PUSH MEMORY ELEMENT IF INIT      3455 -> reg22",
      "112538 PUT      reg18[ts] = reg22",
      "112544 PUSH MEMORY ELEMENT IF INIT      3456 -> reg21",
      "112547 PUT      reg18[js] = reg21",
      "112553 PUSH MEMORY ELEMENT IF INIT      3460 -> reg21",
      "112556 PUT      reg18[its] = reg21",
      "112562 PUSH MEMORY ELEMENT IF INIT      3461 -> reg21",
      "112565 PUT      reg18[ijs] = reg21",
      "112571 PUSH MEMORY ELEMENT IF INIT      3462 -> reg21",
      "112574 PUT      reg18[ik] = reg21",
      "112580 PUSH MEMORY ELEMENT IF INIT      3457 -> reg21",
      "112583 PUT      reg18[wk] = reg21",
      "112589 PUT      reg20[0] = reg18",
      "112593 CALL FUNCTION      OBJ: reg19 FUNC: reg17 ARGS: reg20",
      "112597 SET      reg2 -> reg16",
      "112600 PUT      reg8[raw] = reg16",
      "112606 PUT      reg8[error] = false",
      "112612 JUMP OR RETURN VAL      reg8"
  ],
  "112616": [
      "112616 SET I      null",
      "112618 PUSH F.K      -> reg8",
      "112620 VOID F",
      "112621 SET MEMORY ELEMENT      0 = reg8",
      "112624 EMPTY OBJECT      -> reg8",
      "112626 PUT      reg8[verdict] = false",
      "112632 PUSH MEMORY ELEMENT IF INIT      0 -> reg17",
      "112635 GET      reg17[toString] -> reg21",
      "112641 EMPTY ARRAY      -> reg18",
      "112643 CALL FUNCTION      OBJ: reg17 FUNC: reg21 ARGS: reg18",
      "112647 SET      reg2 -> reg16",
      "112650 PUT      reg8[raw] = reg16",
      "112656 PUT      reg8[error] = true",
      "112662 JUMP OR RETURN VAL      reg8"
  ],
  "113075": [
      "113075 SET I      113127",
      "113077 PUSH F.K      -> reg4",
      "113079 VOID F",
      "113080 SET MEMORY ELEMENT      0 = reg4",
      "113083 EMPTY OBJECT      -> reg4",
      "113085 PUT      reg4[verdict] = false",
      "113091 PUSH MEMORY ELEMENT IF INIT      0 -> reg11",
      "113094 GET      reg11[toString] -> reg12",
      "113100 EMPTY ARRAY      -> reg9",
      "113102 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg9",
      "113106 SET      reg2 -> reg5",
      "113109 PUT      reg4[raw] = reg5",
      "113115 PUT      reg4[error] = true",
      "113121 JUMP OR RETURN VAL      reg4"
  ],
  "113127": [
      "113127 SET I      null",
      "113129 PUSH F.K      -> reg4",
      "113131 VOID F",
      "113132 SET MEMORY ELEMENT      0 = reg4",
      "113135 EMPTY OBJECT      -> reg4",
      "113137 PUT      reg4[verdict] = false",
      "113143 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "113146 GET      reg5[toString] -> reg12",
      "113152 EMPTY ARRAY      -> reg13",
      "113154 CALL FUNCTION      OBJ: reg5 FUNC: reg12 ARGS: reg13",
      "113158 SET      reg2 -> reg9",
      "113161 PUT      reg4[raw] = reg9",
      "113167 PUT      reg4[error] = true",
      "113173 JUMP OR RETURN VAL      reg4"
  ],
  "113442": [
      "113442 SET I      null",
      "113444 PUSH F.K      -> reg5",
      "113446 VOID F",
      "113447 SET MEMORY ELEMENT      0 = reg5",
      "113450 EMPTY OBJECT      -> reg5",
      "113452 PUT      reg5[verdict] = false",
      "113458 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "113461 GET      reg10[toString] -> reg12",
      "113467 EMPTY ARRAY      -> reg17",
      "113469 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg17",
      "113473 SET      reg2 -> reg7",
      "113476 PUT      reg5[raw] = reg7",
      "113482 PUT      reg5[error] = true",
      "113488 JUMP OR RETURN VAL      reg5"
  ],
  "113587": [
      "113587 GET      reg3[1] -> reg6",
      "113591 GET WINDOW PROP      undefined -> reg4",
      "113596 STRICT NOT EQUAL      reg6 !== reg4 -> reg7",
      "113600 SET      reg7 -> reg5",
      "113603 JUMP IF FALSE      reg5 TO: 113615 | 113606"
  ],
  "113603": ["113603 JUMP IF FALSE      reg5 TO: 113615 | 113606"],
  "113606": [
      "113606 GET      reg3[1] -> reg4",
      "113610 SET      reg4 -> reg6",
      "113613 JUMP      113618",
      "113618 SET MEMORY ELEMENT IF INIT      3513 = reg6",
      "113621 NEW ARRAY      25 -> reg4",
      "113624 PUT      reg4[0] = 699527",
      "113628 PUT      reg4[1] = 635533",
      "113632 PUT      reg4[2] = 488641",
      "113636 PUT      reg4[3] = 383777",
      "113640 PUT      reg4[4] = 276247",
      "113644 PUT      reg4[5] = 523903",
      "113648 PUT      reg4[6] = 462499",
      "113652 PUT      reg4[7] = 704419",
      "113656 PUT      reg4[8] = 664289",
      "113660 PUT      reg4[9] = 676409",
      "113664 PUT      reg4[10] = 515311",
      "113668 PUT      reg4[11] = 298021",
      "113672 PUT      reg4[12] = 665011",
      "113676 PUT      reg4[13] = 377099",
      "113680 PUT      reg4[14] = 182353",
      "113684 PUT      reg4[15] = 770179",
      "113688 PUT      reg4[16] = 902987",
      "113692 PUT      reg4[17] = 581353",
      "113696 PUT      reg4[18] = 689093",
      "113700 PUT      reg4[19] = 729587",
      "113704 PUT      reg4[20] = 704393",
      "113708 PUT      reg4[21] = 796459",
      "113712 PUT      reg4[22] = 579713",
      "113716 PUT      reg4[23] = 775147",
      "113720 PUT      reg4[24] = 294157",
      "113724 SET MEMORY ELEMENT IF INIT      3514 = reg4",
      "113727 GET WINDOW PROP      Math -> reg10",
      "113732 GET      reg10[floor] -> reg5",
      "113738 NEW ARRAY      1 -> reg9",
      "113741 GET WINDOW PROP      Date -> reg7",
      "113746 GET      reg7[now] -> reg11",
      "113752 EMPTY ARRAY      -> reg13",
      "113754 CALL FUNCTION      OBJ: reg7 FUNC: reg11 ARGS: reg13",
      "113758 SET      reg2 -> reg6",
      "113761 DIVIDE      reg6 / 1000 -> reg12",
      "113765 PUSH MEMORY ELEMENT IF INIT      3513 -> reg6",
      "113768 DIVIDE      reg12 / reg6 -> reg14",
      "113772 PUT      reg9[0] = reg14",
      "113776 CALL FUNCTION      OBJ: reg10 FUNC: reg5 ARGS: reg9",
      "113780 SET      reg2 -> reg8",
      "113783 GET      reg8[toString] -> reg5",
      "113789 EMPTY ARRAY      -> reg6",
      "113791 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg6",
      "113795 SET      reg2 -> reg4",
      "113798 SET MEMORY ELEMENT IF INIT      3515 = reg4",
      "113801 GET WINDOW PROP      parseInt -> reg5",
      "113806 NEW ARRAY      1 -> reg9",
      "113809 PUSH MEMORY ELEMENT IF INIT      3515 -> reg6",
      "113812 PUSH MEMORY ELEMENT IF INIT      3515 -> reg15",
      "113815 GET      reg15[length] -> reg12",
      "113821 SUBTRACT      reg12 - 1 -> reg13",
      "113825 GET      reg6[reg13] -> reg11",
      "113829 PUT      reg9[0] = reg11",
      "113833 CALL FUNCTION      PTR: reg5 MEM: reg9",
      "113837 SET      reg2 -> reg4",
      "113840 SET MEMORY ELEMENT IF INIT      3516 = reg4",
      "113843 GET WINDOW PROP      parseInt -> reg4",
      "113848 NEW ARRAY      1 -> reg6",
      "113851 PUSH MEMORY ELEMENT IF INIT      3515 -> reg11",
      "113854 PUSH MEMORY ELEMENT IF INIT      3515 -> reg12",
      "113857 GET      reg12[length] -> reg13",
      "113863 SUBTRACT      reg13 - 2 -> reg12",
      "113867 GET      reg11[reg12] -> reg9",
      "113871 PUT      reg6[0] = reg9",
      "113875 CALL FUNCTION      PTR: reg4 MEM: reg6",
      "113879 SET      reg2 -> reg5",
      "113882 SET MEMORY ELEMENT IF INIT      3517 = reg5",
      "113885 SET MEMORY ELEMENT IF INIT      3518 = 0",
      "113888 SET MEMORY ELEMENT IF INIT      3519 = 0",
      "113891 PUSH MEMORY ELEMENT IF INIT      3519 -> reg5",
      "113894 PUSH MEMORY ELEMENT IF INIT      3515 -> reg6",
      "113897 GET      reg6[length] -> reg4",
      "113903 LESS THAN      reg5 < reg4 -> reg6",
      "113907 JUMP IF FALSE      reg6 TO: 114026 | 113910"
  ],
  "113615": [
      "113615 SET      14400 -> reg6",
      "113618 SET MEMORY ELEMENT IF INIT      3513 = reg6",
      "113621 NEW ARRAY      25 -> reg4",
      "113624 PUT      reg4[0] = 699527",
      "113628 PUT      reg4[1] = 635533",
      "113632 PUT      reg4[2] = 488641",
      "113636 PUT      reg4[3] = 383777",
      "113640 PUT      reg4[4] = 276247",
      "113644 PUT      reg4[5] = 523903",
      "113648 PUT      reg4[6] = 462499",
      "113652 PUT      reg4[7] = 704419",
      "113656 PUT      reg4[8] = 664289",
      "113660 PUT      reg4[9] = 676409",
      "113664 PUT      reg4[10] = 515311",
      "113668 PUT      reg4[11] = 298021",
      "113672 PUT      reg4[12] = 665011",
      "113676 PUT      reg4[13] = 377099",
      "113680 PUT      reg4[14] = 182353",
      "113684 PUT      reg4[15] = 770179",
      "113688 PUT      reg4[16] = 902987",
      "113692 PUT      reg4[17] = 581353",
      "113696 PUT      reg4[18] = 689093",
      "113700 PUT      reg4[19] = 729587",
      "113704 PUT      reg4[20] = 704393",
      "113708 PUT      reg4[21] = 796459",
      "113712 PUT      reg4[22] = 579713",
      "113716 PUT      reg4[23] = 775147",
      "113720 PUT      reg4[24] = 294157",
      "113724 SET MEMORY ELEMENT IF INIT      3514 = reg4",
      "113727 GET WINDOW PROP      Math -> reg10",
      "113732 GET      reg10[floor] -> reg5",
      "113738 NEW ARRAY      1 -> reg9",
      "113741 GET WINDOW PROP      Date -> reg7",
      "113746 GET      reg7[now] -> reg11",
      "113752 EMPTY ARRAY      -> reg13",
      "113754 CALL FUNCTION      OBJ: reg7 FUNC: reg11 ARGS: reg13",
      "113758 SET      reg2 -> reg6",
      "113761 DIVIDE      reg6 / 1000 -> reg12",
      "113765 PUSH MEMORY ELEMENT IF INIT      3513 -> reg6",
      "113768 DIVIDE      reg12 / reg6 -> reg14",
      "113772 PUT      reg9[0] = reg14",
      "113776 CALL FUNCTION      OBJ: reg10 FUNC: reg5 ARGS: reg9",
      "113780 SET      reg2 -> reg8",
      "113783 GET      reg8[toString] -> reg5",
      "113789 EMPTY ARRAY      -> reg6",
      "113791 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg6",
      "113795 SET      reg2 -> reg4",
      "113798 SET MEMORY ELEMENT IF INIT      3515 = reg4",
      "113801 GET WINDOW PROP      parseInt -> reg5",
      "113806 NEW ARRAY      1 -> reg9",
      "113809 PUSH MEMORY ELEMENT IF INIT      3515 -> reg6",
      "113812 PUSH MEMORY ELEMENT IF INIT      3515 -> reg15",
      "113815 GET      reg15[length] -> reg12",
      "113821 SUBTRACT      reg12 - 1 -> reg13",
      "113825 GET      reg6[reg13] -> reg11",
      "113829 PUT      reg9[0] = reg11",
      "113833 CALL FUNCTION      PTR: reg5 MEM: reg9",
      "113837 SET      reg2 -> reg4",
      "113840 SET MEMORY ELEMENT IF INIT      3516 = reg4",
      "113843 GET WINDOW PROP      parseInt -> reg4",
      "113848 NEW ARRAY      1 -> reg6",
      "113851 PUSH MEMORY ELEMENT IF INIT      3515 -> reg11",
      "113854 PUSH MEMORY ELEMENT IF INIT      3515 -> reg12",
      "113857 GET      reg12[length] -> reg13",
      "113863 SUBTRACT      reg13 - 2 -> reg12",
      "113867 GET      reg11[reg12] -> reg9",
      "113871 PUT      reg6[0] = reg9",
      "113875 CALL FUNCTION      PTR: reg4 MEM: reg6",
      "113879 SET      reg2 -> reg5",
      "113882 SET MEMORY ELEMENT IF INIT      3517 = reg5",
      "113885 SET MEMORY ELEMENT IF INIT      3518 = 0",
      "113888 SET MEMORY ELEMENT IF INIT      3519 = 0",
      "113891 PUSH MEMORY ELEMENT IF INIT      3519 -> reg5",
      "113894 PUSH MEMORY ELEMENT IF INIT      3515 -> reg6",
      "113897 GET      reg6[length] -> reg4",
      "113903 LESS THAN      reg5 < reg4 -> reg6",
      "113907 JUMP IF FALSE      reg6 TO: 114026 | 113910"
  ],
  "113910": [
      "113910 PUSH MEMORY ELEMENT IF INIT      3518 -> reg4",
      "113913 PUSH MEMORY ELEMENT IF INIT      3515 -> reg5",
      "113916 GET      reg5[charCodeAt] -> reg11",
      "113922 NEW ARRAY      1 -> reg13",
      "113925 PUSH MEMORY ELEMENT IF INIT      3519 -> reg9",
      "113928 PUT      reg13[0] = reg9",
      "113932 CALL FUNCTION      OBJ: reg5 FUNC: reg11 ARGS: reg13",
      "113936 SET      reg2 -> reg6",
      "113939 PUSH MEMORY ELEMENT IF INIT      3512 -> reg11",
      "113942 GET      reg11[charCodeAt] -> reg12",
      "113948 NEW ARRAY      1 -> reg16",
      "113951 PUSH MEMORY ELEMENT IF INIT      3519 -> reg14",
      "113954 PUSH MEMORY ELEMENT IF INIT      3516 -> reg13",
      "113957 ADD      reg14NaN-> reg15",
      "113961 PUSH MEMORY ELEMENT IF INIT      3512 -> reg13",
      "113964 GET      reg13[length] -> reg14",
      "113970 MOD      reg15 % reg14 -> reg13",
      "113974 PUT      reg16[0] = reg13",
      "113978 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg16",
      "113982 SET      reg2 -> reg9",
      "113985 XOR      reg6 ^ reg9 -> reg12",
      "113989 PUSH MEMORY ELEMENT IF INIT      3519 -> reg6",
      "113992 MOD      reg6 % 2 -> reg9",
      "113996 MULTIPLY      reg9 * 8 -> reg13",
      "114000 LSHIFT      reg12 << reg13 -> reg6",
      "114004 ADD      reg4NaN-> reg6",
      "114008 SET MEMORY ELEMENT IF INIT      3518 = reg6",
      "114011 PUSH MEMORY ELEMENT IF INIT      3519 -> reg9",
      "114014 SET      reg9 -> reg4",
      "114017 ADD      reg91-> reg9",
      "114021 SET MEMORY ELEMENT IF INIT      3519 = reg9",
      "114024 JUMP      113891",
      "113891 PUSH MEMORY ELEMENT IF INIT      3519 -> reg5",
      "113894 PUSH MEMORY ELEMENT IF INIT      3515 -> reg6",
      "113897 GET      reg6[length] -> reg4",
      "113903 LESS THAN      reg5 < reg4 -> reg6",
      "113907 JUMP IF FALSE      reg6 TO: 114026 | 113910"
  ],
  "114026": [
      "114026 PUSH MEMORY ELEMENT IF INIT      3518 -> reg4",
      "114029 PUSH MEMORY ELEMENT IF INIT      3514 -> reg6",
      "114032 PUSH MEMORY ELEMENT IF INIT      3516 -> reg13",
      "114035 PUSH MEMORY ELEMENT IF INIT      3517 -> reg16",
      "114038 ADD      reg13NaN-> reg9",
      "114042 PUSH MEMORY ELEMENT IF INIT      3514 -> reg14",
      "114045 GET      reg14[length] -> reg13",
      "114051 MOD      reg9 % reg13 -> reg18",
      "114055 GET      reg6[reg18] -> reg12",
      "114059 MULTIPLY      reg4 * reg12 -> reg12",
      "114063 SET MEMORY ELEMENT IF INIT      3518 = reg12",
      "114066 PUSH MEMORY ELEMENT IF INIT      3518 -> reg4",
      "114069 SET      1000000 -> reg6",
      "114072 MOD      reg4 % reg6 -> reg6",
      "114076 SET MEMORY ELEMENT IF INIT      3518 = reg6",
      "114079 PUSH MEMORY ELEMENT IF INIT      3518 -> reg9",
      "114082 GET      reg9[toString] -> reg4",
      "114088 EMPTY ARRAY      -> reg12",
      "114090 CALL FUNCTION      OBJ: reg9 FUNC: reg4 ARGS: reg12",
      "114094 SET      reg2 -> reg6",
      "114097 SET MEMORY ELEMENT IF INIT      3520 = reg6",
      "114100 PUSH MEMORY ELEMENT IF INIT      3520 -> reg6",
      "114103 GET      reg6[length] -> reg12",
      "114109 LESS THAN      reg12 < 6 -> reg4",
      "114113 JUMP IF FALSE      reg4 TO: 114130 | 114116"
  ],
  "114116": [
      "114116 PUSH MEMORY ELEMENT IF INIT      3520 -> reg4",
      "114119 ADD      0NaN-> reg12",
      "114125 SET MEMORY ELEMENT IF INIT      3520 = reg12",
      "114128 JUMP      114100",
      "114100 PUSH MEMORY ELEMENT IF INIT      3520 -> reg6",
      "114103 GET      reg6[length] -> reg12",
      "114109 LESS THAN      reg12 < 6 -> reg4",
      "114113 JUMP IF FALSE      reg4 TO: 114130 | 114116"
  ],
  "114130": [
      "114130 PUSH MEMORY ELEMENT IF INIT      3520 -> reg4",
      "114133 JUMP OR RETURN VAL      reg4"
  ],
  "114265": [
      "114265 PUSH MEMORY ELEMENT IF INIT      3495 -> reg9",
      "114268 ADD      0NaN-> reg7",
      "114274 SET MEMORY ELEMENT IF INIT      3495 = reg7",
      "114277 JUMP      114249",
      "114249 PUSH MEMORY ELEMENT IF INIT      3495 -> reg4",
      "114252 GET      reg4[length] -> reg7",
      "114258 LESS THAN      reg7 < 6 -> reg4",
      "114262 JUMP IF FALSE      reg4 TO: 114279 | 114265"
  ],
  "114279": [
      "114279 NEW ARRAY      2 -> reg4",
      "114282 NEW ARRAY      10 -> reg9",
      "114285 GET WINDOW PROP      navigator -> reg8",
      "114290 GET      reg8[userAgent] -> reg7",
      "114296 PUT      reg9[0] = reg7",
      "114300 GET WINDOW PROP      navigator -> reg7",
      "114305 GET      reg7[language] -> reg11",
      "114311 PUT      reg9[1] = reg11",
      "114315 GET WINDOW PROP      navigator -> reg11",
      "114320 GET      reg11[platform] -> reg7",
      "114326 PUT      reg9[2] = reg7",
      "114330 GET WINDOW PROP      window -> reg8",
      "114335 GET      reg8[screen] -> reg7",
      "114341 GET      reg7[height] -> reg11",
      "114347 PUT      reg9[3] = reg11",
      "114351 GET WINDOW PROP      window -> reg7",
      "114356 GET      reg7[screen] -> reg8",
      "114362 GET      reg8[width] -> reg7",
      "114368 PUT      reg9[4] = reg7",
      "114372 GET WINDOW PROP      window -> reg7",
      "114377 GET      reg7[outerHeight] -> reg8",
      "114383 PUT      reg9[5] = reg8",
      "114387 GET WINDOW PROP      window -> reg7",
      "114392 GET      reg7[outerWidth] -> reg8",
      "114398 PUT      reg9[6] = reg8",
      "114402 PUSH MEMORY ELEMENT IF INIT      3495 -> reg7",
      "114405 PUT      reg9[7] = reg7",
      "114409 PUSH MEMORY ELEMENT IF INIT      3491 -> reg7",
      "114412 GET      reg7[action] -> reg10",
      "114418 STRICT EQUAL      reg10 === block -> reg7",
      "114424 PUT      reg9[8] = reg7",
      "114428 PUSH MEMORY ELEMENT IF INIT      276 -> reg7",
      "114431 PUT      reg9[9] = reg7",
      "114435 PUT      reg4[0] = reg9",
      "114439 PUT      reg4[1] = 123",
      "114443 SET MEMORY ELEMENT IF INIT      3496 = reg4",
      "114446 PUSH MEMORY ELEMENT IF INIT      3496 -> reg7",
      "114449 GET      reg7[toString] -> reg8",
      "114455 EMPTY ARRAY      -> reg9",
      "114457 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "114461 SET      reg2 -> reg4",
      "114464 INIT FUNCTION STATE      PTR: 114473 NAME:  LEN: 1 -> reg4",
      "114471 JUMP      114861",
      "114861 SET MEMORY ELEMENT IF INIT      3497 = reg4",
      "114864 INIT FUNCTION STATE      PTR: 114873 NAME:  LEN: 1 -> reg4",
      "114871 JUMP      115376",
      "115376 SET MEMORY ELEMENT IF INIT      3498 = reg4",
      "115379 SET MEMORY ELEMENT IF INIT      3499 = aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1BX2o4Vy1TRGVmVQ==",
      "115384 INIT FUNCTION STATE      PTR: 115393 NAME:  LEN: 1 -> reg4",
      "115391 JUMP      115640",
      "115640 SET MEMORY ELEMENT IF INIT      3500 = reg4",
      "115643 PUSH MEMORY ELEMENT IF INIT      3492 -> reg4",
      "115646 NEW ARRAY      1 -> reg8",
      "115649 PUSH MEMORY ELEMENT IF INIT      3499 -> reg9",
      "115652 PUT      reg8[0] = reg9",
      "115656 CALL FUNCTION      PTR: reg4 MEM: reg8",
      "115660 SET      reg2 -> reg11",
      "115663 ADD      reg11NaN-> reg8",
      "115669 SET MEMORY ELEMENT IF INIT      3501 = reg8",
      "115672 PUSH MEMORY ELEMENT IF INIT      3492 -> reg9",
      "115675 NEW ARRAY      1 -> reg8",
      "115678 PUSH MEMORY ELEMENT IF INIT      3499 -> reg10",
      "115681 PUT      reg8[0] = reg10",
      "115685 CALL FUNCTION      PTR: reg9 MEM: reg8",
      "115689 SET      reg2 -> reg4",
      "115692 SET MEMORY ELEMENT IF INIT      3502 = reg4",
      "115695 SET MEMORY ELEMENT IF INIT      3503 = aHR0cHM6Ly93d3cueW91dHVsasaiZS5jb20vd2F0Y2g/dj1lYUVNU0t6cUdBZw==",
      "115700 SET MEMORY ELEMENT IF INIT      3504 = aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1lYUVNU0t6cUdBZw==",
      "115705 SET MEMORY ELEMENT IF INIT      3505 = false",
      "115710 PUSH MEMORY ELEMENT IF INIT      3491 -> reg4",
      "115713 GET      reg4[action] -> reg8",
      "115719 STRICT EQUAL      reg8 === block -> reg4",
      "115725 JUMP IF FALSE      reg4 TO: 115735 | 115728"
  ],
  "114660": [
      "114660 SET      0 -> reg10",
      "114663 GET      reg4[reg10] -> reg7",
      "114667 SET MEMORY ELEMENT IF INIT      3535 = reg7",
      "114670 PUSH MEMORY ELEMENT IF INIT      2589 -> reg9",
      "114673 GET      reg9[hash2] -> reg11",
      "114679 NEW ARRAY      1 -> reg13",
      "114682 PUSH MEMORY ELEMENT IF INIT      3530 -> reg17",
      "114685 PUSH MEMORY ELEMENT IF INIT      3535 -> reg15",
      "114688 GET      reg17[reg15] -> reg14",
      "114692 GET      reg14[toString] -> reg15",
      "114698 EMPTY ARRAY      -> reg17",
      "114700 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg17",
      "114704 SET      reg2 -> reg12",
      "114707 PUT      reg13[0] = reg12",
      "114711 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg13",
      "114715 SET      reg2 -> reg8",
      "114718 PUSH MEMORY ELEMENT IF INIT      3531 -> reg11",
      "114721 ADD      reg8NaN-> reg15",
      "114725 SET MEMORY ELEMENT IF INIT      3536 = reg15",
      "114728 PUSH MEMORY ELEMENT IF INIT      3534 -> reg8",
      "114731 PUSH MEMORY ELEMENT IF INIT      3533 -> reg12",
      "114734 PUSH MEMORY ELEMENT IF INIT      3494 -> reg20",
      "114737 NEW ARRAY      2 -> reg16",
      "114740 PUSH MEMORY ELEMENT IF INIT      3536 -> reg15",
      "114743 PUT      reg16[0] = reg15",
      "114747 PUSH MEMORY ELEMENT IF INIT      3533 -> reg17",
      "114750 GET      reg17[length] -> reg18",
      "114756 PUT      reg16[1] = reg18",
      "114760 CALL FUNCTION      PTR: reg20 MEM: reg16",
      "114764 SET      reg2 -> reg13",
      "114767 GET      reg12[reg13] -> reg11",
      "114771 PUSH MEMORY ELEMENT IF INIT      3530 -> reg13",
      "114774 PUSH MEMORY ELEMENT IF INIT      3535 -> reg16",
      "114777 GET      reg13[reg16] -> reg12",
      "114781 PUT      reg8[reg11] = reg12",
      "114785 PUSH MEMORY ELEMENT IF INIT      3533 -> reg12",
      "114788 GET      reg12[splice] -> reg11",
      "114794 NEW ARRAY      2 -> reg15",
      "114797 PUSH MEMORY ELEMENT IF INIT      3494 -> reg13",
      "114800 NEW ARRAY      2 -> reg18",
      "114803 PUSH MEMORY ELEMENT IF INIT      3536 -> reg20",
      "114806 PUT      reg18[0] = reg20",
      "114810 PUSH MEMORY ELEMENT IF INIT      3533 -> reg17",
      "114813 GET      reg17[length] -> reg21",
      "114819 PUT      reg18[1] = reg21",
      "114823 CALL FUNCTION      PTR: reg13 MEM: reg18",
      "114827 SET      reg2 -> reg16",
      "114830 PUT      reg15[0] = reg16",
      "114834 PUT      reg15[1] = 1",
      "114838 CALL FUNCTION      OBJ: reg12 FUNC: reg11 ARGS: reg15",
      "114842 SET      reg2 -> reg8",
      "114845 ADD      reg101-> reg10",
      "114849 LESS THAN      reg10 < reg6 -> reg11",
      "114853 JUMP IF TRUE      reg11 TO: 114663 | 114856"
  ],
  "114663": [
      "114663 GET      reg4[reg10] -> reg7",
      "114667 SET MEMORY ELEMENT IF INIT      3535 = reg7",
      "114670 PUSH MEMORY ELEMENT IF INIT      2589 -> reg9",
      "114673 GET      reg9[hash2] -> reg11",
      "114679 NEW ARRAY      1 -> reg13",
      "114682 PUSH MEMORY ELEMENT IF INIT      3530 -> reg17",
      "114685 PUSH MEMORY ELEMENT IF INIT      3535 -> reg15",
      "114688 GET      reg17[reg15] -> reg14",
      "114692 GET      reg14[toString] -> reg15",
      "114698 EMPTY ARRAY      -> reg17",
      "114700 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg17",
      "114704 SET      reg2 -> reg12",
      "114707 PUT      reg13[0] = reg12",
      "114711 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg13",
      "114715 SET      reg2 -> reg8",
      "114718 PUSH MEMORY ELEMENT IF INIT      3531 -> reg11",
      "114721 ADD      reg8NaN-> reg15",
      "114725 SET MEMORY ELEMENT IF INIT      3536 = reg15",
      "114728 PUSH MEMORY ELEMENT IF INIT      3534 -> reg8",
      "114731 PUSH MEMORY ELEMENT IF INIT      3533 -> reg12",
      "114734 PUSH MEMORY ELEMENT IF INIT      3494 -> reg20",
      "114737 NEW ARRAY      2 -> reg16",
      "114740 PUSH MEMORY ELEMENT IF INIT      3536 -> reg15",
      "114743 PUT      reg16[0] = reg15",
      "114747 PUSH MEMORY ELEMENT IF INIT      3533 -> reg17",
      "114750 GET      reg17[length] -> reg18",
      "114756 PUT      reg16[1] = reg18",
      "114760 CALL FUNCTION      PTR: reg20 MEM: reg16",
      "114764 SET      reg2 -> reg13",
      "114767 GET      reg12[reg13] -> reg11",
      "114771 PUSH MEMORY ELEMENT IF INIT      3530 -> reg13",
      "114774 PUSH MEMORY ELEMENT IF INIT      3535 -> reg16",
      "114777 GET      reg13[reg16] -> reg12",
      "114781 PUT      reg8[reg11] = reg12",
      "114785 PUSH MEMORY ELEMENT IF INIT      3533 -> reg12",
      "114788 GET      reg12[splice] -> reg11",
      "114794 NEW ARRAY      2 -> reg15",
      "114797 PUSH MEMORY ELEMENT IF INIT      3494 -> reg13",
      "114800 NEW ARRAY      2 -> reg18",
      "114803 PUSH MEMORY ELEMENT IF INIT      3536 -> reg20",
      "114806 PUT      reg18[0] = reg20",
      "114810 PUSH MEMORY ELEMENT IF INIT      3533 -> reg17",
      "114813 GET      reg17[length] -> reg21",
      "114819 PUT      reg18[1] = reg21",
      "114823 CALL FUNCTION      PTR: reg13 MEM: reg18",
      "114827 SET      reg2 -> reg16",
      "114830 PUT      reg15[0] = reg16",
      "114834 PUT      reg15[1] = 1",
      "114838 CALL FUNCTION      OBJ: reg12 FUNC: reg11 ARGS: reg15",
      "114842 SET      reg2 -> reg8",
      "114845 ADD      reg101-> reg10",
      "114849 LESS THAN      reg10 < reg6 -> reg11",
      "114853 JUMP IF TRUE      reg11 TO: 114663 | 114856"
  ],
  "114856": [
      "114856 PUSH MEMORY ELEMENT IF INIT      3534 -> reg4",
      "114859 JUMP OR RETURN VAL      reg4"
  ],
  "115168": [
      "115168 SET      0 -> reg9",
      "115171 GET      reg5[reg9] -> reg6",
      "115175 SET MEMORY ELEMENT IF INIT      3542 = reg6",
      "115178 PUSH MEMORY ELEMENT IF INIT      3539 -> reg8",
      "115181 PUSH MEMORY ELEMENT IF INIT      3542 -> reg10",
      "115184 GET      reg8[reg10] -> reg12",
      "115188 PUSH MEMORY ELEMENT IF INIT      3540 -> reg13",
      "115191 ADD      reg12NaN-> reg13",
      "115195 PUT      reg8[reg10] = reg13",
      "115199 ADD      reg91-> reg9",
      "115203 LESS THAN      reg9 < reg7 -> reg8",
      "115207 JUMP IF TRUE      reg8 TO: 115171 | 115210"
  ],
  "115171": [
      "115171 GET      reg5[reg9] -> reg6",
      "115175 SET MEMORY ELEMENT IF INIT      3542 = reg6",
      "115178 PUSH MEMORY ELEMENT IF INIT      3539 -> reg8",
      "115181 PUSH MEMORY ELEMENT IF INIT      3542 -> reg10",
      "115184 GET      reg8[reg10] -> reg12",
      "115188 PUSH MEMORY ELEMENT IF INIT      3540 -> reg13",
      "115191 ADD      reg12NaN-> reg13",
      "115195 PUT      reg8[reg10] = reg13",
      "115199 ADD      reg91-> reg9",
      "115203 LESS THAN      reg9 < reg7 -> reg8",
      "115207 JUMP IF TRUE      reg8 TO: 115171 | 115210"
  ],
  "115210": [
      "115210 PUSH MEMORY ELEMENT IF INIT      3541 -> reg5",
      "115213 GET      reg5[0] -> reg9",
      "115217 PUSH MEMORY ELEMENT IF INIT      3494 -> reg8",
      "115220 NEW ARRAY      2 -> reg11",
      "115223 PUSH MEMORY ELEMENT IF INIT      3539 -> reg6",
      "115226 GET      reg6[0] -> reg10",
      "115230 PUT      reg11[0] = reg10",
      "115234 PUSH MEMORY ELEMENT IF INIT      3541 -> reg6",
      "115237 GET      reg6[0] -> reg12",
      "115241 GET      reg12[length] -> reg6",
      "115247 PUT      reg11[1] = reg6",
      "115251 CALL FUNCTION      PTR: reg8 MEM: reg11",
      "115255 SET      reg2 -> reg7",
      "115258 GET      reg9[reg7] -> reg5",
      "115262 PUSH MEMORY ELEMENT IF INIT      3541 -> reg7",
      "115265 GET      reg7[1] -> reg6",
      "115269 PUSH MEMORY ELEMENT IF INIT      3494 -> reg8",
      "115272 NEW ARRAY      2 -> reg10",
      "115275 PUSH MEMORY ELEMENT IF INIT      3539 -> reg12",
      "115278 GET      reg12[1] -> reg11",
      "115282 PUT      reg10[0] = reg11",
      "115286 PUSH MEMORY ELEMENT IF INIT      3541 -> reg11",
      "115289 GET      reg11[1] -> reg16",
      "115293 GET      reg16[length] -> reg11",
      "115299 PUT      reg10[1] = reg11",
      "115303 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "115307 SET      reg2 -> reg9",
      "115310 GET      reg6[reg9] -> reg7",
      "115314 ADD      reg5NaN-> reg6",
      "115318 PUSH MEMORY ELEMENT IF INIT      3541 -> reg8",
      "115321 GET      reg8[2] -> reg5",
      "115325 PUSH MEMORY ELEMENT IF INIT      3494 -> reg10",
      "115328 NEW ARRAY      2 -> reg9",
      "115331 PUSH MEMORY ELEMENT IF INIT      3539 -> reg11",
      "115334 GET      reg11[2] -> reg12",
      "115338 PUT      reg9[0] = reg12",
      "115342 PUSH MEMORY ELEMENT IF INIT      3541 -> reg11",
      "115345 GET      reg11[2] -> reg12",
      "115349 GET      reg12[length] -> reg11",
      "115355 PUT      reg9[1] = reg11",
      "115359 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "115363 SET      reg2 -> reg8",
      "115366 GET      reg5[reg8] -> reg7",
      "115370 ADD      reg6NaN-> reg5",
      "115374 JUMP OR RETURN VAL      reg5"
  ],
  "115419": [
      "115419 GET      reg3[1] -> reg5",
      "115423 GET WINDOW PROP      undefined -> reg9",
      "115428 STRICT NOT EQUAL      reg5 !== reg9 -> reg6",
      "115432 SET      reg6 -> reg4",
      "115435 JUMP IF FALSE      reg4 TO: 115447 | 115438"
  ],
  "115435": ["115435 JUMP IF FALSE      reg4 TO: 115447 | 115438"],
  "115438": [
      "115438 GET      reg3[1] -> reg4",
      "115442 SET      reg4 -> reg5",
      "115445 JUMP      115450",
      "115450 SET MEMORY ELEMENT IF INIT      3546 = reg5",
      "115453 EMPTY OBJECT      -> reg4",
      "115455 SET MEMORY ELEMENT IF INIT      3547 = reg4",
      "115458 SET MEMORY ELEMENT IF INIT      3548 = 0",
      "115461 SET MEMORY ELEMENT IF INIT      3549 = ",
      "115466 PUSH MEMORY ELEMENT IF INIT      3545 -> reg5",
      "115469 COPY ENUMERABLE      reg5 -> reg4",
      "115472 GET      reg4[length] -> reg6",
      "115478 EQUAL      reg6 == 0 -> reg7",
      "115482 JUMP IF TRUE      reg7 TO: 115599 | 115485"
  ],
  "115447": [
      "115447 SET      null -> reg5",
      "115450 SET MEMORY ELEMENT IF INIT      3546 = reg5",
      "115453 EMPTY OBJECT      -> reg4",
      "115455 SET MEMORY ELEMENT IF INIT      3547 = reg4",
      "115458 SET MEMORY ELEMENT IF INIT      3548 = 0",
      "115461 SET MEMORY ELEMENT IF INIT      3549 = ",
      "115466 PUSH MEMORY ELEMENT IF INIT      3545 -> reg5",
      "115469 COPY ENUMERABLE      reg5 -> reg4",
      "115472 GET      reg4[length] -> reg6",
      "115478 EQUAL      reg6 == 0 -> reg7",
      "115482 JUMP IF TRUE      reg7 TO: 115599 | 115485"
  ],
  "115485": [
      "115485 SET      0 -> reg7",
      "115488 GET      reg4[reg7] -> reg5",
      "115492 SET MEMORY ELEMENT IF INIT      3550 = reg5",
      "115495 PUSH MEMORY ELEMENT IF INIT      3548 -> reg8",
      "115498 PUSH MEMORY ELEMENT IF INIT      2589 -> reg10",
      "115501 GET      reg10[hash2] -> reg12",
      "115507 NEW ARRAY      1 -> reg13",
      "115510 PUSH MEMORY ELEMENT IF INIT      3545 -> reg15",
      "115513 PUSH MEMORY ELEMENT IF INIT      3550 -> reg16",
      "115516 GET      reg15[reg16] -> reg14",
      "115520 GET      reg14[toString] -> reg15",
      "115526 EMPTY ARRAY      -> reg16",
      "115528 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg16",
      "115532 SET      reg2 -> reg11",
      "115535 PUT      reg13[0] = reg11",
      "115539 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg13",
      "115543 SET      reg2 -> reg9",
      "115546 ADD      reg8NaN-> reg9",
      "115550 SET MEMORY ELEMENT IF INIT      3548 = reg9",
      "115553 PUSH MEMORY ELEMENT IF INIT      3549 -> reg8",
      "115556 PUSH MEMORY ELEMENT IF INIT      3545 -> reg12",
      "115559 PUSH MEMORY ELEMENT IF INIT      3550 -> reg13",
      "115562 GET      reg12[reg13] -> reg9",
      "115566 GET      reg9[toString] -> reg12",
      "115572 EMPTY ARRAY      -> reg15",
      "115574 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg15",
      "115578 SET      reg2 -> reg11",
      "115581 ADD      reg8NaN-> reg11",
      "115585 SET MEMORY ELEMENT IF INIT      3549 = reg11",
      "115588 ADD      reg71-> reg7",
      "115592 LESS THAN      reg7 < reg6 -> reg11",
      "115596 JUMP IF TRUE      reg11 TO: 115488 | 115599"
  ],
  "115488": [
      "115488 GET      reg4[reg7] -> reg5",
      "115492 SET MEMORY ELEMENT IF INIT      3550 = reg5",
      "115495 PUSH MEMORY ELEMENT IF INIT      3548 -> reg8",
      "115498 PUSH MEMORY ELEMENT IF INIT      2589 -> reg10",
      "115501 GET      reg10[hash2] -> reg12",
      "115507 NEW ARRAY      1 -> reg13",
      "115510 PUSH MEMORY ELEMENT IF INIT      3545 -> reg15",
      "115513 PUSH MEMORY ELEMENT IF INIT      3550 -> reg16",
      "115516 GET      reg15[reg16] -> reg14",
      "115520 GET      reg14[toString] -> reg15",
      "115526 EMPTY ARRAY      -> reg16",
      "115528 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg16",
      "115532 SET      reg2 -> reg11",
      "115535 PUT      reg13[0] = reg11",
      "115539 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg13",
      "115543 SET      reg2 -> reg9",
      "115546 ADD      reg8NaN-> reg9",
      "115550 SET MEMORY ELEMENT IF INIT      3548 = reg9",
      "115553 PUSH MEMORY ELEMENT IF INIT      3549 -> reg8",
      "115556 PUSH MEMORY ELEMENT IF INIT      3545 -> reg12",
      "115559 PUSH MEMORY ELEMENT IF INIT      3550 -> reg13",
      "115562 GET      reg12[reg13] -> reg9",
      "115566 GET      reg9[toString] -> reg12",
      "115572 EMPTY ARRAY      -> reg15",
      "115574 CALL FUNCTION      OBJ: reg9 FUNC: reg12 ARGS: reg15",
      "115578 SET      reg2 -> reg11",
      "115581 ADD      reg8NaN-> reg11",
      "115585 SET MEMORY ELEMENT IF INIT      3549 = reg11",
      "115588 ADD      reg71-> reg7",
      "115592 LESS THAN      reg7 < reg6 -> reg11",
      "115596 JUMP IF TRUE      reg11 TO: 115488 | 115599"
  ],
  "115599": [
      "115599 PUSH MEMORY ELEMENT IF INIT      3548 -> reg4",
      "115602 PUSH MEMORY ELEMENT IF INIT      2589 -> reg6",
      "115605 GET      reg6[hash2] -> reg7",
      "115611 NEW ARRAY      1 -> reg8",
      "115614 PUSH MEMORY ELEMENT IF INIT      3549 -> reg11",
      "115617 PUT      reg8[0] = reg11",
      "115621 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "115625 SET      reg2 -> reg5",
      "115628 ADD      reg4NaN-> reg5",
      "115632 SET MEMORY ELEMENT IF INIT      3548 = reg5",
      "115635 PUSH MEMORY ELEMENT IF INIT      3548 -> reg4",
      "115638 JUMP OR RETURN VAL      reg4"
  ],
  "115728": [
      "115728 SET MEMORY ELEMENT IF INIT      3505 = true",
      "115733 JUMP      115740",
      "115740 NEW ARRAY      10 -> reg4",
      "115743 GET WINDOW PROP      navigator -> reg9",
      "115748 GET      reg9[userAgent] -> reg8",
      "115754 PUT      reg4[0] = reg8",
      "115758 GET WINDOW PROP      navigator -> reg9",
      "115763 GET      reg9[language] -> reg8",
      "115769 PUT      reg4[1] = reg8",
      "115773 GET WINDOW PROP      navigator -> reg8",
      "115778 GET      reg8[platform] -> reg9",
      "115784 PUT      reg4[2] = reg9",
      "115788 GET WINDOW PROP      window -> reg8",
      "115793 GET      reg8[screen] -> reg11",
      "115799 GET      reg11[height] -> reg8",
      "115805 PUT      reg4[3] = reg8",
      "115809 GET WINDOW PROP      window -> reg8",
      "115814 GET      reg8[screen] -> reg9",
      "115820 GET      reg9[width] -> reg8",
      "115826 PUT      reg4[4] = reg8",
      "115830 GET WINDOW PROP      window -> reg9",
      "115835 GET      reg9[outerHeight] -> reg8",
      "115841 PUT      reg4[5] = reg8",
      "115845 GET WINDOW PROP      window -> reg13",
      "115850 GET      reg13[outerWidth] -> reg8",
      "115856 PUT      reg4[6] = reg8",
      "115860 PUSH MEMORY ELEMENT IF INIT      3502 -> reg8",
      "115863 PUT      reg4[7] = reg8",
      "115867 PUSH MEMORY ELEMENT IF INIT      3505 -> reg8",
      "115870 PUT      reg4[8] = reg8",
      "115874 PUSH MEMORY ELEMENT IF INIT      276 -> reg8",
      "115877 PUT      reg4[9] = reg8",
      "115881 SET MEMORY ELEMENT IF INIT      3506 = reg4",
      "115884 PUSH MEMORY ELEMENT IF INIT      3497 -> reg4",
      "115887 NEW ARRAY      1 -> reg9",
      "115890 PUSH MEMORY ELEMENT IF INIT      3506 -> reg11",
      "115893 PUT      reg9[0] = reg11",
      "115897 CALL FUNCTION      PTR: reg4 MEM: reg9",
      "115901 SET      reg2 -> reg8",
      "115904 SET MEMORY ELEMENT IF INIT      3506 = reg8",
      "115907 GET WINDOW PROP      Math -> reg8",
      "115912 GET      reg8[random] -> reg9",
      "115918 EMPTY ARRAY      -> reg10",
      "115920 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "115924 SET      reg2 -> reg4",
      "115927 SET MEMORY ELEMENT IF INIT      3507 = reg4",
      "115930 SET MEMORY ELEMENT IF INIT      3508 = ",
      "115935 PUSH MEMORY ELEMENT IF INIT      3507 -> reg4",
      "115938 LESS THAN      reg4 < 0.1 -> reg9",
      "115944 JUMP IF FALSE      reg9 TO: 116036 | 115947"
  ],
  "115735": [
      "115735 SET MEMORY ELEMENT IF INIT      3505 = false",
      "115740 NEW ARRAY      10 -> reg4",
      "115743 GET WINDOW PROP      navigator -> reg9",
      "115748 GET      reg9[userAgent] -> reg8",
      "115754 PUT      reg4[0] = reg8",
      "115758 GET WINDOW PROP      navigator -> reg9",
      "115763 GET      reg9[language] -> reg8",
      "115769 PUT      reg4[1] = reg8",
      "115773 GET WINDOW PROP      navigator -> reg8",
      "115778 GET      reg8[platform] -> reg9",
      "115784 PUT      reg4[2] = reg9",
      "115788 GET WINDOW PROP      window -> reg8",
      "115793 GET      reg8[screen] -> reg11",
      "115799 GET      reg11[height] -> reg8",
      "115805 PUT      reg4[3] = reg8",
      "115809 GET WINDOW PROP      window -> reg8",
      "115814 GET      reg8[screen] -> reg9",
      "115820 GET      reg9[width] -> reg8",
      "115826 PUT      reg4[4] = reg8",
      "115830 GET WINDOW PROP      window -> reg9",
      "115835 GET      reg9[outerHeight] -> reg8",
      "115841 PUT      reg4[5] = reg8",
      "115845 GET WINDOW PROP      window -> reg13",
      "115850 GET      reg13[outerWidth] -> reg8",
      "115856 PUT      reg4[6] = reg8",
      "115860 PUSH MEMORY ELEMENT IF INIT      3502 -> reg8",
      "115863 PUT      reg4[7] = reg8",
      "115867 PUSH MEMORY ELEMENT IF INIT      3505 -> reg8",
      "115870 PUT      reg4[8] = reg8",
      "115874 PUSH MEMORY ELEMENT IF INIT      276 -> reg8",
      "115877 PUT      reg4[9] = reg8",
      "115881 SET MEMORY ELEMENT IF INIT      3506 = reg4",
      "115884 PUSH MEMORY ELEMENT IF INIT      3497 -> reg4",
      "115887 NEW ARRAY      1 -> reg9",
      "115890 PUSH MEMORY ELEMENT IF INIT      3506 -> reg11",
      "115893 PUT      reg9[0] = reg11",
      "115897 CALL FUNCTION      PTR: reg4 MEM: reg9",
      "115901 SET      reg2 -> reg8",
      "115904 SET MEMORY ELEMENT IF INIT      3506 = reg8",
      "115907 GET WINDOW PROP      Math -> reg8",
      "115912 GET      reg8[random] -> reg9",
      "115918 EMPTY ARRAY      -> reg10",
      "115920 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "115924 SET      reg2 -> reg4",
      "115927 SET MEMORY ELEMENT IF INIT      3507 = reg4",
      "115930 SET MEMORY ELEMENT IF INIT      3508 = ",
      "115935 PUSH MEMORY ELEMENT IF INIT      3507 -> reg4",
      "115938 LESS THAN      reg4 < 0.1 -> reg9",
      "115944 JUMP IF FALSE      reg9 TO: 116036 | 115947"
  ],
  "115947": [
      "115947 PUSH MEMORY ELEMENT IF INIT      3500 -> reg9",
      "115950 NEW ARRAY      2 -> reg13",
      "115953 GET WINDOW PROP      Object -> reg11",
      "115958 GET      reg11[freeze] -> reg17",
      "115964 NEW ARRAY      1 -> reg15",
      "115967 PUSH MEMORY ELEMENT IF INIT      3506 -> reg14",
      "115970 PUT      reg15[0] = reg14",
      "115974 CALL FUNCTION      OBJ: reg11 FUNC: reg17 ARGS: reg15",
      "115978 SET      reg2 -> reg10",
      "115981 PUT      reg13[0] = reg10",
      "115985 GET WINDOW PROP      Math -> reg16",
      "115990 GET      reg16[random] -> reg15",
      "115996 EMPTY ARRAY      -> reg17",
      "115998 CALL FUNCTION      OBJ: reg16 FUNC: reg15 ARGS: reg17",
      "116002 SET      reg2 -> reg14",
      "116005 GET      reg14[toString] -> reg17",
      "116011 EMPTY ARRAY      -> reg18",
      "116013 CALL FUNCTION      OBJ: reg14 FUNC: reg17 ARGS: reg18",
      "116017 SET      reg2 -> reg10",
      "116020 PUT      reg13[1] = reg10",
      "116024 CALL FUNCTION      PTR: reg9 MEM: reg13",
      "116028 SET      reg2 -> reg4",
      "116031 SET MEMORY ELEMENT IF INIT      3508 = reg4",
      "116034 JUMP      116452",
      "116452 GET WINDOW PROP      btoa -> reg9",
      "116457 NEW ARRAY      1 -> reg10",
      "116460 PUSH MEMORY ELEMENT IF INIT      2590 -> reg21",
      "116463 NEW ARRAY      2 -> reg26",
      "116466 PUSH MEMORY ELEMENT IF INIT      3508 -> reg29",
      "116469 GET      reg29[toString] -> reg30",
      "116475 EMPTY ARRAY      -> reg31",
      "116477 CALL FUNCTION      OBJ: reg29 FUNC: reg30 ARGS: reg31",
      "116481 SET      reg2 -> reg27",
      "116484 PUT      reg26[0] = reg27",
      "116488 PUSH MEMORY ELEMENT IF INIT      3504 -> reg27",
      "116491 PUT      reg26[1] = reg27",
      "116495 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "116499 SET      reg2 -> reg13",
      "116502 PUT      reg10[0] = reg13",
      "116506 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116510 SET      reg2 -> reg4",
      "116513 SET MEMORY ELEMENT IF INIT      3508 = reg4",
      "116516 INIT FUNCTION STATE      PTR: 116525 NAME:  LEN: 2 -> reg4",
      "116523 JUMP      116617",
      "116617 SET MEMORY ELEMENT IF INIT      3509 = reg4",
      "116620 PUSH MEMORY ELEMENT IF INIT      3509 -> reg9",
      "116623 NEW ARRAY      2 -> reg10",
      "116626 PUT      reg10[0] = mobileNetworkHash",
      "116632 PUSH MEMORY ELEMENT IF INIT      3508 -> reg13",
      "116635 PUT      reg10[1] = reg13",
      "116639 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116643 SET      reg2 -> reg4",
      "116646 EMPTY OBJECT      -> reg10",
      "116648 PUT      reg10[verdict] = false",
      "116654 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "116657 GET      reg9[stringify] -> reg13",
      "116663 NEW ARRAY      1 -> reg21",
      "116666 PUSH MEMORY ELEMENT IF INIT      3508 -> reg26",
      "116669 PUT      reg21[0] = reg26",
      "116673 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg21",
      "116677 SET      reg2 -> reg4",
      "116680 PUT      reg10[raw] = reg4",
      "116686 PUT      reg10[error] = false",
      "116692 JUMP OR RETURN VAL      reg10"
  ],
  "116036": [
      "116036 PUSH MEMORY ELEMENT IF INIT      3507 -> reg9",
      "116039 LESS THAN      reg9 < 0.15 -> reg4",
      "116045 JUMP IF FALSE      reg4 TO: 116104 | 116048"
  ],
  "116048": [
      "116048 PUSH MEMORY ELEMENT IF INIT      3500 -> reg9",
      "116051 NEW ARRAY      2 -> reg10",
      "116054 GET WINDOW PROP      Object -> reg15",
      "116059 GET      reg15[freeze] -> reg17",
      "116065 NEW ARRAY      1 -> reg19",
      "116068 PUSH MEMORY ELEMENT IF INIT      3506 -> reg20",
      "116071 PUT      reg19[0] = reg20",
      "116075 CALL FUNCTION      OBJ: reg15 FUNC: reg17 ARGS: reg19",
      "116079 SET      reg2 -> reg13",
      "116082 PUT      reg10[0] = reg13",
      "116086 PUT      reg10[1] = null",
      "116092 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116096 SET      reg2 -> reg4",
      "116099 SET MEMORY ELEMENT IF INIT      3508 = reg4",
      "116102 JUMP      116452",
      "116452 GET WINDOW PROP      btoa -> reg9",
      "116457 NEW ARRAY      1 -> reg10",
      "116460 PUSH MEMORY ELEMENT IF INIT      2590 -> reg21",
      "116463 NEW ARRAY      2 -> reg26",
      "116466 PUSH MEMORY ELEMENT IF INIT      3508 -> reg29",
      "116469 GET      reg29[toString] -> reg30",
      "116475 EMPTY ARRAY      -> reg31",
      "116477 CALL FUNCTION      OBJ: reg29 FUNC: reg30 ARGS: reg31",
      "116481 SET      reg2 -> reg27",
      "116484 PUT      reg26[0] = reg27",
      "116488 PUSH MEMORY ELEMENT IF INIT      3504 -> reg27",
      "116491 PUT      reg26[1] = reg27",
      "116495 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "116499 SET      reg2 -> reg13",
      "116502 PUT      reg10[0] = reg13",
      "116506 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116510 SET      reg2 -> reg4",
      "116513 SET MEMORY ELEMENT IF INIT      3508 = reg4",
      "116516 INIT FUNCTION STATE      PTR: 116525 NAME:  LEN: 2 -> reg4",
      "116523 JUMP      116617",
      "116617 SET MEMORY ELEMENT IF INIT      3509 = reg4",
      "116620 PUSH MEMORY ELEMENT IF INIT      3509 -> reg9",
      "116623 NEW ARRAY      2 -> reg10",
      "116626 PUT      reg10[0] = mobileNetworkHash",
      "116632 PUSH MEMORY ELEMENT IF INIT      3508 -> reg13",
      "116635 PUT      reg10[1] = reg13",
      "116639 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116643 SET      reg2 -> reg4",
      "116646 EMPTY OBJECT      -> reg10",
      "116648 PUT      reg10[verdict] = false",
      "116654 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "116657 GET      reg9[stringify] -> reg13",
      "116663 NEW ARRAY      1 -> reg21",
      "116666 PUSH MEMORY ELEMENT IF INIT      3508 -> reg26",
      "116669 PUT      reg21[0] = reg26",
      "116673 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg21",
      "116677 SET      reg2 -> reg4",
      "116680 PUT      reg10[raw] = reg4",
      "116686 PUT      reg10[error] = false",
      "116692 JUMP OR RETURN VAL      reg10"
  ],
  "116104": [
      "116104 PUSH MEMORY ELEMENT IF INIT      3507 -> reg9",
      "116107 LESS THAN      reg9 < 0.2 -> reg10",
      "116113 JUMP IF FALSE      reg10 TO: 116197 | 116116"
  ],
  "116116": [
      "116116 PUSH MEMORY ELEMENT IF INIT      3500 -> reg9",
      "116119 NEW ARRAY      2 -> reg10",
      "116122 GET WINDOW PROP      Object -> reg17",
      "116127 GET      reg17[freeze] -> reg19",
      "116133 NEW ARRAY      1 -> reg18",
      "116136 PUSH MEMORY ELEMENT IF INIT      3506 -> reg21",
      "116139 PUT      reg18[0] = reg21",
      "116143 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg18",
      "116147 SET      reg2 -> reg13",
      "116150 PUT      reg10[0] = reg13",
      "116154 NEW ARRAY      1 -> reg13",
      "116157 GET WINDOW PROP      Math -> reg19",
      "116162 GET      reg19[random] -> reg21",
      "116168 EMPTY ARRAY      -> reg20",
      "116170 CALL FUNCTION      OBJ: reg19 FUNC: reg21 ARGS: reg20",
      "116174 SET      reg2 -> reg18",
      "116177 PUT      reg13[0] = reg18",
      "116181 PUT      reg10[1] = reg13",
      "116185 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116189 SET      reg2 -> reg4",
      "116192 SET MEMORY ELEMENT IF INIT      3508 = reg4",
      "116195 JUMP      116452",
      "116452 GET WINDOW PROP      btoa -> reg9",
      "116457 NEW ARRAY      1 -> reg10",
      "116460 PUSH MEMORY ELEMENT IF INIT      2590 -> reg21",
      "116463 NEW ARRAY      2 -> reg26",
      "116466 PUSH MEMORY ELEMENT IF INIT      3508 -> reg29",
      "116469 GET      reg29[toString] -> reg30",
      "116475 EMPTY ARRAY      -> reg31",
      "116477 CALL FUNCTION      OBJ: reg29 FUNC: reg30 ARGS: reg31",
      "116481 SET      reg2 -> reg27",
      "116484 PUT      reg26[0] = reg27",
      "116488 PUSH MEMORY ELEMENT IF INIT      3504 -> reg27",
      "116491 PUT      reg26[1] = reg27",
      "116495 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "116499 SET      reg2 -> reg13",
      "116502 PUT      reg10[0] = reg13",
      "116506 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116510 SET      reg2 -> reg4",
      "116513 SET MEMORY ELEMENT IF INIT      3508 = reg4",
      "116516 INIT FUNCTION STATE      PTR: 116525 NAME:  LEN: 2 -> reg4",
      "116523 JUMP      116617",
      "116617 SET MEMORY ELEMENT IF INIT      3509 = reg4",
      "116620 PUSH MEMORY ELEMENT IF INIT      3509 -> reg9",
      "116623 NEW ARRAY      2 -> reg10",
      "116626 PUT      reg10[0] = mobileNetworkHash",
      "116632 PUSH MEMORY ELEMENT IF INIT      3508 -> reg13",
      "116635 PUT      reg10[1] = reg13",
      "116639 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116643 SET      reg2 -> reg4",
      "116646 EMPTY OBJECT      -> reg10",
      "116648 PUT      reg10[verdict] = false",
      "116654 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "116657 GET      reg9[stringify] -> reg13",
      "116663 NEW ARRAY      1 -> reg21",
      "116666 PUSH MEMORY ELEMENT IF INIT      3508 -> reg26",
      "116669 PUT      reg21[0] = reg26",
      "116673 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg21",
      "116677 SET      reg2 -> reg4",
      "116680 PUT      reg10[raw] = reg4",
      "116686 PUT      reg10[error] = false",
      "116692 JUMP OR RETURN VAL      reg10"
  ],
  "116197": [
      "116197 PUSH MEMORY ELEMENT IF INIT      3507 -> reg4",
      "116200 LESS THAN      reg4 < 0.3 -> reg9",
      "116206 JUMP IF FALSE      reg9 TO: 116306 | 116209"
  ],
  "116209": [
      "116209 PUSH MEMORY ELEMENT IF INIT      3500 -> reg10",
      "116212 NEW ARRAY      2 -> reg9",
      "116215 GET WINDOW PROP      Object -> reg18",
      "116220 GET      reg18[freeze] -> reg20",
      "116226 NEW ARRAY      1 -> reg21",
      "116229 PUSH MEMORY ELEMENT IF INIT      3506 -> reg25",
      "116232 PUT      reg21[0] = reg25",
      "116236 CALL FUNCTION      OBJ: reg18 FUNC: reg20 ARGS: reg21",
      "116240 SET      reg2 -> reg13",
      "116243 PUT      reg9[0] = reg13",
      "116247 EMPTY OBJECT      -> reg13",
      "116249 GET WINDOW PROP      Math -> reg20",
      "116254 GET      reg20[random] -> reg23",
      "116260 EMPTY ARRAY      -> reg24",
      "116262 CALL FUNCTION      OBJ: reg20 FUNC: reg23 ARGS: reg24",
      "116266 SET      reg2 -> reg22",
      "116269 GET      reg22[toString] -> reg24",
      "116275 EMPTY ARRAY      -> reg23",
      "116277 CALL FUNCTION      OBJ: reg22 FUNC: reg24 ARGS: reg23",
      "116281 SET      reg2 -> reg21",
      "116284 PUT      reg13[321 ;)] = reg21",
      "116290 PUT      reg9[1] = reg13",
      "116294 CALL FUNCTION      PTR: reg10 MEM: reg9",
      "116298 SET      reg2 -> reg4",
      "116301 SET MEMORY ELEMENT IF INIT      3508 = reg4",
      "116304 JUMP      116452",
      "116452 GET WINDOW PROP      btoa -> reg9",
      "116457 NEW ARRAY      1 -> reg10",
      "116460 PUSH MEMORY ELEMENT IF INIT      2590 -> reg21",
      "116463 NEW ARRAY      2 -> reg26",
      "116466 PUSH MEMORY ELEMENT IF INIT      3508 -> reg29",
      "116469 GET      reg29[toString] -> reg30",
      "116475 EMPTY ARRAY      -> reg31",
      "116477 CALL FUNCTION      OBJ: reg29 FUNC: reg30 ARGS: reg31",
      "116481 SET      reg2 -> reg27",
      "116484 PUT      reg26[0] = reg27",
      "116488 PUSH MEMORY ELEMENT IF INIT      3504 -> reg27",
      "116491 PUT      reg26[1] = reg27",
      "116495 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "116499 SET      reg2 -> reg13",
      "116502 PUT      reg10[0] = reg13",
      "116506 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116510 SET      reg2 -> reg4",
      "116513 SET MEMORY ELEMENT IF INIT      3508 = reg4",
      "116516 INIT FUNCTION STATE      PTR: 116525 NAME:  LEN: 2 -> reg4",
      "116523 JUMP      116617",
      "116617 SET MEMORY ELEMENT IF INIT      3509 = reg4",
      "116620 PUSH MEMORY ELEMENT IF INIT      3509 -> reg9",
      "116623 NEW ARRAY      2 -> reg10",
      "116626 PUT      reg10[0] = mobileNetworkHash",
      "116632 PUSH MEMORY ELEMENT IF INIT      3508 -> reg13",
      "116635 PUT      reg10[1] = reg13",
      "116639 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116643 SET      reg2 -> reg4",
      "116646 EMPTY OBJECT      -> reg10",
      "116648 PUT      reg10[verdict] = false",
      "116654 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "116657 GET      reg9[stringify] -> reg13",
      "116663 NEW ARRAY      1 -> reg21",
      "116666 PUSH MEMORY ELEMENT IF INIT      3508 -> reg26",
      "116669 PUT      reg21[0] = reg26",
      "116673 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg21",
      "116677 SET      reg2 -> reg4",
      "116680 PUT      reg10[raw] = reg4",
      "116686 PUT      reg10[error] = false",
      "116692 JUMP OR RETURN VAL      reg10"
  ],
  "116306": [
      "116306 PUSH MEMORY ELEMENT IF INIT      3507 -> reg9",
      "116309 LESS THAN      reg9 < 0.4 -> reg4",
      "116315 JUMP IF FALSE      reg4 TO: 116400 | 116318"
  ],
  "116318": [
      "116318 PUSH MEMORY ELEMENT IF INIT      3500 -> reg4",
      "116321 NEW ARRAY      2 -> reg10",
      "116324 GET WINDOW PROP      Object -> reg24",
      "116329 GET      reg24[freeze] -> reg26",
      "116335 NEW ARRAY      1 -> reg21",
      "116338 PUSH MEMORY ELEMENT IF INIT      3506 -> reg25",
      "116341 PUT      reg21[0] = reg25",
      "116345 CALL FUNCTION      OBJ: reg24 FUNC: reg26 ARGS: reg21",
      "116349 SET      reg2 -> reg13",
      "116352 PUT      reg10[0] = reg13",
      "116356 EMPTY OBJECT      -> reg13",
      "116358 GET WINDOW PROP      Math -> reg23",
      "116363 GET      reg23[random] -> reg26",
      "116369 EMPTY ARRAY      -> reg28",
      "116371 CALL FUNCTION      OBJ: reg23 FUNC: reg26 ARGS: reg28",
      "116375 SET      reg2 -> reg21",
      "116378 PUT      reg13[321 ;)] = reg21",
      "116384 PUT      reg10[1] = reg13",
      "116388 CALL FUNCTION      PTR: reg4 MEM: reg10",
      "116392 SET      reg2 -> reg9",
      "116395 SET MEMORY ELEMENT IF INIT      3508 = reg9",
      "116398 JUMP      116452",
      "116452 GET WINDOW PROP      btoa -> reg9",
      "116457 NEW ARRAY      1 -> reg10",
      "116460 PUSH MEMORY ELEMENT IF INIT      2590 -> reg21",
      "116463 NEW ARRAY      2 -> reg26",
      "116466 PUSH MEMORY ELEMENT IF INIT      3508 -> reg29",
      "116469 GET      reg29[toString] -> reg30",
      "116475 EMPTY ARRAY      -> reg31",
      "116477 CALL FUNCTION      OBJ: reg29 FUNC: reg30 ARGS: reg31",
      "116481 SET      reg2 -> reg27",
      "116484 PUT      reg26[0] = reg27",
      "116488 PUSH MEMORY ELEMENT IF INIT      3504 -> reg27",
      "116491 PUT      reg26[1] = reg27",
      "116495 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "116499 SET      reg2 -> reg13",
      "116502 PUT      reg10[0] = reg13",
      "116506 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116510 SET      reg2 -> reg4",
      "116513 SET MEMORY ELEMENT IF INIT      3508 = reg4",
      "116516 INIT FUNCTION STATE      PTR: 116525 NAME:  LEN: 2 -> reg4",
      "116523 JUMP      116617",
      "116617 SET MEMORY ELEMENT IF INIT      3509 = reg4",
      "116620 PUSH MEMORY ELEMENT IF INIT      3509 -> reg9",
      "116623 NEW ARRAY      2 -> reg10",
      "116626 PUT      reg10[0] = mobileNetworkHash",
      "116632 PUSH MEMORY ELEMENT IF INIT      3508 -> reg13",
      "116635 PUT      reg10[1] = reg13",
      "116639 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116643 SET      reg2 -> reg4",
      "116646 EMPTY OBJECT      -> reg10",
      "116648 PUT      reg10[verdict] = false",
      "116654 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "116657 GET      reg9[stringify] -> reg13",
      "116663 NEW ARRAY      1 -> reg21",
      "116666 PUSH MEMORY ELEMENT IF INIT      3508 -> reg26",
      "116669 PUT      reg21[0] = reg26",
      "116673 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg21",
      "116677 SET      reg2 -> reg4",
      "116680 PUT      reg10[raw] = reg4",
      "116686 PUT      reg10[error] = false",
      "116692 JUMP OR RETURN VAL      reg10"
  ],
  "116400": [
      "116400 PUSH MEMORY ELEMENT IF INIT      3500 -> reg9",
      "116403 NEW ARRAY      2 -> reg10",
      "116406 GET WINDOW PROP      Object -> reg25",
      "116411 GET      reg25[freeze] -> reg21",
      "116417 NEW ARRAY      1 -> reg26",
      "116420 PUSH MEMORY ELEMENT IF INIT      3506 -> reg27",
      "116423 PUT      reg26[0] = reg27",
      "116427 CALL FUNCTION      OBJ: reg25 FUNC: reg21 ARGS: reg26",
      "116431 SET      reg2 -> reg13",
      "116434 PUT      reg10[0] = reg13",
      "116438 PUT      reg10[1] = null",
      "116442 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116446 SET      reg2 -> reg4",
      "116449 SET MEMORY ELEMENT IF INIT      3508 = reg4",
      "116452 GET WINDOW PROP      btoa -> reg9",
      "116457 NEW ARRAY      1 -> reg10",
      "116460 PUSH MEMORY ELEMENT IF INIT      2590 -> reg21",
      "116463 NEW ARRAY      2 -> reg26",
      "116466 PUSH MEMORY ELEMENT IF INIT      3508 -> reg29",
      "116469 GET      reg29[toString] -> reg30",
      "116475 EMPTY ARRAY      -> reg31",
      "116477 CALL FUNCTION      OBJ: reg29 FUNC: reg30 ARGS: reg31",
      "116481 SET      reg2 -> reg27",
      "116484 PUT      reg26[0] = reg27",
      "116488 PUSH MEMORY ELEMENT IF INIT      3504 -> reg27",
      "116491 PUT      reg26[1] = reg27",
      "116495 CALL FUNCTION      PTR: reg21 MEM: reg26",
      "116499 SET      reg2 -> reg13",
      "116502 PUT      reg10[0] = reg13",
      "116506 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116510 SET      reg2 -> reg4",
      "116513 SET MEMORY ELEMENT IF INIT      3508 = reg4",
      "116516 INIT FUNCTION STATE      PTR: 116525 NAME:  LEN: 2 -> reg4",
      "116523 JUMP      116617",
      "116617 SET MEMORY ELEMENT IF INIT      3509 = reg4",
      "116620 PUSH MEMORY ELEMENT IF INIT      3509 -> reg9",
      "116623 NEW ARRAY      2 -> reg10",
      "116626 PUT      reg10[0] = mobileNetworkHash",
      "116632 PUSH MEMORY ELEMENT IF INIT      3508 -> reg13",
      "116635 PUT      reg10[1] = reg13",
      "116639 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "116643 SET      reg2 -> reg4",
      "116646 EMPTY OBJECT      -> reg10",
      "116648 PUT      reg10[verdict] = false",
      "116654 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "116657 GET      reg9[stringify] -> reg13",
      "116663 NEW ARRAY      1 -> reg21",
      "116666 PUSH MEMORY ELEMENT IF INIT      3508 -> reg26",
      "116669 PUT      reg21[0] = reg26",
      "116673 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg21",
      "116677 SET      reg2 -> reg4",
      "116680 PUT      reg10[raw] = reg4",
      "116686 PUT      reg10[error] = false",
      "116692 JUMP OR RETURN VAL      reg10"
  ],
  "116696": [
      "116696 SET I      null",
      "116698 PUSH F.K      -> reg4",
      "116700 VOID F",
      "116701 SET MEMORY ELEMENT      0 = reg4",
      "116704 EMPTY OBJECT      -> reg4",
      "116706 PUT      reg4[verdict] = false",
      "116712 PUSH MEMORY ELEMENT IF INIT      0 -> reg13",
      "116715 GET      reg13[toString] -> reg21",
      "116721 EMPTY ARRAY      -> reg26",
      "116723 CALL FUNCTION      OBJ: reg13 FUNC: reg21 ARGS: reg26",
      "116727 SET      reg2 -> reg10",
      "116730 PUT      reg4[raw] = reg10",
      "116736 PUT      reg4[error] = true",
      "116742 JUMP OR RETURN VAL      reg4"
  ],
  "116857": [
      "116857 SET      0 -> reg8",
      "116860 GET      reg5[reg8] -> reg6",
      "116864 SET MEMORY ELEMENT IF INIT      3567 = reg6",
      "116867 PUSH MEMORY ELEMENT IF INIT      3565 -> reg9",
      "116870 PUSH MEMORY ELEMENT IF INIT      3567 -> reg11",
      "116873 GET      reg9[reg11] -> reg7",
      "116877 GET WINDOW PROP      window -> reg9",
      "116882 IN      reg7 inreg9 -> reg10",
      "116886 JUMP IF FALSE      reg10 TO: 116996 | 116889"
  ],
  "116860": [
      "116860 GET      reg5[reg8] -> reg6",
      "116864 SET MEMORY ELEMENT IF INIT      3567 = reg6",
      "116867 PUSH MEMORY ELEMENT IF INIT      3565 -> reg9",
      "116870 PUSH MEMORY ELEMENT IF INIT      3567 -> reg11",
      "116873 GET      reg9[reg11] -> reg7",
      "116877 GET WINDOW PROP      window -> reg9",
      "116882 IN      reg7 inreg9 -> reg10",
      "116886 JUMP IF FALSE      reg10 TO: 116996 | 116889"
  ],
  "116889": [
      "116889 PUSH MEMORY ELEMENT IF INIT      3564 -> reg9",
      "116892 PUSH MEMORY ELEMENT IF INIT      3567 -> reg7",
      "116895 EMPTY OBJECT      -> reg10",
      "116897 GET WINDOW PROP      window -> reg12",
      "116902 PUSH MEMORY ELEMENT IF INIT      3565 -> reg13",
      "116905 PUSH MEMORY ELEMENT IF INIT      3567 -> reg15",
      "116908 GET      reg13[reg15] -> reg14",
      "116912 GET      reg12[reg14] -> reg11",
      "116916 TYPEOF      reg11 -> reg12",
      "116919 PUT      reg10[t] = reg12",
      "116925 GET WINDOW PROP      window -> reg14",
      "116930 PUSH MEMORY ELEMENT IF INIT      3565 -> reg15",
      "116933 PUSH MEMORY ELEMENT IF INIT      3567 -> reg17",
      "116936 GET      reg15[reg17] -> reg16",
      "116940 GET      reg14[reg16] -> reg12",
      "116944 GET      reg12[toString] -> reg15",
      "116950 EMPTY ARRAY      -> reg16",
      "116952 CALL FUNCTION      OBJ: reg12 FUNC: reg15 ARGS: reg16",
      "116956 SET      reg2 -> reg13",
      "116959 GET      reg13[substr] -> reg14",
      "116965 NEW ARRAY      2 -> reg15",
      "116968 PUT      reg15[0] = 0",
      "116972 PUT      reg15[1] = 250",
      "116976 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg15",
      "116980 SET      reg2 -> reg11",
      "116983 PUT      reg10[s] = reg11",
      "116989 PUT      reg9[reg7] = reg10",
      "116993 SET MEMORY ELEMENT IF INIT      3566 = true",
      "116996 ADD      reg81-> reg8",
      "117000 LESS THAN      reg8 < reg4 -> reg7",
      "117004 JUMP IF TRUE      reg7 TO: 116860 | 117007"
  ],
  "116996": [
      "116996 ADD      reg81-> reg8",
      "117000 LESS THAN      reg8 < reg4 -> reg7",
      "117004 JUMP IF TRUE      reg7 TO: 116860 | 117007"
  ],
  "117007": [
      "117007 EMPTY OBJECT      -> reg4",
      "117009 PUSH MEMORY ELEMENT IF INIT      3566 -> reg5",
      "117012 PUT      reg4[verdict] = reg5",
      "117018 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "117021 GET      reg7[stringify] -> reg8",
      "117027 NEW ARRAY      1 -> reg9",
      "117030 PUSH MEMORY ELEMENT IF INIT      3564 -> reg6",
      "117033 PUT      reg9[0] = reg6",
      "117037 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "117041 SET      reg2 -> reg5",
      "117044 PUT      reg4[raw] = reg5",
      "117050 PUT      reg4[error] = false",
      "117056 JUMP OR RETURN VAL      reg4"
  ],
  "117060": [
      "117060 SET I      null",
      "117062 PUSH F.K      -> reg4",
      "117064 VOID F",
      "117065 SET MEMORY ELEMENT      0 = reg4",
      "117068 EMPTY OBJECT      -> reg4",
      "117070 PUT      reg4[verdict] = false",
      "117076 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "117079 GET      reg8[toString] -> reg6",
      "117085 EMPTY ARRAY      -> reg9",
      "117087 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg9",
      "117091 SET      reg2 -> reg5",
      "117094 PUT      reg4[raw] = reg5",
      "117100 PUT      reg4[error] = true",
      "117106 JUMP OR RETURN VAL      reg4"
  ],
  "117166": [
      "117166 GET WINDOW PROP      document -> reg5",
      "117171 GET      reg5[currentScript] -> reg6",
      "117177 GET      reg6[innerHTML] -> reg4",
      "117183 SET MEMORY ELEMENT IF INIT      3575 = reg4",
      "117186 PUSH MEMORY ELEMENT IF INIT      3575 -> reg4",
      "117189 JUMP IF FALSE      reg4 TO: 117204 | 117192"
  ],
  "117192": [
      "117192 PUSH MEMORY ELEMENT IF INIT      3575 -> reg4",
      "117195 GET      reg4[length] -> reg8",
      "117201 SET MEMORY ELEMENT IF INIT      3573 = reg8",
      "117204 GET WINDOW PROP      document -> reg4",
      "117209 GET      reg4[currentScript] -> reg6",
      "117215 GET      reg6[innerText] -> reg5",
      "117221 GET      reg5[match] -> reg7",
      "117227 NEW ARRAY      1 -> reg4",
      "117230 NEW REGEXP      \\s , g -> reg10",
      "117238 PUT      reg4[0] = reg10",
      "117242 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg4",
      "117246 SET      reg2 -> reg8",
      "117249 SET MEMORY ELEMENT IF INIT      3576 = reg8",
      "117252 PUSH MEMORY ELEMENT IF INIT      3576 -> reg6",
      "117255 JUMP IF FALSE      reg6 TO: 117270 | 117258"
  ],
  "117204": [
      "117204 GET WINDOW PROP      document -> reg4",
      "117209 GET      reg4[currentScript] -> reg6",
      "117215 GET      reg6[innerText] -> reg5",
      "117221 GET      reg5[match] -> reg7",
      "117227 NEW ARRAY      1 -> reg4",
      "117230 NEW REGEXP      \\s , g -> reg10",
      "117238 PUT      reg4[0] = reg10",
      "117242 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg4",
      "117246 SET      reg2 -> reg8",
      "117249 SET MEMORY ELEMENT IF INIT      3576 = reg8",
      "117252 PUSH MEMORY ELEMENT IF INIT      3576 -> reg6",
      "117255 JUMP IF FALSE      reg6 TO: 117270 | 117258"
  ],
  "117258": [
      "117258 PUSH MEMORY ELEMENT IF INIT      3576 -> reg4",
      "117261 GET      reg4[length] -> reg7",
      "117267 SET MEMORY ELEMENT IF INIT      3574 = reg7",
      "117270 GET WINDOW PROP      document -> reg4",
      "117275 GET      reg4[currentScript] -> reg7",
      "117281 IN      src inreg7 -> reg4",
      "117287 JUMP IF FALSE      reg4 TO: 117310 | 117290"
  ],
  "117270": [
      "117270 GET WINDOW PROP      document -> reg4",
      "117275 GET      reg4[currentScript] -> reg7",
      "117281 IN      src inreg7 -> reg4",
      "117287 JUMP IF FALSE      reg4 TO: 117310 | 117290"
  ],
  "117290": [
      "117290 GET WINDOW PROP      document -> reg4",
      "117295 GET      reg4[currentScript] -> reg11",
      "117301 GET      reg11[src] -> reg4",
      "117307 SET MEMORY ELEMENT IF INIT      3572 = reg4",
      "117310 EMPTY OBJECT      -> reg4",
      "117312 PUSH MEMORY ELEMENT IF INIT      3572 -> reg6",
      "117315 PUT      reg4[src] = reg6",
      "117321 PUSH MEMORY ELEMENT IF INIT      3573 -> reg7",
      "117324 PUT      reg4[sl] = reg7",
      "117330 PUSH MEMORY ELEMENT IF INIT      3574 -> reg6",
      "117333 PUT      reg4[wsl] = reg6",
      "117339 SET MEMORY ELEMENT IF INIT      3577 = reg4",
      "117342 EMPTY OBJECT      -> reg4",
      "117344 PUT      reg4[verdict] = false",
      "117350 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "117353 GET      reg10[stringify] -> reg6",
      "117359 NEW ARRAY      1 -> reg9",
      "117362 PUSH MEMORY ELEMENT IF INIT      3577 -> reg8",
      "117365 PUT      reg9[0] = reg8",
      "117369 CALL FUNCTION      OBJ: reg10 FUNC: reg6 ARGS: reg9",
      "117373 SET      reg2 -> reg7",
      "117376 PUT      reg4[raw] = reg7",
      "117382 PUT      reg4[error] = false",
      "117388 JUMP OR RETURN VAL      reg4"
  ],
  "117310": [
      "117310 EMPTY OBJECT      -> reg4",
      "117312 PUSH MEMORY ELEMENT IF INIT      3572 -> reg6",
      "117315 PUT      reg4[src] = reg6",
      "117321 PUSH MEMORY ELEMENT IF INIT      3573 -> reg7",
      "117324 PUT      reg4[sl] = reg7",
      "117330 PUSH MEMORY ELEMENT IF INIT      3574 -> reg6",
      "117333 PUT      reg4[wsl] = reg6",
      "117339 SET MEMORY ELEMENT IF INIT      3577 = reg4",
      "117342 EMPTY OBJECT      -> reg4",
      "117344 PUT      reg4[verdict] = false",
      "117350 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "117353 GET      reg10[stringify] -> reg6",
      "117359 NEW ARRAY      1 -> reg9",
      "117362 PUSH MEMORY ELEMENT IF INIT      3577 -> reg8",
      "117365 PUT      reg9[0] = reg8",
      "117369 CALL FUNCTION      OBJ: reg10 FUNC: reg6 ARGS: reg9",
      "117373 SET      reg2 -> reg7",
      "117376 PUT      reg4[raw] = reg7",
      "117382 PUT      reg4[error] = false",
      "117388 JUMP OR RETURN VAL      reg4"
  ],
  "117392": [
      "117392 SET I      null",
      "117394 PUSH F.K      -> reg4",
      "117396 VOID F",
      "117397 SET MEMORY ELEMENT      0 = reg4",
      "117400 EMPTY OBJECT      -> reg4",
      "117402 PUT      reg4[verdict] = false",
      "117408 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "117411 GET      reg7[toString] -> reg8",
      "117417 EMPTY ARRAY      -> reg11",
      "117419 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg11",
      "117423 SET      reg2 -> reg6",
      "117426 PUT      reg4[raw] = reg6",
      "117432 PUT      reg4[error] = true",
      "117438 JUMP OR RETURN VAL      reg4"
  ],
  "117582": [
      "117582 PUSH MEMORY ELEMENT IF INIT      3595 -> reg6",
      "117585 GET      reg6[value] -> reg8",
      "117591 SET MEMORY ELEMENT IF INIT      3596 = reg8",
      "117594 PUSH MEMORY ELEMENT IF INIT      3596 -> reg6",
      "117597 PUSH MEMORY ELEMENT IF INIT      3593 -> reg8",
      "117600 IN      reg6 inreg8 -> reg9",
      "117604 JUMP IF FALSE      reg9 TO: 117630 | 117607"
  ],
  "117607": [
      "117607 PUSH MEMORY ELEMENT IF INIT      3593 -> reg9",
      "117610 PUSH MEMORY ELEMENT IF INIT      3596 -> reg8",
      "117613 GET      reg9[reg8] -> reg6",
      "117617 SET      1 -> reg10",
      "117620 ADD      reg6NaN-> reg10",
      "117624 PUT      reg9[reg8] = reg10",
      "117628 JUMP      117640",
      "117640 JUMP      117549",
      "117549 PUSH MEMORY ELEMENT IF INIT      3594 -> reg7",
      "117552 GET      reg7[n] -> reg9",
      "117558 EMPTY ARRAY      -> reg8",
      "117560 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg8",
      "117564 SET      reg2 -> reg6",
      "117567 SET MEMORY ELEMENT IF INIT      3595 = reg6",
      "117570 GET      reg6[done] -> reg8",
      "117576 NOT      reg8 -> reg10",
      "117579 JUMP IF FALSE      reg10 TO: 117642 | 117582"
  ],
  "117630": [
      "117630 PUSH MEMORY ELEMENT IF INIT      3593 -> reg8",
      "117633 PUSH MEMORY ELEMENT IF INIT      3596 -> reg9",
      "117636 PUT      reg8[reg9] = 1",
      "117640 JUMP      117549",
      "117549 PUSH MEMORY ELEMENT IF INIT      3594 -> reg7",
      "117552 GET      reg7[n] -> reg9",
      "117558 EMPTY ARRAY      -> reg8",
      "117560 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg8",
      "117564 SET      reg2 -> reg6",
      "117567 SET MEMORY ELEMENT IF INIT      3595 = reg6",
      "117570 GET      reg6[done] -> reg8",
      "117576 NOT      reg8 -> reg10",
      "117579 JUMP IF FALSE      reg10 TO: 117642 | 117582"
  ],
  "117642": [
      "117642 JUMP      117678",
      "117678 SET I      null",
      "117680 SET N      null",
      "117682 PUSH MEMORY ELEMENT IF INIT      3594 -> reg9",
      "117685 GET      reg9[f] -> reg10",
      "117691 EMPTY ARRAY      -> reg11",
      "117693 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "117697 SET      reg2 -> reg6",
      "117700 HANDLE TRACE OR JUMP OR RETURN C",
      "117701 SET I      null",
      "117703 SET MEMORY ELEMENT IF INIT      3597 = 0",
      "117706 SET MEMORY ELEMENT IF INIT      3598 = 0",
      "117709 GET WINDOW PROP      Object -> reg10",
      "117714 GET      reg10[keys] -> reg11",
      "117720 NEW ARRAY      1 -> reg12",
      "117723 PUSH MEMORY ELEMENT IF INIT      3593 -> reg13",
      "117726 PUT      reg12[0] = reg13",
      "117730 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "117734 SET      reg2 -> reg6",
      "117737 SET MEMORY ELEMENT IF INIT      3599 = reg6",
      "117740 PUSH MEMORY ELEMENT IF INIT      3598 -> reg6",
      "117743 PUSH MEMORY ELEMENT IF INIT      3599 -> reg11",
      "117746 GET      reg11[length] -> reg12",
      "117752 LESS THAN      reg6 < reg12 -> reg13",
      "117756 JUMP IF FALSE      reg13 TO: 117887 | 117759"
  ],
  "117644": [
      "117644 SET I      117678",
      "117646 PUSH F.K      -> reg6",
      "117648 VOID F",
      "117649 SET MEMORY ELEMENT      0 = reg6",
      "117652 PUSH MEMORY ELEMENT IF INIT      3594 -> reg8",
      "117655 GET      reg8[e] -> reg11",
      "117661 NEW ARRAY      1 -> reg10",
      "117664 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "117667 PUT      reg10[0] = reg9",
      "117671 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg10",
      "117675 SET      reg2 -> reg6",
      "117678 SET I      null",
      "117680 SET N      null",
      "117682 PUSH MEMORY ELEMENT IF INIT      3594 -> reg9",
      "117685 GET      reg9[f] -> reg10",
      "117691 EMPTY ARRAY      -> reg11",
      "117693 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "117697 SET      reg2 -> reg6",
      "117700 HANDLE TRACE OR JUMP OR RETURN C",
      "117701 SET I      null",
      "117703 SET MEMORY ELEMENT IF INIT      3597 = 0",
      "117706 SET MEMORY ELEMENT IF INIT      3598 = 0",
      "117709 GET WINDOW PROP      Object -> reg10",
      "117714 GET      reg10[keys] -> reg11",
      "117720 NEW ARRAY      1 -> reg12",
      "117723 PUSH MEMORY ELEMENT IF INIT      3593 -> reg13",
      "117726 PUT      reg12[0] = reg13",
      "117730 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "117734 SET      reg2 -> reg6",
      "117737 SET MEMORY ELEMENT IF INIT      3599 = reg6",
      "117740 PUSH MEMORY ELEMENT IF INIT      3598 -> reg6",
      "117743 PUSH MEMORY ELEMENT IF INIT      3599 -> reg11",
      "117746 GET      reg11[length] -> reg12",
      "117752 LESS THAN      reg6 < reg12 -> reg13",
      "117756 JUMP IF FALSE      reg13 TO: 117887 | 117759"
  ],
  "117678": [
      "117678 SET I      null",
      "117680 SET N      null",
      "117682 PUSH MEMORY ELEMENT IF INIT      3594 -> reg9",
      "117685 GET      reg9[f] -> reg10",
      "117691 EMPTY ARRAY      -> reg11",
      "117693 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "117697 SET      reg2 -> reg6",
      "117700 HANDLE TRACE OR JUMP OR RETURN C",
      "117701 SET I      null",
      "117703 SET MEMORY ELEMENT IF INIT      3597 = 0",
      "117706 SET MEMORY ELEMENT IF INIT      3598 = 0",
      "117709 GET WINDOW PROP      Object -> reg10",
      "117714 GET      reg10[keys] -> reg11",
      "117720 NEW ARRAY      1 -> reg12",
      "117723 PUSH MEMORY ELEMENT IF INIT      3593 -> reg13",
      "117726 PUT      reg12[0] = reg13",
      "117730 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "117734 SET      reg2 -> reg6",
      "117737 SET MEMORY ELEMENT IF INIT      3599 = reg6",
      "117740 PUSH MEMORY ELEMENT IF INIT      3598 -> reg6",
      "117743 PUSH MEMORY ELEMENT IF INIT      3599 -> reg11",
      "117746 GET      reg11[length] -> reg12",
      "117752 LESS THAN      reg6 < reg12 -> reg13",
      "117756 JUMP IF FALSE      reg13 TO: 117887 | 117759"
  ],
  "117759": [
      "117759 PUSH MEMORY ELEMENT IF INIT      3599 -> reg11",
      "117762 PUSH MEMORY ELEMENT IF INIT      3598 -> reg6",
      "117765 GET      reg11[reg6] -> reg12",
      "117769 SET MEMORY ELEMENT IF INIT      3600 = reg12",
      "117772 PUSH MEMORY ELEMENT IF INIT      3593 -> reg6",
      "117775 PUSH MEMORY ELEMENT IF INIT      3600 -> reg12",
      "117778 GET      reg6[reg12] -> reg11",
      "117782 PUSH MEMORY ELEMENT IF INIT      3592 -> reg6",
      "117785 GET      reg6[length] -> reg12",
      "117791 DIVIDE      reg11 / reg12 -> reg6",
      "117795 SET MEMORY ELEMENT IF INIT      3601 = reg6",
      "117798 PUSH MEMORY ELEMENT IF INIT      3597 -> reg6",
      "117801 PUSH MEMORY ELEMENT IF INIT      3601 -> reg11",
      "117804 GET WINDOW PROP      Math -> reg13",
      "117809 GET      reg13[log] -> reg14",
      "117815 NEW ARRAY      1 -> reg17",
      "117818 PUSH MEMORY ELEMENT IF INIT      3601 -> reg15",
      "117821 PUT      reg17[0] = reg15",
      "117825 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg17",
      "117829 SET      reg2 -> reg12",
      "117832 GET WINDOW PROP      Math -> reg14",
      "117837 GET      reg14[log] -> reg16",
      "117843 NEW ARRAY      1 -> reg17",
      "117846 PUT      reg17[0] = 2",
      "117850 CALL FUNCTION      OBJ: reg14 FUNC: reg16 ARGS: reg17",
      "117854 SET      reg2 -> reg15",
      "117857 DIVIDE      reg12 / reg15 -> reg16",
      "117861 MULTIPLY      reg11 * reg16 -> reg12",
      "117865 SUBTRACT      reg6 - reg12 -> reg12",
      "117869 SET MEMORY ELEMENT IF INIT      3597 = reg12",
      "117872 PUSH MEMORY ELEMENT IF INIT      3598 -> reg11",
      "117875 SET      reg11 -> reg6",
      "117878 ADD      reg111-> reg11",
      "117882 SET MEMORY ELEMENT IF INIT      3598 = reg11",
      "117885 JUMP      117740",
      "117740 PUSH MEMORY ELEMENT IF INIT      3598 -> reg6",
      "117743 PUSH MEMORY ELEMENT IF INIT      3599 -> reg11",
      "117746 GET      reg11[length] -> reg12",
      "117752 LESS THAN      reg6 < reg12 -> reg13",
      "117756 JUMP IF FALSE      reg13 TO: 117887 | 117759"
  ],
  "117887": [
      "117887 PUSH MEMORY ELEMENT IF INIT      3597 -> reg6",
      "117890 JUMP OR RETURN VAL      reg6"
  ],
  "117955": [
      "117955 PUSH MEMORY ELEMENT IF INIT      3587 -> reg6",
      "117958 PUSH MEMORY ELEMENT IF INIT      3586 -> reg4",
      "117961 GET      reg6[reg4] -> reg7",
      "117965 SET MEMORY ELEMENT IF INIT      3588 = reg7",
      "117968 GET WINDOW PROP      window -> reg4",
      "117973 PUSH MEMORY ELEMENT IF INIT      3588 -> reg6",
      "117976 GET      reg4[reg6] -> reg7",
      "117980 TYPEOF      reg7 -> reg10",
      "117983 STRICT EQUAL      reg10 === function -> reg4",
      "117989 JUMP IF FALSE      reg4 TO: 118151 | 117992"
  ],
  "117992": [
      "117992 GET WINDOW PROP      window -> reg6",
      "117997 PUSH MEMORY ELEMENT IF INIT      3588 -> reg8",
      "118000 GET      reg6[reg8] -> reg7",
      "118004 GET      reg7[toString] -> reg6",
      "118010 EMPTY ARRAY      -> reg9",
      "118012 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg9",
      "118016 SET      reg2 -> reg4",
      "118019 GET WINDOW PROP      Error -> reg9",
      "118024 GET      reg9[toString] -> reg10",
      "118030 EMPTY ARRAY      -> reg11",
      "118032 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "118036 SET      reg2 -> reg6",
      "118039 GET      reg6[replace] -> reg10",
      "118045 NEW ARRAY      2 -> reg12",
      "118048 NEW REGEXP      Error , g -> reg11",
      "118056 PUT      reg12[0] = reg11",
      "118060 PUSH MEMORY ELEMENT IF INIT      3588 -> reg11",
      "118063 PUT      reg12[1] = reg11",
      "118067 CALL FUNCTION      OBJ: reg6 FUNC: reg10 ARGS: reg12",
      "118071 SET      reg2 -> reg8",
      "118074 STRICT NOT EQUAL      reg4 !== reg8 -> reg10",
      "118078 JUMP IF FALSE      reg10 TO: 118151 | 118081"
  ],
  "118081": [
      "118081 PUSH MEMORY ELEMENT IF INIT      3584 -> reg10",
      "118084 NEW ARRAY      1 -> reg8",
      "118087 PUSH MEMORY ELEMENT IF INIT      3588 -> reg11",
      "118090 PUT      reg8[0] = reg11",
      "118094 CALL FUNCTION      PTR: reg10 MEM: reg8",
      "118098 SET      reg2 -> reg4",
      "118101 SET MEMORY ELEMENT IF INIT      3589 = reg4",
      "118104 PUSH MEMORY ELEMENT IF INIT      3589 -> reg4",
      "118107 GREATER THAN      reg4 > 4 -> reg8",
      "118111 JUMP IF FALSE      reg8 TO: 118151 | 118114"
  ],
  "118114": [
      "118114 PUSH MEMORY ELEMENT IF INIT      3585 -> reg4",
      "118117 PUSH MEMORY ELEMENT IF INIT      3588 -> reg8",
      "118120 GET WINDOW PROP      window -> reg12",
      "118125 PUSH MEMORY ELEMENT IF INIT      3588 -> reg13",
      "118128 GET      reg12[reg13] -> reg11",
      "118132 GET      reg11[toString] -> reg12",
      "118138 EMPTY ARRAY      -> reg13",
      "118140 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg13",
      "118144 SET      reg2 -> reg10",
      "118147 PUT      reg4[reg8] = reg10",
      "118151 PUSH MEMORY ELEMENT IF INIT      3586 -> reg8",
      "118154 SET      reg8 -> reg4",
      "118157 ADD      reg81-> reg8",
      "118161 SET MEMORY ELEMENT IF INIT      3586 = reg8",
      "118164 JUMP      117936",
      "117936 PUSH MEMORY ELEMENT IF INIT      3586 -> reg4",
      "117939 PUSH MEMORY ELEMENT IF INIT      3587 -> reg7",
      "117942 GET      reg7[length] -> reg6",
      "117948 LESS THAN      reg4 < reg6 -> reg7",
      "117952 JUMP IF FALSE      reg7 TO: 118166 | 117955"
  ],
  "118151": [
      "118151 PUSH MEMORY ELEMENT IF INIT      3586 -> reg8",
      "118154 SET      reg8 -> reg4",
      "118157 ADD      reg81-> reg8",
      "118161 SET MEMORY ELEMENT IF INIT      3586 = reg8",
      "118164 JUMP      117936",
      "117936 PUSH MEMORY ELEMENT IF INIT      3586 -> reg4",
      "117939 PUSH MEMORY ELEMENT IF INIT      3587 -> reg7",
      "117942 GET      reg7[length] -> reg6",
      "117948 LESS THAN      reg4 < reg6 -> reg7",
      "117952 JUMP IF FALSE      reg7 TO: 118166 | 117955"
  ],
  "118166": [
      "118166 EMPTY OBJECT      -> reg4",
      "118168 PUT      reg4[verdict] = false",
      "118174 PUSH MEMORY ELEMENT IF INIT      280 -> reg13",
      "118177 GET      reg13[stringify] -> reg10",
      "118183 NEW ARRAY      1 -> reg12",
      "118186 PUSH MEMORY ELEMENT IF INIT      3585 -> reg14",
      "118189 PUT      reg12[0] = reg14",
      "118193 CALL FUNCTION      OBJ: reg13 FUNC: reg10 ARGS: reg12",
      "118197 SET      reg2 -> reg8",
      "118200 PUT      reg4[raw] = reg8",
      "118206 PUT      reg4[error] = false",
      "118212 JUMP OR RETURN VAL      reg4"
  ],
  "118216": [
      "118216 SET I      null",
      "118218 PUSH F.K      -> reg4",
      "118220 VOID F",
      "118221 SET MEMORY ELEMENT      0 = reg4",
      "118224 EMPTY OBJECT      -> reg4",
      "118226 PUT      reg4[verdict] = false",
      "118232 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "118235 GET      reg10[toString] -> reg14",
      "118241 EMPTY ARRAY      -> reg12",
      "118243 CALL FUNCTION      OBJ: reg10 FUNC: reg14 ARGS: reg12",
      "118247 SET      reg2 -> reg8",
      "118250 PUT      reg4[raw] = reg8",
      "118256 PUT      reg4[error] = true",
      "118262 JUMP OR RETURN VAL      reg4"
  ],
  "118750": [
      "118750 SET      0 -> reg7",
      "118753 GET      reg6[reg7] -> reg4",
      "118757 SET MEMORY ELEMENT IF INIT      3638 = reg4",
      "118760 PUSH MEMORY ELEMENT IF INIT      3616 -> reg8",
      "118763 PUSH MEMORY ELEMENT IF INIT      3638 -> reg10",
      "118766 GET      reg8[reg10] -> reg9",
      "118770 SET MEMORY ELEMENT IF INIT      3639 = reg9",
      "118773 SET I      118813",
      "118775 PUSH MEMORY ELEMENT IF INIT      3639 -> reg9",
      "118778 NEW ARRAY      1 -> reg11",
      "118781 PUSH MEMORY ELEMENT IF INIT      3635 -> reg10",
      "118784 PUT      reg11[0] = reg10",
      "118788 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "118792 SET      reg2 -> reg8",
      "118795 JUMP IF FALSE      reg8 TO: 118811 | 118798"
  ],
  "118753": [
      "118753 GET      reg6[reg7] -> reg4",
      "118757 SET MEMORY ELEMENT IF INIT      3638 = reg4",
      "118760 PUSH MEMORY ELEMENT IF INIT      3616 -> reg8",
      "118763 PUSH MEMORY ELEMENT IF INIT      3638 -> reg10",
      "118766 GET      reg8[reg10] -> reg9",
      "118770 SET MEMORY ELEMENT IF INIT      3639 = reg9",
      "118773 SET I      118813",
      "118775 PUSH MEMORY ELEMENT IF INIT      3639 -> reg9",
      "118778 NEW ARRAY      1 -> reg11",
      "118781 PUSH MEMORY ELEMENT IF INIT      3635 -> reg10",
      "118784 PUT      reg11[0] = reg10",
      "118788 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "118792 SET      reg2 -> reg8",
      "118795 JUMP IF FALSE      reg8 TO: 118811 | 118798"
  ],
  "118798": [
      "118798 PUSH MEMORY ELEMENT IF INIT      3636 -> reg8",
      "118801 PUSH MEMORY ELEMENT IF INIT      3638 -> reg10",
      "118804 PUT      reg8[reg10] = true",
      "118808 SET MEMORY ELEMENT IF INIT      3637 = true",
      "118811 JUMP      118821",
      "118821 SET I      null",
      "118823 ADD      reg71-> reg7",
      "118827 LESS THAN      reg7 < reg5 -> reg8",
      "118831 JUMP IF TRUE      reg8 TO: 118753 | 118834"
  ],
  "118811": [
      "118811 JUMP      118821",
      "118821 SET I      null",
      "118823 ADD      reg71-> reg7",
      "118827 LESS THAN      reg7 < reg5 -> reg8",
      "118831 JUMP IF TRUE      reg8 TO: 118753 | 118834"
  ],
  "118813": [
      "118813 SET I      null",
      "118815 PUSH F.K      -> reg9",
      "118817 VOID F",
      "118818 SET MEMORY ELEMENT      0 = reg9",
      "118821 SET I      null",
      "118823 ADD      reg71-> reg7",
      "118827 LESS THAN      reg7 < reg5 -> reg8",
      "118831 JUMP IF TRUE      reg8 TO: 118753 | 118834"
  ],
  "118834": [
      "118834 PUSH MEMORY ELEMENT IF INIT      3637 -> reg4",
      "118837 JUMP IF FALSE      reg4 TO: 118932 | 118840"
  ],
  "118840": [
      "118840 PUSH MEMORY ELEMENT IF INIT      3636 -> reg4",
      "118843 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "118846 GET      reg7[stringify] -> reg8",
      "118852 NEW ARRAY      1 -> reg6",
      "118855 GET WINDOW PROP      Object -> reg9",
      "118860 GET      reg9[getOwnPropertyDescriptors] -> reg11",
      "118866 NEW ARRAY      1 -> reg12",
      "118869 PUSH MEMORY ELEMENT IF INIT      3635 -> reg13",
      "118872 PUT      reg12[0] = reg13",
      "118876 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg12",
      "118880 SET      reg2 -> reg10",
      "118883 PUT      reg6[0] = reg10",
      "118887 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg6",
      "118891 SET      reg2 -> reg5",
      "118894 PUT      reg4[pdj] = reg5",
      "118900 PUSH MEMORY ELEMENT IF INIT      3636 -> reg8",
      "118903 PUSH MEMORY ELEMENT IF INIT      3635 -> reg5",
      "118906 GET      reg5[toString] -> reg6",
      "118912 EMPTY ARRAY      -> reg10",
      "118914 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg10",
      "118918 SET      reg2 -> reg4",
      "118921 PUT      reg8[fts] = reg4",
      "118927 PUSH MEMORY ELEMENT IF INIT      3636 -> reg4",
      "118930 JUMP OR RETURN VAL      reg4"
  ],
  "118932": ["118932 JUMP OR RETURN"],
  "119059": [
      "119059 PUSH MEMORY ELEMENT IF INIT      3621 -> reg4",
      "119062 PUSH MEMORY ELEMENT IF INIT      3620 -> reg6",
      "119065 GET      reg4[reg6] -> reg5",
      "119069 SET MEMORY ELEMENT IF INIT      3622 = reg5",
      "119072 PUSH MEMORY ELEMENT IF INIT      3622 -> reg5",
      "119075 GET WINDOW PROP      window -> reg6",
      "119080 IN      reg5 inreg6 -> reg7",
      "119084 JUMP IF FALSE      reg7 TO: 119133 | 119087"
  ],
  "119087": [
      "119087 PUSH MEMORY ELEMENT IF INIT      3618 -> reg5",
      "119090 PUSH MEMORY ELEMENT IF INIT      3622 -> reg6",
      "119093 PUSH MEMORY ELEMENT IF INIT      3617 -> reg4",
      "119096 NEW ARRAY      2 -> reg12",
      "119099 GET WINDOW PROP      window -> reg8",
      "119104 PUSH MEMORY ELEMENT IF INIT      3622 -> reg11",
      "119107 GET      reg8[reg11] -> reg9",
      "119111 PUT      reg12[0] = reg9",
      "119115 PUSH MEMORY ELEMENT IF INIT      3618 -> reg8",
      "119118 PUT      reg12[1] = reg8",
      "119122 CALL FUNCTION      PTR: reg4 MEM: reg12",
      "119126 SET      reg2 -> reg7",
      "119129 PUT      reg5[reg6] = reg7",
      "119133 PUSH MEMORY ELEMENT IF INIT      3620 -> reg4",
      "119136 SET      reg4 -> reg5",
      "119139 ADD      reg41-> reg4",
      "119143 SET MEMORY ELEMENT IF INIT      3620 = reg4",
      "119146 JUMP      119040",
      "119040 PUSH MEMORY ELEMENT IF INIT      3620 -> reg5",
      "119043 PUSH MEMORY ELEMENT IF INIT      3621 -> reg4",
      "119046 GET      reg4[length] -> reg8",
      "119052 LESS THAN      reg5 < reg8 -> reg6",
      "119056 JUMP IF FALSE      reg6 TO: 119148 | 119059"
  ],
  "119133": [
      "119133 PUSH MEMORY ELEMENT IF INIT      3620 -> reg4",
      "119136 SET      reg4 -> reg5",
      "119139 ADD      reg41-> reg4",
      "119143 SET MEMORY ELEMENT IF INIT      3620 = reg4",
      "119146 JUMP      119040",
      "119040 PUSH MEMORY ELEMENT IF INIT      3620 -> reg5",
      "119043 PUSH MEMORY ELEMENT IF INIT      3621 -> reg4",
      "119046 GET      reg4[length] -> reg8",
      "119052 LESS THAN      reg5 < reg8 -> reg6",
      "119056 JUMP IF FALSE      reg6 TO: 119148 | 119059"
  ],
  "119148": [
      "119148 GET WINDOW PROP      window -> reg4",
      "119153 IN      console inreg4 -> reg5",
      "119159 JUMP IF FALSE      reg5 TO: 119176 | 119162"
  ],
  "119162": [
      "119162 GET WINDOW PROP      window -> reg4",
      "119167 IN      log inreg4 -> reg6",
      "119173 SET      reg6 -> reg5",
      "119176 JUMP IF FALSE      reg5 TO: 119241 | 119179"
  ],
  "119176": ["119176 JUMP IF FALSE      reg5 TO: 119241 | 119179"],
  "119179": [
      "119179 PUSH MEMORY ELEMENT IF INIT      3618 -> reg4",
      "119182 GET      reg4[console] -> reg5",
      "119188 PUSH MEMORY ELEMENT IF INIT      3617 -> reg6",
      "119191 NEW ARRAY      3 -> reg8",
      "119194 GET WINDOW PROP      window -> reg10",
      "119199 GET      reg10[console] -> reg12",
      "119205 GET      reg12[log] -> reg7",
      "119211 PUT      reg8[0] = reg7",
      "119215 PUT      reg8[1] = console.log",
      "119221 PUSH MEMORY ELEMENT IF INIT      3618 -> reg7",
      "119224 PUT      reg8[2] = reg7",
      "119228 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "119232 SET      reg2 -> reg4",
      "119235 PUT      reg5[log] = reg4",
      "119241 EMPTY OBJECT      -> reg4",
      "119243 PUT      reg4[verdict] = false",
      "119249 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "119252 GET      reg6[stringify] -> reg7",
      "119258 NEW ARRAY      1 -> reg8",
      "119261 PUSH MEMORY ELEMENT IF INIT      3618 -> reg10",
      "119264 PUT      reg8[0] = reg10",
      "119268 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "119272 SET      reg2 -> reg5",
      "119275 PUT      reg4[raw] = reg5",
      "119281 PUT      reg4[error] = false",
      "119287 JUMP OR RETURN VAL      reg4"
  ],
  "119241": [
      "119241 EMPTY OBJECT      -> reg4",
      "119243 PUT      reg4[verdict] = false",
      "119249 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "119252 GET      reg6[stringify] -> reg7",
      "119258 NEW ARRAY      1 -> reg8",
      "119261 PUSH MEMORY ELEMENT IF INIT      3618 -> reg10",
      "119264 PUT      reg8[0] = reg10",
      "119268 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "119272 SET      reg2 -> reg5",
      "119275 PUT      reg4[raw] = reg5",
      "119281 PUT      reg4[error] = false",
      "119287 JUMP OR RETURN VAL      reg4"
  ],
  "119291": [
      "119291 SET I      null",
      "119293 PUSH F.K      -> reg4",
      "119295 VOID F",
      "119296 SET MEMORY ELEMENT      0 = reg4",
      "119299 EMPTY OBJECT      -> reg5",
      "119301 PUT      reg5[verdict] = false",
      "119307 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "119310 GET      reg7[toString] -> reg11",
      "119316 EMPTY ARRAY      -> reg8",
      "119318 CALL FUNCTION      OBJ: reg7 FUNC: reg11 ARGS: reg8",
      "119322 SET      reg2 -> reg4",
      "119325 PUT      reg5[raw] = reg4",
      "119331 PUT      reg5[error] = true",
      "119337 JUMP OR RETURN VAL      reg5"
  ],
  "119474": [
      "119474 SET I      null",
      "119476 PUSH F.K      -> reg4",
      "119478 VOID F",
      "119479 SET MEMORY ELEMENT      0 = reg4",
      "119482 EMPTY OBJECT      -> reg4",
      "119484 PUT      reg4[verdict] = false",
      "119490 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "119493 GET      reg8[toString] -> reg9",
      "119499 EMPTY ARRAY      -> reg10",
      "119501 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "119505 SET      reg2 -> reg7",
      "119508 PUT      reg4[raw] = reg7",
      "119514 PUT      reg4[error] = true",
      "119520 JUMP OR RETURN VAL      reg4"
  ],
  "119560": [
      "119560 SET      na -> reg6",
      "119565 PUT      reg5[nd] = reg6",
      "119571 GET WINDOW PROP      Date -> reg12",
      "119576 EMPTY ARRAY      -> reg10",
      "119578 BIND APPLY      reg12 reg10 -> 8",
      "119582 GET      reg8[getTime] -> reg6",
      "119588 EMPTY ARRAY      -> reg9",
      "119590 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg9",
      "119594 SET      reg2 -> reg4",
      "119597 JUMP IF TRUE      reg4 TO: 119605 | 119600"
  ],
  "119565": [
      "119565 PUT      reg5[nd] = reg6",
      "119571 GET WINDOW PROP      Date -> reg12",
      "119576 EMPTY ARRAY      -> reg10",
      "119578 BIND APPLY      reg12 reg10 -> 8",
      "119582 GET      reg8[getTime] -> reg6",
      "119588 EMPTY ARRAY      -> reg9",
      "119590 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg9",
      "119594 SET      reg2 -> reg4",
      "119597 JUMP IF TRUE      reg4 TO: 119605 | 119600"
  ],
  "119600": [
      "119600 SET      na -> reg4",
      "119605 PUT      reg5[gt] = reg4",
      "119611 GET WINDOW PROP      Date -> reg4",
      "119616 GET      reg4[now] -> reg7",
      "119622 EMPTY ARRAY      -> reg9",
      "119624 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg9",
      "119628 SET      reg2 -> reg6",
      "119631 JUMP IF TRUE      reg6 TO: 119639 | 119634"
  ],
  "119605": [
      "119605 PUT      reg5[gt] = reg4",
      "119611 GET WINDOW PROP      Date -> reg4",
      "119616 GET      reg4[now] -> reg7",
      "119622 EMPTY ARRAY      -> reg9",
      "119624 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg9",
      "119628 SET      reg2 -> reg6",
      "119631 JUMP IF TRUE      reg6 TO: 119639 | 119634"
  ],
  "119634": [
      "119634 SET      na -> reg6",
      "119639 PUT      reg5[nw] = reg6",
      "119645 SET MEMORY ELEMENT IF INIT      3653 = reg5",
      "119648 EMPTY OBJECT      -> reg5",
      "119650 PUT      reg5[verdict] = false",
      "119656 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "119659 GET      reg7[stringify] -> reg10",
      "119665 NEW ARRAY      1 -> reg9",
      "119668 PUSH MEMORY ELEMENT IF INIT      3653 -> reg11",
      "119671 PUT      reg9[0] = reg11",
      "119675 CALL FUNCTION      OBJ: reg7 FUNC: reg10 ARGS: reg9",
      "119679 SET      reg2 -> reg6",
      "119682 PUT      reg5[raw] = reg6",
      "119688 PUT      reg5[error] = false",
      "119694 JUMP OR RETURN VAL      reg5"
  ],
  "119639": [
      "119639 PUT      reg5[nw] = reg6",
      "119645 SET MEMORY ELEMENT IF INIT      3653 = reg5",
      "119648 EMPTY OBJECT      -> reg5",
      "119650 PUT      reg5[verdict] = false",
      "119656 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "119659 GET      reg7[stringify] -> reg10",
      "119665 NEW ARRAY      1 -> reg9",
      "119668 PUSH MEMORY ELEMENT IF INIT      3653 -> reg11",
      "119671 PUT      reg9[0] = reg11",
      "119675 CALL FUNCTION      OBJ: reg7 FUNC: reg10 ARGS: reg9",
      "119679 SET      reg2 -> reg6",
      "119682 PUT      reg5[raw] = reg6",
      "119688 PUT      reg5[error] = false",
      "119694 JUMP OR RETURN VAL      reg5"
  ],
  "119698": [
      "119698 SET I      null",
      "119700 PUSH F.K      -> reg6",
      "119702 VOID F",
      "119703 SET MEMORY ELEMENT      0 = reg6",
      "119706 EMPTY OBJECT      -> reg10",
      "119708 PUT      reg10[verdict] = false",
      "119714 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "119717 GET      reg6[toString] -> reg9",
      "119723 EMPTY ARRAY      -> reg11",
      "119725 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg11",
      "119729 SET      reg2 -> reg5",
      "119732 PUT      reg10[raw] = reg5",
      "119738 PUT      reg10[error] = true",
      "119744 JUMP OR RETURN VAL      reg10"
  ],
  "119965": [
      "119965 SET      0 -> reg8",
      "119968 GET      reg4[reg8] -> reg6",
      "119972 SET MEMORY ELEMENT IF INIT      3663 = reg6",
      "119975 PUSH MEMORY ELEMENT IF INIT      3662 -> reg10",
      "119978 PUSH MEMORY ELEMENT IF INIT      3663 -> reg9",
      "119981 EMPTY OBJECT      -> reg11",
      "119983 PUT      reg10[reg9] = reg11",
      "119987 PUSH MEMORY ELEMENT IF INIT      3661 -> reg9",
      "119990 COPY ENUMERABLE      reg9 -> reg10",
      "119993 GET      reg10[length] -> reg9",
      "119999 EQUAL      reg9 == 0 -> reg11",
      "120003 JUMP IF TRUE      reg11 TO: 120134 | 120006"
  ],
  "119968": [
      "119968 GET      reg4[reg8] -> reg6",
      "119972 SET MEMORY ELEMENT IF INIT      3663 = reg6",
      "119975 PUSH MEMORY ELEMENT IF INIT      3662 -> reg10",
      "119978 PUSH MEMORY ELEMENT IF INIT      3663 -> reg9",
      "119981 EMPTY OBJECT      -> reg11",
      "119983 PUT      reg10[reg9] = reg11",
      "119987 PUSH MEMORY ELEMENT IF INIT      3661 -> reg9",
      "119990 COPY ENUMERABLE      reg9 -> reg10",
      "119993 GET      reg10[length] -> reg9",
      "119999 EQUAL      reg9 == 0 -> reg11",
      "120003 JUMP IF TRUE      reg11 TO: 120134 | 120006"
  ],
  "120006": [
      "120006 SET      0 -> reg11",
      "120009 GET      reg10[reg11] -> reg13",
      "120013 SET MEMORY ELEMENT IF INIT      3664 = reg13",
      "120016 PUSH MEMORY ELEMENT IF INIT      3660 -> reg15",
      "120019 PUSH MEMORY ELEMENT IF INIT      3663 -> reg16",
      "120022 GET      reg15[reg16] -> reg12",
      "120026 GET      reg12[Object] -> reg15",
      "120032 GET      reg15[keys] -> reg12",
      "120038 NEW ARRAY      1 -> reg18",
      "120041 PUSH MEMORY ELEMENT IF INIT      3661 -> reg16",
      "120044 PUSH MEMORY ELEMENT IF INIT      3664 -> reg19",
      "120047 GET      reg16[reg19] -> reg17",
      "120051 PUT      reg18[0] = reg17",
      "120055 CALL FUNCTION      OBJ: reg15 FUNC: reg12 ARGS: reg18",
      "120059 SET      reg2 -> reg14",
      "120062 SET MEMORY ELEMENT IF INIT      3665 = reg14",
      "120065 PUSH MEMORY ELEMENT IF INIT      3665 -> reg14",
      "120068 GET      reg14[length] -> reg12",
      "120074 GREATER THAN      reg12 > 0 -> reg14",
      "120078 JUMP IF FALSE      reg14 TO: 120123 | 120081"
  ],
  "120009": [
      "120009 GET      reg10[reg11] -> reg13",
      "120013 SET MEMORY ELEMENT IF INIT      3664 = reg13",
      "120016 PUSH MEMORY ELEMENT IF INIT      3660 -> reg15",
      "120019 PUSH MEMORY ELEMENT IF INIT      3663 -> reg16",
      "120022 GET      reg15[reg16] -> reg12",
      "120026 GET      reg12[Object] -> reg15",
      "120032 GET      reg15[keys] -> reg12",
      "120038 NEW ARRAY      1 -> reg18",
      "120041 PUSH MEMORY ELEMENT IF INIT      3661 -> reg16",
      "120044 PUSH MEMORY ELEMENT IF INIT      3664 -> reg19",
      "120047 GET      reg16[reg19] -> reg17",
      "120051 PUT      reg18[0] = reg17",
      "120055 CALL FUNCTION      OBJ: reg15 FUNC: reg12 ARGS: reg18",
      "120059 SET      reg2 -> reg14",
      "120062 SET MEMORY ELEMENT IF INIT      3665 = reg14",
      "120065 PUSH MEMORY ELEMENT IF INIT      3665 -> reg14",
      "120068 GET      reg14[length] -> reg12",
      "120074 GREATER THAN      reg12 > 0 -> reg14",
      "120078 JUMP IF FALSE      reg14 TO: 120123 | 120081"
  ],
  "120081": [
      "120081 PUSH MEMORY ELEMENT IF INIT      3662 -> reg12",
      "120084 PUSH MEMORY ELEMENT IF INIT      3663 -> reg16",
      "120087 GET      reg12[reg16] -> reg14",
      "120091 PUSH MEMORY ELEMENT IF INIT      3664 -> reg16",
      "120094 PUSH MEMORY ELEMENT IF INIT      3665 -> reg18",
      "120097 GET      reg18[join] -> reg12",
      "120103 NEW ARRAY      1 -> reg20",
      "120106 PUT      reg20[0] = ,",
      "120112 CALL FUNCTION      OBJ: reg18 FUNC: reg12 ARGS: reg20",
      "120116 SET      reg2 -> reg17",
      "120119 PUT      reg14[reg16] = reg17",
      "120123 ADD      reg111-> reg11",
      "120127 LESS THAN      reg11 < reg9 -> reg12",
      "120131 JUMP IF TRUE      reg12 TO: 120009 | 120134"
  ],
  "120123": [
      "120123 ADD      reg111-> reg11",
      "120127 LESS THAN      reg11 < reg9 -> reg12",
      "120131 JUMP IF TRUE      reg12 TO: 120009 | 120134"
  ],
  "120134": [
      "120134 ADD      reg81-> reg8",
      "120138 LESS THAN      reg8 < reg7 -> reg9",
      "120142 JUMP IF TRUE      reg9 TO: 119968 | 120145"
  ],
  "120145": [
      "120145 EMPTY OBJECT      -> reg4",
      "120147 PUT      reg4[verdict] = false",
      "120153 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "120156 GET      reg6[stringify] -> reg7",
      "120162 NEW ARRAY      1 -> reg9",
      "120165 PUSH MEMORY ELEMENT IF INIT      3662 -> reg11",
      "120168 PUT      reg9[0] = reg11",
      "120172 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "120176 SET      reg2 -> reg8",
      "120179 PUT      reg4[raw] = reg8",
      "120185 PUT      reg4[error] = false",
      "120191 JUMP OR RETURN VAL      reg4"
  ],
  "120195": [
      "120195 SET I      null",
      "120197 PUSH F.K      -> reg4",
      "120199 VOID F",
      "120200 SET MEMORY ELEMENT      0 = reg4",
      "120203 EMPTY OBJECT      -> reg4",
      "120205 PUT      reg4[verdict] = false",
      "120211 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "120214 GET      reg8[toString] -> reg9",
      "120220 EMPTY ARRAY      -> reg10",
      "120222 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "120226 SET      reg2 -> reg7",
      "120229 PUT      reg4[raw] = reg7",
      "120235 PUT      reg4[error] = true",
      "120241 JUMP OR RETURN VAL      reg4"
  ],
  "120376": [
      "120376 SET      0 -> reg8",
      "120379 GET      reg6[reg8] -> reg4",
      "120383 SET MEMORY ELEMENT IF INIT      3676 = reg4",
      "120386 PUSH MEMORY ELEMENT IF INIT      3673 -> reg9",
      "120389 PUSH MEMORY ELEMENT IF INIT      3676 -> reg10",
      "120392 EMPTY OBJECT      -> reg11",
      "120394 PUT      reg9[reg10] = reg11",
      "120398 PUSH MEMORY ELEMENT IF INIT      3672 -> reg11",
      "120401 PUSH MEMORY ELEMENT IF INIT      3676 -> reg12",
      "120404 GET      reg11[reg12] -> reg13",
      "120408 GET      reg13[open] -> reg11",
      "120414 GET      reg11[toString] -> reg13",
      "120420 EMPTY ARRAY      -> reg12",
      "120422 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg12",
      "120426 SET      reg2 -> reg10",
      "120429 GET      reg10[slice] -> reg12",
      "120435 NEW ARRAY      2 -> reg14",
      "120438 PUT      reg14[0] = 0",
      "120442 PUT      reg14[1] = 400",
      "120446 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg14",
      "120450 SET      reg2 -> reg9",
      "120453 SET MEMORY ELEMENT IF INIT      3677 = reg9",
      "120456 PUSH MEMORY ELEMENT IF INIT      3677 -> reg12",
      "120459 GET      reg12[indexOf] -> reg16",
      "120465 NEW ARRAY      1 -> reg13",
      "120468 PUSH MEMORY ELEMENT IF INIT      3675 -> reg17",
      "120471 PUT      reg13[0] = reg17",
      "120475 CALL FUNCTION      OBJ: reg12 FUNC: reg16 ARGS: reg13",
      "120479 SET      reg2 -> reg9",
      "120482 SUBTRACT      0 - 1 -> reg13",
      "120486 GREATER THAN      reg9 > reg13 -> reg14",
      "120490 JUMP IF FALSE      reg14 TO: 120515 | 120493"
  ],
  "120379": [
      "120379 GET      reg6[reg8] -> reg4",
      "120383 SET MEMORY ELEMENT IF INIT      3676 = reg4",
      "120386 PUSH MEMORY ELEMENT IF INIT      3673 -> reg9",
      "120389 PUSH MEMORY ELEMENT IF INIT      3676 -> reg10",
      "120392 EMPTY OBJECT      -> reg11",
      "120394 PUT      reg9[reg10] = reg11",
      "120398 PUSH MEMORY ELEMENT IF INIT      3672 -> reg11",
      "120401 PUSH MEMORY ELEMENT IF INIT      3676 -> reg12",
      "120404 GET      reg11[reg12] -> reg13",
      "120408 GET      reg13[open] -> reg11",
      "120414 GET      reg11[toString] -> reg13",
      "120420 EMPTY ARRAY      -> reg12",
      "120422 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg12",
      "120426 SET      reg2 -> reg10",
      "120429 GET      reg10[slice] -> reg12",
      "120435 NEW ARRAY      2 -> reg14",
      "120438 PUT      reg14[0] = 0",
      "120442 PUT      reg14[1] = 400",
      "120446 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg14",
      "120450 SET      reg2 -> reg9",
      "120453 SET MEMORY ELEMENT IF INIT      3677 = reg9",
      "120456 PUSH MEMORY ELEMENT IF INIT      3677 -> reg12",
      "120459 GET      reg12[indexOf] -> reg16",
      "120465 NEW ARRAY      1 -> reg13",
      "120468 PUSH MEMORY ELEMENT IF INIT      3675 -> reg17",
      "120471 PUT      reg13[0] = reg17",
      "120475 CALL FUNCTION      OBJ: reg12 FUNC: reg16 ARGS: reg13",
      "120479 SET      reg2 -> reg9",
      "120482 SUBTRACT      0 - 1 -> reg13",
      "120486 GREATER THAN      reg9 > reg13 -> reg14",
      "120490 JUMP IF FALSE      reg14 TO: 120515 | 120493"
  ],
  "120493": [
      "120493 PUSH MEMORY ELEMENT IF INIT      3673 -> reg9",
      "120496 PUSH MEMORY ELEMENT IF INIT      3676 -> reg13",
      "120499 GET      reg9[reg13] -> reg14",
      "120503 PUSH MEMORY ELEMENT IF INIT      3677 -> reg9",
      "120506 PUT      reg14[o] = reg9",
      "120512 SET MEMORY ELEMENT IF INIT      3674 = true",
      "120515 ADD      reg81-> reg8",
      "120519 LESS THAN      reg8 < reg7 -> reg13",
      "120523 JUMP IF TRUE      reg13 TO: 120379 | 120526"
  ],
  "120515": [
      "120515 ADD      reg81-> reg8",
      "120519 LESS THAN      reg8 < reg7 -> reg13",
      "120523 JUMP IF TRUE      reg13 TO: 120379 | 120526"
  ],
  "120526": [
      "120526 EMPTY OBJECT      -> reg4",
      "120528 PUSH MEMORY ELEMENT IF INIT      3674 -> reg6",
      "120531 PUT      reg4[verdict] = reg6",
      "120537 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "120540 GET      reg6[stringify] -> reg7",
      "120546 NEW ARRAY      1 -> reg8",
      "120549 PUSH MEMORY ELEMENT IF INIT      3673 -> reg14",
      "120552 PUT      reg8[0] = reg14",
      "120556 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "120560 SET      reg2 -> reg9",
      "120563 PUT      reg4[raw] = reg9",
      "120569 PUT      reg4[error] = false",
      "120575 JUMP OR RETURN VAL      reg4"
  ],
  "120579": [
      "120579 SET I      null",
      "120581 PUSH F.K      -> reg4",
      "120583 VOID F",
      "120584 SET MEMORY ELEMENT      0 = reg4",
      "120587 EMPTY OBJECT      -> reg4",
      "120589 PUT      reg4[verdict] = false",
      "120595 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "120598 GET      reg14[toString] -> reg8",
      "120604 EMPTY ARRAY      -> reg9",
      "120606 CALL FUNCTION      OBJ: reg14 FUNC: reg8 ARGS: reg9",
      "120610 SET      reg2 -> reg7",
      "120613 PUT      reg4[raw] = reg7",
      "120619 PUT      reg4[error] = true",
      "120625 JUMP OR RETURN VAL      reg4"
  ],
  "120724": [
      "120724 SET      0 -> reg8",
      "120727 GET      reg6[reg8] -> reg4",
      "120731 SET MEMORY ELEMENT IF INIT      3684 = reg4",
      "120734 PUSH MEMORY ELEMENT IF INIT      3682 -> reg9",
      "120737 PUSH MEMORY ELEMENT IF INIT      3684 -> reg11",
      "120740 GET      reg9[reg11] -> reg10",
      "120744 GET      reg10[window] -> reg9",
      "120750 GET      reg9[Notification] -> reg10",
      "120756 TYPEOF      reg10 -> reg9",
      "120759 SET MEMORY ELEMENT IF INIT      3685 = reg9",
      "120762 SET MEMORY ELEMENT IF INIT      3686 = ",
      "120767 PUSH MEMORY ELEMENT IF INIT      3685 -> reg10",
      "120770 STRICT EQUAL      reg10 === object -> reg9",
      "120776 JUMP IF FALSE      reg9 TO: 120829 | 120779"
  ],
  "120727": [
      "120727 GET      reg6[reg8] -> reg4",
      "120731 SET MEMORY ELEMENT IF INIT      3684 = reg4",
      "120734 PUSH MEMORY ELEMENT IF INIT      3682 -> reg9",
      "120737 PUSH MEMORY ELEMENT IF INIT      3684 -> reg11",
      "120740 GET      reg9[reg11] -> reg10",
      "120744 GET      reg10[window] -> reg9",
      "120750 GET      reg9[Notification] -> reg10",
      "120756 TYPEOF      reg10 -> reg9",
      "120759 SET MEMORY ELEMENT IF INIT      3685 = reg9",
      "120762 SET MEMORY ELEMENT IF INIT      3686 = ",
      "120767 PUSH MEMORY ELEMENT IF INIT      3685 -> reg10",
      "120770 STRICT EQUAL      reg10 === object -> reg9",
      "120776 JUMP IF FALSE      reg9 TO: 120829 | 120779"
  ],
  "120779": [
      "120779 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "120782 GET      reg11[stringify] -> reg10",
      "120788 NEW ARRAY      1 -> reg12",
      "120791 PUSH MEMORY ELEMENT IF INIT      3682 -> reg13",
      "120794 PUSH MEMORY ELEMENT IF INIT      3684 -> reg16",
      "120797 GET      reg13[reg16] -> reg14",
      "120801 GET      reg14[window] -> reg13",
      "120807 GET      reg13[Notification] -> reg14",
      "120813 PUT      reg12[0] = reg14",
      "120817 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg12",
      "120821 SET      reg2 -> reg9",
      "120824 SET MEMORY ELEMENT IF INIT      3686 = reg9",
      "120827 JUMP      120916",
      "120916 PUSH MEMORY ELEMENT IF INIT      3683 -> reg9",
      "120919 PUSH MEMORY ELEMENT IF INIT      3684 -> reg13",
      "120922 EMPTY OBJECT      -> reg14",
      "120924 PUSH MEMORY ELEMENT IF INIT      3685 -> reg17",
      "120927 PUT      reg14[t] = reg17",
      "120933 PUSH MEMORY ELEMENT IF INIT      3686 -> reg16",
      "120936 PUT      reg14[s] = reg16",
      "120942 GET WINDOW PROP      Object -> reg16",
      "120947 GET      reg16[keys] -> reg18",
      "120953 NEW ARRAY      1 -> reg19",
      "120956 PUSH MEMORY ELEMENT IF INIT      3682 -> reg20",
      "120959 PUSH MEMORY ELEMENT IF INIT      3684 -> reg22",
      "120962 GET      reg20[reg22] -> reg21",
      "120966 GET      reg21[Notification] -> reg20",
      "120972 PUT      reg19[0] = reg20",
      "120976 CALL FUNCTION      OBJ: reg16 FUNC: reg18 ARGS: reg19",
      "120980 SET      reg2 -> reg17",
      "120983 PUT      reg14[k] = reg17",
      "120989 GET WINDOW PROP      Object -> reg17",
      "120994 GET      reg17[getOwnPropertyNames] -> reg18",
      "121000 NEW ARRAY      1 -> reg20",
      "121003 PUSH MEMORY ELEMENT IF INIT      3682 -> reg21",
      "121006 PUSH MEMORY ELEMENT IF INIT      3684 -> reg24",
      "121009 GET      reg21[reg24] -> reg22",
      "121013 GET      reg22[Notification] -> reg24",
      "121019 PUT      reg20[0] = reg24",
      "121023 CALL FUNCTION      OBJ: reg17 FUNC: reg18 ARGS: reg20",
      "121027 SET      reg2 -> reg19",
      "121030 PUT      reg14[p] = reg19",
      "121036 PUT      reg9[reg13] = reg14",
      "121040 ADD      reg81-> reg8",
      "121044 LESS THAN      reg8 < reg7 -> reg14",
      "121048 JUMP IF TRUE      reg14 TO: 120727 | 121051"
  ],
  "120829": [
      "120829 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "120832 GET      reg12[stringify] -> reg13",
      "120838 NEW ARRAY      1 -> reg14",
      "120841 PUSH MEMORY ELEMENT IF INIT      3682 -> reg19",
      "120844 PUSH MEMORY ELEMENT IF INIT      3684 -> reg20",
      "120847 GET      reg19[reg20] -> reg15",
      "120851 GET      reg15[window] -> reg19",
      "120857 GET      reg19[Notification] -> reg15",
      "120863 GET      reg15[toString] -> reg17",
      "120869 EMPTY ARRAY      -> reg19",
      "120871 CALL FUNCTION      OBJ: reg15 FUNC: reg17 ARGS: reg19",
      "120875 SET      reg2 -> reg16",
      "120878 PUT      reg14[0] = reg16",
      "120882 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "120886 SET      reg2 -> reg10",
      "120889 GET      reg10[slice] -> reg13",
      "120895 NEW ARRAY      2 -> reg16",
      "120898 PUT      reg16[0] = 0",
      "120902 PUT      reg16[1] = 200",
      "120906 CALL FUNCTION      OBJ: reg10 FUNC: reg13 ARGS: reg16",
      "120910 SET      reg2 -> reg9",
      "120913 SET MEMORY ELEMENT IF INIT      3686 = reg9",
      "120916 PUSH MEMORY ELEMENT IF INIT      3683 -> reg9",
      "120919 PUSH MEMORY ELEMENT IF INIT      3684 -> reg13",
      "120922 EMPTY OBJECT      -> reg14",
      "120924 PUSH MEMORY ELEMENT IF INIT      3685 -> reg17",
      "120927 PUT      reg14[t] = reg17",
      "120933 PUSH MEMORY ELEMENT IF INIT      3686 -> reg16",
      "120936 PUT      reg14[s] = reg16",
      "120942 GET WINDOW PROP      Object -> reg16",
      "120947 GET      reg16[keys] -> reg18",
      "120953 NEW ARRAY      1 -> reg19",
      "120956 PUSH MEMORY ELEMENT IF INIT      3682 -> reg20",
      "120959 PUSH MEMORY ELEMENT IF INIT      3684 -> reg22",
      "120962 GET      reg20[reg22] -> reg21",
      "120966 GET      reg21[Notification] -> reg20",
      "120972 PUT      reg19[0] = reg20",
      "120976 CALL FUNCTION      OBJ: reg16 FUNC: reg18 ARGS: reg19",
      "120980 SET      reg2 -> reg17",
      "120983 PUT      reg14[k] = reg17",
      "120989 GET WINDOW PROP      Object -> reg17",
      "120994 GET      reg17[getOwnPropertyNames] -> reg18",
      "121000 NEW ARRAY      1 -> reg20",
      "121003 PUSH MEMORY ELEMENT IF INIT      3682 -> reg21",
      "121006 PUSH MEMORY ELEMENT IF INIT      3684 -> reg24",
      "121009 GET      reg21[reg24] -> reg22",
      "121013 GET      reg22[Notification] -> reg24",
      "121019 PUT      reg20[0] = reg24",
      "121023 CALL FUNCTION      OBJ: reg17 FUNC: reg18 ARGS: reg20",
      "121027 SET      reg2 -> reg19",
      "121030 PUT      reg14[p] = reg19",
      "121036 PUT      reg9[reg13] = reg14",
      "121040 ADD      reg81-> reg8",
      "121044 LESS THAN      reg8 < reg7 -> reg14",
      "121048 JUMP IF TRUE      reg14 TO: 120727 | 121051"
  ],
  "121051": [
      "121051 EMPTY OBJECT      -> reg4",
      "121053 PUT      reg4[verdict] = false",
      "121059 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "121062 GET      reg7[stringify] -> reg8",
      "121068 NEW ARRAY      1 -> reg9",
      "121071 PUSH MEMORY ELEMENT IF INIT      3683 -> reg14",
      "121074 PUT      reg9[0] = reg14",
      "121078 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "121082 SET      reg2 -> reg6",
      "121085 PUT      reg4[raw] = reg6",
      "121091 PUT      reg4[error] = false",
      "121097 JUMP OR RETURN VAL      reg4"
  ],
  "121101": [
      "121101 SET I      null",
      "121103 PUSH F.K      -> reg4",
      "121105 VOID F",
      "121106 SET MEMORY ELEMENT      0 = reg4",
      "121109 EMPTY OBJECT      -> reg4",
      "121111 PUT      reg4[verdict] = false",
      "121117 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "121120 GET      reg8[toString] -> reg13",
      "121126 EMPTY ARRAY      -> reg14",
      "121128 CALL FUNCTION      OBJ: reg8 FUNC: reg13 ARGS: reg14",
      "121132 SET      reg2 -> reg6",
      "121135 PUT      reg4[raw] = reg6",
      "121141 PUT      reg4[error] = true",
      "121147 JUMP OR RETURN VAL      reg4"
  ],
  "121699": ["121699 JUMP OR RETURN VAL      N/A"],
  "121703": [
      "121703 PUSH MEMORY ELEMENT IF INIT      3704 -> reg8",
      "121706 GET      reg8[1] -> reg9",
      "121710 JUMP IF TRUE      reg9 TO: 121718 | 121713"
  ],
  "121713": [
      "121713 SET      N/A -> reg9",
      "121718 JUMP OR RETURN VAL      reg9"
  ],
  "121718": ["121718 JUMP OR RETURN VAL      reg9"],
  "121885": [
      "121885 SET I      null",
      "121887 PUSH F.K      -> reg4",
      "121889 VOID F",
      "121890 SET MEMORY ELEMENT      0 = reg4",
      "121893 EMPTY OBJECT      -> reg4",
      "121895 PUT      reg4[verdict] = false",
      "121901 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "121904 GET      reg6[toString] -> reg10",
      "121910 EMPTY ARRAY      -> reg9",
      "121912 CALL FUNCTION      OBJ: reg6 FUNC: reg10 ARGS: reg9",
      "121916 SET      reg2 -> reg7",
      "121919 PUT      reg4[raw] = reg7",
      "121925 PUT      reg4[error] = true",
      "121931 JUMP OR RETURN VAL      reg4"
  ],
  "122054": [
      "122054 PUSH MEMORY ELEMENT IF INIT      3715 -> reg4",
      "122057 GET      reg4[brands] -> reg5",
      "122063 PUSH MEMORY ELEMENT IF INIT      3717 -> reg4",
      "122066 GET      reg5[reg4] -> reg6",
      "122070 GET      reg6[brand] -> reg4",
      "122076 ADD      reg4NaN-> reg6",
      "122082 PUSH MEMORY ELEMENT IF INIT      3715 -> reg4",
      "122085 GET      reg4[brands] -> reg5",
      "122091 PUSH MEMORY ELEMENT IF INIT      3717 -> reg4",
      "122094 GET      reg5[reg4] -> reg7",
      "122098 GET      reg7[version] -> reg5",
      "122104 ADD      reg6NaN-> reg4",
      "122108 SET MEMORY ELEMENT IF INIT      3718 = reg4",
      "122111 PUSH MEMORY ELEMENT IF INIT      3716 -> reg6",
      "122114 GET      reg6[brands] -> reg4",
      "122120 GET      reg4[push] -> reg6",
      "122126 NEW ARRAY      1 -> reg7",
      "122129 PUSH MEMORY ELEMENT IF INIT      3718 -> reg8",
      "122132 PUT      reg7[0] = reg8",
      "122136 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "122140 SET      reg2 -> reg5",
      "122143 PUSH MEMORY ELEMENT IF INIT      3717 -> reg5",
      "122146 SET      reg5 -> reg6",
      "122149 ADD      reg51-> reg5",
      "122153 SET MEMORY ELEMENT IF INIT      3717 = reg5",
      "122156 JUMP      122029",
      "122029 PUSH MEMORY ELEMENT IF INIT      3717 -> reg6",
      "122032 PUSH MEMORY ELEMENT IF INIT      3715 -> reg4",
      "122035 GET      reg4[brands] -> reg7",
      "122041 GET      reg7[length] -> reg4",
      "122047 LESS THAN      reg6 < reg4 -> reg7",
      "122051 JUMP IF FALSE      reg7 TO: 122158 | 122054"
  ],
  "122158": [
      "122158 PUSH MEMORY ELEMENT IF INIT      3716 -> reg5",
      "122161 JUMP OR RETURN VAL      reg5"
  ],
  "122222": [
      "122222 PUSH MEMORY ELEMENT IF INIT      3712 -> reg6",
      "122225 PUSH MEMORY ELEMENT IF INIT      3710 -> reg7",
      "122228 NEW ARRAY      1 -> reg8",
      "122231 GET WINDOW PROP      navigator -> reg9",
      "122236 GET      reg9[userAgentData] -> reg10",
      "122242 PUT      reg8[0] = reg10",
      "122246 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "122250 SET      reg2 -> reg4",
      "122253 PUT      reg6[g] = reg4",
      "122259 PUSH MEMORY ELEMENT IF INIT      3711 -> reg4",
      "122262 GET      reg4[contentWindow] -> reg6",
      "122268 GET      reg6[navigator] -> reg4",
      "122274 IN      userAgentData inreg4 -> reg6",
      "122280 JUMP IF FALSE      reg6 TO: 122330 | 122283"
  ],
  "122259": [
      "122259 PUSH MEMORY ELEMENT IF INIT      3711 -> reg4",
      "122262 GET      reg4[contentWindow] -> reg6",
      "122268 GET      reg6[navigator] -> reg4",
      "122274 IN      userAgentData inreg4 -> reg6",
      "122280 JUMP IF FALSE      reg6 TO: 122330 | 122283"
  ],
  "122283": [
      "122283 PUSH MEMORY ELEMENT IF INIT      3712 -> reg6",
      "122286 PUSH MEMORY ELEMENT IF INIT      3710 -> reg7",
      "122289 NEW ARRAY      1 -> reg8",
      "122292 PUSH MEMORY ELEMENT IF INIT      3711 -> reg9",
      "122295 GET      reg9[contentWindow] -> reg13",
      "122301 GET      reg13[navigator] -> reg9",
      "122307 GET      reg9[userAgentData] -> reg11",
      "122313 PUT      reg8[0] = reg11",
      "122317 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "122321 SET      reg2 -> reg4",
      "122324 PUT      reg6[i] = reg4",
      "122330 EMPTY OBJECT      -> reg4",
      "122332 PUT      reg4[verdict] = false",
      "122338 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "122341 GET      reg6[stringify] -> reg9",
      "122347 NEW ARRAY      1 -> reg7",
      "122350 PUSH MEMORY ELEMENT IF INIT      3712 -> reg10",
      "122353 PUT      reg7[0] = reg10",
      "122357 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg7",
      "122361 SET      reg2 -> reg8",
      "122364 PUT      reg4[raw] = reg8",
      "122370 PUT      reg4[error] = false",
      "122376 JUMP OR RETURN VAL      reg4"
  ],
  "122330": [
      "122330 EMPTY OBJECT      -> reg4",
      "122332 PUT      reg4[verdict] = false",
      "122338 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "122341 GET      reg6[stringify] -> reg9",
      "122347 NEW ARRAY      1 -> reg7",
      "122350 PUSH MEMORY ELEMENT IF INIT      3712 -> reg10",
      "122353 PUT      reg7[0] = reg10",
      "122357 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg7",
      "122361 SET      reg2 -> reg8",
      "122364 PUT      reg4[raw] = reg8",
      "122370 PUT      reg4[error] = false",
      "122376 JUMP OR RETURN VAL      reg4"
  ],
  "122380": [
      "122380 SET I      null",
      "122382 PUSH F.K      -> reg4",
      "122384 VOID F",
      "122385 SET MEMORY ELEMENT      0 = reg4",
      "122388 EMPTY OBJECT      -> reg4",
      "122390 PUT      reg4[verdict] = false",
      "122396 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "122399 GET      reg8[toString] -> reg9",
      "122405 EMPTY ARRAY      -> reg10",
      "122407 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg10",
      "122411 SET      reg2 -> reg7",
      "122414 PUT      reg4[raw] = reg7",
      "122420 PUT      reg4[error] = true",
      "122426 JUMP OR RETURN VAL      reg4"
  ],
  "122583": [
      "122583 PUSH MEMORY ELEMENT IF INIT      3731 -> reg8",
      "122586 GET      reg8[slice] -> reg11",
      "122592 NEW ARRAY      2 -> reg9",
      "122595 PUT      reg9[0] = 0",
      "122599 PUSH MEMORY ELEMENT IF INIT      3732 -> reg10",
      "122602 ADD      reg10100-> reg14",
      "122606 PUT      reg9[1] = reg14",
      "122610 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg9",
      "122614 SET      reg2 -> reg7",
      "122617 SET MEMORY ELEMENT IF INIT      3731 = reg7",
      "122620 JUMP      122652",
      "122652 PUSH MEMORY ELEMENT IF INIT      3731 -> reg7",
      "122655 JUMP OR RETURN VAL      reg7"
  ],
  "122622": [
      "122622 PUSH MEMORY ELEMENT IF INIT      3731 -> reg9",
      "122625 GET      reg9[slice] -> reg10",
      "122631 NEW ARRAY      2 -> reg12",
      "122634 PUT      reg12[0] = 0",
      "122638 PUT      reg12[1] = 250",
      "122642 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg12",
      "122646 SET      reg2 -> reg7",
      "122649 SET MEMORY ELEMENT IF INIT      3731 = reg7",
      "122652 PUSH MEMORY ELEMENT IF INIT      3731 -> reg7",
      "122655 JUMP OR RETURN VAL      reg7"
  ],
  "122770": [
      "122770 SET I      123558",
      "122772 PUSH F.K      -> reg7",
      "122774 VOID F",
      "122775 SET MEMORY ELEMENT      0 = reg7",
      "122778 PUSH MEMORY ELEMENT IF INIT      3724 -> reg4",
      "122781 PUSH MEMORY ELEMENT IF INIT      3723 -> reg7",
      "122784 NEW ARRAY      2 -> reg9",
      "122787 PUSH MEMORY ELEMENT IF INIT      3726 -> reg10",
      "122790 PUT      reg9[0] = reg10",
      "122794 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "122797 GET      reg10[stack] -> reg11",
      "122803 PUT      reg9[1] = reg11",
      "122807 CALL FUNCTION      PTR: reg7 MEM: reg9",
      "122811 SET      reg2 -> reg8",
      "122814 PUT      reg4[gp] = reg8",
      "122820 PUSH MEMORY ELEMENT IF INIT      3724 -> reg4",
      "122823 GET      reg4[gp] -> reg8",
      "122829 GET      reg8[indexOf] -> reg4",
      "122835 NEW ARRAY      1 -> reg9",
      "122838 PUSH MEMORY ELEMENT IF INIT      3726 -> reg10",
      "122841 PUT      reg9[0] = reg10",
      "122845 CALL FUNCTION      OBJ: reg8 FUNC: reg4 ARGS: reg9",
      "122849 SET      reg2 -> reg7",
      "122852 SUBTRACT      0 - 1 -> reg4",
      "122856 STRICT NOT EQUAL      reg7 !== reg4 -> reg9",
      "122860 JUMP IF FALSE      reg9 TO: 122888 | 122863"
  ],
  "122863": [
      "122863 PUSH MEMORY ELEMENT IF INIT      3724 -> reg4",
      "122866 GET      reg4[count] -> reg7",
      "122872 SET      reg7 -> reg4",
      "122875 ADD      reg71-> reg7",
      "122879 PUSH MEMORY ELEMENT IF INIT      3724 -> reg9",
      "122882 PUT      reg9[count] = reg7",
      "122888 SET I      123558",
      "122890 SET I      122975",
      "122892 GET WINDOW PROP      Object -> reg9",
      "122897 GET      reg9[getOwnPropertyDescriptor] -> reg10",
      "122903 NEW ARRAY      2 -> reg11",
      "122906 GET WINDOW PROP      WebGL2RenderingContext -> reg13",
      "122911 GET      reg13[prototype] -> reg14",
      "122917 PUT      reg11[0] = reg14",
      "122921 PUT      reg11[1] = getParameter",
      "122927 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "122931 SET      reg2 -> reg4",
      "122934 GET      reg4[value] -> reg10",
      "122940 EMPTY ARRAY      -> reg11",
      "122942 CALL FUNCTION      OBJ: reg4 FUNC: reg10 ARGS: reg11",
      "122946 SET      reg2 -> reg7",
      "122949 EMPTY OBJECT      -> reg7",
      "122951 PUT      reg7[verdict] = false",
      "122957 PUT      reg7[raw] = unexpected",
      "122965 PUT      reg7[error] = true",
      "122971 JUMP OR RETURN VAL      reg7"
  ],
  "122888": [
      "122888 SET I      123558",
      "122890 SET I      122975",
      "122892 GET WINDOW PROP      Object -> reg9",
      "122897 GET      reg9[getOwnPropertyDescriptor] -> reg10",
      "122903 NEW ARRAY      2 -> reg11",
      "122906 GET WINDOW PROP      WebGL2RenderingContext -> reg13",
      "122911 GET      reg13[prototype] -> reg14",
      "122917 PUT      reg11[0] = reg14",
      "122921 PUT      reg11[1] = getParameter",
      "122927 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "122931 SET      reg2 -> reg4",
      "122934 GET      reg4[value] -> reg10",
      "122940 EMPTY ARRAY      -> reg11",
      "122942 CALL FUNCTION      OBJ: reg4 FUNC: reg10 ARGS: reg11",
      "122946 SET      reg2 -> reg7",
      "122949 EMPTY OBJECT      -> reg7",
      "122951 PUT      reg7[verdict] = false",
      "122957 PUT      reg7[raw] = unexpected",
      "122965 PUT      reg7[error] = true",
      "122971 JUMP OR RETURN VAL      reg7"
  ],
  "122975": [
      "122975 SET I      123558",
      "122977 PUSH F.K      -> reg10",
      "122979 VOID F",
      "122980 SET MEMORY ELEMENT      0 = reg10",
      "122983 PUSH MEMORY ELEMENT IF INIT      3724 -> reg10",
      "122986 PUSH MEMORY ELEMENT IF INIT      3723 -> reg12",
      "122989 NEW ARRAY      2 -> reg11",
      "122992 PUSH MEMORY ELEMENT IF INIT      3726 -> reg14",
      "122995 PUT      reg11[0] = reg14",
      "122999 PUSH MEMORY ELEMENT IF INIT      0 -> reg13",
      "123002 GET      reg13[stack] -> reg14",
      "123008 PUT      reg11[1] = reg14",
      "123012 CALL FUNCTION      PTR: reg12 MEM: reg11",
      "123016 SET      reg2 -> reg7",
      "123019 PUT      reg10[gp2] = reg7",
      "123025 PUSH MEMORY ELEMENT IF INIT      3724 -> reg7",
      "123028 GET      reg7[gp2] -> reg11",
      "123034 GET      reg11[indexOf] -> reg7",
      "123040 NEW ARRAY      1 -> reg12",
      "123043 PUSH MEMORY ELEMENT IF INIT      3726 -> reg13",
      "123046 PUT      reg12[0] = reg13",
      "123050 CALL FUNCTION      OBJ: reg11 FUNC: reg7 ARGS: reg12",
      "123054 SET      reg2 -> reg10",
      "123057 SUBTRACT      0 - 1 -> reg7",
      "123061 STRICT NOT EQUAL      reg10 !== reg7 -> reg12",
      "123065 JUMP IF FALSE      reg12 TO: 123093 | 123068"
  ],
  "123068": [
      "123068 PUSH MEMORY ELEMENT IF INIT      3724 -> reg7",
      "123071 GET      reg7[count] -> reg10",
      "123077 SET      reg10 -> reg7",
      "123080 ADD      reg101-> reg10",
      "123084 PUSH MEMORY ELEMENT IF INIT      3724 -> reg12",
      "123087 PUT      reg12[count] = reg10",
      "123093 SET I      123558",
      "123095 SET I      123180",
      "123097 GET WINDOW PROP      Object -> reg10",
      "123102 GET      reg10[getOwnPropertyDescriptor] -> reg13",
      "123108 NEW ARRAY      2 -> reg14",
      "123111 GET WINDOW PROP      Function -> reg16",
      "123116 GET      reg16[prototype] -> reg17",
      "123122 PUT      reg14[0] = reg17",
      "123126 PUT      reg14[1] = toString",
      "123132 CALL FUNCTION      OBJ: reg10 FUNC: reg13 ARGS: reg14",
      "123136 SET      reg2 -> reg12",
      "123139 GET      reg12[value] -> reg13",
      "123145 EMPTY ARRAY      -> reg15",
      "123147 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg15",
      "123151 SET      reg2 -> reg7",
      "123154 EMPTY OBJECT      -> reg13",
      "123156 PUT      reg13[verdict] = false",
      "123162 PUT      reg13[raw] = unexpected",
      "123170 PUT      reg13[error] = true",
      "123176 JUMP OR RETURN VAL      reg13"
  ],
  "123093": [
      "123093 SET I      123558",
      "123095 SET I      123180",
      "123097 GET WINDOW PROP      Object -> reg10",
      "123102 GET      reg10[getOwnPropertyDescriptor] -> reg13",
      "123108 NEW ARRAY      2 -> reg14",
      "123111 GET WINDOW PROP      Function -> reg16",
      "123116 GET      reg16[prototype] -> reg17",
      "123122 PUT      reg14[0] = reg17",
      "123126 PUT      reg14[1] = toString",
      "123132 CALL FUNCTION      OBJ: reg10 FUNC: reg13 ARGS: reg14",
      "123136 SET      reg2 -> reg12",
      "123139 GET      reg12[value] -> reg13",
      "123145 EMPTY ARRAY      -> reg15",
      "123147 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg15",
      "123151 SET      reg2 -> reg7",
      "123154 EMPTY OBJECT      -> reg13",
      "123156 PUT      reg13[verdict] = false",
      "123162 PUT      reg13[raw] = unexpected",
      "123170 PUT      reg13[error] = true",
      "123176 JUMP OR RETURN VAL      reg13"
  ],
  "123180": [
      "123180 SET I      123558",
      "123182 PUSH F.K      -> reg14",
      "123184 VOID F",
      "123185 SET MEMORY ELEMENT      0 = reg14",
      "123188 PUSH MEMORY ELEMENT IF INIT      3724 -> reg7",
      "123191 PUSH MEMORY ELEMENT IF INIT      3723 -> reg14",
      "123194 NEW ARRAY      2 -> reg15",
      "123197 PUSH MEMORY ELEMENT IF INIT      3726 -> reg16",
      "123200 PUT      reg15[0] = reg16",
      "123204 PUSH MEMORY ELEMENT IF INIT      0 -> reg16",
      "123207 GET      reg16[stack] -> reg17",
      "123213 PUT      reg15[1] = reg17",
      "123217 CALL FUNCTION      PTR: reg14 MEM: reg15",
      "123221 SET      reg2 -> reg13",
      "123224 PUT      reg7[ts] = reg13",
      "123230 PUSH MEMORY ELEMENT IF INIT      3724 -> reg7",
      "123233 GET      reg7[ts] -> reg14",
      "123239 GET      reg14[indexOf] -> reg16",
      "123245 NEW ARRAY      1 -> reg7",
      "123248 PUSH MEMORY ELEMENT IF INIT      3726 -> reg15",
      "123251 PUT      reg7[0] = reg15",
      "123255 CALL FUNCTION      OBJ: reg14 FUNC: reg16 ARGS: reg7",
      "123259 SET      reg2 -> reg13",
      "123262 SUBTRACT      0 - 1 -> reg15",
      "123266 STRICT NOT EQUAL      reg13 !== reg15 -> reg7",
      "123270 JUMP IF FALSE      reg7 TO: 123298 | 123273"
  ],
  "123273": [
      "123273 PUSH MEMORY ELEMENT IF INIT      3724 -> reg15",
      "123276 GET      reg15[count] -> reg7",
      "123282 SET      reg7 -> reg13",
      "123285 ADD      reg71-> reg7",
      "123289 PUSH MEMORY ELEMENT IF INIT      3724 -> reg15",
      "123292 PUT      reg15[count] = reg7",
      "123298 SET I      123558",
      "123300 SET I      123385",
      "123302 GET WINDOW PROP      Object -> reg17",
      "123307 GET      reg17[getOwnPropertyDescriptor] -> reg18",
      "123313 NEW ARRAY      2 -> reg15",
      "123316 GET WINDOW PROP      navigator -> reg16",
      "123321 GET      reg16[__proto__] -> reg19",
      "123327 PUT      reg15[0] = reg19",
      "123331 PUT      reg15[1] = languages",
      "123337 CALL FUNCTION      OBJ: reg17 FUNC: reg18 ARGS: reg15",
      "123341 SET      reg2 -> reg13",
      "123344 GET      reg13[get] -> reg15",
      "123350 EMPTY ARRAY      -> reg16",
      "123352 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg16",
      "123356 SET      reg2 -> reg7",
      "123359 EMPTY OBJECT      -> reg7",
      "123361 PUT      reg7[verdict] = false",
      "123367 PUT      reg7[raw] = unexpected",
      "123375 PUT      reg7[error] = true",
      "123381 JUMP OR RETURN VAL      reg7"
  ],
  "123298": [
      "123298 SET I      123558",
      "123300 SET I      123385",
      "123302 GET WINDOW PROP      Object -> reg17",
      "123307 GET      reg17[getOwnPropertyDescriptor] -> reg18",
      "123313 NEW ARRAY      2 -> reg15",
      "123316 GET WINDOW PROP      navigator -> reg16",
      "123321 GET      reg16[__proto__] -> reg19",
      "123327 PUT      reg15[0] = reg19",
      "123331 PUT      reg15[1] = languages",
      "123337 CALL FUNCTION      OBJ: reg17 FUNC: reg18 ARGS: reg15",
      "123341 SET      reg2 -> reg13",
      "123344 GET      reg13[get] -> reg15",
      "123350 EMPTY ARRAY      -> reg16",
      "123352 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg16",
      "123356 SET      reg2 -> reg7",
      "123359 EMPTY OBJECT      -> reg7",
      "123361 PUT      reg7[verdict] = false",
      "123367 PUT      reg7[raw] = unexpected",
      "123375 PUT      reg7[error] = true",
      "123381 JUMP OR RETURN VAL      reg7"
  ],
  "123385": [
      "123385 SET I      123558",
      "123387 PUSH F.K      -> reg7",
      "123389 VOID F",
      "123390 SET MEMORY ELEMENT      0 = reg7",
      "123393 PUSH MEMORY ELEMENT IF INIT      3724 -> reg7",
      "123396 PUSH MEMORY ELEMENT IF INIT      3723 -> reg16",
      "123399 NEW ARRAY      2 -> reg18",
      "123402 PUSH MEMORY ELEMENT IF INIT      3726 -> reg19",
      "123405 PUT      reg18[0] = reg19",
      "123409 PUSH MEMORY ELEMENT IF INIT      0 -> reg20",
      "123412 GET      reg20[stack] -> reg21",
      "123418 PUT      reg18[1] = reg21",
      "123422 CALL FUNCTION      PTR: reg16 MEM: reg18",
      "123426 SET      reg2 -> reg15",
      "123429 PUT      reg7[l] = reg15",
      "123435 PUSH MEMORY ELEMENT IF INIT      3724 -> reg7",
      "123438 GET      reg7[l] -> reg20",
      "123444 GET      reg20[indexOf] -> reg7",
      "123450 NEW ARRAY      1 -> reg15",
      "123453 PUSH MEMORY ELEMENT IF INIT      3726 -> reg18",
      "123456 PUT      reg15[0] = reg18",
      "123460 CALL FUNCTION      OBJ: reg20 FUNC: reg7 ARGS: reg15",
      "123464 SET      reg2 -> reg16",
      "123467 SUBTRACT      0 - 1 -> reg15",
      "123471 STRICT NOT EQUAL      reg16 !== reg15 -> reg18",
      "123475 JUMP IF FALSE      reg18 TO: 123503 | 123478"
  ],
  "123478": [
      "123478 PUSH MEMORY ELEMENT IF INIT      3724 -> reg15",
      "123481 GET      reg15[count] -> reg7",
      "123487 SET      reg7 -> reg15",
      "123490 ADD      reg71-> reg7",
      "123494 PUSH MEMORY ELEMENT IF INIT      3724 -> reg16",
      "123497 PUT      reg16[count] = reg7",
      "123503 SET I      123558",
      "123505 EMPTY OBJECT      -> reg7",
      "123507 PUSH MEMORY ELEMENT IF INIT      3725 -> reg15",
      "123510 PUT      reg7[verdict] = reg15",
      "123516 PUSH MEMORY ELEMENT IF INIT      280 -> reg19",
      "123519 GET      reg19[stringify] -> reg16",
      "123525 NEW ARRAY      1 -> reg21",
      "123528 PUSH MEMORY ELEMENT IF INIT      3724 -> reg15",
      "123531 PUT      reg21[0] = reg15",
      "123535 CALL FUNCTION      OBJ: reg19 FUNC: reg16 ARGS: reg21",
      "123539 SET      reg2 -> reg18",
      "123542 PUT      reg7[raw] = reg18",
      "123548 PUT      reg7[error] = false",
      "123554 JUMP OR RETURN VAL      reg7"
  ],
  "123503": [
      "123503 SET I      123558",
      "123505 EMPTY OBJECT      -> reg7",
      "123507 PUSH MEMORY ELEMENT IF INIT      3725 -> reg15",
      "123510 PUT      reg7[verdict] = reg15",
      "123516 PUSH MEMORY ELEMENT IF INIT      280 -> reg19",
      "123519 GET      reg19[stringify] -> reg16",
      "123525 NEW ARRAY      1 -> reg21",
      "123528 PUSH MEMORY ELEMENT IF INIT      3724 -> reg15",
      "123531 PUT      reg21[0] = reg15",
      "123535 CALL FUNCTION      OBJ: reg19 FUNC: reg16 ARGS: reg21",
      "123539 SET      reg2 -> reg18",
      "123542 PUT      reg7[raw] = reg18",
      "123548 PUT      reg7[error] = false",
      "123554 JUMP OR RETURN VAL      reg7"
  ],
  "123558": [
      "123558 SET I      null",
      "123560 PUSH F.K      -> reg7",
      "123562 VOID F",
      "123563 SET MEMORY ELEMENT      0 = reg7",
      "123566 EMPTY OBJECT      -> reg16",
      "123568 PUT      reg16[verdict] = false",
      "123574 PUSH MEMORY ELEMENT IF INIT      0 -> reg18",
      "123577 GET      reg18[toString] -> reg15",
      "123583 EMPTY ARRAY      -> reg22",
      "123585 CALL FUNCTION      OBJ: reg18 FUNC: reg15 ARGS: reg22",
      "123589 SET      reg2 -> reg7",
      "123592 PUT      reg16[raw] = reg7",
      "123598 PUT      reg16[error] = true",
      "123604 JUMP OR RETURN VAL      reg16"
  ],
  "123961": [
      "123961 PUSH MEMORY ELEMENT IF INIT      3747 -> reg4",
      "123964 PUSH MEMORY ELEMENT IF INIT      3761 -> reg5",
      "123967 PUT      reg4[reg5] = 0",
      "123971 PUSH MEMORY ELEMENT IF INIT      3747 -> reg6",
      "123974 PUSH MEMORY ELEMENT IF INIT      3761 -> reg5",
      "123977 GET      reg6[reg5] -> reg4",
      "123981 SET      reg4 -> reg5",
      "123984 ADD      reg41-> reg4",
      "123988 PUSH MEMORY ELEMENT IF INIT      3747 -> reg6",
      "123991 PUSH MEMORY ELEMENT IF INIT      3761 -> reg8",
      "123994 PUT      reg6[reg8] = reg4",
      "123998 PUSH MEMORY ELEMENT IF INIT      3748 -> reg5",
      "124001 GET      reg5[push] -> reg6",
      "124007 NEW ARRAY      1 -> reg8",
      "124010 PUSH MEMORY ELEMENT IF INIT      3761 -> reg7",
      "124013 PUT      reg8[0] = reg7",
      "124017 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "124021 SET      reg2 -> reg4",
      "124024 JUMP OR RETURN VAL      "
  ],
  "123971": [
      "123971 PUSH MEMORY ELEMENT IF INIT      3747 -> reg6",
      "123974 PUSH MEMORY ELEMENT IF INIT      3761 -> reg5",
      "123977 GET      reg6[reg5] -> reg4",
      "123981 SET      reg4 -> reg5",
      "123984 ADD      reg41-> reg4",
      "123988 PUSH MEMORY ELEMENT IF INIT      3747 -> reg6",
      "123991 PUSH MEMORY ELEMENT IF INIT      3761 -> reg8",
      "123994 PUT      reg6[reg8] = reg4",
      "123998 PUSH MEMORY ELEMENT IF INIT      3748 -> reg5",
      "124001 GET      reg5[push] -> reg6",
      "124007 NEW ARRAY      1 -> reg8",
      "124010 PUSH MEMORY ELEMENT IF INIT      3761 -> reg7",
      "124013 PUT      reg8[0] = reg7",
      "124017 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "124021 SET      reg2 -> reg4",
      "124024 JUMP OR RETURN VAL      "
  ],
  "124100": [
      "124100 PUSH MEMORY ELEMENT IF INIT      3754 -> reg9",
      "124103 EMPTY ARRAY      -> reg10",
      "124105 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "124109 SET      reg2 -> reg8",
      "124112 JUMP      124067",
      "124067 PUSH MEMORY ELEMENT IF INIT      3752 -> reg7",
      "124070 GET      reg7[n] -> reg9",
      "124076 EMPTY ARRAY      -> reg10",
      "124078 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "124082 SET      reg2 -> reg8",
      "124085 SET MEMORY ELEMENT IF INIT      3753 = reg8",
      "124088 GET      reg8[done] -> reg9",
      "124094 NOT      reg9 -> reg10",
      "124097 JUMP IF FALSE      reg10 TO: 124114 | 124100"
  ],
  "124114": [
      "124114 JUMP      124150",
      "124150 SET I      null",
      "124152 SET N      null",
      "124154 PUSH MEMORY ELEMENT IF INIT      3752 -> reg11",
      "124157 GET      reg11[f] -> reg15",
      "124163 EMPTY ARRAY      -> reg10",
      "124165 CALL FUNCTION      OBJ: reg11 FUNC: reg15 ARGS: reg10",
      "124169 SET      reg2 -> reg8",
      "124172 HANDLE TRACE OR JUMP OR RETURN C",
      "124173 SET I      null",
      "124175 PUSH MEMORY ELEMENT IF INIT      17 -> reg13",
      "124178 NEW ARRAY      1 -> reg10",
      "124181 GET WINDOW PROP      Object -> reg17",
      "124186 GET      reg17[getOwnPropertyNames] -> reg15",
      "124192 NEW ARRAY      1 -> reg16",
      "124195 GET WINDOW PROP      Symbol -> reg19",
      "124200 PUT      reg16[0] = reg19",
      "124204 CALL FUNCTION      OBJ: reg17 FUNC: reg15 ARGS: reg16",
      "124208 SET      reg2 -> reg18",
      "124211 PUT      reg10[0] = reg18",
      "124215 CALL FUNCTION      PTR: reg13 MEM: reg10",
      "124219 SET      reg2 -> reg8",
      "124222 SET MEMORY ELEMENT IF INIT      3755 = reg8",
      "124225 PUSH MEMORY ELEMENT IF INIT      21 -> reg10",
      "124228 NEW ARRAY      1 -> reg13",
      "124231 PUSH MEMORY ELEMENT IF INIT      3755 -> reg16",
      "124234 PUT      reg13[0] = reg16",
      "124238 CALL FUNCTION      PTR: reg10 MEM: reg13",
      "124242 SET      reg2 -> reg8",
      "124245 SET MEMORY ELEMENT IF INIT      3756 = reg8",
      "124248 SET I      124594",
      "124250 SET N      124628",
      "124252 INIT FUNCTION STATE      PTR: 124261 NAME:  LEN: 0 -> reg8",
      "124259 JUMP      124524",
      "124524 SET MEMORY ELEMENT IF INIT      3758 = reg8",
      "124527 PUSH MEMORY ELEMENT IF INIT      3756 -> reg10",
      "124530 GET      reg10[s] -> reg15",
      "124536 EMPTY ARRAY      -> reg13",
      "124538 CALL FUNCTION      OBJ: reg10 FUNC: reg15 ARGS: reg13",
      "124542 SET      reg2 -> reg8",
      "124545 PUSH MEMORY ELEMENT IF INIT      3756 -> reg16",
      "124548 GET      reg16[n] -> reg21",
      "124554 EMPTY ARRAY      -> reg18",
      "124556 CALL FUNCTION      OBJ: reg16 FUNC: reg21 ARGS: reg18",
      "124560 SET      reg2 -> reg13",
      "124563 SET MEMORY ELEMENT IF INIT      3757 = reg13",
      "124566 GET      reg13[done] -> reg15",
      "124572 NOT      reg15 -> reg13",
      "124575 JUMP IF FALSE      reg13 TO: 124592 | 124578"
  ],
  "124116": [
      "124116 SET I      124150",
      "124118 PUSH F.K      -> reg8",
      "124120 VOID F",
      "124121 SET MEMORY ELEMENT      0 = reg8",
      "124124 PUSH MEMORY ELEMENT IF INIT      3752 -> reg9",
      "124127 GET      reg9[e] -> reg10",
      "124133 NEW ARRAY      1 -> reg13",
      "124136 PUSH MEMORY ELEMENT IF INIT      0 -> reg11",
      "124139 PUT      reg13[0] = reg11",
      "124143 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg13",
      "124147 SET      reg2 -> reg8",
      "124150 SET I      null",
      "124152 SET N      null",
      "124154 PUSH MEMORY ELEMENT IF INIT      3752 -> reg11",
      "124157 GET      reg11[f] -> reg15",
      "124163 EMPTY ARRAY      -> reg10",
      "124165 CALL FUNCTION      OBJ: reg11 FUNC: reg15 ARGS: reg10",
      "124169 SET      reg2 -> reg8",
      "124172 HANDLE TRACE OR JUMP OR RETURN C",
      "124173 SET I      null",
      "124175 PUSH MEMORY ELEMENT IF INIT      17 -> reg13",
      "124178 NEW ARRAY      1 -> reg10",
      "124181 GET WINDOW PROP      Object -> reg17",
      "124186 GET      reg17[getOwnPropertyNames] -> reg15",
      "124192 NEW ARRAY      1 -> reg16",
      "124195 GET WINDOW PROP      Symbol -> reg19",
      "124200 PUT      reg16[0] = reg19",
      "124204 CALL FUNCTION      OBJ: reg17 FUNC: reg15 ARGS: reg16",
      "124208 SET      reg2 -> reg18",
      "124211 PUT      reg10[0] = reg18",
      "124215 CALL FUNCTION      PTR: reg13 MEM: reg10",
      "124219 SET      reg2 -> reg8",
      "124222 SET MEMORY ELEMENT IF INIT      3755 = reg8",
      "124225 PUSH MEMORY ELEMENT IF INIT      21 -> reg10",
      "124228 NEW ARRAY      1 -> reg13",
      "124231 PUSH MEMORY ELEMENT IF INIT      3755 -> reg16",
      "124234 PUT      reg13[0] = reg16",
      "124238 CALL FUNCTION      PTR: reg10 MEM: reg13",
      "124242 SET      reg2 -> reg8",
      "124245 SET MEMORY ELEMENT IF INIT      3756 = reg8",
      "124248 SET I      124594",
      "124250 SET N      124628",
      "124252 INIT FUNCTION STATE      PTR: 124261 NAME:  LEN: 0 -> reg8",
      "124259 JUMP      124524",
      "124524 SET MEMORY ELEMENT IF INIT      3758 = reg8",
      "124527 PUSH MEMORY ELEMENT IF INIT      3756 -> reg10",
      "124530 GET      reg10[s] -> reg15",
      "124536 EMPTY ARRAY      -> reg13",
      "124538 CALL FUNCTION      OBJ: reg10 FUNC: reg15 ARGS: reg13",
      "124542 SET      reg2 -> reg8",
      "124545 PUSH MEMORY ELEMENT IF INIT      3756 -> reg16",
      "124548 GET      reg16[n] -> reg21",
      "124554 EMPTY ARRAY      -> reg18",
      "124556 CALL FUNCTION      OBJ: reg16 FUNC: reg21 ARGS: reg18",
      "124560 SET      reg2 -> reg13",
      "124563 SET MEMORY ELEMENT IF INIT      3757 = reg13",
      "124566 GET      reg13[done] -> reg15",
      "124572 NOT      reg15 -> reg13",
      "124575 JUMP IF FALSE      reg13 TO: 124592 | 124578"
  ],
  "124150": [
      "124150 SET I      null",
      "124152 SET N      null",
      "124154 PUSH MEMORY ELEMENT IF INIT      3752 -> reg11",
      "124157 GET      reg11[f] -> reg15",
      "124163 EMPTY ARRAY      -> reg10",
      "124165 CALL FUNCTION      OBJ: reg11 FUNC: reg15 ARGS: reg10",
      "124169 SET      reg2 -> reg8",
      "124172 HANDLE TRACE OR JUMP OR RETURN C",
      "124173 SET I      null",
      "124175 PUSH MEMORY ELEMENT IF INIT      17 -> reg13",
      "124178 NEW ARRAY      1 -> reg10",
      "124181 GET WINDOW PROP      Object -> reg17",
      "124186 GET      reg17[getOwnPropertyNames] -> reg15",
      "124192 NEW ARRAY      1 -> reg16",
      "124195 GET WINDOW PROP      Symbol -> reg19",
      "124200 PUT      reg16[0] = reg19",
      "124204 CALL FUNCTION      OBJ: reg17 FUNC: reg15 ARGS: reg16",
      "124208 SET      reg2 -> reg18",
      "124211 PUT      reg10[0] = reg18",
      "124215 CALL FUNCTION      PTR: reg13 MEM: reg10",
      "124219 SET      reg2 -> reg8",
      "124222 SET MEMORY ELEMENT IF INIT      3755 = reg8",
      "124225 PUSH MEMORY ELEMENT IF INIT      21 -> reg10",
      "124228 NEW ARRAY      1 -> reg13",
      "124231 PUSH MEMORY ELEMENT IF INIT      3755 -> reg16",
      "124234 PUT      reg13[0] = reg16",
      "124238 CALL FUNCTION      PTR: reg10 MEM: reg13",
      "124242 SET      reg2 -> reg8",
      "124245 SET MEMORY ELEMENT IF INIT      3756 = reg8",
      "124248 SET I      124594",
      "124250 SET N      124628",
      "124252 INIT FUNCTION STATE      PTR: 124261 NAME:  LEN: 0 -> reg8",
      "124259 JUMP      124524",
      "124524 SET MEMORY ELEMENT IF INIT      3758 = reg8",
      "124527 PUSH MEMORY ELEMENT IF INIT      3756 -> reg10",
      "124530 GET      reg10[s] -> reg15",
      "124536 EMPTY ARRAY      -> reg13",
      "124538 CALL FUNCTION      OBJ: reg10 FUNC: reg15 ARGS: reg13",
      "124542 SET      reg2 -> reg8",
      "124545 PUSH MEMORY ELEMENT IF INIT      3756 -> reg16",
      "124548 GET      reg16[n] -> reg21",
      "124554 EMPTY ARRAY      -> reg18",
      "124556 CALL FUNCTION      OBJ: reg16 FUNC: reg21 ARGS: reg18",
      "124560 SET      reg2 -> reg13",
      "124563 SET MEMORY ELEMENT IF INIT      3757 = reg13",
      "124566 GET      reg13[done] -> reg15",
      "124572 NOT      reg15 -> reg13",
      "124575 JUMP IF FALSE      reg13 TO: 124592 | 124578"
  ],
  "124301": [
      "124301 GET WINDOW PROP      Object -> reg5",
      "124306 GET      reg5[defineProperty] -> reg6",
      "124312 NEW ARRAY      3 -> reg7",
      "124315 PUSH MEMORY ELEMENT IF INIT      3750 -> reg8",
      "124318 PUT      reg7[0] = reg8",
      "124322 GET WINDOW PROP      Symbol -> reg8",
      "124327 PUSH MEMORY ELEMENT IF INIT      3767 -> reg10",
      "124330 GET      reg8[reg10] -> reg9",
      "124334 PUT      reg7[1] = reg9",
      "124338 EMPTY OBJECT      -> reg8",
      "124340 INIT FUNCTION STATE      PTR: 124349 NAME:  LEN: 0 -> reg10",
      "124347 JUMP      124462",
      "124462 PUT      reg8[get] = reg10",
      "124468 PUT      reg7[2] = reg8",
      "124472 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "124476 SET      reg2 -> reg4",
      "124479 PUSH MEMORY ELEMENT IF INIT      3749 -> reg6",
      "124482 GET      reg6[push] -> reg7",
      "124488 NEW ARRAY      1 -> reg8",
      "124491 PUSH MEMORY ELEMENT IF INIT      3767 -> reg9",
      "124494 ADD      s:NaN-> reg10",
      "124500 PUT      reg8[0] = reg10",
      "124504 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "124508 SET      reg2 -> reg4",
      "124511 JUMP      124521",
      "124521 SET I      null",
      "124523 JUMP OR RETURN"
  ],
  "124371": [
      "124371 PUSH MEMORY ELEMENT IF INIT      3747 -> reg4",
      "124374 PUSH MEMORY ELEMENT IF INIT      3767 -> reg6",
      "124377 ADD      s:NaN-> reg5",
      "124383 PUT      reg4[reg5] = 0",
      "124387 PUSH MEMORY ELEMENT IF INIT      3747 -> reg4",
      "124390 PUSH MEMORY ELEMENT IF INIT      3767 -> reg7",
      "124393 ADD      s:NaN-> reg8",
      "124399 GET      reg4[reg8] -> reg5",
      "124403 SET      reg5 -> reg4",
      "124406 ADD      reg51-> reg5",
      "124410 PUSH MEMORY ELEMENT IF INIT      3747 -> reg6",
      "124413 PUSH MEMORY ELEMENT IF INIT      3767 -> reg8",
      "124416 ADD      s:NaN-> reg7",
      "124422 PUT      reg6[reg7] = reg5",
      "124426 PUSH MEMORY ELEMENT IF INIT      3748 -> reg5",
      "124429 GET      reg5[push] -> reg7",
      "124435 NEW ARRAY      1 -> reg6",
      "124438 PUSH MEMORY ELEMENT IF INIT      3767 -> reg9",
      "124441 ADD      s:NaN-> reg8",
      "124447 PUT      reg6[0] = reg8",
      "124451 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg6",
      "124455 SET      reg2 -> reg4",
      "124458 JUMP OR RETURN VAL      "
  ],
  "124387": [
      "124387 PUSH MEMORY ELEMENT IF INIT      3747 -> reg4",
      "124390 PUSH MEMORY ELEMENT IF INIT      3767 -> reg7",
      "124393 ADD      s:NaN-> reg8",
      "124399 GET      reg4[reg8] -> reg5",
      "124403 SET      reg5 -> reg4",
      "124406 ADD      reg51-> reg5",
      "124410 PUSH MEMORY ELEMENT IF INIT      3747 -> reg6",
      "124413 PUSH MEMORY ELEMENT IF INIT      3767 -> reg8",
      "124416 ADD      s:NaN-> reg7",
      "124422 PUT      reg6[reg7] = reg5",
      "124426 PUSH MEMORY ELEMENT IF INIT      3748 -> reg5",
      "124429 GET      reg5[push] -> reg7",
      "124435 NEW ARRAY      1 -> reg6",
      "124438 PUSH MEMORY ELEMENT IF INIT      3767 -> reg9",
      "124441 ADD      s:NaN-> reg8",
      "124447 PUT      reg6[0] = reg8",
      "124451 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg6",
      "124455 SET      reg2 -> reg4",
      "124458 JUMP OR RETURN VAL      "
  ],
  "124511": [
      "124511 JUMP      124521",
      "124521 SET I      null",
      "124523 JUMP OR RETURN"
  ],
  "124513": [
      "124513 SET I      null",
      "124515 PUSH F.K      -> reg7",
      "124517 VOID F",
      "124518 SET MEMORY ELEMENT      0 = reg7",
      "124521 SET I      null",
      "124523 JUMP OR RETURN"
  ],
  "124578": [
      "124578 PUSH MEMORY ELEMENT IF INIT      3758 -> reg15",
      "124581 EMPTY ARRAY      -> reg18",
      "124583 CALL FUNCTION      PTR: reg15 MEM: reg18",
      "124587 SET      reg2 -> reg13",
      "124590 JUMP      124545",
      "124545 PUSH MEMORY ELEMENT IF INIT      3756 -> reg16",
      "124548 GET      reg16[n] -> reg21",
      "124554 EMPTY ARRAY      -> reg18",
      "124556 CALL FUNCTION      OBJ: reg16 FUNC: reg21 ARGS: reg18",
      "124560 SET      reg2 -> reg13",
      "124563 SET MEMORY ELEMENT IF INIT      3757 = reg13",
      "124566 GET      reg13[done] -> reg15",
      "124572 NOT      reg15 -> reg13",
      "124575 JUMP IF FALSE      reg13 TO: 124592 | 124578"
  ],
  "124592": [
      "124592 JUMP      124628",
      "124628 SET I      null",
      "124630 SET N      null",
      "124632 PUSH MEMORY ELEMENT IF INIT      3756 -> reg18",
      "124635 GET      reg18[f] -> reg19",
      "124641 EMPTY ARRAY      -> reg20",
      "124643 CALL FUNCTION      OBJ: reg18 FUNC: reg19 ARGS: reg20",
      "124647 SET      reg2 -> reg13",
      "124650 HANDLE TRACE OR JUMP OR RETURN C",
      "124651 SET I      null",
      "124653 GET WINDOW PROP      console -> reg20",
      "124658 GET      reg20[log] -> reg13",
      "124664 NEW ARRAY      1 -> reg21",
      "124667 PUSH MEMORY ELEMENT IF INIT      3750 -> reg22",
      "124670 PUT      reg21[0] = reg22",
      "124674 CALL FUNCTION      OBJ: reg20 FUNC: reg13 ARGS: reg21",
      "124678 SET      reg2 -> reg19",
      "124681 PUSH MEMORY ELEMENT IF INIT      3747 -> reg13",
      "124684 PUSH MEMORY ELEMENT IF INIT      3748 -> reg21",
      "124687 GET      reg21[join] -> reg23",
      "124693 NEW ARRAY      1 -> reg22",
      "124696 PUT      reg22[0] = ,",
      "124702 CALL FUNCTION      OBJ: reg21 FUNC: reg23 ARGS: reg22",
      "124706 SET      reg2 -> reg19",
      "124709 PUT      reg13[_evt] = reg19",
      "124715 PUSH MEMORY ELEMENT IF INIT      3747 -> reg13",
      "124718 PUSH MEMORY ELEMENT IF INIT      3749 -> reg23",
      "124721 GET      reg23[join] -> reg22",
      "124727 NEW ARRAY      1 -> reg24",
      "124730 PUT      reg24[0] = ,",
      "124736 CALL FUNCTION      OBJ: reg23 FUNC: reg22 ARGS: reg24",
      "124740 SET      reg2 -> reg19",
      "124743 PUT      reg13[_p] = reg19",
      "124749 EMPTY OBJECT      -> reg13",
      "124751 EMPTY OBJECT      -> reg19",
      "124753 PUT      reg19[verdict] = false",
      "124759 PUSH MEMORY ELEMENT IF INIT      280 -> reg25",
      "124762 GET      reg25[stringify] -> reg28",
      "124768 NEW ARRAY      1 -> reg24",
      "124771 PUSH MEMORY ELEMENT IF INIT      3747 -> reg27",
      "124774 PUT      reg24[0] = reg27",
      "124778 CALL FUNCTION      OBJ: reg25 FUNC: reg28 ARGS: reg24",
      "124782 SET      reg2 -> reg22",
      "124785 PUT      reg19[raw] = reg22",
      "124791 PUT      reg19[error] = false",
      "124797 PUT      reg13[v] = reg19",
      "124803 JUMP OR RETURN VAL      reg13"
  ],
  "124594": [
      "124594 SET I      124628",
      "124596 PUSH F.K      -> reg13",
      "124598 VOID F",
      "124599 SET MEMORY ELEMENT      0 = reg13",
      "124602 PUSH MEMORY ELEMENT IF INIT      3756 -> reg15",
      "124605 GET      reg15[e] -> reg18",
      "124611 NEW ARRAY      1 -> reg21",
      "124614 PUSH MEMORY ELEMENT IF INIT      0 -> reg19",
      "124617 PUT      reg21[0] = reg19",
      "124621 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg21",
      "124625 SET      reg2 -> reg13",
      "124628 SET I      null",
      "124630 SET N      null",
      "124632 PUSH MEMORY ELEMENT IF INIT      3756 -> reg18",
      "124635 GET      reg18[f] -> reg19",
      "124641 EMPTY ARRAY      -> reg20",
      "124643 CALL FUNCTION      OBJ: reg18 FUNC: reg19 ARGS: reg20",
      "124647 SET      reg2 -> reg13",
      "124650 HANDLE TRACE OR JUMP OR RETURN C",
      "124651 SET I      null",
      "124653 GET WINDOW PROP      console -> reg20",
      "124658 GET      reg20[log] -> reg13",
      "124664 NEW ARRAY      1 -> reg21",
      "124667 PUSH MEMORY ELEMENT IF INIT      3750 -> reg22",
      "124670 PUT      reg21[0] = reg22",
      "124674 CALL FUNCTION      OBJ: reg20 FUNC: reg13 ARGS: reg21",
      "124678 SET      reg2 -> reg19",
      "124681 PUSH MEMORY ELEMENT IF INIT      3747 -> reg13",
      "124684 PUSH MEMORY ELEMENT IF INIT      3748 -> reg21",
      "124687 GET      reg21[join] -> reg23",
      "124693 NEW ARRAY      1 -> reg22",
      "124696 PUT      reg22[0] = ,",
      "124702 CALL FUNCTION      OBJ: reg21 FUNC: reg23 ARGS: reg22",
      "124706 SET      reg2 -> reg19",
      "124709 PUT      reg13[_evt] = reg19",
      "124715 PUSH MEMORY ELEMENT IF INIT      3747 -> reg13",
      "124718 PUSH MEMORY ELEMENT IF INIT      3749 -> reg23",
      "124721 GET      reg23[join] -> reg22",
      "124727 NEW ARRAY      1 -> reg24",
      "124730 PUT      reg24[0] = ,",
      "124736 CALL FUNCTION      OBJ: reg23 FUNC: reg22 ARGS: reg24",
      "124740 SET      reg2 -> reg19",
      "124743 PUT      reg13[_p] = reg19",
      "124749 EMPTY OBJECT      -> reg13",
      "124751 EMPTY OBJECT      -> reg19",
      "124753 PUT      reg19[verdict] = false",
      "124759 PUSH MEMORY ELEMENT IF INIT      280 -> reg25",
      "124762 GET      reg25[stringify] -> reg28",
      "124768 NEW ARRAY      1 -> reg24",
      "124771 PUSH MEMORY ELEMENT IF INIT      3747 -> reg27",
      "124774 PUT      reg24[0] = reg27",
      "124778 CALL FUNCTION      OBJ: reg25 FUNC: reg28 ARGS: reg24",
      "124782 SET      reg2 -> reg22",
      "124785 PUT      reg19[raw] = reg22",
      "124791 PUT      reg19[error] = false",
      "124797 PUT      reg13[v] = reg19",
      "124803 JUMP OR RETURN VAL      reg13"
  ],
  "124628": [
      "124628 SET I      null",
      "124630 SET N      null",
      "124632 PUSH MEMORY ELEMENT IF INIT      3756 -> reg18",
      "124635 GET      reg18[f] -> reg19",
      "124641 EMPTY ARRAY      -> reg20",
      "124643 CALL FUNCTION      OBJ: reg18 FUNC: reg19 ARGS: reg20",
      "124647 SET      reg2 -> reg13",
      "124650 HANDLE TRACE OR JUMP OR RETURN C",
      "124651 SET I      null",
      "124653 GET WINDOW PROP      console -> reg20",
      "124658 GET      reg20[log] -> reg13",
      "124664 NEW ARRAY      1 -> reg21",
      "124667 PUSH MEMORY ELEMENT IF INIT      3750 -> reg22",
      "124670 PUT      reg21[0] = reg22",
      "124674 CALL FUNCTION      OBJ: reg20 FUNC: reg13 ARGS: reg21",
      "124678 SET      reg2 -> reg19",
      "124681 PUSH MEMORY ELEMENT IF INIT      3747 -> reg13",
      "124684 PUSH MEMORY ELEMENT IF INIT      3748 -> reg21",
      "124687 GET      reg21[join] -> reg23",
      "124693 NEW ARRAY      1 -> reg22",
      "124696 PUT      reg22[0] = ,",
      "124702 CALL FUNCTION      OBJ: reg21 FUNC: reg23 ARGS: reg22",
      "124706 SET      reg2 -> reg19",
      "124709 PUT      reg13[_evt] = reg19",
      "124715 PUSH MEMORY ELEMENT IF INIT      3747 -> reg13",
      "124718 PUSH MEMORY ELEMENT IF INIT      3749 -> reg23",
      "124721 GET      reg23[join] -> reg22",
      "124727 NEW ARRAY      1 -> reg24",
      "124730 PUT      reg24[0] = ,",
      "124736 CALL FUNCTION      OBJ: reg23 FUNC: reg22 ARGS: reg24",
      "124740 SET      reg2 -> reg19",
      "124743 PUT      reg13[_p] = reg19",
      "124749 EMPTY OBJECT      -> reg13",
      "124751 EMPTY OBJECT      -> reg19",
      "124753 PUT      reg19[verdict] = false",
      "124759 PUSH MEMORY ELEMENT IF INIT      280 -> reg25",
      "124762 GET      reg25[stringify] -> reg28",
      "124768 NEW ARRAY      1 -> reg24",
      "124771 PUSH MEMORY ELEMENT IF INIT      3747 -> reg27",
      "124774 PUT      reg24[0] = reg27",
      "124778 CALL FUNCTION      OBJ: reg25 FUNC: reg28 ARGS: reg24",
      "124782 SET      reg2 -> reg22",
      "124785 PUT      reg19[raw] = reg22",
      "124791 PUT      reg19[error] = false",
      "124797 PUT      reg13[v] = reg19",
      "124803 JUMP OR RETURN VAL      reg13"
  ],
  "124832": [
      "124832 PUSH MEMORY ELEMENT IF INIT      3743 -> reg6",
      "124835 GET      reg6[v] -> reg4",
      "124841 JUMP OR RETURN VAL      reg4"
  ],
  "124843": [
      "124843 JUMP      124893",
      "124893 SET I      null",
      "124895 JUMP OR RETURN"
  ],
  "124845": [
      "124845 SET I      null",
      "124847 PUSH F.K      -> reg4",
      "124849 VOID F",
      "124850 SET MEMORY ELEMENT      0 = reg4",
      "124853 EMPTY OBJECT      -> reg4",
      "124855 PUT      reg4[verdict] = false",
      "124861 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "124864 GET      reg6[toString] -> reg9",
      "124870 EMPTY ARRAY      -> reg7",
      "124872 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg7",
      "124876 SET      reg2 -> reg5",
      "124879 PUT      reg4[raw] = reg5",
      "124885 PUT      reg4[error] = true",
      "124891 JUMP OR RETURN VAL      reg4"
  ],
  "124992": [
      "124992 PUSH MEMORY ELEMENT IF INIT      3775 -> reg11",
      "124995 GET      reg11[iw] -> reg4",
      "125001 GREATER THAN      reg4 > 0 -> reg6",
      "125005 SET      reg6 -> reg5",
      "125008 JUMP IF FALSE      reg5 TO: 125045 | 125011"
  ],
  "125008": ["125008 JUMP IF FALSE      reg5 TO: 125045 | 125011"],
  "125011": [
      "125011 PUSH MEMORY ELEMENT IF INIT      3775 -> reg4",
      "125014 GET      reg4[wlh] -> reg7",
      "125020 GET      reg7[includes] -> reg4",
      "125026 NEW ARRAY      1 -> reg8",
      "125029 PUT      reg8[0] = /fp",
      "125035 CALL FUNCTION      OBJ: reg7 FUNC: reg4 ARGS: reg8",
      "125039 SET      reg2 -> reg6",
      "125042 SET      reg6 -> reg5",
      "125045 SET MEMORY ELEMENT IF INIT      3776 = reg5",
      "125048 EMPTY OBJECT      -> reg4",
      "125050 PUSH MEMORY ELEMENT IF INIT      3776 -> reg6",
      "125053 PUT      reg4[verdict] = reg6",
      "125059 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "125062 GET      reg10[stringify] -> reg8",
      "125068 NEW ARRAY      1 -> reg6",
      "125071 PUSH MEMORY ELEMENT IF INIT      3775 -> reg12",
      "125074 PUT      reg6[0] = reg12",
      "125078 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg6",
      "125082 SET      reg2 -> reg5",
      "125085 PUT      reg4[raw] = reg5",
      "125091 PUT      reg4[error] = false",
      "125097 JUMP OR RETURN VAL      reg4"
  ],
  "125045": [
      "125045 SET MEMORY ELEMENT IF INIT      3776 = reg5",
      "125048 EMPTY OBJECT      -> reg4",
      "125050 PUSH MEMORY ELEMENT IF INIT      3776 -> reg6",
      "125053 PUT      reg4[verdict] = reg6",
      "125059 PUSH MEMORY ELEMENT IF INIT      280 -> reg10",
      "125062 GET      reg10[stringify] -> reg8",
      "125068 NEW ARRAY      1 -> reg6",
      "125071 PUSH MEMORY ELEMENT IF INIT      3775 -> reg12",
      "125074 PUT      reg6[0] = reg12",
      "125078 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg6",
      "125082 SET      reg2 -> reg5",
      "125085 PUT      reg4[raw] = reg5",
      "125091 PUT      reg4[error] = false",
      "125097 JUMP OR RETURN VAL      reg4"
  ],
  "125101": [
      "125101 SET I      null",
      "125103 PUSH F.K      -> reg4",
      "125105 VOID F",
      "125106 SET MEMORY ELEMENT      0 = reg4",
      "125109 EMPTY OBJECT      -> reg5",
      "125111 PUT      reg5[verdict] = false",
      "125117 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "125120 GET      reg6[toString] -> reg8",
      "125126 EMPTY ARRAY      -> reg12",
      "125128 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg12",
      "125132 SET      reg2 -> reg4",
      "125135 PUT      reg5[raw] = reg4",
      "125141 PUT      reg5[error] = true",
      "125147 JUMP OR RETURN VAL      reg5"
  ],
  "125269": [
      "125269 SET I      null",
      "125271 PUSH F.K      -> reg4",
      "125273 VOID F",
      "125274 SET MEMORY ELEMENT      0 = reg4",
      "125277 EMPTY OBJECT      -> reg4",
      "125279 PUT      reg4[verdict] = false",
      "125285 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "125288 GET      reg5[toString] -> reg9",
      "125294 EMPTY ARRAY      -> reg10",
      "125296 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg10",
      "125300 SET      reg2 -> reg7",
      "125303 PUT      reg4[raw] = reg7",
      "125309 PUT      reg4[error] = true",
      "125315 JUMP OR RETURN VAL      reg4"
  ],
  "125515": [
      "125515 SET      0 -> reg7",
      "125518 GET      reg4[reg7] -> reg6",
      "125522 SET MEMORY ELEMENT IF INIT      3785 = reg6",
      "125525 PUSH MEMORY ELEMENT IF INIT      3784 -> reg8",
      "125528 PUSH MEMORY ELEMENT IF INIT      3785 -> reg10",
      "125531 GET      reg8[reg10] -> reg5",
      "125535 SET MEMORY ELEMENT IF INIT      3786 = reg5",
      "125538 SET MEMORY ELEMENT IF INIT      3787 = 0",
      "125541 GET WINDOW PROP      Object -> reg8",
      "125546 GET      reg8[keys] -> reg14",
      "125552 NEW ARRAY      1 -> reg10",
      "125555 PUSH MEMORY ELEMENT IF INIT      3786 -> reg11",
      "125558 PUT      reg10[0] = reg11",
      "125562 CALL FUNCTION      OBJ: reg8 FUNC: reg14 ARGS: reg10",
      "125566 SET      reg2 -> reg5",
      "125569 SET MEMORY ELEMENT IF INIT      3788 = reg5",
      "125572 PUSH MEMORY ELEMENT IF INIT      3787 -> reg5",
      "125575 PUSH MEMORY ELEMENT IF INIT      3788 -> reg10",
      "125578 GET      reg10[length] -> reg11",
      "125584 LESS THAN      reg5 < reg11 -> reg12",
      "125588 JUMP IF FALSE      reg12 TO: 125899 | 125591"
  ],
  "125518": [
      "125518 GET      reg4[reg7] -> reg6",
      "125522 SET MEMORY ELEMENT IF INIT      3785 = reg6",
      "125525 PUSH MEMORY ELEMENT IF INIT      3784 -> reg8",
      "125528 PUSH MEMORY ELEMENT IF INIT      3785 -> reg10",
      "125531 GET      reg8[reg10] -> reg5",
      "125535 SET MEMORY ELEMENT IF INIT      3786 = reg5",
      "125538 SET MEMORY ELEMENT IF INIT      3787 = 0",
      "125541 GET WINDOW PROP      Object -> reg8",
      "125546 GET      reg8[keys] -> reg14",
      "125552 NEW ARRAY      1 -> reg10",
      "125555 PUSH MEMORY ELEMENT IF INIT      3786 -> reg11",
      "125558 PUT      reg10[0] = reg11",
      "125562 CALL FUNCTION      OBJ: reg8 FUNC: reg14 ARGS: reg10",
      "125566 SET      reg2 -> reg5",
      "125569 SET MEMORY ELEMENT IF INIT      3788 = reg5",
      "125572 PUSH MEMORY ELEMENT IF INIT      3787 -> reg5",
      "125575 PUSH MEMORY ELEMENT IF INIT      3788 -> reg10",
      "125578 GET      reg10[length] -> reg11",
      "125584 LESS THAN      reg5 < reg11 -> reg12",
      "125588 JUMP IF FALSE      reg12 TO: 125899 | 125591"
  ],
  "125591": [
      "125591 PUSH MEMORY ELEMENT IF INIT      3788 -> reg10",
      "125594 PUSH MEMORY ELEMENT IF INIT      3787 -> reg11",
      "125597 GET      reg10[reg11] -> reg5",
      "125601 SET MEMORY ELEMENT IF INIT      3789 = reg5",
      "125604 GET WINDOW PROP      Object -> reg10",
      "125609 GET      reg10[getOwnPropertyDescriptor] -> reg11",
      "125615 NEW ARRAY      2 -> reg12",
      "125618 PUSH MEMORY ELEMENT IF INIT      3786 -> reg13",
      "125621 PUT      reg12[0] = reg13",
      "125625 PUSH MEMORY ELEMENT IF INIT      3789 -> reg13",
      "125628 PUT      reg12[1] = reg13",
      "125632 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "125636 SET      reg2 -> reg5",
      "125639 SET MEMORY ELEMENT IF INIT      3790 = reg5",
      "125642 PUSH MEMORY ELEMENT IF INIT      3790 -> reg5",
      "125645 IN      value inreg5 -> reg11",
      "125651 JUMP IF FALSE      reg11 TO: 125675 | 125654"
  ],
  "125654": [
      "125654 PUSH MEMORY ELEMENT IF INIT      3790 -> reg5",
      "125657 GET      reg5[value] -> reg13",
      "125663 TYPEOF      reg13 -> reg5",
      "125666 STRICT EQUAL      reg5 === function -> reg12",
      "125672 SET      reg12 -> reg11",
      "125675 JUMP IF FALSE      reg11 TO: 125884 | 125678"
  ],
  "125675": ["125675 JUMP IF FALSE      reg11 TO: 125884 | 125678"],
  "125678": [
      "125678 PUSH MEMORY ELEMENT IF INIT      3786 -> reg5",
      "125681 PUSH MEMORY ELEMENT IF INIT      3789 -> reg13",
      "125684 GET      reg5[reg13] -> reg11",
      "125688 GET      reg11[toString] -> reg13",
      "125694 EMPTY ARRAY      -> reg5",
      "125696 CALL FUNCTION      OBJ: reg11 FUNC: reg13 ARGS: reg5",
      "125700 SET      reg2 -> reg12",
      "125703 GET WINDOW PROP      Error -> reg14",
      "125708 GET      reg14[toString] -> reg15",
      "125714 EMPTY ARRAY      -> reg16",
      "125716 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg16",
      "125720 SET      reg2 -> reg13",
      "125723 GET      reg13[replace] -> reg16",
      "125729 NEW ARRAY      2 -> reg17",
      "125732 NEW REGEXP      Error , g -> reg15",
      "125740 PUT      reg17[0] = reg15",
      "125744 PUSH MEMORY ELEMENT IF INIT      3789 -> reg15",
      "125747 PUT      reg17[1] = reg15",
      "125751 CALL FUNCTION      OBJ: reg13 FUNC: reg16 ARGS: reg17",
      "125755 SET      reg2 -> reg5",
      "125758 STRICT NOT EQUAL      reg12 !== reg5 -> reg16",
      "125762 JUMP IF FALSE      reg16 TO: 125884 | 125765"
  ],
  "125765": [
      "125765 PUSH MEMORY ELEMENT IF INIT      3783 -> reg15",
      "125768 PUSH MEMORY ELEMENT IF INIT      3785 -> reg5",
      "125771 PUSH MEMORY ELEMENT IF INIT      3783 -> reg12",
      "125774 PUSH MEMORY ELEMENT IF INIT      3785 -> reg17",
      "125777 GET      reg12[reg17] -> reg16",
      "125781 JUMP IF TRUE      reg16 TO: 125789 | 125784"
  ],
  "125784": [
      "125784 EMPTY OBJECT      -> reg12",
      "125786 SET      reg12 -> reg16",
      "125789 PUT      reg15[reg5] = reg16",
      "125793 PUSH MEMORY ELEMENT IF INIT      3783 -> reg5",
      "125796 PUSH MEMORY ELEMENT IF INIT      3785 -> reg15",
      "125799 GET      reg5[reg15] -> reg12",
      "125803 PUSH MEMORY ELEMENT IF INIT      3789 -> reg5",
      "125806 PUSH MEMORY ELEMENT IF INIT      3786 -> reg16",
      "125809 PUSH MEMORY ELEMENT IF INIT      3789 -> reg21",
      "125812 GET      reg16[reg21] -> reg18",
      "125816 GET      reg18[toString] -> reg16",
      "125822 EMPTY ARRAY      -> reg19",
      "125824 CALL FUNCTION      OBJ: reg18 FUNC: reg16 ARGS: reg19",
      "125828 SET      reg2 -> reg17",
      "125831 GET      reg17[substr] -> reg16",
      "125837 NEW ARRAY      2 -> reg20",
      "125840 PUT      reg20[0] = 0",
      "125844 PUT      reg20[1] = 100",
      "125848 CALL FUNCTION      OBJ: reg17 FUNC: reg16 ARGS: reg20",
      "125852 SET      reg2 -> reg15",
      "125855 PUT      reg12[reg5] = reg15",
      "125859 PUSH MEMORY ELEMENT IF INIT      3783 -> reg5",
      "125862 GET      reg5[count] -> reg12",
      "125868 SET      reg12 -> reg5",
      "125871 ADD      reg121-> reg12",
      "125875 PUSH MEMORY ELEMENT IF INIT      3783 -> reg15",
      "125878 PUT      reg15[count] = reg12",
      "125884 PUSH MEMORY ELEMENT IF INIT      3787 -> reg5",
      "125887 SET      reg5 -> reg12",
      "125890 ADD      reg51-> reg5",
      "125894 SET MEMORY ELEMENT IF INIT      3787 = reg5",
      "125897 JUMP      125572",
      "125572 PUSH MEMORY ELEMENT IF INIT      3787 -> reg5",
      "125575 PUSH MEMORY ELEMENT IF INIT      3788 -> reg10",
      "125578 GET      reg10[length] -> reg11",
      "125584 LESS THAN      reg5 < reg11 -> reg12",
      "125588 JUMP IF FALSE      reg12 TO: 125899 | 125591"
  ],
  "125789": [
      "125789 PUT      reg15[reg5] = reg16",
      "125793 PUSH MEMORY ELEMENT IF INIT      3783 -> reg5",
      "125796 PUSH MEMORY ELEMENT IF INIT      3785 -> reg15",
      "125799 GET      reg5[reg15] -> reg12",
      "125803 PUSH MEMORY ELEMENT IF INIT      3789 -> reg5",
      "125806 PUSH MEMORY ELEMENT IF INIT      3786 -> reg16",
      "125809 PUSH MEMORY ELEMENT IF INIT      3789 -> reg21",
      "125812 GET      reg16[reg21] -> reg18",
      "125816 GET      reg18[toString] -> reg16",
      "125822 EMPTY ARRAY      -> reg19",
      "125824 CALL FUNCTION      OBJ: reg18 FUNC: reg16 ARGS: reg19",
      "125828 SET      reg2 -> reg17",
      "125831 GET      reg17[substr] -> reg16",
      "125837 NEW ARRAY      2 -> reg20",
      "125840 PUT      reg20[0] = 0",
      "125844 PUT      reg20[1] = 100",
      "125848 CALL FUNCTION      OBJ: reg17 FUNC: reg16 ARGS: reg20",
      "125852 SET      reg2 -> reg15",
      "125855 PUT      reg12[reg5] = reg15",
      "125859 PUSH MEMORY ELEMENT IF INIT      3783 -> reg5",
      "125862 GET      reg5[count] -> reg12",
      "125868 SET      reg12 -> reg5",
      "125871 ADD      reg121-> reg12",
      "125875 PUSH MEMORY ELEMENT IF INIT      3783 -> reg15",
      "125878 PUT      reg15[count] = reg12",
      "125884 PUSH MEMORY ELEMENT IF INIT      3787 -> reg5",
      "125887 SET      reg5 -> reg12",
      "125890 ADD      reg51-> reg5",
      "125894 SET MEMORY ELEMENT IF INIT      3787 = reg5",
      "125897 JUMP      125572",
      "125572 PUSH MEMORY ELEMENT IF INIT      3787 -> reg5",
      "125575 PUSH MEMORY ELEMENT IF INIT      3788 -> reg10",
      "125578 GET      reg10[length] -> reg11",
      "125584 LESS THAN      reg5 < reg11 -> reg12",
      "125588 JUMP IF FALSE      reg12 TO: 125899 | 125591"
  ],
  "125884": [
      "125884 PUSH MEMORY ELEMENT IF INIT      3787 -> reg5",
      "125887 SET      reg5 -> reg12",
      "125890 ADD      reg51-> reg5",
      "125894 SET MEMORY ELEMENT IF INIT      3787 = reg5",
      "125897 JUMP      125572",
      "125572 PUSH MEMORY ELEMENT IF INIT      3787 -> reg5",
      "125575 PUSH MEMORY ELEMENT IF INIT      3788 -> reg10",
      "125578 GET      reg10[length] -> reg11",
      "125584 LESS THAN      reg5 < reg11 -> reg12",
      "125588 JUMP IF FALSE      reg12 TO: 125899 | 125591"
  ],
  "125899": [
      "125899 ADD      reg71-> reg7",
      "125903 LESS THAN      reg7 < reg9 -> reg5",
      "125907 JUMP IF TRUE      reg5 TO: 125518 | 125910"
  ],
  "125910": [
      "125910 EMPTY OBJECT      -> reg4",
      "125912 PUT      reg4[verdict] = false",
      "125918 PUSH MEMORY ELEMENT IF INIT      280 -> reg5",
      "125921 GET      reg5[stringify] -> reg9",
      "125927 NEW ARRAY      1 -> reg12",
      "125930 PUSH MEMORY ELEMENT IF INIT      3783 -> reg7",
      "125933 PUT      reg12[0] = reg7",
      "125937 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg12",
      "125941 SET      reg2 -> reg6",
      "125944 PUT      reg4[raw] = reg6",
      "125950 PUT      reg4[error] = false",
      "125956 JUMP OR RETURN VAL      reg4"
  ],
  "125960": [
      "125960 SET I      null",
      "125962 PUSH F.K      -> reg4",
      "125964 VOID F",
      "125965 SET MEMORY ELEMENT      0 = reg4",
      "125968 EMPTY OBJECT      -> reg4",
      "125970 PUT      reg4[verdict] = false",
      "125976 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "125979 GET      reg7[toString] -> reg12",
      "125985 EMPTY ARRAY      -> reg9",
      "125987 CALL FUNCTION      OBJ: reg7 FUNC: reg12 ARGS: reg9",
      "125991 SET      reg2 -> reg6",
      "125994 PUT      reg4[raw] = reg6",
      "126000 PUT      reg4[error] = true",
      "126006 JUMP OR RETURN VAL      reg4"
  ],
  "126113": [
      "126113 PUSH MEMORY ELEMENT IF INIT      3800 -> reg4",
      "126116 GET      reg4[v] -> reg6",
      "126122 STRICT EQUAL      reg6 === Google Inc. -> reg4",
      "126128 SET      reg4 -> reg8",
      "126131 JUMP IF FALSE      reg8 TO: 126137 | 126134"
  ],
  "126131": ["126131 JUMP IF FALSE      reg8 TO: 126137 | 126134"],
  "126134": [
      "126134 SET MEMORY ELEMENT IF INIT      3799 = true",
      "126137 EMPTY OBJECT      -> reg4",
      "126139 PUSH MEMORY ELEMENT IF INIT      3799 -> reg6",
      "126142 PUT      reg4[verdict] = reg6",
      "126148 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "126151 GET      reg6[stringify] -> reg9",
      "126157 NEW ARRAY      1 -> reg10",
      "126160 PUSH MEMORY ELEMENT IF INIT      3800 -> reg13",
      "126163 PUT      reg10[0] = reg13",
      "126167 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg10",
      "126171 SET      reg2 -> reg8",
      "126174 PUT      reg4[raw] = reg8",
      "126180 PUT      reg4[error] = false",
      "126186 JUMP OR RETURN VAL      reg4"
  ],
  "126137": [
      "126137 EMPTY OBJECT      -> reg4",
      "126139 PUSH MEMORY ELEMENT IF INIT      3799 -> reg6",
      "126142 PUT      reg4[verdict] = reg6",
      "126148 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "126151 GET      reg6[stringify] -> reg9",
      "126157 NEW ARRAY      1 -> reg10",
      "126160 PUSH MEMORY ELEMENT IF INIT      3800 -> reg13",
      "126163 PUT      reg10[0] = reg13",
      "126167 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg10",
      "126171 SET      reg2 -> reg8",
      "126174 PUT      reg4[raw] = reg8",
      "126180 PUT      reg4[error] = false",
      "126186 JUMP OR RETURN VAL      reg4"
  ],
  "126190": [
      "126190 SET I      null",
      "126192 PUSH F.K      -> reg4",
      "126194 VOID F",
      "126195 SET MEMORY ELEMENT      0 = reg4",
      "126198 EMPTY OBJECT      -> reg4",
      "126200 PUT      reg4[verdict] = false",
      "126206 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "126209 GET      reg9[toString] -> reg7",
      "126215 EMPTY ARRAY      -> reg10",
      "126217 CALL FUNCTION      OBJ: reg9 FUNC: reg7 ARGS: reg10",
      "126221 SET      reg2 -> reg8",
      "126224 PUT      reg4[raw] = reg8",
      "126230 PUT      reg4[error] = true",
      "126236 JUMP OR RETURN VAL      reg4"
  ],
  "126315": [
      "126315 EMPTY OBJECT      -> reg5",
      "126317 SET      reg5 -> reg4",
      "126320 SET MEMORY ELEMENT IF INIT      3807 = reg4",
      "126323 JUMP      126374",
      "126374 SET I      null",
      "126376 SET I      126752",
      "126378 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126381 GET      reg5[raw] -> reg7",
      "126387 TYPEOF      reg7 -> reg5",
      "126390 STRICT NOT EQUAL      reg5 !== string -> reg9",
      "126396 JUMP IF FALSE      reg9 TO: 126440 | 126399"
  ],
  "126320": [
      "126320 SET MEMORY ELEMENT IF INIT      3807 = reg4",
      "126323 JUMP      126374",
      "126374 SET I      null",
      "126376 SET I      126752",
      "126378 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126381 GET      reg5[raw] -> reg7",
      "126387 TYPEOF      reg7 -> reg5",
      "126390 STRICT NOT EQUAL      reg5 !== string -> reg9",
      "126396 JUMP IF FALSE      reg9 TO: 126440 | 126399"
  ],
  "126325": [
      "126325 SET I      null",
      "126327 PUSH F.K      -> reg4",
      "126329 VOID F",
      "126330 SET MEMORY ELEMENT      0 = reg4",
      "126333 EMPTY OBJECT      -> reg5",
      "126335 PUT      reg5[verdict] = false",
      "126341 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "126344 GET      reg4[toString] -> reg8",
      "126350 EMPTY ARRAY      -> reg9",
      "126352 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg9",
      "126356 SET      reg2 -> reg7",
      "126359 PUT      reg5[raw] = reg7",
      "126365 PUT      reg5[error] = true",
      "126371 SET MEMORY ELEMENT IF INIT      3807 = reg5",
      "126374 SET I      null",
      "126376 SET I      126752",
      "126378 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126381 GET      reg5[raw] -> reg7",
      "126387 TYPEOF      reg7 -> reg5",
      "126390 STRICT NOT EQUAL      reg5 !== string -> reg9",
      "126396 JUMP IF FALSE      reg9 TO: 126440 | 126399"
  ],
  "126399": [
      "126399 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126402 PUSH MEMORY ELEMENT IF INIT      280 -> reg9",
      "126405 GET      reg9[stringify] -> reg8",
      "126411 NEW ARRAY      1 -> reg10",
      "126414 PUSH MEMORY ELEMENT IF INIT      3807 -> reg11",
      "126417 GET      reg11[raw] -> reg12",
      "126423 PUT      reg10[0] = reg12",
      "126427 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg10",
      "126431 SET      reg2 -> reg7",
      "126434 PUT      reg5[raw] = reg7",
      "126440 EMPTY ARRAY      -> reg5",
      "126442 SET MEMORY ELEMENT IF INIT      3808 = reg5",
      "126445 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126448 GET      reg5[verdict] -> reg7",
      "126454 TYPEOF      reg7 -> reg5",
      "126457 STRICT NOT EQUAL      reg5 !== boolean -> reg8",
      "126463 JUMP IF FALSE      reg8 TO: 126491 | 126466"
  ],
  "126440": [
      "126440 EMPTY ARRAY      -> reg5",
      "126442 SET MEMORY ELEMENT IF INIT      3808 = reg5",
      "126445 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126448 GET      reg5[verdict] -> reg7",
      "126454 TYPEOF      reg7 -> reg5",
      "126457 STRICT NOT EQUAL      reg5 !== boolean -> reg8",
      "126463 JUMP IF FALSE      reg8 TO: 126491 | 126466"
  ],
  "126466": [
      "126466 PUSH MEMORY ELEMENT IF INIT      3808 -> reg10",
      "126469 GET      reg10[push] -> reg7",
      "126475 NEW ARRAY      1 -> reg8",
      "126478 PUT      reg8[0] = v is not boolean",
      "126484 CALL FUNCTION      OBJ: reg10 FUNC: reg7 ARGS: reg8",
      "126488 SET      reg2 -> reg5",
      "126491 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126494 GET      reg5[error] -> reg8",
      "126500 TYPEOF      reg8 -> reg5",
      "126503 STRICT NOT EQUAL      reg5 !== boolean -> reg7",
      "126509 JUMP IF FALSE      reg7 TO: 126537 | 126512"
  ],
  "126491": [
      "126491 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126494 GET      reg5[error] -> reg8",
      "126500 TYPEOF      reg8 -> reg5",
      "126503 STRICT NOT EQUAL      reg5 !== boolean -> reg7",
      "126509 JUMP IF FALSE      reg7 TO: 126537 | 126512"
  ],
  "126512": [
      "126512 PUSH MEMORY ELEMENT IF INIT      3808 -> reg7",
      "126515 GET      reg7[push] -> reg11",
      "126521 NEW ARRAY      1 -> reg8",
      "126524 PUT      reg8[0] = e is not boolean",
      "126530 CALL FUNCTION      OBJ: reg7 FUNC: reg11 ARGS: reg8",
      "126534 SET      reg2 -> reg5",
      "126537 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126540 IN      score inreg5 -> reg8",
      "126546 JUMP IF FALSE      reg8 TO: 126570 | 126549"
  ],
  "126537": [
      "126537 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126540 IN      score inreg5 -> reg8",
      "126546 JUMP IF FALSE      reg8 TO: 126570 | 126549"
  ],
  "126549": [
      "126549 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126552 GET      reg5[score] -> reg11",
      "126558 GET WINDOW PROP      undefined -> reg5",
      "126563 STRICT NOT EQUAL      reg11 !== reg5 -> reg12",
      "126567 SET      reg12 -> reg8",
      "126570 JUMP IF FALSE      reg8 TO: 126594 | 126573"
  ],
  "126570": ["126570 JUMP IF FALSE      reg8 TO: 126594 | 126573"],
  "126573": [
      "126573 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126576 GET      reg5[score] -> reg11",
      "126582 TYPEOF      reg11 -> reg5",
      "126585 STRICT NOT EQUAL      reg5 !== number -> reg12",
      "126591 SET      reg12 -> reg8",
      "126594 JUMP IF FALSE      reg8 TO: 126622 | 126597"
  ],
  "126594": ["126594 JUMP IF FALSE      reg8 TO: 126622 | 126597"],
  "126597": [
      "126597 PUSH MEMORY ELEMENT IF INIT      3808 -> reg8",
      "126600 GET      reg8[push] -> reg11",
      "126606 NEW ARRAY      1 -> reg12",
      "126609 PUT      reg12[0] = score is not numeric",
      "126615 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg12",
      "126619 SET      reg2 -> reg5",
      "126622 PUSH MEMORY ELEMENT IF INIT      3807 -> reg12",
      "126625 GET      reg12[error] -> reg5",
      "126631 STRICT EQUAL      reg5 === true -> reg12",
      "126635 JUMP IF FALSE      reg12 TO: 126654 | 126638"
  ],
  "126622": [
      "126622 PUSH MEMORY ELEMENT IF INIT      3807 -> reg12",
      "126625 GET      reg12[error] -> reg5",
      "126631 STRICT EQUAL      reg5 === true -> reg12",
      "126635 JUMP IF FALSE      reg12 TO: 126654 | 126638"
  ],
  "126638": [
      "126638 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126641 GET      reg5[verdict] -> reg14",
      "126647 STRICT EQUAL      reg14 === true -> reg5",
      "126651 SET      reg5 -> reg12",
      "126654 JUMP IF FALSE      reg12 TO: 126682 | 126657"
  ],
  "126654": ["126654 JUMP IF FALSE      reg12 TO: 126682 | 126657"],
  "126657": [
      "126657 PUSH MEMORY ELEMENT IF INIT      3808 -> reg13",
      "126660 GET      reg13[push] -> reg11",
      "126666 NEW ARRAY      1 -> reg14",
      "126669 PUT      reg14[0] = v and e both true",
      "126675 CALL FUNCTION      OBJ: reg13 FUNC: reg11 ARGS: reg14",
      "126679 SET      reg2 -> reg5",
      "126682 PUSH MEMORY ELEMENT IF INIT      3808 -> reg5",
      "126685 GET      reg5[length] -> reg12",
      "126691 GREATER THAN      reg12 > 0 -> reg5",
      "126695 JUMP IF FALSE      reg5 TO: 126750 | 126698"
  ],
  "126682": [
      "126682 PUSH MEMORY ELEMENT IF INIT      3808 -> reg5",
      "126685 GET      reg5[length] -> reg12",
      "126691 GREATER THAN      reg12 > 0 -> reg5",
      "126695 JUMP IF FALSE      reg5 TO: 126750 | 126698"
  ],
  "126698": [
      "126698 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126701 PUSH MEMORY ELEMENT IF INIT      3808 -> reg14",
      "126704 GET      reg14[join] -> reg15",
      "126710 NEW ARRAY      1 -> reg12",
      "126713 PUT      reg12[0] = ; ",
      "126719 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg12",
      "126723 SET      reg2 -> reg11",
      "126726 PUT      reg5[problems] = reg11",
      "126732 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126735 PUT      reg5[verdict] = false",
      "126741 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126744 PUT      reg5[error] = true",
      "126750 JUMP      126805",
      "126805 SET I      null",
      "126807 PUSH MEMORY ELEMENT IF INIT      3807 -> reg16",
      "126810 GET WINDOW PROP      Date -> reg11",
      "126815 GET      reg11[now] -> reg17",
      "126821 EMPTY ARRAY      -> reg15",
      "126823 CALL FUNCTION      OBJ: reg11 FUNC: reg17 ARGS: reg15",
      "126827 SET      reg2 -> reg5",
      "126830 PUSH MEMORY ELEMENT IF INIT      3806 -> reg17",
      "126833 SUBTRACT      reg5 - reg17 -> reg18",
      "126837 PUT      reg16[time] = reg18",
      "126843 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126846 JUMP OR RETURN VAL      reg5"
  ],
  "126750": [
      "126750 JUMP      126805",
      "126805 SET I      null",
      "126807 PUSH MEMORY ELEMENT IF INIT      3807 -> reg16",
      "126810 GET WINDOW PROP      Date -> reg11",
      "126815 GET      reg11[now] -> reg17",
      "126821 EMPTY ARRAY      -> reg15",
      "126823 CALL FUNCTION      OBJ: reg11 FUNC: reg17 ARGS: reg15",
      "126827 SET      reg2 -> reg5",
      "126830 PUSH MEMORY ELEMENT IF INIT      3806 -> reg17",
      "126833 SUBTRACT      reg5 - reg17 -> reg18",
      "126837 PUT      reg16[time] = reg18",
      "126843 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126846 JUMP OR RETURN VAL      reg5"
  ],
  "126752": [
      "126752 SET I      null",
      "126754 PUSH F.K      -> reg5",
      "126756 VOID F",
      "126757 SET MEMORY ELEMENT      0 = reg5",
      "126760 PUSH MEMORY ELEMENT IF INIT      3807 -> reg11",
      "126763 PUSH MEMORY ELEMENT IF INIT      0 -> reg12",
      "126766 GET      reg12[toString] -> reg15",
      "126772 EMPTY ARRAY      -> reg16",
      "126774 CALL FUNCTION      OBJ: reg12 FUNC: reg15 ARGS: reg16",
      "126778 SET      reg2 -> reg5",
      "126781 PUT      reg11[problems] = reg5",
      "126787 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126790 PUT      reg5[verdict] = false",
      "126796 PUSH MEMORY ELEMENT IF INIT      3807 -> reg11",
      "126799 PUT      reg11[error] = true",
      "126805 SET I      null",
      "126807 PUSH MEMORY ELEMENT IF INIT      3807 -> reg16",
      "126810 GET WINDOW PROP      Date -> reg11",
      "126815 GET      reg11[now] -> reg17",
      "126821 EMPTY ARRAY      -> reg15",
      "126823 CALL FUNCTION      OBJ: reg11 FUNC: reg17 ARGS: reg15",
      "126827 SET      reg2 -> reg5",
      "126830 PUSH MEMORY ELEMENT IF INIT      3806 -> reg17",
      "126833 SUBTRACT      reg5 - reg17 -> reg18",
      "126837 PUT      reg16[time] = reg18",
      "126843 PUSH MEMORY ELEMENT IF INIT      3807 -> reg5",
      "126846 JUMP OR RETURN VAL      reg5"
  ],
  "126879": [
      "126879 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "126882 PUT      reg4[action] = block",
      "126890 PUSH MEMORY ELEMENT IF INIT      3822 -> reg6",
      "126893 JUMP OR RETURN VAL      reg6"
  ],
  "126890": [
      "126890 PUSH MEMORY ELEMENT IF INIT      3822 -> reg6",
      "126893 JUMP OR RETURN VAL      reg6"
  ],
  "126982": [
      "126982 PUSH MEMORY ELEMENT IF INIT      3834 -> reg6",
      "126985 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "126989 JUMP IF FALSE      reg4 TO: 127044 | 126992"
  ],
  "126992": [
      "126992 NEW REGEXP      \\[native code\\]|\\[Command Line API\\] ,  -> reg9",
      "127000 GET      reg9[test] -> reg6",
      "127006 NEW ARRAY      1 -> reg11",
      "127009 PUSH MEMORY ELEMENT IF INIT      3834 -> reg12",
      "127012 GET      reg12[toString] -> reg10",
      "127018 EMPTY ARRAY      -> reg13",
      "127020 CALL FUNCTION      OBJ: reg12 FUNC: reg10 ARGS: reg13",
      "127024 SET      reg2 -> reg8",
      "127027 PUT      reg11[0] = reg8",
      "127031 CALL FUNCTION      OBJ: reg9 FUNC: reg6 ARGS: reg11",
      "127035 SET      reg2 -> reg7",
      "127038 NOT      reg7 -> reg8",
      "127041 SET      reg8 -> reg4",
      "127044 JUMP IF FALSE      reg4 TO: 127067 | 127047"
  ],
  "127044": ["127044 JUMP IF FALSE      reg4 TO: 127067 | 127047"],
  "127047": [
      "127047 PUSH MEMORY ELEMENT IF INIT      3834 -> reg7",
      "127050 GET      reg7[toString] -> reg4",
      "127056 EMPTY ARRAY      -> reg8",
      "127058 CALL FUNCTION      OBJ: reg7 FUNC: reg4 ARGS: reg8",
      "127062 SET      reg2 -> reg6",
      "127065 JUMP OR RETURN VAL      reg6"
  ],
  "127067": [
      "127067 GET WINDOW PROP      undefined -> reg4",
      "127072 JUMP OR RETURN VAL      reg4"
  ],
  "127076": [
      "127076 EQUAL      reg5 == object -> reg4",
      "127082 JUMP IF FALSE      reg4 TO: 127115 | 127085"
  ],
  "127085": [
      "127085 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "127088 GET      reg8[stringify] -> reg6",
      "127094 NEW ARRAY      1 -> reg10",
      "127097 PUSH MEMORY ELEMENT IF INIT      3834 -> reg11",
      "127100 PUT      reg10[0] = reg11",
      "127104 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg10",
      "127108 SET      reg2 -> reg4",
      "127111 JUMP OR RETURN VAL      reg4"
  ],
  "127115": [
      "127115 EQUAL      reg5 == undefined -> reg6",
      "127121 JUMP IF FALSE      reg6 TO: 127133 | 127124"
  ],
  "127124": [
      "127124 GET WINDOW PROP      undefined -> reg4",
      "127129 JUMP OR RETURN VAL      reg4"
  ],
  "127133": [
      "127133 PUSH MEMORY ELEMENT IF INIT      3834 -> reg10",
      "127136 GET      reg10[toString] -> reg6",
      "127142 EMPTY ARRAY      -> reg11",
      "127144 CALL FUNCTION      OBJ: reg10 FUNC: reg6 ARGS: reg11",
      "127148 SET      reg2 -> reg4",
      "127151 JUMP OR RETURN VAL      reg4"
  ],
  "127155": [
      "127155 SET I      null",
      "127157 PUSH F.K      -> reg4",
      "127159 VOID F",
      "127160 SET MEMORY ELEMENT      0 = reg4",
      "127163 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "127166 GET      reg5[toString] -> reg6",
      "127172 EMPTY ARRAY      -> reg15",
      "127174 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg15",
      "127178 SET      reg2 -> reg4",
      "127181 ADD      error: NaN-> reg6",
      "127187 JUMP OR RETURN VAL      reg6"
  ],
  "127288": [
      "127288 PUSH MEMORY ELEMENT IF INIT      3844 -> reg4",
      "127291 PUSH MEMORY ELEMENT IF INIT      3843 -> reg7",
      "127294 GET      reg4[reg7] -> reg6",
      "127298 SET MEMORY ELEMENT IF INIT      3845 = reg6",
      "127301 PUSH MEMORY ELEMENT IF INIT      3830 -> reg4",
      "127304 NEW ARRAY      1 -> reg7",
      "127307 PUSH MEMORY ELEMENT IF INIT      3840 -> reg8",
      "127310 PUSH MEMORY ELEMENT IF INIT      3845 -> reg10",
      "127313 GET      reg8[reg10] -> reg9",
      "127317 PUT      reg7[0] = reg9",
      "127321 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "127325 SET      reg2 -> reg6",
      "127328 SET MEMORY ELEMENT IF INIT      3846 = reg6",
      "127331 PUSH MEMORY ELEMENT IF INIT      3846 -> reg4",
      "127334 GET WINDOW PROP      undefined -> reg6",
      "127339 STRICT NOT EQUAL      reg4 !== reg6 -> reg7",
      "127343 JUMP IF FALSE      reg7 TO: 127382 | 127346"
  ],
  "127346": [
      "127346 PUSH MEMORY ELEMENT IF INIT      3841 -> reg4",
      "127349 PUSH MEMORY ELEMENT IF INIT      3840 -> reg6",
      "127352 PUSH MEMORY ELEMENT IF INIT      3845 -> reg7",
      "127355 GET      reg6[reg7] -> reg8",
      "127359 TYPEOF      reg8 -> reg6",
      "127362 ADD      reg6NaN-> reg10",
      "127368 PUSH MEMORY ELEMENT IF INIT      3845 -> reg6",
      "127371 ADD      reg10NaN-> reg7",
      "127375 PUSH MEMORY ELEMENT IF INIT      3846 -> reg6",
      "127378 PUT      reg4[reg7] = reg6",
      "127382 PUSH MEMORY ELEMENT IF INIT      3843 -> reg4",
      "127385 SET      reg4 -> reg8",
      "127388 ADD      reg41-> reg4",
      "127392 SET MEMORY ELEMENT IF INIT      3843 = reg4",
      "127395 JUMP      127269",
      "127269 PUSH MEMORY ELEMENT IF INIT      3843 -> reg4",
      "127272 PUSH MEMORY ELEMENT IF INIT      3844 -> reg6",
      "127275 GET      reg6[length] -> reg8",
      "127281 LESS THAN      reg4 < reg8 -> reg6",
      "127285 JUMP IF FALSE      reg6 TO: 127397 | 127288"
  ],
  "127382": [
      "127382 PUSH MEMORY ELEMENT IF INIT      3843 -> reg4",
      "127385 SET      reg4 -> reg8",
      "127388 ADD      reg41-> reg4",
      "127392 SET MEMORY ELEMENT IF INIT      3843 = reg4",
      "127395 JUMP      127269",
      "127269 PUSH MEMORY ELEMENT IF INIT      3843 -> reg4",
      "127272 PUSH MEMORY ELEMENT IF INIT      3844 -> reg6",
      "127275 GET      reg6[length] -> reg8",
      "127281 LESS THAN      reg4 < reg8 -> reg6",
      "127285 JUMP IF FALSE      reg6 TO: 127397 | 127288"
  ],
  "127397": [
      "127397 GET WINDOW PROP      Object -> reg7",
      "127402 GET      reg7[getOwnPropertyDescriptors] -> reg6",
      "127408 NEW ARRAY      1 -> reg10",
      "127411 PUSH MEMORY ELEMENT IF INIT      3840 -> reg8",
      "127414 PUT      reg10[0] = reg8",
      "127418 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg10",
      "127422 SET      reg2 -> reg4",
      "127425 COPY ENUMERABLE      reg4 -> reg6",
      "127428 GET      reg6[length] -> reg8",
      "127434 EQUAL      reg8 == 0 -> reg10",
      "127438 JUMP IF TRUE      reg10 TO: 127573 | 127441"
  ],
  "127441": [
      "127441 SET      0 -> reg10",
      "127444 GET      reg6[reg10] -> reg4",
      "127448 SET MEMORY ELEMENT IF INIT      3847 = reg4",
      "127451 GET WINDOW PROP      Object -> reg13",
      "127456 GET      reg13[getOwnPropertyDescriptor] -> reg11",
      "127462 NEW ARRAY      2 -> reg12",
      "127465 PUSH MEMORY ELEMENT IF INIT      3840 -> reg15",
      "127468 PUT      reg12[0] = reg15",
      "127472 PUSH MEMORY ELEMENT IF INIT      3847 -> reg14",
      "127475 PUT      reg12[1] = reg14",
      "127479 CALL FUNCTION      OBJ: reg13 FUNC: reg11 ARGS: reg12",
      "127483 SET      reg2 -> reg9",
      "127486 GET      reg9[value] -> reg11",
      "127492 SET MEMORY ELEMENT IF INIT      3848 = reg11",
      "127495 PUSH MEMORY ELEMENT IF INIT      3830 -> reg11",
      "127498 NEW ARRAY      1 -> reg12",
      "127501 PUSH MEMORY ELEMENT IF INIT      3848 -> reg14",
      "127504 PUT      reg12[0] = reg14",
      "127508 CALL FUNCTION      PTR: reg11 MEM: reg12",
      "127512 SET      reg2 -> reg9",
      "127515 SET MEMORY ELEMENT IF INIT      3849 = reg9",
      "127518 PUSH MEMORY ELEMENT IF INIT      3849 -> reg9",
      "127521 GET WINDOW PROP      undefined -> reg11",
      "127526 STRICT NOT EQUAL      reg9 !== reg11 -> reg12",
      "127530 JUMP IF FALSE      reg12 TO: 127562 | 127533"
  ],
  "127444": [
      "127444 GET      reg6[reg10] -> reg4",
      "127448 SET MEMORY ELEMENT IF INIT      3847 = reg4",
      "127451 GET WINDOW PROP      Object -> reg13",
      "127456 GET      reg13[getOwnPropertyDescriptor] -> reg11",
      "127462 NEW ARRAY      2 -> reg12",
      "127465 PUSH MEMORY ELEMENT IF INIT      3840 -> reg15",
      "127468 PUT      reg12[0] = reg15",
      "127472 PUSH MEMORY ELEMENT IF INIT      3847 -> reg14",
      "127475 PUT      reg12[1] = reg14",
      "127479 CALL FUNCTION      OBJ: reg13 FUNC: reg11 ARGS: reg12",
      "127483 SET      reg2 -> reg9",
      "127486 GET      reg9[value] -> reg11",
      "127492 SET MEMORY ELEMENT IF INIT      3848 = reg11",
      "127495 PUSH MEMORY ELEMENT IF INIT      3830 -> reg11",
      "127498 NEW ARRAY      1 -> reg12",
      "127501 PUSH MEMORY ELEMENT IF INIT      3848 -> reg14",
      "127504 PUT      reg12[0] = reg14",
      "127508 CALL FUNCTION      PTR: reg11 MEM: reg12",
      "127512 SET      reg2 -> reg9",
      "127515 SET MEMORY ELEMENT IF INIT      3849 = reg9",
      "127518 PUSH MEMORY ELEMENT IF INIT      3849 -> reg9",
      "127521 GET WINDOW PROP      undefined -> reg11",
      "127526 STRICT NOT EQUAL      reg9 !== reg11 -> reg12",
      "127530 JUMP IF FALSE      reg12 TO: 127562 | 127533"
  ],
  "127533": [
      "127533 PUSH MEMORY ELEMENT IF INIT      3842 -> reg9",
      "127536 PUSH MEMORY ELEMENT IF INIT      3848 -> reg11",
      "127539 TYPEOF      reg11 -> reg12",
      "127542 ADD      reg12NaN-> reg14",
      "127548 PUSH MEMORY ELEMENT IF INIT      3847 -> reg11",
      "127551 ADD      reg14NaN-> reg12",
      "127555 PUSH MEMORY ELEMENT IF INIT      3849 -> reg14",
      "127558 PUT      reg9[reg12] = reg14",
      "127562 ADD      reg101-> reg10",
      "127566 LESS THAN      reg10 < reg8 -> reg12",
      "127570 JUMP IF TRUE      reg12 TO: 127444 | 127573"
  ],
  "127562": [
      "127562 ADD      reg101-> reg10",
      "127566 LESS THAN      reg10 < reg8 -> reg12",
      "127570 JUMP IF TRUE      reg12 TO: 127444 | 127573"
  ],
  "127573": [
      "127573 EMPTY OBJECT      -> reg6",
      "127575 PUSH MEMORY ELEMENT IF INIT      3841 -> reg4",
      "127578 PUT      reg6[k] = reg4",
      "127584 PUSH MEMORY ELEMENT IF INIT      3842 -> reg4",
      "127587 PUT      reg6[pd] = reg4",
      "127593 JUMP OR RETURN VAL      reg6"
  ],
  "127675": [
      "127675 SET I      null",
      "127677 PUSH F.K      -> reg5",
      "127679 VOID F",
      "127680 SET MEMORY ELEMENT      0 = reg5",
      "127683 EMPTY OBJECT      -> reg4",
      "127685 PUT      reg4[verdict] = false",
      "127691 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "127694 GET      reg9[toString] -> reg8",
      "127700 EMPTY ARRAY      -> reg10",
      "127702 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg10",
      "127706 SET      reg2 -> reg5",
      "127709 PUT      reg4[raw] = reg5",
      "127715 PUT      reg4[error] = true",
      "127721 JUMP OR RETURN VAL      reg4"
  ],
  "127884": [
      "127884 SET I      127932",
      "127886 PUSH F.K      -> reg6",
      "127888 VOID F",
      "127889 SET MEMORY ELEMENT      0 = reg6",
      "127892 EMPTY OBJECT      -> reg4",
      "127894 PUT      reg4[verdict] = false",
      "127900 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "127903 GET      reg8[toString] -> reg6",
      "127909 EMPTY ARRAY      -> reg7",
      "127911 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg7",
      "127915 SET      reg2 -> reg5",
      "127918 PUT      reg4[raw] = reg5",
      "127924 PUT      reg4[error] = true",
      "127930 JUMP OR RETURN VAL      reg4"
  ],
  "127932": [
      "127932 SET I      null",
      "127934 SET N      null",
      "127936 PUSH MEMORY ELEMENT IF INIT      2589 -> reg5",
      "127939 GET      reg5[exit] -> reg6",
      "127945 EMPTY ARRAY      -> reg7",
      "127947 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "127951 SET      reg2 -> reg4",
      "127954 HANDLE TRACE OR JUMP OR RETURN C",
      "127955 SET I      null",
      "127957 JUMP OR RETURN"
  ],
  "130848": [
      "130848 SET I      131579",
      "130850 PUSH F.K      -> reg4",
      "130852 VOID F",
      "130853 SET MEMORY ELEMENT      0 = reg4",
      "130856 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "130859 GET      reg8[stack] -> reg9",
      "130865 GET      reg9[indexOf] -> reg8",
      "130871 NEW ARRAY      1 -> reg10",
      "130874 PUT      reg10[0] = [object Function]",
      "130880 CALL FUNCTION      OBJ: reg9 FUNC: reg8 ARGS: reg10",
      "130884 SET      reg2 -> reg4",
      "130887 SUBTRACT      0 - 1 -> reg8",
      "130891 GREATER THAN      reg4 > reg8 -> reg10",
      "130895 JUMP IF FALSE      reg10 TO: 130917 | 130898"
  ],
  "130898": [
      "130898 GET WINDOW PROP      window -> reg4",
      "130903 GET      reg4[location] -> reg8",
      "130909 PUT      reg8[href] = about:blank",
      "130917 SET I      131579",
      "130919 SET I      130995",
      "130921 GET WINDOW PROP      Object -> reg11",
      "130926 GET      reg11[defineProperty] -> reg10",
      "130932 NEW ARRAY      3 -> reg12",
      "130935 GET WINDOW PROP      window -> reg4",
      "130940 GET      reg4[Crypto] -> reg13",
      "130946 GET      reg13[prototype] -> reg4",
      "130952 PUT      reg12[0] = reg4",
      "130956 PUT      reg12[1] = seedRandomValue",
      "130962 EMPTY OBJECT      -> reg16",
      "130964 INIT FUNCTION STATE      PTR: 130973 NAME:  LEN: 0 -> reg4",
      "130971 JUMP      130976",
      "130976 PUT      reg16[value] = reg4",
      "130982 PUT      reg12[2] = reg16",
      "130986 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg12",
      "130990 SET      reg2 -> reg8",
      "130993 JUMP      131003",
      "131003 SET I      131579",
      "131005 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "131008 PUSH MEMORY ELEMENT IF INIT      2669 -> reg13",
      "131011 NEW ARRAY      1 -> reg10",
      "131014 PUSH MEMORY ELEMENT IF INIT      2651 -> reg16",
      "131017 PUT      reg10[0] = reg16",
      "131021 CALL FUNCTION      PTR: reg13 MEM: reg10",
      "131025 SET      reg2 -> reg8",
      "131028 PUT      reg4[tv] = reg8",
      "131034 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "131037 PUSH MEMORY ELEMENT IF INIT      2669 -> reg4",
      "131040 NEW ARRAY      1 -> reg12",
      "131043 PUSH MEMORY ELEMENT IF INIT      2589 -> reg13",
      "131046 GET      reg13[at] -> reg14",
      "131052 PUT      reg12[0] = reg14",
      "131056 CALL FUNCTION      PTR: reg4 MEM: reg12",
      "131060 SET      reg2 -> reg10",
      "131063 PUT      reg8[ssc] = reg10",
      "131069 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "131072 GET WINDOW PROP      Date -> reg10",
      "131077 GET      reg10[now] -> reg12",
      "131083 EMPTY ARRAY      -> reg14",
      "131085 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg14",
      "131089 SET      reg2 -> reg8",
      "131092 PUSH MEMORY ELEMENT IF INIT      2672 -> reg12",
      "131095 SUBTRACT      reg8 - reg12 -> reg13",
      "131099 PUT      reg4[time] = reg13",
      "131105 PUSH MEMORY ELEMENT IF INIT      2588 -> reg12",
      "131108 GET      reg12[action] -> reg4",
      "131114 STRICT EQUAL      reg4 === block -> reg12",
      "131120 JUMP IF FALSE      reg12 TO: 131335 | 131123"
  ],
  "130917": [
      "130917 SET I      131579",
      "130919 SET I      130995",
      "130921 GET WINDOW PROP      Object -> reg11",
      "130926 GET      reg11[defineProperty] -> reg10",
      "130932 NEW ARRAY      3 -> reg12",
      "130935 GET WINDOW PROP      window -> reg4",
      "130940 GET      reg4[Crypto] -> reg13",
      "130946 GET      reg13[prototype] -> reg4",
      "130952 PUT      reg12[0] = reg4",
      "130956 PUT      reg12[1] = seedRandomValue",
      "130962 EMPTY OBJECT      -> reg16",
      "130964 INIT FUNCTION STATE      PTR: 130973 NAME:  LEN: 0 -> reg4",
      "130971 JUMP      130976",
      "130976 PUT      reg16[value] = reg4",
      "130982 PUT      reg12[2] = reg16",
      "130986 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg12",
      "130990 SET      reg2 -> reg8",
      "130993 JUMP      131003",
      "131003 SET I      131579",
      "131005 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "131008 PUSH MEMORY ELEMENT IF INIT      2669 -> reg13",
      "131011 NEW ARRAY      1 -> reg10",
      "131014 PUSH MEMORY ELEMENT IF INIT      2651 -> reg16",
      "131017 PUT      reg10[0] = reg16",
      "131021 CALL FUNCTION      PTR: reg13 MEM: reg10",
      "131025 SET      reg2 -> reg8",
      "131028 PUT      reg4[tv] = reg8",
      "131034 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "131037 PUSH MEMORY ELEMENT IF INIT      2669 -> reg4",
      "131040 NEW ARRAY      1 -> reg12",
      "131043 PUSH MEMORY ELEMENT IF INIT      2589 -> reg13",
      "131046 GET      reg13[at] -> reg14",
      "131052 PUT      reg12[0] = reg14",
      "131056 CALL FUNCTION      PTR: reg4 MEM: reg12",
      "131060 SET      reg2 -> reg10",
      "131063 PUT      reg8[ssc] = reg10",
      "131069 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "131072 GET WINDOW PROP      Date -> reg10",
      "131077 GET      reg10[now] -> reg12",
      "131083 EMPTY ARRAY      -> reg14",
      "131085 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg14",
      "131089 SET      reg2 -> reg8",
      "131092 PUSH MEMORY ELEMENT IF INIT      2672 -> reg12",
      "131095 SUBTRACT      reg8 - reg12 -> reg13",
      "131099 PUT      reg4[time] = reg13",
      "131105 PUSH MEMORY ELEMENT IF INIT      2588 -> reg12",
      "131108 GET      reg12[action] -> reg4",
      "131114 STRICT EQUAL      reg4 === block -> reg12",
      "131120 JUMP IF FALSE      reg12 TO: 131335 | 131123"
  ],
  "130995": [
      "130995 SET I      131579",
      "130997 PUSH F.K      -> reg8",
      "130999 VOID F",
      "131000 SET MEMORY ELEMENT      0 = reg8",
      "131003 SET I      131579",
      "131005 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "131008 PUSH MEMORY ELEMENT IF INIT      2669 -> reg13",
      "131011 NEW ARRAY      1 -> reg10",
      "131014 PUSH MEMORY ELEMENT IF INIT      2651 -> reg16",
      "131017 PUT      reg10[0] = reg16",
      "131021 CALL FUNCTION      PTR: reg13 MEM: reg10",
      "131025 SET      reg2 -> reg8",
      "131028 PUT      reg4[tv] = reg8",
      "131034 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "131037 PUSH MEMORY ELEMENT IF INIT      2669 -> reg4",
      "131040 NEW ARRAY      1 -> reg12",
      "131043 PUSH MEMORY ELEMENT IF INIT      2589 -> reg13",
      "131046 GET      reg13[at] -> reg14",
      "131052 PUT      reg12[0] = reg14",
      "131056 CALL FUNCTION      PTR: reg4 MEM: reg12",
      "131060 SET      reg2 -> reg10",
      "131063 PUT      reg8[ssc] = reg10",
      "131069 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "131072 GET WINDOW PROP      Date -> reg10",
      "131077 GET      reg10[now] -> reg12",
      "131083 EMPTY ARRAY      -> reg14",
      "131085 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg14",
      "131089 SET      reg2 -> reg8",
      "131092 PUSH MEMORY ELEMENT IF INIT      2672 -> reg12",
      "131095 SUBTRACT      reg8 - reg12 -> reg13",
      "131099 PUT      reg4[time] = reg13",
      "131105 PUSH MEMORY ELEMENT IF INIT      2588 -> reg12",
      "131108 GET      reg12[action] -> reg4",
      "131114 STRICT EQUAL      reg4 === block -> reg12",
      "131120 JUMP IF FALSE      reg12 TO: 131335 | 131123"
  ],
  "131123": [
      "131123 PUSH MEMORY ELEMENT IF INIT      2588 -> reg8",
      "131126 GET      reg8[type] -> reg4",
      "131132 STRICT EQUAL      reg4 === ab -> reg12",
      "131138 JUMP IF FALSE      reg12 TO: 131309 | 131141"
  ],
  "131141": [
      "131141 SET MEMORY ELEMENT IF INIT      275 = true",
      "131144 SET I      131299",
      "131146 GET WINDOW PROP      Math -> reg14",
      "131151 GET      reg14[random] -> reg13",
      "131157 EMPTY ARRAY      -> reg12",
      "131159 CALL FUNCTION      OBJ: reg14 FUNC: reg13 ARGS: reg12",
      "131163 SET      reg2 -> reg4",
      "131166 LESS THAN      reg4 < 0.1 -> reg8",
      "131172 JUMP IF FALSE      reg8 TO: 131196 | 131175"
  ],
  "131175": [
      "131175 PUSH MEMORY ELEMENT IF INIT      2588 -> reg4",
      "131178 GET      reg4[wdt] -> reg13",
      "131184 GET      reg13[verdict] -> reg12",
      "131190 NOT      reg12 -> reg13",
      "131193 SET      reg13 -> reg8",
      "131196 JUMP IF FALSE      reg8 TO: 131225 | 131199"
  ],
  "131196": ["131196 JUMP IF FALSE      reg8 TO: 131225 | 131199"],
  "131199": [
      "131199 GET WINDOW PROP      setTimeout -> reg8",
      "131204 NEW ARRAY      2 -> reg12",
      "131207 PUSH MEMORY ELEMENT IF INIT      2671 -> reg13",
      "131210 PUT      reg12[0] = reg13",
      "131214 PUT      reg12[1] = 100",
      "131218 CALL FUNCTION      PTR: reg8 MEM: reg12",
      "131222 SET      reg2 -> reg4",
      "131225 GET WINDOW PROP      Object -> reg8",
      "131230 GET      reg8[defineProperty] -> reg13",
      "131236 NEW ARRAY      3 -> reg12",
      "131239 GET WINDOW PROP      window -> reg15",
      "131244 GET      reg15[Crypto] -> reg16",
      "131250 GET      reg16[prototype] -> reg18",
      "131256 PUT      reg12[0] = reg18",
      "131260 PUT      reg12[1] = getRandomBytes",
      "131266 EMPTY OBJECT      -> reg15",
      "131268 INIT FUNCTION STATE      PTR: 131277 NAME:  LEN: 0 -> reg16",
      "131275 JUMP      131280",
      "131280 PUT      reg15[value] = reg16",
      "131286 PUT      reg12[2] = reg15",
      "131290 CALL FUNCTION      OBJ: reg8 FUNC: reg13 ARGS: reg12",
      "131294 SET      reg2 -> reg4",
      "131297 JUMP      131307",
      "131307 SET I      131579",
      "131309 PUSH MEMORY ELEMENT IF INIT      2591 -> reg4",
      "131312 NEW ARRAY      2 -> reg12",
      "131315 PUSH MEMORY ELEMENT IF INIT      2588 -> reg15",
      "131318 PUT      reg12[0] = reg15",
      "131322 PUT      reg12[1] = true",
      "131326 CALL FUNCTION      PTR: reg4 MEM: reg12",
      "131330 SET      reg2 -> reg13",
      "131333 JUMP      131474",
      "131474 SET I      131567",
      "131476 GET WINDOW PROP      navigator -> reg13",
      "131481 PUSH MEMORY ELEMENT IF INIT      2588 -> reg15",
      "131484 GET      reg15[action] -> reg16",
      "131490 STRICT EQUAL      reg16 === block -> reg17",
      "131496 PUT      reg13[wirelessDevices] = reg17",
      "131502 GET WINDOW PROP      Object -> reg17",
      "131507 GET      reg17[defineProperty] -> reg19",
      "131513 NEW ARRAY      3 -> reg15",
      "131516 GET WINDOW PROP      navigator -> reg16",
      "131521 PUT      reg15[0] = reg16",
      "131525 PUT      reg15[1] = wirelessDevices",
      "131531 EMPTY OBJECT      -> reg16",
      "131533 PUSH MEMORY ELEMENT IF INIT      2588 -> reg18",
      "131536 GET      reg18[action] -> reg20",
      "131542 STRICT EQUAL      reg20 === block -> reg18",
      "131548 PUT      reg16[value] = reg18",
      "131554 PUT      reg15[2] = reg16",
      "131558 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg15",
      "131562 SET      reg2 -> reg13",
      "131565 JUMP      131575",
      "131575 SET I      131579",
      "131577 JUMP      131675",
      "131675 SET I      null",
      "131677 SET N      null",
      "131679 PUSH MEMORY ELEMENT IF INIT      2589 -> reg15",
      "131682 GET      reg15[exit] -> reg18",
      "131688 EMPTY ARRAY      -> reg19",
      "131690 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg19",
      "131694 SET      reg2 -> reg13",
      "131697 HANDLE TRACE OR JUMP OR RETURN C",
      "131698 SET I      null",
      "131700 JUMP OR RETURN"
  ],
  "131225": [
      "131225 GET WINDOW PROP      Object -> reg8",
      "131230 GET      reg8[defineProperty] -> reg13",
      "131236 NEW ARRAY      3 -> reg12",
      "131239 GET WINDOW PROP      window -> reg15",
      "131244 GET      reg15[Crypto] -> reg16",
      "131250 GET      reg16[prototype] -> reg18",
      "131256 PUT      reg12[0] = reg18",
      "131260 PUT      reg12[1] = getRandomBytes",
      "131266 EMPTY OBJECT      -> reg15",
      "131268 INIT FUNCTION STATE      PTR: 131277 NAME:  LEN: 0 -> reg16",
      "131275 JUMP      131280",
      "131280 PUT      reg15[value] = reg16",
      "131286 PUT      reg12[2] = reg15",
      "131290 CALL FUNCTION      OBJ: reg8 FUNC: reg13 ARGS: reg12",
      "131294 SET      reg2 -> reg4",
      "131297 JUMP      131307",
      "131307 SET I      131579",
      "131309 PUSH MEMORY ELEMENT IF INIT      2591 -> reg4",
      "131312 NEW ARRAY      2 -> reg12",
      "131315 PUSH MEMORY ELEMENT IF INIT      2588 -> reg15",
      "131318 PUT      reg12[0] = reg15",
      "131322 PUT      reg12[1] = true",
      "131326 CALL FUNCTION      PTR: reg4 MEM: reg12",
      "131330 SET      reg2 -> reg13",
      "131333 JUMP      131474",
      "131474 SET I      131567",
      "131476 GET WINDOW PROP      navigator -> reg13",
      "131481 PUSH MEMORY ELEMENT IF INIT      2588 -> reg15",
      "131484 GET      reg15[action] -> reg16",
      "131490 STRICT EQUAL      reg16 === block -> reg17",
      "131496 PUT      reg13[wirelessDevices] = reg17",
      "131502 GET WINDOW PROP      Object -> reg17",
      "131507 GET      reg17[defineProperty] -> reg19",
      "131513 NEW ARRAY      3 -> reg15",
      "131516 GET WINDOW PROP      navigator -> reg16",
      "131521 PUT      reg15[0] = reg16",
      "131525 PUT      reg15[1] = wirelessDevices",
      "131531 EMPTY OBJECT      -> reg16",
      "131533 PUSH MEMORY ELEMENT IF INIT      2588 -> reg18",
      "131536 GET      reg18[action] -> reg20",
      "131542 STRICT EQUAL      reg20 === block -> reg18",
      "131548 PUT      reg16[value] = reg18",
      "131554 PUT      reg15[2] = reg16",
      "131558 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg15",
      "131562 SET      reg2 -> reg13",
      "131565 JUMP      131575",
      "131575 SET I      131579",
      "131577 JUMP      131675",
      "131675 SET I      null",
      "131677 SET N      null",
      "131679 PUSH MEMORY ELEMENT IF INIT      2589 -> reg15",
      "131682 GET      reg15[exit] -> reg18",
      "131688 EMPTY ARRAY      -> reg19",
      "131690 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg19",
      "131694 SET      reg2 -> reg13",
      "131697 HANDLE TRACE OR JUMP OR RETURN C",
      "131698 SET I      null",
      "131700 JUMP OR RETURN"
  ],
  "131299": [
      "131299 SET I      131579",
      "131301 PUSH F.K      -> reg4",
      "131303 VOID F",
      "131304 SET MEMORY ELEMENT      0 = reg4",
      "131307 SET I      131579",
      "131309 PUSH MEMORY ELEMENT IF INIT      2591 -> reg4",
      "131312 NEW ARRAY      2 -> reg12",
      "131315 PUSH MEMORY ELEMENT IF INIT      2588 -> reg15",
      "131318 PUT      reg12[0] = reg15",
      "131322 PUT      reg12[1] = true",
      "131326 CALL FUNCTION      PTR: reg4 MEM: reg12",
      "131330 SET      reg2 -> reg13",
      "131333 JUMP      131474",
      "131474 SET I      131567",
      "131476 GET WINDOW PROP      navigator -> reg13",
      "131481 PUSH MEMORY ELEMENT IF INIT      2588 -> reg15",
      "131484 GET      reg15[action] -> reg16",
      "131490 STRICT EQUAL      reg16 === block -> reg17",
      "131496 PUT      reg13[wirelessDevices] = reg17",
      "131502 GET WINDOW PROP      Object -> reg17",
      "131507 GET      reg17[defineProperty] -> reg19",
      "131513 NEW ARRAY      3 -> reg15",
      "131516 GET WINDOW PROP      navigator -> reg16",
      "131521 PUT      reg15[0] = reg16",
      "131525 PUT      reg15[1] = wirelessDevices",
      "131531 EMPTY OBJECT      -> reg16",
      "131533 PUSH MEMORY ELEMENT IF INIT      2588 -> reg18",
      "131536 GET      reg18[action] -> reg20",
      "131542 STRICT EQUAL      reg20 === block -> reg18",
      "131548 PUT      reg16[value] = reg18",
      "131554 PUT      reg15[2] = reg16",
      "131558 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg15",
      "131562 SET      reg2 -> reg13",
      "131565 JUMP      131575",
      "131575 SET I      131579",
      "131577 JUMP      131675",
      "131675 SET I      null",
      "131677 SET N      null",
      "131679 PUSH MEMORY ELEMENT IF INIT      2589 -> reg15",
      "131682 GET      reg15[exit] -> reg18",
      "131688 EMPTY ARRAY      -> reg19",
      "131690 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg19",
      "131694 SET      reg2 -> reg13",
      "131697 HANDLE TRACE OR JUMP OR RETURN C",
      "131698 SET I      null",
      "131700 JUMP OR RETURN"
  ],
  "131309": [
      "131309 PUSH MEMORY ELEMENT IF INIT      2591 -> reg4",
      "131312 NEW ARRAY      2 -> reg12",
      "131315 PUSH MEMORY ELEMENT IF INIT      2588 -> reg15",
      "131318 PUT      reg12[0] = reg15",
      "131322 PUT      reg12[1] = true",
      "131326 CALL FUNCTION      PTR: reg4 MEM: reg12",
      "131330 SET      reg2 -> reg13",
      "131333 JUMP      131474",
      "131474 SET I      131567",
      "131476 GET WINDOW PROP      navigator -> reg13",
      "131481 PUSH MEMORY ELEMENT IF INIT      2588 -> reg15",
      "131484 GET      reg15[action] -> reg16",
      "131490 STRICT EQUAL      reg16 === block -> reg17",
      "131496 PUT      reg13[wirelessDevices] = reg17",
      "131502 GET WINDOW PROP      Object -> reg17",
      "131507 GET      reg17[defineProperty] -> reg19",
      "131513 NEW ARRAY      3 -> reg15",
      "131516 GET WINDOW PROP      navigator -> reg16",
      "131521 PUT      reg15[0] = reg16",
      "131525 PUT      reg15[1] = wirelessDevices",
      "131531 EMPTY OBJECT      -> reg16",
      "131533 PUSH MEMORY ELEMENT IF INIT      2588 -> reg18",
      "131536 GET      reg18[action] -> reg20",
      "131542 STRICT EQUAL      reg20 === block -> reg18",
      "131548 PUT      reg16[value] = reg18",
      "131554 PUT      reg15[2] = reg16",
      "131558 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg15",
      "131562 SET      reg2 -> reg13",
      "131565 JUMP      131575",
      "131575 SET I      131579",
      "131577 JUMP      131675",
      "131675 SET I      null",
      "131677 SET N      null",
      "131679 PUSH MEMORY ELEMENT IF INIT      2589 -> reg15",
      "131682 GET      reg15[exit] -> reg18",
      "131688 EMPTY ARRAY      -> reg19",
      "131690 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg19",
      "131694 SET      reg2 -> reg13",
      "131697 HANDLE TRACE OR JUMP OR RETURN C",
      "131698 SET I      null",
      "131700 JUMP OR RETURN"
  ],
  "131335": [
      "131335 SET I      131411",
      "131337 GET WINDOW PROP      Object -> reg12",
      "131342 GET      reg12[defineProperty] -> reg15",
      "131348 NEW ARRAY      3 -> reg13",
      "131351 GET WINDOW PROP      window -> reg16",
      "131356 GET      reg16[Crypto] -> reg17",
      "131362 GET      reg17[prototype] -> reg16",
      "131368 PUT      reg13[0] = reg16",
      "131372 PUT      reg13[1] = setRandomBits",
      "131378 EMPTY OBJECT      -> reg16",
      "131380 INIT FUNCTION STATE      PTR: 131389 NAME:  LEN: 0 -> reg18",
      "131387 JUMP      131392",
      "131392 PUT      reg16[value] = reg18",
      "131398 PUT      reg13[2] = reg16",
      "131402 CALL FUNCTION      OBJ: reg12 FUNC: reg15 ARGS: reg13",
      "131406 SET      reg2 -> reg4",
      "131409 JUMP      131419",
      "131419 SET I      131579",
      "131421 GET WINDOW PROP      Math -> reg4",
      "131426 GET      reg4[random] -> reg17",
      "131432 EMPTY ARRAY      -> reg13",
      "131434 CALL FUNCTION      OBJ: reg4 FUNC: reg17 ARGS: reg13",
      "131438 SET      reg2 -> reg15",
      "131441 LESS THAN      reg15 < 0.01 -> reg13",
      "131447 JUMP IF FALSE      reg13 TO: 131474 | 131450"
  ],
  "131411": [
      "131411 SET I      131579",
      "131413 PUSH F.K      -> reg4",
      "131415 VOID F",
      "131416 SET MEMORY ELEMENT      0 = reg4",
      "131419 SET I      131579",
      "131421 GET WINDOW PROP      Math -> reg4",
      "131426 GET      reg4[random] -> reg17",
      "131432 EMPTY ARRAY      -> reg13",
      "131434 CALL FUNCTION      OBJ: reg4 FUNC: reg17 ARGS: reg13",
      "131438 SET      reg2 -> reg15",
      "131441 LESS THAN      reg15 < 0.01 -> reg13",
      "131447 JUMP IF FALSE      reg13 TO: 131474 | 131450"
  ],
  "131450": [
      "131450 PUSH MEMORY ELEMENT IF INIT      2591 -> reg15",
      "131453 NEW ARRAY      2 -> reg16",
      "131456 PUSH MEMORY ELEMENT IF INIT      2588 -> reg17",
      "131459 PUT      reg16[0] = reg17",
      "131463 PUT      reg16[1] = true",
      "131467 CALL FUNCTION      PTR: reg15 MEM: reg16",
      "131471 SET      reg2 -> reg13",
      "131474 SET I      131567",
      "131476 GET WINDOW PROP      navigator -> reg13",
      "131481 PUSH MEMORY ELEMENT IF INIT      2588 -> reg15",
      "131484 GET      reg15[action] -> reg16",
      "131490 STRICT EQUAL      reg16 === block -> reg17",
      "131496 PUT      reg13[wirelessDevices] = reg17",
      "131502 GET WINDOW PROP      Object -> reg17",
      "131507 GET      reg17[defineProperty] -> reg19",
      "131513 NEW ARRAY      3 -> reg15",
      "131516 GET WINDOW PROP      navigator -> reg16",
      "131521 PUT      reg15[0] = reg16",
      "131525 PUT      reg15[1] = wirelessDevices",
      "131531 EMPTY OBJECT      -> reg16",
      "131533 PUSH MEMORY ELEMENT IF INIT      2588 -> reg18",
      "131536 GET      reg18[action] -> reg20",
      "131542 STRICT EQUAL      reg20 === block -> reg18",
      "131548 PUT      reg16[value] = reg18",
      "131554 PUT      reg15[2] = reg16",
      "131558 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg15",
      "131562 SET      reg2 -> reg13",
      "131565 JUMP      131575",
      "131575 SET I      131579",
      "131577 JUMP      131675",
      "131675 SET I      null",
      "131677 SET N      null",
      "131679 PUSH MEMORY ELEMENT IF INIT      2589 -> reg15",
      "131682 GET      reg15[exit] -> reg18",
      "131688 EMPTY ARRAY      -> reg19",
      "131690 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg19",
      "131694 SET      reg2 -> reg13",
      "131697 HANDLE TRACE OR JUMP OR RETURN C",
      "131698 SET I      null",
      "131700 JUMP OR RETURN"
  ],
  "131474": [
      "131474 SET I      131567",
      "131476 GET WINDOW PROP      navigator -> reg13",
      "131481 PUSH MEMORY ELEMENT IF INIT      2588 -> reg15",
      "131484 GET      reg15[action] -> reg16",
      "131490 STRICT EQUAL      reg16 === block -> reg17",
      "131496 PUT      reg13[wirelessDevices] = reg17",
      "131502 GET WINDOW PROP      Object -> reg17",
      "131507 GET      reg17[defineProperty] -> reg19",
      "131513 NEW ARRAY      3 -> reg15",
      "131516 GET WINDOW PROP      navigator -> reg16",
      "131521 PUT      reg15[0] = reg16",
      "131525 PUT      reg15[1] = wirelessDevices",
      "131531 EMPTY OBJECT      -> reg16",
      "131533 PUSH MEMORY ELEMENT IF INIT      2588 -> reg18",
      "131536 GET      reg18[action] -> reg20",
      "131542 STRICT EQUAL      reg20 === block -> reg18",
      "131548 PUT      reg16[value] = reg18",
      "131554 PUT      reg15[2] = reg16",
      "131558 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg15",
      "131562 SET      reg2 -> reg13",
      "131565 JUMP      131575",
      "131575 SET I      131579",
      "131577 JUMP      131675",
      "131675 SET I      null",
      "131677 SET N      null",
      "131679 PUSH MEMORY ELEMENT IF INIT      2589 -> reg15",
      "131682 GET      reg15[exit] -> reg18",
      "131688 EMPTY ARRAY      -> reg19",
      "131690 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg19",
      "131694 SET      reg2 -> reg13",
      "131697 HANDLE TRACE OR JUMP OR RETURN C",
      "131698 SET I      null",
      "131700 JUMP OR RETURN"
  ],
  "131567": [
      "131567 SET I      131579",
      "131569 PUSH F.K      -> reg13",
      "131571 VOID F",
      "131572 SET MEMORY ELEMENT      0 = reg13",
      "131575 SET I      131579",
      "131577 JUMP      131675",
      "131675 SET I      null",
      "131677 SET N      null",
      "131679 PUSH MEMORY ELEMENT IF INIT      2589 -> reg15",
      "131682 GET      reg15[exit] -> reg18",
      "131688 EMPTY ARRAY      -> reg19",
      "131690 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg19",
      "131694 SET      reg2 -> reg13",
      "131697 HANDLE TRACE OR JUMP OR RETURN C",
      "131698 SET I      null",
      "131700 JUMP OR RETURN"
  ],
  "131577": [
      "131577 JUMP      131675",
      "131675 SET I      null",
      "131677 SET N      null",
      "131679 PUSH MEMORY ELEMENT IF INIT      2589 -> reg15",
      "131682 GET      reg15[exit] -> reg18",
      "131688 EMPTY ARRAY      -> reg19",
      "131690 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg19",
      "131694 SET      reg2 -> reg13",
      "131697 HANDLE TRACE OR JUMP OR RETURN C",
      "131698 SET I      null",
      "131700 JUMP OR RETURN"
  ],
  "131579": [
      "131579 SET I      131675",
      "131581 PUSH F.K      -> reg13",
      "131583 VOID F",
      "131584 SET MEMORY ELEMENT      0 = reg13",
      "131587 SET I      131665",
      "131589 PUSH MEMORY ELEMENT IF INIT      2588 -> reg13",
      "131592 PUT      reg13[error] = true",
      "131598 PUSH MEMORY ELEMENT IF INIT      2588 -> reg13",
      "131601 PUSH MEMORY ELEMENT IF INIT      0 -> reg16",
      "131604 GET      reg16[toString] -> reg18",
      "131610 EMPTY ARRAY      -> reg19",
      "131612 CALL FUNCTION      OBJ: reg16 FUNC: reg18 ARGS: reg19",
      "131616 SET      reg2 -> reg15",
      "131619 PUT      reg13[error_msg] = reg15",
      "131625 PUSH MEMORY ELEMENT IF INIT      2588 -> reg13",
      "131628 PUSH MEMORY ELEMENT IF INIT      0 -> reg18",
      "131631 GET      reg18[stack] -> reg19",
      "131637 PUT      reg13[error_stack] = reg19",
      "131643 PUSH MEMORY ELEMENT IF INIT      2591 -> reg15",
      "131646 NEW ARRAY      1 -> reg20",
      "131649 PUSH MEMORY ELEMENT IF INIT      2588 -> reg19",
      "131652 PUT      reg20[0] = reg19",
      "131656 CALL FUNCTION      PTR: reg15 MEM: reg20",
      "131660 SET      reg2 -> reg13",
      "131663 JUMP      131673",
      "131673 SET I      null",
      "131675 SET I      null",
      "131677 SET N      null",
      "131679 PUSH MEMORY ELEMENT IF INIT      2589 -> reg15",
      "131682 GET      reg15[exit] -> reg18",
      "131688 EMPTY ARRAY      -> reg19",
      "131690 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg19",
      "131694 SET      reg2 -> reg13",
      "131697 HANDLE TRACE OR JUMP OR RETURN C",
      "131698 SET I      null",
      "131700 JUMP OR RETURN"
  ],
  "131665": [
      "131665 SET I      null",
      "131667 PUSH F.K      -> reg13",
      "131669 VOID F",
      "131670 SET MEMORY ELEMENT      0 = reg13",
      "131673 SET I      null",
      "131675 SET I      null",
      "131677 SET N      null",
      "131679 PUSH MEMORY ELEMENT IF INIT      2589 -> reg15",
      "131682 GET      reg15[exit] -> reg18",
      "131688 EMPTY ARRAY      -> reg19",
      "131690 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg19",
      "131694 SET      reg2 -> reg13",
      "131697 HANDLE TRACE OR JUMP OR RETURN C",
      "131698 SET I      null",
      "131700 JUMP OR RETURN"
  ],
  "131675": [
      "131675 SET I      null",
      "131677 SET N      null",
      "131679 PUSH MEMORY ELEMENT IF INIT      2589 -> reg15",
      "131682 GET      reg15[exit] -> reg18",
      "131688 EMPTY ARRAY      -> reg19",
      "131690 CALL FUNCTION      OBJ: reg15 FUNC: reg18 ARGS: reg19",
      "131694 SET      reg2 -> reg13",
      "131697 HANDLE TRACE OR JUMP OR RETURN C",
      "131698 SET I      null",
      "131700 JUMP OR RETURN"
  ],
  "131796": [
      "131796 INIT FUNCTION STATE      PTR: 131805 NAME:  LEN: 2 -> reg9",
      "131803 JUMP      131966",
      "131966 SET MEMORY ELEMENT IF INIT      3874 = reg9",
      "131969 INIT FUNCTION STATE      PTR: 131978 NAME:  LEN: 1 -> reg7",
      "131976 JUMP      132253",
      "132253 SET MEMORY ELEMENT IF INIT      3875 = reg7",
      "132256 INIT FUNCTION STATE      PTR: 132265 NAME:  LEN: 0 -> reg4",
      "132263 JUMP      132364",
      "132364 SET MEMORY ELEMENT IF INIT      3876 = reg4",
      "132367 INIT FUNCTION STATE      PTR: 132376 NAME:  LEN: 0 -> reg4",
      "132374 JUMP      132628",
      "132628 SET MEMORY ELEMENT IF INIT      3877 = reg4",
      "132631 INIT FUNCTION STATE      PTR: 132640 NAME:  LEN: 0 -> reg6",
      "132638 JUMP      133385",
      "133385 SET MEMORY ELEMENT IF INIT      3878 = reg6",
      "133388 INIT FUNCTION STATE      PTR: 133397 NAME:  LEN: 0 -> reg8",
      "133395 JUMP      134179",
      "134179 SET MEMORY ELEMENT IF INIT      3879 = reg8",
      "134182 INIT FUNCTION STATE      PTR: 134191 NAME:  LEN: 0 -> reg4",
      "134189 JUMP      134591",
      "134591 SET MEMORY ELEMENT IF INIT      3880 = reg4",
      "134594 INIT FUNCTION STATE      PTR: 134603 NAME:  LEN: 0 -> reg4",
      "134601 JUMP      135201",
      "135201 SET MEMORY ELEMENT IF INIT      3881 = reg4",
      "135204 INIT FUNCTION STATE      PTR: 135213 NAME:  LEN: 0 -> reg4",
      "135211 JUMP      135642",
      "135642 SET MEMORY ELEMENT IF INIT      3882 = reg4",
      "135645 INIT FUNCTION STATE      PTR: 135654 NAME:  LEN: 0 -> reg4",
      "135652 JUMP      135834",
      "135834 SET MEMORY ELEMENT IF INIT      3883 = reg4",
      "135837 INIT FUNCTION STATE      PTR: 135846 NAME:  LEN: 0 -> reg4",
      "135844 JUMP      136488",
      "136488 SET MEMORY ELEMENT IF INIT      3884 = reg4",
      "136491 INIT FUNCTION STATE      PTR: 136500 NAME:  LEN: 0 -> reg4",
      "136498 JUMP      136864",
      "136864 SET MEMORY ELEMENT IF INIT      3885 = reg4",
      "136867 INIT FUNCTION STATE      PTR: 136876 NAME:  LEN: 0 -> reg4",
      "136874 JUMP      137332",
      "137332 SET MEMORY ELEMENT IF INIT      3886 = reg4",
      "137335 INIT FUNCTION STATE      PTR: 137344 NAME:  LEN: 0 -> reg4",
      "137342 JUMP      137528",
      "137528 SET MEMORY ELEMENT IF INIT      3887 = reg4",
      "137531 INIT FUNCTION STATE      PTR: 137540 NAME:  LEN: 0 -> reg6",
      "137538 JUMP      138065",
      "138065 SET MEMORY ELEMENT IF INIT      3888 = reg6",
      "138068 INIT FUNCTION STATE      PTR: 138077 NAME:  LEN: 0 -> reg4",
      "138075 JUMP      138520",
      "138520 SET MEMORY ELEMENT IF INIT      3889 = reg4",
      "138523 INIT FUNCTION STATE      PTR: 138532 NAME:  LEN: 0 -> reg4",
      "138530 JUMP      139015",
      "139015 SET MEMORY ELEMENT IF INIT      3890 = reg4",
      "139018 INIT FUNCTION STATE      PTR: 139027 NAME:  LEN: 0 -> reg6",
      "139025 JUMP      139420",
      "139420 SET MEMORY ELEMENT IF INIT      3891 = reg6",
      "139423 INIT FUNCTION STATE      PTR: 139432 NAME:  LEN: 0 -> reg4",
      "139430 JUMP      139936",
      "139936 SET MEMORY ELEMENT IF INIT      3892 = reg4",
      "139939 INIT FUNCTION STATE      PTR: 139948 NAME:  LEN: 1 -> reg4",
      "139946 JUMP      140050",
      "140050 SET MEMORY ELEMENT IF INIT      3893 = reg4",
      "140053 INIT FUNCTION STATE      PTR: 140062 NAME:  LEN: 1 -> reg6",
      "140060 JUMP      140100",
      "140100 SET MEMORY ELEMENT IF INIT      3894 = reg6",
      "140103 INIT FUNCTION STATE      PTR: 140112 NAME:  LEN: 0 -> reg4",
      "140110 JUMP      140286",
      "140286 SET MEMORY ELEMENT IF INIT      3895 = reg4",
      "140289 GET WINDOW PROP      Date -> reg6",
      "140294 GET      reg6[now] -> reg7",
      "140300 EMPTY ARRAY      -> reg8",
      "140302 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "140306 SET      reg2 -> reg4",
      "140309 SET MEMORY ELEMENT IF INIT      3896 = reg4",
      "140312 EMPTY OBJECT      -> reg7",
      "140314 SET MEMORY ELEMENT IF INIT      3897 = reg7",
      "140317 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140320 PUT      reg4[sid] = e0{WllSDlo0P1klP0tJBkBFXFZ3fwAYQWspBVpcWiQSWwgHXGNEQEYWMy0UBRtgFkYYKTkvSBUrPHgREh0lDEMDKg==}",
      "140328 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140331 PUT      reg4[type] = ab",
      "140339 PUSH MEMORY ELEMENT IF INIT      3897 -> reg8",
      "140342 PUT      reg8[action] = allow",
      "140350 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140353 GET WINDOW PROP      window -> reg7",
      "140358 GET      reg7[location] -> reg8",
      "140364 GET      reg8[origin] -> reg9",
      "140370 PUT      reg4[og] = reg9",
      "140376 PUSH MEMORY ELEMENT IF INIT      3895 -> reg7",
      "140379 EMPTY ARRAY      -> reg8",
      "140381 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "140385 SET      reg2 -> reg4",
      "140388 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140391 PUSH MEMORY ELEMENT IF INIT      3893 -> reg8",
      "140394 NEW ARRAY      1 -> reg9",
      "140397 PUSH MEMORY ELEMENT IF INIT      3876 -> reg10",
      "140400 PUT      reg9[0] = reg10",
      "140404 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "140408 SET      reg2 -> reg7",
      "140411 PUT      reg4[ifo] = reg7",
      "140417 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140420 PUSH MEMORY ELEMENT IF INIT      3894 -> reg8",
      "140423 NEW ARRAY      1 -> reg9",
      "140426 PUSH MEMORY ELEMENT IF INIT      3893 -> reg12",
      "140429 NEW ARRAY      1 -> reg13",
      "140432 PUSH MEMORY ELEMENT IF INIT      3878 -> reg14",
      "140435 PUT      reg13[0] = reg14",
      "140439 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "140443 SET      reg2 -> reg10",
      "140446 PUT      reg9[0] = reg10",
      "140450 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "140454 SET      reg2 -> reg7",
      "140457 PUT      reg4[eps] = reg7",
      "140463 PUSH MEMORY ELEMENT IF INIT      3897 -> reg7",
      "140466 PUSH MEMORY ELEMENT IF INIT      3894 -> reg9",
      "140469 NEW ARRAY      1 -> reg11",
      "140472 PUSH MEMORY ELEMENT IF INIT      3893 -> reg10",
      "140475 NEW ARRAY      1 -> reg13",
      "140478 PUSH MEMORY ELEMENT IF INIT      3887 -> reg12",
      "140481 PUT      reg13[0] = reg12",
      "140485 CALL FUNCTION      PTR: reg10 MEM: reg13",
      "140489 SET      reg2 -> reg8",
      "140492 PUT      reg11[0] = reg8",
      "140496 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "140500 SET      reg2 -> reg4",
      "140503 PUT      reg7[pwid] = reg4",
      "140509 PUSH MEMORY ELEMENT IF INIT      3897 -> reg7",
      "140512 PUSH MEMORY ELEMENT IF INIT      3894 -> reg4",
      "140515 NEW ARRAY      1 -> reg9",
      "140518 PUSH MEMORY ELEMENT IF INIT      3893 -> reg11",
      "140521 NEW ARRAY      1 -> reg12",
      "140524 PUSH MEMORY ELEMENT IF INIT      3879 -> reg13",
      "140527 PUT      reg12[0] = reg13",
      "140531 CALL FUNCTION      PTR: reg11 MEM: reg12",
      "140535 SET      reg2 -> reg10",
      "140538 PUT      reg9[0] = reg10",
      "140542 CALL FUNCTION      PTR: reg4 MEM: reg9",
      "140546 SET      reg2 -> reg8",
      "140549 PUT      reg7[sfc] = reg8",
      "140555 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140558 PUSH MEMORY ELEMENT IF INIT      3893 -> reg9",
      "140561 NEW ARRAY      1 -> reg10",
      "140564 PUSH MEMORY ELEMENT IF INIT      3881 -> reg8",
      "140567 PUT      reg10[0] = reg8",
      "140571 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "140575 SET      reg2 -> reg7",
      "140578 PUT      reg4[epe] = reg7",
      "140584 PUSH MEMORY ELEMENT IF INIT      3897 -> reg7",
      "140587 PUSH MEMORY ELEMENT IF INIT      3894 -> reg8",
      "140590 NEW ARRAY      1 -> reg10",
      "140593 PUSH MEMORY ELEMENT IF INIT      3893 -> reg11",
      "140596 NEW ARRAY      1 -> reg13",
      "140599 PUSH MEMORY ELEMENT IF INIT      3884 -> reg12",
      "140602 PUT      reg13[0] = reg12",
      "140606 CALL FUNCTION      PTR: reg11 MEM: reg13",
      "140610 SET      reg2 -> reg9",
      "140613 PUT      reg10[0] = reg9",
      "140617 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "140621 SET      reg2 -> reg4",
      "140624 PUT      reg7[btt] = reg4",
      "140630 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140633 PUSH MEMORY ELEMENT IF INIT      3894 -> reg7",
      "140636 NEW ARRAY      1 -> reg8",
      "140639 PUSH MEMORY ELEMENT IF INIT      3893 -> reg12",
      "140642 NEW ARRAY      1 -> reg11",
      "140645 PUSH MEMORY ELEMENT IF INIT      3883 -> reg13",
      "140648 PUT      reg11[0] = reg13",
      "140652 CALL FUNCTION      PTR: reg12 MEM: reg11",
      "140656 SET      reg2 -> reg9",
      "140659 PUT      reg8[0] = reg9",
      "140663 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "140667 SET      reg2 -> reg10",
      "140670 PUT      reg4[dws] = reg10",
      "140676 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140679 PUSH MEMORY ELEMENT IF INIT      3894 -> reg8",
      "140682 NEW ARRAY      1 -> reg10",
      "140685 PUSH MEMORY ELEMENT IF INIT      3893 -> reg11",
      "140688 NEW ARRAY      1 -> reg14",
      "140691 PUSH MEMORY ELEMENT IF INIT      3890 -> reg12",
      "140694 PUT      reg14[0] = reg12",
      "140698 CALL FUNCTION      PTR: reg11 MEM: reg14",
      "140702 SET      reg2 -> reg9",
      "140705 PUT      reg10[0] = reg9",
      "140709 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "140713 SET      reg2 -> reg7",
      "140716 PUT      reg4[ddt2] = reg7",
      "140722 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140725 PUSH MEMORY ELEMENT IF INIT      3893 -> reg7",
      "140728 NEW ARRAY      1 -> reg10",
      "140731 PUSH MEMORY ELEMENT IF INIT      3891 -> reg9",
      "140734 PUT      reg10[0] = reg9",
      "140738 CALL FUNCTION      PTR: reg7 MEM: reg10",
      "140742 SET      reg2 -> reg8",
      "140745 PUT      reg4[usd] = reg8",
      "140751 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140754 PUSH MEMORY ELEMENT IF INIT      3893 -> reg8",
      "140757 NEW ARRAY      1 -> reg9",
      "140760 PUSH MEMORY ELEMENT IF INIT      3892 -> reg10",
      "140763 PUT      reg9[0] = reg10",
      "140767 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "140771 SET      reg2 -> reg7",
      "140774 PUT      reg4[red] = reg7",
      "140780 PUSH MEMORY ELEMENT IF INIT      3897 -> reg7",
      "140783 PUSH MEMORY ELEMENT IF INIT      3893 -> reg8",
      "140786 NEW ARRAY      1 -> reg9",
      "140789 PUSH MEMORY ELEMENT IF INIT      3877 -> reg12",
      "140792 PUT      reg9[0] = reg12",
      "140796 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "140800 SET      reg2 -> reg4",
      "140803 PUT      reg7[ionw] = reg4",
      "140809 PUSH MEMORY ELEMENT IF INIT      3897 -> reg8",
      "140812 PUSH MEMORY ELEMENT IF INIT      3893 -> reg7",
      "140815 NEW ARRAY      1 -> reg9",
      "140818 PUSH MEMORY ELEMENT IF INIT      3880 -> reg10",
      "140821 PUT      reg9[0] = reg10",
      "140825 CALL FUNCTION      PTR: reg7 MEM: reg9",
      "140829 SET      reg2 -> reg4",
      "140832 PUT      reg8[gps] = reg4",
      "140838 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140841 PUSH MEMORY ELEMENT IF INIT      3893 -> reg7",
      "140844 NEW ARRAY      1 -> reg8",
      "140847 PUSH MEMORY ELEMENT IF INIT      3882 -> reg10",
      "140850 PUT      reg8[0] = reg10",
      "140854 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "140858 SET      reg2 -> reg9",
      "140861 PUT      reg4[coc] = reg9",
      "140867 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140870 PUSH MEMORY ELEMENT IF INIT      3893 -> reg7",
      "140873 NEW ARRAY      1 -> reg8",
      "140876 PUSH MEMORY ELEMENT IF INIT      3885 -> reg10",
      "140879 PUT      reg8[0] = reg10",
      "140883 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "140887 SET      reg2 -> reg9",
      "140890 PUT      reg4[gcd] = reg9",
      "140896 PUSH MEMORY ELEMENT IF INIT      3897 -> reg7",
      "140899 PUSH MEMORY ELEMENT IF INIT      3893 -> reg9",
      "140902 NEW ARRAY      1 -> reg8",
      "140905 PUSH MEMORY ELEMENT IF INIT      3886 -> reg12",
      "140908 PUT      reg8[0] = reg12",
      "140912 CALL FUNCTION      PTR: reg9 MEM: reg8",
      "140916 SET      reg2 -> reg4",
      "140919 PUT      reg7[cud] = reg4",
      "140925 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140928 PUSH MEMORY ELEMENT IF INIT      3893 -> reg8",
      "140931 NEW ARRAY      1 -> reg14",
      "140934 PUSH MEMORY ELEMENT IF INIT      3888 -> reg9",
      "140937 PUT      reg14[0] = reg9",
      "140941 CALL FUNCTION      PTR: reg8 MEM: reg14",
      "140945 SET      reg2 -> reg7",
      "140948 PUT      reg4[dsd] = reg7",
      "140954 PUSH MEMORY ELEMENT IF INIT      3897 -> reg7",
      "140957 PUSH MEMORY ELEMENT IF INIT      3893 -> reg4",
      "140960 NEW ARRAY      1 -> reg9",
      "140963 PUSH MEMORY ELEMENT IF INIT      3889 -> reg10",
      "140966 PUT      reg9[0] = reg10",
      "140970 CALL FUNCTION      PTR: reg4 MEM: reg9",
      "140974 SET      reg2 -> reg8",
      "140977 PUT      reg7[dsd2] = reg8",
      "140983 SET I      141014",
      "140985 GET WINDOW PROP      Function -> reg8",
      "140990 NEW ARRAY      1 -> reg9",
      "140993 PUT      reg9[0] = class kek extends JSON.stringify {}",
      "140999 BIND APPLY      reg8 reg9 -> 7",
      "141003 EMPTY ARRAY      -> reg8",
      "141005 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "141009 SET      reg2 -> reg4",
      "141012 JUMP      141083",
      "141083 SET I      141233",
      "141085 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "141088 GET WINDOW PROP      Date -> reg10",
      "141093 GET      reg10[now] -> reg15",
      "141099 EMPTY ARRAY      -> reg7",
      "141101 CALL FUNCTION      OBJ: reg10 FUNC: reg15 ARGS: reg7",
      "141105 SET      reg2 -> reg9",
      "141108 PUSH MEMORY ELEMENT IF INIT      3896 -> reg7",
      "141111 SUBTRACT      reg9 - reg7 -> reg11",
      "141115 PUT      reg4[time] = reg11",
      "141121 PUSH MEMORY ELEMENT IF INIT      3897 -> reg11",
      "141124 GET      reg11[action] -> reg4",
      "141130 STRICT EQUAL      reg4 === block -> reg12",
      "141136 JUMP IF FALSE      reg12 TO: 141182 | 141139"
  ],
  "131842": [
      "131842 PUSH MEMORY ELEMENT IF INIT      3903 -> reg4",
      "131845 GET WINDOW PROP      String -> reg6",
      "131850 GET      reg6[fromCharCode] -> reg8",
      "131856 NEW ARRAY      1 -> reg9",
      "131859 PUSH MEMORY ELEMENT IF INIT      3901 -> reg10",
      "131862 GET      reg10[charCodeAt] -> reg11",
      "131868 NEW ARRAY      1 -> reg12",
      "131871 PUSH MEMORY ELEMENT IF INIT      3904 -> reg13",
      "131874 PUT      reg12[0] = reg13",
      "131878 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "131882 SET      reg2 -> reg7",
      "131885 PUSH MEMORY ELEMENT IF INIT      3902 -> reg13",
      "131888 GET      reg13[charCodeAt] -> reg14",
      "131894 NEW ARRAY      1 -> reg17",
      "131897 PUSH MEMORY ELEMENT IF INIT      3904 -> reg15",
      "131900 PUSH MEMORY ELEMENT IF INIT      3902 -> reg16",
      "131903 GET      reg16[length] -> reg18",
      "131909 MOD      reg15 % reg18 -> reg12",
      "131913 PUT      reg17[0] = reg12",
      "131917 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg17",
      "131921 SET      reg2 -> reg11",
      "131924 XOR      reg7 ^ reg11 -> reg12",
      "131928 PUT      reg9[0] = reg12",
      "131932 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "131936 SET      reg2 -> reg5",
      "131939 ADD      reg4NaN-> reg5",
      "131943 SET MEMORY ELEMENT IF INIT      3903 = reg5",
      "131946 PUSH MEMORY ELEMENT IF INIT      3904 -> reg4",
      "131949 SET      reg4 -> reg5",
      "131952 ADD      reg41-> reg4",
      "131956 SET MEMORY ELEMENT IF INIT      3904 = reg4",
      "131959 JUMP      131823",
      "131823 PUSH MEMORY ELEMENT IF INIT      3904 -> reg4",
      "131826 PUSH MEMORY ELEMENT IF INIT      3901 -> reg6",
      "131829 GET      reg6[length] -> reg5",
      "131835 LESS THAN      reg4 < reg5 -> reg6",
      "131839 JUMP IF FALSE      reg6 TO: 131961 | 131842"
  ],
  "131961": [
      "131961 PUSH MEMORY ELEMENT IF INIT      3903 -> reg4",
      "131964 JUMP OR RETURN VAL      reg4"
  ],
  "132313": [
      "132313 SET I      null",
      "132315 PUSH F.K      -> reg4",
      "132317 VOID F",
      "132318 SET MEMORY ELEMENT      0 = reg4",
      "132321 EMPTY OBJECT      -> reg4",
      "132323 PUT      reg4[verdict] = false",
      "132329 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "132332 GET      reg6[toString] -> reg7",
      "132338 EMPTY ARRAY      -> reg8",
      "132340 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "132344 SET      reg2 -> reg5",
      "132347 PUT      reg4[raw] = reg5",
      "132353 PUT      reg4[error] = true",
      "132359 JUMP OR RETURN VAL      reg4"
  ],
  "132438": [
      "132438 PUSH MEMORY ELEMENT IF INIT      3915 -> reg11",
      "132441 GET      reg11[indexOf] -> reg6",
      "132447 NEW ARRAY      1 -> reg10",
      "132450 PUT      reg10[0] = accounts.nike.com",
      "132456 CALL FUNCTION      OBJ: reg11 FUNC: reg6 ARGS: reg10",
      "132460 SET      reg2 -> reg5",
      "132463 SUBTRACT      0 - 1 -> reg9",
      "132467 STRICT EQUAL      reg5 === reg9 -> reg10",
      "132471 SET      reg10 -> reg8",
      "132474 JUMP IF FALSE      reg8 TO: 132513 | 132477"
  ],
  "132474": ["132474 JUMP IF FALSE      reg8 TO: 132513 | 132477"],
  "132477": [
      "132477 PUSH MEMORY ELEMENT IF INIT      3915 -> reg6",
      "132480 GET      reg6[indexOf] -> reg9",
      "132486 NEW ARRAY      1 -> reg10",
      "132489 PUT      reg10[0] = api.nike.com",
      "132495 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg10",
      "132499 SET      reg2 -> reg5",
      "132502 SUBTRACT      0 - 1 -> reg9",
      "132506 STRICT EQUAL      reg5 === reg9 -> reg10",
      "132510 SET      reg10 -> reg8",
      "132513 JUMP IF FALSE      reg8 TO: 132552 | 132516"
  ],
  "132513": ["132513 JUMP IF FALSE      reg8 TO: 132552 | 132516"],
  "132516": [
      "132516 PUSH MEMORY ELEMENT IF INIT      3915 -> reg9",
      "132519 GET      reg9[indexOf] -> reg10",
      "132525 NEW ARRAY      1 -> reg12",
      "132528 PUT      reg12[0] = s3.nikecdn.com",
      "132534 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg12",
      "132538 SET      reg2 -> reg5",
      "132541 SUBTRACT      0 - 1 -> reg12",
      "132545 STRICT EQUAL      reg5 === reg12 -> reg10",
      "132549 SET      reg10 -> reg8",
      "132552 PUT      reg4[verdict] = reg8",
      "132558 PUSH MEMORY ELEMENT IF INIT      3915 -> reg5",
      "132561 PUT      reg4[raw] = reg5",
      "132567 PUT      reg4[error] = false",
      "132573 JUMP OR RETURN VAL      reg4"
  ],
  "132552": [
      "132552 PUT      reg4[verdict] = reg8",
      "132558 PUSH MEMORY ELEMENT IF INIT      3915 -> reg5",
      "132561 PUT      reg4[raw] = reg5",
      "132567 PUT      reg4[error] = false",
      "132573 JUMP OR RETURN VAL      reg4"
  ],
  "132577": [
      "132577 SET I      null",
      "132579 PUSH F.K      -> reg4",
      "132581 VOID F",
      "132582 SET MEMORY ELEMENT      0 = reg4",
      "132585 EMPTY OBJECT      -> reg4",
      "132587 PUT      reg4[verdict] = false",
      "132593 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "132596 GET      reg5[toString] -> reg10",
      "132602 EMPTY ARRAY      -> reg12",
      "132604 CALL FUNCTION      OBJ: reg5 FUNC: reg10 ARGS: reg12",
      "132608 SET      reg2 -> reg8",
      "132611 PUT      reg4[raw] = reg8",
      "132617 PUT      reg4[error] = true",
      "132623 JUMP OR RETURN VAL      reg4"
  ],
  "133137": [
      "133137 GET WINDOW PROP      window -> reg10",
      "133142 GET      reg10[onload] -> reg11",
      "133148 GET      reg11[toString] -> reg10",
      "133154 EMPTY ARRAY      -> reg12",
      "133156 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg12",
      "133160 SET      reg2 -> reg7",
      "133163 GET      reg7[indexOf] -> reg10",
      "133169 NEW ARRAY      1 -> reg12",
      "133172 PUT      reg12[0] = bmak",
      "133178 CALL FUNCTION      OBJ: reg7 FUNC: reg10 ARGS: reg12",
      "133182 SET      reg2 -> reg4",
      "133185 SUBTRACT      0 - 1 -> reg10",
      "133189 GREATER THAN      reg4 > reg10 -> reg12",
      "133193 SET      reg12 -> reg8",
      "133196 SET MEMORY ELEMENT IF INIT      3925 = reg8",
      "133199 EMPTY OBJECT      -> reg4",
      "133201 PUSH MEMORY ELEMENT IF INIT      3923 -> reg10",
      "133204 GET      reg10[getVal] -> reg12",
      "133210 EMPTY ARRAY      -> reg13",
      "133212 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg13",
      "133216 SET      reg2 -> reg8",
      "133219 GREATER THAN      reg8 > 0 -> reg13",
      "133223 JUMP IF TRUE      reg13 TO: 133232 | 133226"
  ],
  "133196": [
      "133196 SET MEMORY ELEMENT IF INIT      3925 = reg8",
      "133199 EMPTY OBJECT      -> reg4",
      "133201 PUSH MEMORY ELEMENT IF INIT      3923 -> reg10",
      "133204 GET      reg10[getVal] -> reg12",
      "133210 EMPTY ARRAY      -> reg13",
      "133212 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg13",
      "133216 SET      reg2 -> reg8",
      "133219 GREATER THAN      reg8 > 0 -> reg13",
      "133223 JUMP IF TRUE      reg13 TO: 133232 | 133226"
  ],
  "133226": [
      "133226 PUSH MEMORY ELEMENT IF INIT      3925 -> reg8",
      "133229 SET      reg8 -> reg13",
      "133232 PUT      reg4[verdict] = reg13",
      "133238 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "133241 GET      reg12[stringify] -> reg13",
      "133247 NEW ARRAY      1 -> reg14",
      "133250 PUSH MEMORY ELEMENT IF INIT      3923 -> reg17",
      "133253 GET      reg17[getObjs] -> reg19",
      "133259 EMPTY ARRAY      -> reg15",
      "133261 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg15",
      "133265 SET      reg2 -> reg16",
      "133268 PUT      reg14[0] = reg16",
      "133272 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "133276 SET      reg2 -> reg8",
      "133279 PUT      reg4[raw] = reg8",
      "133285 PUT      reg4[error] = false",
      "133291 JUMP OR RETURN VAL      reg4"
  ],
  "133232": [
      "133232 PUT      reg4[verdict] = reg13",
      "133238 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "133241 GET      reg12[stringify] -> reg13",
      "133247 NEW ARRAY      1 -> reg14",
      "133250 PUSH MEMORY ELEMENT IF INIT      3923 -> reg17",
      "133253 GET      reg17[getObjs] -> reg19",
      "133259 EMPTY ARRAY      -> reg15",
      "133261 CALL FUNCTION      OBJ: reg17 FUNC: reg19 ARGS: reg15",
      "133265 SET      reg2 -> reg16",
      "133268 PUT      reg14[0] = reg16",
      "133272 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "133276 SET      reg2 -> reg8",
      "133279 PUT      reg4[raw] = reg8",
      "133285 PUT      reg4[error] = false",
      "133291 JUMP OR RETURN VAL      reg4"
  ],
  "133295": [
      "133295 SET I      133343",
      "133297 PUSH F.K      -> reg4",
      "133299 VOID F",
      "133300 SET MEMORY ELEMENT      0 = reg4",
      "133303 EMPTY OBJECT      -> reg4",
      "133305 PUT      reg4[verdict] = false",
      "133311 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "133314 GET      reg8[toString] -> reg16",
      "133320 EMPTY ARRAY      -> reg14",
      "133322 CALL FUNCTION      OBJ: reg8 FUNC: reg16 ARGS: reg14",
      "133326 SET      reg2 -> reg13",
      "133329 PUT      reg4[raw] = reg13",
      "133335 PUT      reg4[error] = true",
      "133341 JUMP OR RETURN VAL      reg4"
  ],
  "133343": [
      "133343 SET I      null",
      "133345 SET N      null",
      "133347 GET WINDOW PROP      document -> reg13",
      "133352 GET      reg13[body] -> reg15",
      "133358 GET      reg15[removeChild] -> reg13",
      "133364 NEW ARRAY      1 -> reg18",
      "133367 PUSH MEMORY ELEMENT IF INIT      3921 -> reg16",
      "133370 PUT      reg18[0] = reg16",
      "133374 CALL FUNCTION      OBJ: reg15 FUNC: reg13 ARGS: reg18",
      "133378 SET      reg2 -> reg4",
      "133381 HANDLE TRACE OR JUMP OR RETURN C",
      "133382 SET I      null",
      "133384 JUMP OR RETURN"
  ],
  "133483": [
      "133483 PUSH MEMORY ELEMENT IF INIT      3947 -> reg4",
      "133486 PUSH MEMORY ELEMENT IF INIT      3946 -> reg7",
      "133489 GET      reg4[reg7] -> reg6",
      "133493 SET MEMORY ELEMENT IF INIT      3948 = reg6",
      "133496 GET WINDOW PROP      window -> reg4",
      "133501 PUSH MEMORY ELEMENT IF INIT      3948 -> reg7",
      "133504 GET      reg4[reg7] -> reg6",
      "133508 TYPEOF      reg6 -> reg4",
      "133511 STRICT EQUAL      reg4 === function -> reg6",
      "133517 JUMP IF FALSE      reg6 TO: 133701 | 133520"
  ],
  "133520": [
      "133520 GET WINDOW PROP      window -> reg4",
      "133525 PUSH MEMORY ELEMENT IF INIT      3948 -> reg9",
      "133528 GET      reg4[reg9] -> reg6",
      "133532 GET      reg6[toString] -> reg4",
      "133538 EMPTY ARRAY      -> reg7",
      "133540 CALL FUNCTION      OBJ: reg6 FUNC: reg4 ARGS: reg7",
      "133544 SET      reg2 -> reg8",
      "133547 GET WINDOW PROP      Error -> reg12",
      "133552 GET      reg12[toString] -> reg7",
      "133558 EMPTY ARRAY      -> reg10",
      "133560 CALL FUNCTION      OBJ: reg12 FUNC: reg7 ARGS: reg10",
      "133564 SET      reg2 -> reg9",
      "133567 GET      reg9[replace] -> reg7",
      "133573 NEW ARRAY      2 -> reg14",
      "133576 NEW REGEXP      Error , g -> reg11",
      "133584 PUT      reg14[0] = reg11",
      "133588 PUSH MEMORY ELEMENT IF INIT      3948 -> reg10",
      "133591 PUT      reg14[1] = reg10",
      "133595 CALL FUNCTION      OBJ: reg9 FUNC: reg7 ARGS: reg14",
      "133599 SET      reg2 -> reg4",
      "133602 STRICT NOT EQUAL      reg8 !== reg4 -> reg7",
      "133606 JUMP IF FALSE      reg7 TO: 133701 | 133609"
  ],
  "133609": [
      "133609 PUSH MEMORY ELEMENT IF INIT      3945 -> reg4",
      "133612 GET      reg4[funcs] -> reg7",
      "133618 PUSH MEMORY ELEMENT IF INIT      3948 -> reg8",
      "133621 GET WINDOW PROP      window -> reg10",
      "133626 PUSH MEMORY ELEMENT IF INIT      3948 -> reg15",
      "133629 GET      reg10[reg15] -> reg11",
      "133633 GET      reg11[toString] -> reg10",
      "133639 EMPTY ARRAY      -> reg15",
      "133641 CALL FUNCTION      OBJ: reg11 FUNC: reg10 ARGS: reg15",
      "133645 SET      reg2 -> reg13",
      "133648 GET      reg13[substr] -> reg15",
      "133654 NEW ARRAY      2 -> reg10",
      "133657 PUT      reg10[0] = 0",
      "133661 PUT      reg10[1] = 100",
      "133665 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg10",
      "133669 SET      reg2 -> reg4",
      "133672 PUT      reg7[reg8] = reg4",
      "133676 PUSH MEMORY ELEMENT IF INIT      3945 -> reg4",
      "133679 GET      reg4[count] -> reg7",
      "133685 SET      reg7 -> reg4",
      "133688 ADD      reg71-> reg7",
      "133692 PUSH MEMORY ELEMENT IF INIT      3945 -> reg8",
      "133695 PUT      reg8[count] = reg7",
      "133701 PUSH MEMORY ELEMENT IF INIT      3946 -> reg8",
      "133704 SET      reg8 -> reg4",
      "133707 ADD      reg81-> reg8",
      "133711 SET MEMORY ELEMENT IF INIT      3946 = reg8",
      "133714 JUMP      133464",
      "133464 PUSH MEMORY ELEMENT IF INIT      3946 -> reg4",
      "133467 PUSH MEMORY ELEMENT IF INIT      3947 -> reg6",
      "133470 GET      reg6[length] -> reg7",
      "133476 LESS THAN      reg4 < reg7 -> reg6",
      "133480 JUMP IF FALSE      reg6 TO: 133716 | 133483"
  ],
  "133701": [
      "133701 PUSH MEMORY ELEMENT IF INIT      3946 -> reg8",
      "133704 SET      reg8 -> reg4",
      "133707 ADD      reg81-> reg8",
      "133711 SET MEMORY ELEMENT IF INIT      3946 = reg8",
      "133714 JUMP      133464",
      "133464 PUSH MEMORY ELEMENT IF INIT      3946 -> reg4",
      "133467 PUSH MEMORY ELEMENT IF INIT      3947 -> reg6",
      "133470 GET      reg6[length] -> reg7",
      "133476 LESS THAN      reg4 < reg7 -> reg6",
      "133480 JUMP IF FALSE      reg6 TO: 133716 | 133483"
  ],
  "133716": [
      "133716 INIT FUNCTION STATE      PTR: 133725 NAME:  LEN: 1 -> reg4",
      "133723 JUMP      134055",
      "134055 SET MEMORY ELEMENT IF INIT      3949 = reg4",
      "134058 EMPTY OBJECT      -> reg14",
      "134060 PUSH MEMORY ELEMENT IF INIT      3949 -> reg7",
      "134063 NEW ARRAY      1 -> reg10",
      "134066 PUSH MEMORY ELEMENT IF INIT      3945 -> reg4",
      "134069 PUT      reg10[0] = reg4",
      "134073 CALL FUNCTION      PTR: reg7 MEM: reg10",
      "134077 SET      reg2 -> reg8",
      "134080 PUT      reg14[verdict] = reg8",
      "134086 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "134089 GET      reg7[stringify] -> reg8",
      "134095 NEW ARRAY      1 -> reg10",
      "134098 PUSH MEMORY ELEMENT IF INIT      3945 -> reg15",
      "134101 PUT      reg10[0] = reg15",
      "134105 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "134109 SET      reg2 -> reg4",
      "134112 PUT      reg14[raw] = reg4",
      "134118 PUT      reg14[error] = false",
      "134124 JUMP OR RETURN VAL      reg14"
  ],
  "133814": [
      "133814 PUSH MEMORY ELEMENT IF INIT      3957 -> reg4",
      "133817 COPY ENUMERABLE      reg4 -> reg5",
      "133820 GET      reg5[length] -> reg4",
      "133826 EQUAL      reg4 == 0 -> reg6",
      "133830 JUMP IF TRUE      reg6 TO: 133908 | 133833"
  ],
  "133833": [
      "133833 SET      0 -> reg6",
      "133836 GET      reg5[reg6] -> reg7",
      "133840 SET MEMORY ELEMENT IF INIT      3960 = reg7",
      "133843 PUSH MEMORY ELEMENT IF INIT      3957 -> reg8",
      "133846 PUSH MEMORY ELEMENT IF INIT      3960 -> reg9",
      "133849 GET      reg8[reg9] -> reg10",
      "133853 SET MEMORY ELEMENT IF INIT      3961 = reg10",
      "133856 PUSH MEMORY ELEMENT IF INIT      3955 -> reg8",
      "133859 GET      reg8[funcs] -> reg9",
      "133865 PUSH MEMORY ELEMENT IF INIT      3961 -> reg11",
      "133868 GET      reg9[reg11] -> reg8",
      "133872 GET WINDOW PROP      undefined -> reg9",
      "133877 STRICT NOT EQUAL      reg8 !== reg9 -> reg10",
      "133881 JUMP IF FALSE      reg10 TO: 133897 | 133884"
  ],
  "133836": [
      "133836 GET      reg5[reg6] -> reg7",
      "133840 SET MEMORY ELEMENT IF INIT      3960 = reg7",
      "133843 PUSH MEMORY ELEMENT IF INIT      3957 -> reg8",
      "133846 PUSH MEMORY ELEMENT IF INIT      3960 -> reg9",
      "133849 GET      reg8[reg9] -> reg10",
      "133853 SET MEMORY ELEMENT IF INIT      3961 = reg10",
      "133856 PUSH MEMORY ELEMENT IF INIT      3955 -> reg8",
      "133859 GET      reg8[funcs] -> reg9",
      "133865 PUSH MEMORY ELEMENT IF INIT      3961 -> reg11",
      "133868 GET      reg9[reg11] -> reg8",
      "133872 GET WINDOW PROP      undefined -> reg9",
      "133877 STRICT NOT EQUAL      reg8 !== reg9 -> reg10",
      "133881 JUMP IF FALSE      reg10 TO: 133897 | 133884"
  ],
  "133884": [
      "133884 PUSH MEMORY ELEMENT IF INIT      3958 -> reg9",
      "133887 SET      reg9 -> reg8",
      "133890 ADD      reg91-> reg9",
      "133894 SET MEMORY ELEMENT IF INIT      3958 = reg9",
      "133897 ADD      reg61-> reg6",
      "133901 LESS THAN      reg6 < reg4 -> reg8",
      "133905 JUMP IF TRUE      reg8 TO: 133836 | 133908"
  ],
  "133897": [
      "133897 ADD      reg61-> reg6",
      "133901 LESS THAN      reg6 < reg4 -> reg8",
      "133905 JUMP IF TRUE      reg8 TO: 133836 | 133908"
  ],
  "133908": [
      "133908 PUSH MEMORY ELEMENT IF INIT      3956 -> reg4",
      "133911 COPY ENUMERABLE      reg4 -> reg5",
      "133914 GET      reg5[length] -> reg6",
      "133920 EQUAL      reg6 == 0 -> reg7",
      "133924 JUMP IF TRUE      reg7 TO: 134003 | 133927"
  ],
  "133927": [
      "133927 SET      0 -> reg7",
      "133930 GET      reg5[reg7] -> reg4",
      "133934 SET MEMORY ELEMENT IF INIT      3962 = reg4",
      "133937 GET WINDOW PROP      navigator -> reg11",
      "133942 GET      reg11[userAgent] -> reg9",
      "133948 GET      reg9[indexOf] -> reg10",
      "133954 NEW ARRAY      1 -> reg12",
      "133957 PUSH MEMORY ELEMENT IF INIT      3956 -> reg11",
      "133960 PUSH MEMORY ELEMENT IF INIT      3962 -> reg13",
      "133963 GET      reg11[reg13] -> reg16",
      "133967 PUT      reg12[0] = reg16",
      "133971 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg12",
      "133975 SET      reg2 -> reg8",
      "133978 SUBTRACT      0 - 1 -> reg10",
      "133982 GREATER THAN      reg8 > reg10 -> reg11",
      "133986 JUMP IF FALSE      reg11 TO: 133992 | 133989"
  ],
  "133930": [
      "133930 GET      reg5[reg7] -> reg4",
      "133934 SET MEMORY ELEMENT IF INIT      3962 = reg4",
      "133937 GET WINDOW PROP      navigator -> reg11",
      "133942 GET      reg11[userAgent] -> reg9",
      "133948 GET      reg9[indexOf] -> reg10",
      "133954 NEW ARRAY      1 -> reg12",
      "133957 PUSH MEMORY ELEMENT IF INIT      3956 -> reg11",
      "133960 PUSH MEMORY ELEMENT IF INIT      3962 -> reg13",
      "133963 GET      reg11[reg13] -> reg16",
      "133967 PUT      reg12[0] = reg16",
      "133971 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg12",
      "133975 SET      reg2 -> reg8",
      "133978 SUBTRACT      0 - 1 -> reg10",
      "133982 GREATER THAN      reg8 > reg10 -> reg11",
      "133986 JUMP IF FALSE      reg11 TO: 133992 | 133989"
  ],
  "133989": [
      "133989 SET MEMORY ELEMENT IF INIT      3959 = true",
      "133992 ADD      reg71-> reg7",
      "133996 LESS THAN      reg7 < reg6 -> reg8",
      "134000 JUMP IF TRUE      reg8 TO: 133930 | 134003"
  ],
  "133992": [
      "133992 ADD      reg71-> reg7",
      "133996 LESS THAN      reg7 < reg6 -> reg8",
      "134000 JUMP IF TRUE      reg8 TO: 133930 | 134003"
  ],
  "134003": [
      "134003 PUSH MEMORY ELEMENT IF INIT      3958 -> reg4",
      "134006 PUSH MEMORY ELEMENT IF INIT      3957 -> reg5",
      "134009 GET      reg5[length] -> reg6",
      "134015 STRICT EQUAL      reg4 === reg6 -> reg5",
      "134019 JUMP IF FALSE      reg5 TO: 134041 | 134022"
  ],
  "134022": [
      "134022 PUSH MEMORY ELEMENT IF INIT      3958 -> reg4",
      "134025 PUSH MEMORY ELEMENT IF INIT      3955 -> reg6",
      "134028 GET      reg6[count] -> reg8",
      "134034 STRICT EQUAL      reg4 === reg8 -> reg6",
      "134038 SET      reg6 -> reg5",
      "134041 JUMP IF FALSE      reg5 TO: 134053 | 134044"
  ],
  "134041": ["134041 JUMP IF FALSE      reg5 TO: 134053 | 134044"],
  "134044": [
      "134044 PUSH MEMORY ELEMENT IF INIT      3959 -> reg4",
      "134047 NOT      reg4 -> reg7",
      "134050 SET      reg7 -> reg5",
      "134053 JUMP OR RETURN VAL      reg5"
  ],
  "134053": ["134053 JUMP OR RETURN VAL      reg5"],
  "134128": [
      "134128 SET I      null",
      "134130 PUSH F.K      -> reg4",
      "134132 VOID F",
      "134133 SET MEMORY ELEMENT      0 = reg4",
      "134136 EMPTY OBJECT      -> reg4",
      "134138 PUT      reg4[verdict] = false",
      "134144 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "134147 GET      reg10[toString] -> reg15",
      "134153 EMPTY ARRAY      -> reg14",
      "134155 CALL FUNCTION      OBJ: reg10 FUNC: reg15 ARGS: reg14",
      "134159 SET      reg2 -> reg8",
      "134162 PUT      reg4[raw] = reg8",
      "134168 PUT      reg4[error] = true",
      "134174 JUMP OR RETURN VAL      reg4"
  ],
  "134304": [
      "134304 SET      0 -> reg13",
      "134307 GET      reg5[reg13] -> reg6",
      "134311 SET MEMORY ELEMENT IF INIT      3973 = reg6",
      "134314 PUSH MEMORY ELEMENT IF INIT      3972 -> reg9",
      "134317 PUSH MEMORY ELEMENT IF INIT      3973 -> reg10",
      "134320 EMPTY OBJECT      -> reg7",
      "134322 GET WINDOW PROP      window -> reg12",
      "134327 PUSH MEMORY ELEMENT IF INIT      3973 -> reg16",
      "134330 GET      reg12[reg16] -> reg14",
      "134334 TYPEOF      reg14 -> reg15",
      "134337 PUT      reg7[type] = reg15",
      "134343 GET WINDOW PROP      window -> reg12",
      "134348 PUSH MEMORY ELEMENT IF INIT      3973 -> reg15",
      "134351 GET      reg12[reg15] -> reg14",
      "134355 ADD      NaN-> reg12",
      "134361 PUT      reg7[value] = reg12",
      "134367 PUT      reg9[reg10] = reg7",
      "134371 ADD      reg131-> reg13",
      "134375 LESS THAN      reg13 < reg11 -> reg7",
      "134379 JUMP IF TRUE      reg7 TO: 134307 | 134382"
  ],
  "134307": [
      "134307 GET      reg5[reg13] -> reg6",
      "134311 SET MEMORY ELEMENT IF INIT      3973 = reg6",
      "134314 PUSH MEMORY ELEMENT IF INIT      3972 -> reg9",
      "134317 PUSH MEMORY ELEMENT IF INIT      3973 -> reg10",
      "134320 EMPTY OBJECT      -> reg7",
      "134322 GET WINDOW PROP      window -> reg12",
      "134327 PUSH MEMORY ELEMENT IF INIT      3973 -> reg16",
      "134330 GET      reg12[reg16] -> reg14",
      "134334 TYPEOF      reg14 -> reg15",
      "134337 PUT      reg7[type] = reg15",
      "134343 GET WINDOW PROP      window -> reg12",
      "134348 PUSH MEMORY ELEMENT IF INIT      3973 -> reg15",
      "134351 GET      reg12[reg15] -> reg14",
      "134355 ADD      NaN-> reg12",
      "134361 PUT      reg7[value] = reg12",
      "134367 PUT      reg9[reg10] = reg7",
      "134371 ADD      reg131-> reg13",
      "134375 LESS THAN      reg13 < reg11 -> reg7",
      "134379 JUMP IF TRUE      reg7 TO: 134307 | 134382"
  ],
  "134382": [
      "134382 PUSH MEMORY ELEMENT IF INIT      3971 -> reg6",
      "134385 GET      reg6[contentWindow] -> reg5",
      "134391 COPY ENUMERABLE      reg5 -> reg6",
      "134394 GET      reg6[length] -> reg7",
      "134400 EQUAL      reg7 == 0 -> reg10",
      "134404 JUMP IF TRUE      reg10 TO: 134451 | 134407"
  ],
  "134407": [
      "134407 SET      0 -> reg10",
      "134410 GET      reg6[reg10] -> reg5",
      "134414 SET MEMORY ELEMENT IF INIT      3974 = reg5",
      "134417 PUSH MEMORY ELEMENT IF INIT      3972 -> reg9",
      "134420 PUSH MEMORY ELEMENT IF INIT      3974 -> reg13",
      "134423 GET      reg9[reg13] -> reg12",
      "134427 JUMP IF FALSE      reg12 TO: 134440 | 134430"
  ],
  "134410": [
      "134410 GET      reg6[reg10] -> reg5",
      "134414 SET MEMORY ELEMENT IF INIT      3974 = reg5",
      "134417 PUSH MEMORY ELEMENT IF INIT      3972 -> reg9",
      "134420 PUSH MEMORY ELEMENT IF INIT      3974 -> reg13",
      "134423 GET      reg9[reg13] -> reg12",
      "134427 JUMP IF FALSE      reg12 TO: 134440 | 134430"
  ],
  "134430": [
      "134430 PUSH MEMORY ELEMENT IF INIT      3972 -> reg12",
      "134433 PUSH MEMORY ELEMENT IF INIT      3974 -> reg11",
      "134436 DELETE      reg12[reg11] -> reg9",
      "134440 ADD      reg101-> reg10",
      "134444 LESS THAN      reg10 < reg7 -> reg14",
      "134448 JUMP IF TRUE      reg14 TO: 134410 | 134451"
  ],
  "134440": [
      "134440 ADD      reg101-> reg10",
      "134444 LESS THAN      reg10 < reg7 -> reg14",
      "134448 JUMP IF TRUE      reg14 TO: 134410 | 134451"
  ],
  "134451": [
      "134451 EMPTY OBJECT      -> reg5",
      "134453 PUT      reg5[verdict] = false",
      "134459 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "134462 GET      reg7[stringify] -> reg9",
      "134468 NEW ARRAY      1 -> reg13",
      "134471 PUSH MEMORY ELEMENT IF INIT      3972 -> reg10",
      "134474 PUT      reg13[0] = reg10",
      "134478 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg13",
      "134482 SET      reg2 -> reg6",
      "134485 PUT      reg5[raw] = reg6",
      "134491 PUT      reg5[error] = false",
      "134497 JUMP OR RETURN VAL      reg5"
  ],
  "134501": [
      "134501 SET I      134549",
      "134503 PUSH F.K      -> reg5",
      "134505 VOID F",
      "134506 SET MEMORY ELEMENT      0 = reg5",
      "134509 EMPTY OBJECT      -> reg6",
      "134511 PUT      reg6[verdict] = false",
      "134517 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "134520 GET      reg9[toString] -> reg10",
      "134526 EMPTY ARRAY      -> reg14",
      "134528 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg14",
      "134532 SET      reg2 -> reg5",
      "134535 PUT      reg6[raw] = reg5",
      "134541 PUT      reg6[error] = true",
      "134547 JUMP OR RETURN VAL      reg6"
  ],
  "134549": [
      "134549 SET I      null",
      "134551 SET N      null",
      "134553 GET WINDOW PROP      document -> reg10",
      "134558 GET      reg10[body] -> reg6",
      "134564 GET      reg6[removeChild] -> reg10",
      "134570 NEW ARRAY      1 -> reg13",
      "134573 PUSH MEMORY ELEMENT IF INIT      3971 -> reg14",
      "134576 PUT      reg13[0] = reg14",
      "134580 CALL FUNCTION      OBJ: reg6 FUNC: reg10 ARGS: reg13",
      "134584 SET      reg2 -> reg5",
      "134587 HANDLE TRACE OR JUMP OR RETURN C",
      "134588 SET I      null",
      "134590 JUMP OR RETURN"
  ],
  "134737": [
      "134737 GET WINDOW PROP      window -> reg5",
      "134742 GET      reg5[prompt] -> reg10",
      "134748 GET      reg10[call] -> reg5",
      "134754 NEW ARRAY      1 -> reg9",
      "134757 EMPTY ARRAY      -> reg12",
      "134759 PUT      reg9[0] = reg12",
      "134763 CALL FUNCTION      OBJ: reg10 FUNC: reg5 ARGS: reg9",
      "134767 SET      reg2 -> reg4",
      "134770 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "134773 PUT      reg4[error] = true",
      "134779 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "134782 GET      reg4[raw] -> reg5",
      "134788 PUT      reg5[win] = unexpected",
      "134796 JUMP      134881",
      "134881 SET I      null",
      "134883 SET I      135049",
      "134885 GET WINDOW PROP      window -> reg4",
      "134890 GET      reg4[parent] -> reg5",
      "134896 GET      reg5[top] -> reg4",
      "134902 SET MEMORY ELEMENT IF INIT      3981 = reg4",
      "134905 PUSH MEMORY ELEMENT IF INIT      3981 -> reg5",
      "134908 GET      reg5[prompt] -> reg12",
      "134914 GET      reg12[toString] -> reg5",
      "134920 EMPTY ARRAY      -> reg9",
      "134922 CALL FUNCTION      OBJ: reg12 FUNC: reg5 ARGS: reg9",
      "134926 SET      reg2 -> reg4",
      "134929 GET WINDOW PROP      Error -> reg9",
      "134934 GET      reg9[toString] -> reg14",
      "134940 EMPTY ARRAY      -> reg15",
      "134942 CALL FUNCTION      OBJ: reg9 FUNC: reg14 ARGS: reg15",
      "134946 SET      reg2 -> reg13",
      "134949 GET      reg13[replace] -> reg14",
      "134955 NEW ARRAY      2 -> reg15",
      "134958 NEW REGEXP      Error , g -> reg16",
      "134966 PUT      reg15[0] = reg16",
      "134970 PUT      reg15[1] = prompt",
      "134976 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg15",
      "134980 SET      reg2 -> reg5",
      "134983 STRICT NOT EQUAL      reg4 !== reg5 -> reg15",
      "134987 JUMP IF FALSE      reg15 TO: 135047 | 134990"
  ],
  "134796": [
      "134796 JUMP      134881",
      "134881 SET I      null",
      "134883 SET I      135049",
      "134885 GET WINDOW PROP      window -> reg4",
      "134890 GET      reg4[parent] -> reg5",
      "134896 GET      reg5[top] -> reg4",
      "134902 SET MEMORY ELEMENT IF INIT      3981 = reg4",
      "134905 PUSH MEMORY ELEMENT IF INIT      3981 -> reg5",
      "134908 GET      reg5[prompt] -> reg12",
      "134914 GET      reg12[toString] -> reg5",
      "134920 EMPTY ARRAY      -> reg9",
      "134922 CALL FUNCTION      OBJ: reg12 FUNC: reg5 ARGS: reg9",
      "134926 SET      reg2 -> reg4",
      "134929 GET WINDOW PROP      Error -> reg9",
      "134934 GET      reg9[toString] -> reg14",
      "134940 EMPTY ARRAY      -> reg15",
      "134942 CALL FUNCTION      OBJ: reg9 FUNC: reg14 ARGS: reg15",
      "134946 SET      reg2 -> reg13",
      "134949 GET      reg13[replace] -> reg14",
      "134955 NEW ARRAY      2 -> reg15",
      "134958 NEW REGEXP      Error , g -> reg16",
      "134966 PUT      reg15[0] = reg16",
      "134970 PUT      reg15[1] = prompt",
      "134976 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg15",
      "134980 SET      reg2 -> reg5",
      "134983 STRICT NOT EQUAL      reg4 !== reg5 -> reg15",
      "134987 JUMP IF FALSE      reg15 TO: 135047 | 134990"
  ],
  "134798": [
      "134798 SET I      null",
      "134800 PUSH F.K      -> reg4",
      "134802 VOID F",
      "134803 SET MEMORY ELEMENT      0 = reg4",
      "134806 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "134809 GET      reg4[stack] -> reg11",
      "134815 GET      reg11[indexOf] -> reg4",
      "134821 NEW ARRAY      1 -> reg12",
      "134824 PUT      reg12[0] = prompt() is and will not be supported",
      "134830 CALL FUNCTION      OBJ: reg11 FUNC: reg4 ARGS: reg12",
      "134834 SET      reg2 -> reg5",
      "134837 SUBTRACT      0 - 1 -> reg4",
      "134841 GREATER THAN      reg5 > reg4 -> reg9",
      "134845 JUMP IF FALSE      reg9 TO: 134881 | 134848"
  ],
  "134848": [
      "134848 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "134851 PUT      reg4[verdict] = true",
      "134857 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "134860 GET      reg4[raw] -> reg5",
      "134866 PUSH MEMORY ELEMENT IF INIT      0 -> reg12",
      "134869 GET      reg12[stack] -> reg4",
      "134875 PUT      reg5[win] = reg4",
      "134881 SET I      null",
      "134883 SET I      135049",
      "134885 GET WINDOW PROP      window -> reg4",
      "134890 GET      reg4[parent] -> reg5",
      "134896 GET      reg5[top] -> reg4",
      "134902 SET MEMORY ELEMENT IF INIT      3981 = reg4",
      "134905 PUSH MEMORY ELEMENT IF INIT      3981 -> reg5",
      "134908 GET      reg5[prompt] -> reg12",
      "134914 GET      reg12[toString] -> reg5",
      "134920 EMPTY ARRAY      -> reg9",
      "134922 CALL FUNCTION      OBJ: reg12 FUNC: reg5 ARGS: reg9",
      "134926 SET      reg2 -> reg4",
      "134929 GET WINDOW PROP      Error -> reg9",
      "134934 GET      reg9[toString] -> reg14",
      "134940 EMPTY ARRAY      -> reg15",
      "134942 CALL FUNCTION      OBJ: reg9 FUNC: reg14 ARGS: reg15",
      "134946 SET      reg2 -> reg13",
      "134949 GET      reg13[replace] -> reg14",
      "134955 NEW ARRAY      2 -> reg15",
      "134958 NEW REGEXP      Error , g -> reg16",
      "134966 PUT      reg15[0] = reg16",
      "134970 PUT      reg15[1] = prompt",
      "134976 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg15",
      "134980 SET      reg2 -> reg5",
      "134983 STRICT NOT EQUAL      reg4 !== reg5 -> reg15",
      "134987 JUMP IF FALSE      reg15 TO: 135047 | 134990"
  ],
  "134881": [
      "134881 SET I      null",
      "134883 SET I      135049",
      "134885 GET WINDOW PROP      window -> reg4",
      "134890 GET      reg4[parent] -> reg5",
      "134896 GET      reg5[top] -> reg4",
      "134902 SET MEMORY ELEMENT IF INIT      3981 = reg4",
      "134905 PUSH MEMORY ELEMENT IF INIT      3981 -> reg5",
      "134908 GET      reg5[prompt] -> reg12",
      "134914 GET      reg12[toString] -> reg5",
      "134920 EMPTY ARRAY      -> reg9",
      "134922 CALL FUNCTION      OBJ: reg12 FUNC: reg5 ARGS: reg9",
      "134926 SET      reg2 -> reg4",
      "134929 GET WINDOW PROP      Error -> reg9",
      "134934 GET      reg9[toString] -> reg14",
      "134940 EMPTY ARRAY      -> reg15",
      "134942 CALL FUNCTION      OBJ: reg9 FUNC: reg14 ARGS: reg15",
      "134946 SET      reg2 -> reg13",
      "134949 GET      reg13[replace] -> reg14",
      "134955 NEW ARRAY      2 -> reg15",
      "134958 NEW REGEXP      Error , g -> reg16",
      "134966 PUT      reg15[0] = reg16",
      "134970 PUT      reg15[1] = prompt",
      "134976 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg15",
      "134980 SET      reg2 -> reg5",
      "134983 STRICT NOT EQUAL      reg4 !== reg5 -> reg15",
      "134987 JUMP IF FALSE      reg15 TO: 135047 | 134990"
  ],
  "134990": [
      "134990 PUSH MEMORY ELEMENT IF INIT      3981 -> reg4",
      "134993 GET      reg4[prompt] -> reg5",
      "134999 GET      reg5[call] -> reg4",
      "135005 NEW ARRAY      1 -> reg16",
      "135008 EMPTY ARRAY      -> reg17",
      "135010 PUT      reg16[0] = reg17",
      "135014 CALL FUNCTION      OBJ: reg5 FUNC: reg4 ARGS: reg16",
      "135018 SET      reg2 -> reg15",
      "135021 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "135024 PUT      reg4[error] = true",
      "135030 PUSH MEMORY ELEMENT IF INIT      3980 -> reg15",
      "135033 GET      reg15[raw] -> reg4",
      "135039 PUT      reg4[top] = unexpected",
      "135047 JUMP      135132",
      "135132 SET I      null",
      "135134 PUSH MEMORY ELEMENT IF INIT      3980 -> reg14",
      "135137 GET      reg14[error] -> reg4",
      "135143 JUMP IF FALSE      reg4 TO: 135155 | 135146"
  ],
  "135047": [
      "135047 JUMP      135132",
      "135132 SET I      null",
      "135134 PUSH MEMORY ELEMENT IF INIT      3980 -> reg14",
      "135137 GET      reg14[error] -> reg4",
      "135143 JUMP IF FALSE      reg4 TO: 135155 | 135146"
  ],
  "135049": [
      "135049 SET I      null",
      "135051 PUSH F.K      -> reg4",
      "135053 VOID F",
      "135054 SET MEMORY ELEMENT      0 = reg4",
      "135057 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "135060 GET      reg14[stack] -> reg16",
      "135066 GET      reg16[indexOf] -> reg14",
      "135072 NEW ARRAY      1 -> reg15",
      "135075 PUT      reg15[0] = prompt() is and will not be supported",
      "135081 CALL FUNCTION      OBJ: reg16 FUNC: reg14 ARGS: reg15",
      "135085 SET      reg2 -> reg4",
      "135088 SUBTRACT      0 - 1 -> reg14",
      "135092 GREATER THAN      reg4 > reg14 -> reg19",
      "135096 JUMP IF FALSE      reg19 TO: 135132 | 135099"
  ],
  "135099": [
      "135099 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "135102 PUT      reg4[verdict] = true",
      "135108 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "135111 GET      reg4[raw] -> reg14",
      "135117 PUSH MEMORY ELEMENT IF INIT      0 -> reg4",
      "135120 GET      reg4[stack] -> reg15",
      "135126 PUT      reg14[top] = reg15",
      "135132 SET I      null",
      "135134 PUSH MEMORY ELEMENT IF INIT      3980 -> reg14",
      "135137 GET      reg14[error] -> reg4",
      "135143 JUMP IF FALSE      reg4 TO: 135155 | 135146"
  ],
  "135132": [
      "135132 SET I      null",
      "135134 PUSH MEMORY ELEMENT IF INIT      3980 -> reg14",
      "135137 GET      reg14[error] -> reg4",
      "135143 JUMP IF FALSE      reg4 TO: 135155 | 135146"
  ],
  "135146": [
      "135146 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "135149 PUT      reg4[verdict] = false",
      "135155 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "135158 PUSH MEMORY ELEMENT IF INIT      280 -> reg14",
      "135161 GET      reg14[stringify] -> reg17",
      "135167 NEW ARRAY      1 -> reg18",
      "135170 PUSH MEMORY ELEMENT IF INIT      3980 -> reg19",
      "135173 GET      reg19[raw] -> reg20",
      "135179 PUT      reg18[0] = reg20",
      "135183 CALL FUNCTION      OBJ: reg14 FUNC: reg17 ARGS: reg18",
      "135187 SET      reg2 -> reg15",
      "135190 PUT      reg4[raw] = reg15",
      "135196 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "135199 JUMP OR RETURN VAL      reg4"
  ],
  "135155": [
      "135155 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "135158 PUSH MEMORY ELEMENT IF INIT      280 -> reg14",
      "135161 GET      reg14[stringify] -> reg17",
      "135167 NEW ARRAY      1 -> reg18",
      "135170 PUSH MEMORY ELEMENT IF INIT      3980 -> reg19",
      "135173 GET      reg19[raw] -> reg20",
      "135179 PUT      reg18[0] = reg20",
      "135183 CALL FUNCTION      OBJ: reg14 FUNC: reg17 ARGS: reg18",
      "135187 SET      reg2 -> reg15",
      "135190 PUT      reg4[raw] = reg15",
      "135196 PUSH MEMORY ELEMENT IF INIT      3980 -> reg4",
      "135199 JUMP OR RETURN VAL      reg4"
  ],
  "135269": [
      "135269 GET WINDOW PROP      window -> reg5",
      "135274 GET      reg5[chrome] -> reg4",
      "135280 SET      reg4 -> reg9",
      "135283 JUMP IF FALSE      reg9 TO: 135565 | 135286"
  ],
  "135283": ["135283 JUMP IF FALSE      reg9 TO: 135565 | 135286"],
  "135286": [
      "135286 EMPTY OBJECT      -> reg9",
      "135288 SET MEMORY ELEMENT IF INIT      3990 = reg9",
      "135291 GET WINDOW PROP      window -> reg5",
      "135296 GET      reg5[chrome] -> reg4",
      "135302 COPY ENUMERABLE      reg4 -> reg9",
      "135305 GET      reg9[length] -> reg5",
      "135311 EQUAL      reg5 == 0 -> reg6",
      "135315 JUMP IF TRUE      reg6 TO: 135470 | 135318"
  ],
  "135318": [
      "135318 SET      0 -> reg6",
      "135321 GET      reg9[reg6] -> reg4",
      "135325 SET MEMORY ELEMENT IF INIT      3991 = reg4",
      "135328 GET WINDOW PROP      window -> reg8",
      "135333 GET      reg8[chrome] -> reg10",
      "135339 PUSH MEMORY ELEMENT IF INIT      3991 -> reg11",
      "135342 GET      reg10[reg11] -> reg8",
      "135346 TYPEOF      reg8 -> reg10",
      "135349 STRICT EQUAL      reg10 === function -> reg11",
      "135355 JUMP IF FALSE      reg11 TO: 135401 | 135358"
  ],
  "135321": [
      "135321 GET      reg9[reg6] -> reg4",
      "135325 SET MEMORY ELEMENT IF INIT      3991 = reg4",
      "135328 GET WINDOW PROP      window -> reg8",
      "135333 GET      reg8[chrome] -> reg10",
      "135339 PUSH MEMORY ELEMENT IF INIT      3991 -> reg11",
      "135342 GET      reg10[reg11] -> reg8",
      "135346 TYPEOF      reg8 -> reg10",
      "135349 STRICT EQUAL      reg10 === function -> reg11",
      "135355 JUMP IF FALSE      reg11 TO: 135401 | 135358"
  ],
  "135358": [
      "135358 PUSH MEMORY ELEMENT IF INIT      3990 -> reg10",
      "135361 PUSH MEMORY ELEMENT IF INIT      3991 -> reg8",
      "135364 GET WINDOW PROP      window -> reg12",
      "135369 GET      reg12[chrome] -> reg14",
      "135375 PUSH MEMORY ELEMENT IF INIT      3991 -> reg15",
      "135378 GET      reg14[reg15] -> reg13",
      "135382 GET      reg13[toString] -> reg14",
      "135388 EMPTY ARRAY      -> reg15",
      "135390 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg15",
      "135394 SET      reg2 -> reg11",
      "135397 PUT      reg10[reg8] = reg11",
      "135401 GET WINDOW PROP      window -> reg8",
      "135406 GET      reg8[chrome] -> reg10",
      "135412 PUSH MEMORY ELEMENT IF INIT      3991 -> reg8",
      "135415 GET      reg10[reg8] -> reg11",
      "135419 TYPEOF      reg11 -> reg8",
      "135422 STRICT EQUAL      reg8 === object -> reg11",
      "135428 JUMP IF FALSE      reg11 TO: 135459 | 135431"
  ],
  "135401": [
      "135401 GET WINDOW PROP      window -> reg8",
      "135406 GET      reg8[chrome] -> reg10",
      "135412 PUSH MEMORY ELEMENT IF INIT      3991 -> reg8",
      "135415 GET      reg10[reg8] -> reg11",
      "135419 TYPEOF      reg11 -> reg8",
      "135422 STRICT EQUAL      reg8 === object -> reg11",
      "135428 JUMP IF FALSE      reg11 TO: 135459 | 135431"
  ],
  "135431": [
      "135431 PUSH MEMORY ELEMENT IF INIT      3990 -> reg8",
      "135434 PUSH MEMORY ELEMENT IF INIT      3991 -> reg11",
      "135437 GET WINDOW PROP      window -> reg10",
      "135442 GET      reg10[chrome] -> reg12",
      "135448 PUSH MEMORY ELEMENT IF INIT      3991 -> reg10",
      "135451 GET      reg12[reg10] -> reg16",
      "135455 PUT      reg8[reg11] = reg16",
      "135459 ADD      reg61-> reg6",
      "135463 LESS THAN      reg6 < reg5 -> reg10",
      "135467 JUMP IF TRUE      reg10 TO: 135321 | 135470"
  ],
  "135459": [
      "135459 ADD      reg61-> reg6",
      "135463 LESS THAN      reg6 < reg5 -> reg10",
      "135467 JUMP IF TRUE      reg10 TO: 135321 | 135470"
  ],
  "135470": [
      "135470 PUSH MEMORY ELEMENT IF INIT      280 -> reg5",
      "135473 GET      reg5[stringify] -> reg6",
      "135479 NEW ARRAY      1 -> reg10",
      "135482 PUSH MEMORY ELEMENT IF INIT      3990 -> reg8",
      "135485 PUT      reg10[0] = reg8",
      "135489 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg10",
      "135493 SET      reg2 -> reg4",
      "135496 SET MEMORY ELEMENT IF INIT      3990 = reg4",
      "135499 PUSH MEMORY ELEMENT IF INIT      3990 -> reg6",
      "135502 STRICT EQUAL      reg6 === {} -> reg4",
      "135508 JUMP IF FALSE      reg4 TO: 135538 | 135511"
  ],
  "135511": [
      "135511 EMPTY OBJECT      -> reg4",
      "135513 PUT      reg4[verdict] = true",
      "135519 PUSH MEMORY ELEMENT IF INIT      3990 -> reg6",
      "135522 PUT      reg4[raw] = reg6",
      "135528 PUT      reg4[error] = false",
      "135534 JUMP OR RETURN VAL      reg4"
  ],
  "135538": [
      "135538 EMPTY OBJECT      -> reg4",
      "135540 PUT      reg4[verdict] = false",
      "135546 PUSH MEMORY ELEMENT IF INIT      3990 -> reg8",
      "135549 PUT      reg4[raw] = reg8",
      "135555 PUT      reg4[error] = false",
      "135561 JUMP OR RETURN VAL      reg4"
  ],
  "135565": [
      "135565 EMPTY OBJECT      -> reg4",
      "135567 PUT      reg4[verdict] = false",
      "135573 PUT      reg4[raw] = n/a",
      "135581 PUT      reg4[error] = false",
      "135587 JUMP OR RETURN VAL      reg4"
  ],
  "135591": [
      "135591 SET I      null",
      "135593 PUSH F.K      -> reg4",
      "135595 VOID F",
      "135596 SET MEMORY ELEMENT      0 = reg4",
      "135599 EMPTY OBJECT      -> reg6",
      "135601 PUT      reg6[verdict] = false",
      "135607 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "135610 GET      reg8[toString] -> reg9",
      "135616 EMPTY ARRAY      -> reg15",
      "135618 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg15",
      "135622 SET      reg2 -> reg4",
      "135625 PUT      reg6[raw] = reg4",
      "135631 PUT      reg6[error] = true",
      "135637 JUMP OR RETURN VAL      reg6"
  ],
  "135738": [
      "135738 PUSH MEMORY ELEMENT IF INIT      4000 -> reg6",
      "135741 SET      reg6 -> reg5",
      "135744 PUT      reg4[verdict] = reg5",
      "135750 GET WINDOW PROP      parent -> reg5",
      "135755 GET      reg5[location] -> reg6",
      "135761 GET      reg6[origin] -> reg5",
      "135767 PUT      reg4[raw] = reg5",
      "135773 PUT      reg4[error] = false",
      "135779 JUMP OR RETURN VAL      reg4"
  ],
  "135744": [
      "135744 PUT      reg4[verdict] = reg5",
      "135750 GET WINDOW PROP      parent -> reg5",
      "135755 GET      reg5[location] -> reg6",
      "135761 GET      reg6[origin] -> reg5",
      "135767 PUT      reg4[raw] = reg5",
      "135773 PUT      reg4[error] = false",
      "135779 JUMP OR RETURN VAL      reg4"
  ],
  "135783": [
      "135783 SET I      null",
      "135785 PUSH F.K      -> reg4",
      "135787 VOID F",
      "135788 SET MEMORY ELEMENT      0 = reg4",
      "135791 EMPTY OBJECT      -> reg4",
      "135793 PUT      reg4[verdict] = false",
      "135799 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "135802 GET      reg6[toString] -> reg7",
      "135808 EMPTY ARRAY      -> reg8",
      "135810 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "135814 SET      reg2 -> reg5",
      "135817 PUT      reg4[raw] = reg5",
      "135823 PUT      reg4[error] = true",
      "135829 JUMP OR RETURN VAL      reg4"
  ],
  "135919": [
      "135919 PUSH MEMORY ELEMENT IF INIT      4005 -> reg4",
      "135922 PUT      reg4[verdict] = true",
      "135928 PUSH MEMORY ELEMENT IF INIT      4005 -> reg4",
      "135931 GET      reg4[raw] -> reg5",
      "135937 PUT      reg5[a] = true",
      "135943 GET WINDOW PROP      window -> reg4",
      "135948 GET      reg4[abcd1234b] -> reg5",
      "135954 JUMP IF FALSE      reg5 TO: 135981 | 135957"
  ],
  "135943": [
      "135943 GET WINDOW PROP      window -> reg4",
      "135948 GET      reg4[abcd1234b] -> reg5",
      "135954 JUMP IF FALSE      reg5 TO: 135981 | 135957"
  ],
  "135957": [
      "135957 PUSH MEMORY ELEMENT IF INIT      4005 -> reg6",
      "135960 PUT      reg6[verdict] = true",
      "135966 PUSH MEMORY ELEMENT IF INIT      4005 -> reg4",
      "135969 GET      reg4[raw] -> reg5",
      "135975 PUT      reg5[b] = true",
      "135981 GET WINDOW PROP      window -> reg5",
      "135986 GET      reg5[c] -> reg4",
      "135992 JUMP IF FALSE      reg4 TO: 136117 | 135995"
  ],
  "135981": [
      "135981 GET WINDOW PROP      window -> reg5",
      "135986 GET      reg5[c] -> reg4",
      "135992 JUMP IF FALSE      reg4 TO: 136117 | 135995"
  ],
  "135995": [
      "135995 PUSH MEMORY ELEMENT IF INIT      4005 -> reg4",
      "135998 GET      reg4[raw] -> reg5",
      "136004 GET WINDOW PROP      window -> reg7",
      "136009 GET      reg7[c] -> reg9",
      "136015 GET      reg9[toString] -> reg7",
      "136021 EMPTY ARRAY      -> reg8",
      "136023 CALL FUNCTION      OBJ: reg9 FUNC: reg7 ARGS: reg8",
      "136027 SET      reg2 -> reg6",
      "136030 GET      reg6[substr] -> reg8",
      "136036 NEW ARRAY      2 -> reg7",
      "136039 PUT      reg7[0] = 0",
      "136043 PUT      reg7[1] = 120",
      "136047 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg7",
      "136051 SET      reg2 -> reg4",
      "136054 PUT      reg5[c] = reg4",
      "136060 PUSH MEMORY ELEMENT IF INIT      4005 -> reg4",
      "136063 GET      reg4[raw] -> reg5",
      "136069 GET      reg5[c] -> reg4",
      "136075 GET      reg4[indexOf] -> reg10",
      "136081 NEW ARRAY      1 -> reg5",
      "136084 PUT      reg5[0] = abcd1234b",
      "136090 CALL FUNCTION      OBJ: reg4 FUNC: reg10 ARGS: reg5",
      "136094 SET      reg2 -> reg8",
      "136097 SUBTRACT      0 - 1 -> reg5",
      "136101 GREATER THAN      reg8 > reg5 -> reg7",
      "136105 JUMP IF FALSE      reg7 TO: 136117 | 136108"
  ],
  "136108": [
      "136108 PUSH MEMORY ELEMENT IF INIT      4005 -> reg5",
      "136111 PUT      reg5[verdict] = true",
      "136117 GET WINDOW PROP      window -> reg7",
      "136122 GET      reg7[onload] -> reg5",
      "136128 JUMP IF FALSE      reg5 TO: 136253 | 136131"
  ],
  "136117": [
      "136117 GET WINDOW PROP      window -> reg7",
      "136122 GET      reg7[onload] -> reg5",
      "136128 JUMP IF FALSE      reg5 TO: 136253 | 136131"
  ],
  "136131": [
      "136131 PUSH MEMORY ELEMENT IF INIT      4005 -> reg5",
      "136134 GET      reg5[raw] -> reg7",
      "136140 GET WINDOW PROP      window -> reg14",
      "136145 GET      reg14[onload] -> reg10",
      "136151 GET      reg10[toString] -> reg11",
      "136157 EMPTY ARRAY      -> reg13",
      "136159 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg13",
      "136163 SET      reg2 -> reg5",
      "136166 GET      reg5[substr] -> reg11",
      "136172 NEW ARRAY      2 -> reg12",
      "136175 PUT      reg12[0] = 0",
      "136179 PUT      reg12[1] = 120",
      "136183 CALL FUNCTION      OBJ: reg5 FUNC: reg11 ARGS: reg12",
      "136187 SET      reg2 -> reg8",
      "136190 PUT      reg7[d] = reg8",
      "136196 PUSH MEMORY ELEMENT IF INIT      4005 -> reg11",
      "136199 GET      reg11[raw] -> reg8",
      "136205 GET      reg8[d] -> reg11",
      "136211 GET      reg11[indexOf] -> reg8",
      "136217 NEW ARRAY      1 -> reg12",
      "136220 PUT      reg12[0] = abcd1234b",
      "136226 CALL FUNCTION      OBJ: reg11 FUNC: reg8 ARGS: reg12",
      "136230 SET      reg2 -> reg7",
      "136233 SUBTRACT      0 - 1 -> reg8",
      "136237 GREATER THAN      reg7 > reg8 -> reg12",
      "136241 JUMP IF FALSE      reg12 TO: 136253 | 136244"
  ],
  "136244": [
      "136244 PUSH MEMORY ELEMENT IF INIT      4005 -> reg7",
      "136247 PUT      reg7[verdict] = true",
      "136253 GET WINDOW PROP      window -> reg7",
      "136258 GET      reg7[e] -> reg8",
      "136264 JUMP IF FALSE      reg8 TO: 136389 | 136267"
  ],
  "136253": [
      "136253 GET WINDOW PROP      window -> reg7",
      "136258 GET      reg7[e] -> reg8",
      "136264 JUMP IF FALSE      reg8 TO: 136389 | 136267"
  ],
  "136267": [
      "136267 PUSH MEMORY ELEMENT IF INIT      4005 -> reg12",
      "136270 GET      reg12[raw] -> reg7",
      "136276 GET WINDOW PROP      window -> reg8",
      "136281 GET      reg8[e] -> reg15",
      "136287 GET      reg15[toString] -> reg8",
      "136293 EMPTY ARRAY      -> reg16",
      "136295 CALL FUNCTION      OBJ: reg15 FUNC: reg8 ARGS: reg16",
      "136299 SET      reg2 -> reg13",
      "136302 GET      reg13[substr] -> reg8",
      "136308 NEW ARRAY      2 -> reg14",
      "136311 PUT      reg14[0] = 0",
      "136315 PUT      reg14[1] = 120",
      "136319 CALL FUNCTION      OBJ: reg13 FUNC: reg8 ARGS: reg14",
      "136323 SET      reg2 -> reg12",
      "136326 PUT      reg7[e] = reg12",
      "136332 PUSH MEMORY ELEMENT IF INIT      4005 -> reg12",
      "136335 GET      reg12[raw] -> reg8",
      "136341 GET      reg8[e] -> reg14",
      "136347 GET      reg14[indexOf] -> reg12",
      "136353 NEW ARRAY      1 -> reg8",
      "136356 PUT      reg8[0] = abcd1234b",
      "136362 CALL FUNCTION      OBJ: reg14 FUNC: reg12 ARGS: reg8",
      "136366 SET      reg2 -> reg7",
      "136369 SUBTRACT      0 - 1 -> reg8",
      "136373 GREATER THAN      reg7 > reg8 -> reg16",
      "136377 JUMP IF FALSE      reg16 TO: 136389 | 136380"
  ],
  "136380": [
      "136380 PUSH MEMORY ELEMENT IF INIT      4005 -> reg8",
      "136383 PUT      reg8[verdict] = true",
      "136389 PUSH MEMORY ELEMENT IF INIT      4005 -> reg7",
      "136392 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "136395 GET      reg12[stringify] -> reg16",
      "136401 NEW ARRAY      1 -> reg18",
      "136404 PUSH MEMORY ELEMENT IF INIT      4005 -> reg17",
      "136407 GET      reg17[raw] -> reg20",
      "136413 PUT      reg18[0] = reg20",
      "136417 CALL FUNCTION      OBJ: reg12 FUNC: reg16 ARGS: reg18",
      "136421 SET      reg2 -> reg8",
      "136424 PUT      reg7[raw] = reg8",
      "136430 PUSH MEMORY ELEMENT IF INIT      4005 -> reg7",
      "136433 JUMP OR RETURN VAL      reg7"
  ],
  "136389": [
      "136389 PUSH MEMORY ELEMENT IF INIT      4005 -> reg7",
      "136392 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "136395 GET      reg12[stringify] -> reg16",
      "136401 NEW ARRAY      1 -> reg18",
      "136404 PUSH MEMORY ELEMENT IF INIT      4005 -> reg17",
      "136407 GET      reg17[raw] -> reg20",
      "136413 PUT      reg18[0] = reg20",
      "136417 CALL FUNCTION      OBJ: reg12 FUNC: reg16 ARGS: reg18",
      "136421 SET      reg2 -> reg8",
      "136424 PUT      reg7[raw] = reg8",
      "136430 PUSH MEMORY ELEMENT IF INIT      4005 -> reg7",
      "136433 JUMP OR RETURN VAL      reg7"
  ],
  "136437": [
      "136437 SET I      null",
      "136439 PUSH F.K      -> reg7",
      "136441 VOID F",
      "136442 SET MEMORY ELEMENT      0 = reg7",
      "136445 EMPTY OBJECT      -> reg7",
      "136447 PUT      reg7[verdict] = false",
      "136453 PUSH MEMORY ELEMENT IF INIT      0 -> reg16",
      "136456 GET      reg16[toString] -> reg17",
      "136462 EMPTY ARRAY      -> reg18",
      "136464 CALL FUNCTION      OBJ: reg16 FUNC: reg17 ARGS: reg18",
      "136468 SET      reg2 -> reg8",
      "136471 PUT      reg7[raw] = reg8",
      "136477 PUT      reg7[error] = true",
      "136483 JUMP OR RETURN VAL      reg7"
  ],
  "136595": [
      "136595 PUSH MEMORY ELEMENT IF INIT      4016 -> reg4",
      "136598 GET      reg4[raw] -> reg9",
      "136604 PUT      reg9[hel] = true",
      "136610 PUSH MEMORY ELEMENT IF INIT      4016 -> reg4",
      "136613 PUT      reg4[verdict] = true",
      "136619 GET WINDOW PROP      document -> reg7",
      "136624 GET      reg7[getElementsByTagName] -> reg9",
      "136630 NEW ARRAY      1 -> reg10",
      "136633 PUT      reg10[0] = style",
      "136639 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "136643 SET      reg2 -> reg4",
      "136646 SET MEMORY ELEMENT IF INIT      4018 = reg4",
      "136649 SET MEMORY ELEMENT IF INIT      4019 = 0",
      "136652 PUSH MEMORY ELEMENT IF INIT      4019 -> reg4",
      "136655 PUSH MEMORY ELEMENT IF INIT      4018 -> reg6",
      "136658 GET      reg6[length] -> reg9",
      "136664 LESS THAN      reg4 < reg9 -> reg8",
      "136668 JUMP IF FALSE      reg8 TO: 136765 | 136671"
  ],
  "136619": [
      "136619 GET WINDOW PROP      document -> reg7",
      "136624 GET      reg7[getElementsByTagName] -> reg9",
      "136630 NEW ARRAY      1 -> reg10",
      "136633 PUT      reg10[0] = style",
      "136639 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "136643 SET      reg2 -> reg4",
      "136646 SET MEMORY ELEMENT IF INIT      4018 = reg4",
      "136649 SET MEMORY ELEMENT IF INIT      4019 = 0",
      "136652 PUSH MEMORY ELEMENT IF INIT      4019 -> reg4",
      "136655 PUSH MEMORY ELEMENT IF INIT      4018 -> reg6",
      "136658 GET      reg6[length] -> reg9",
      "136664 LESS THAN      reg4 < reg9 -> reg8",
      "136668 JUMP IF FALSE      reg8 TO: 136765 | 136671"
  ],
  "136671": [
      "136671 PUSH MEMORY ELEMENT IF INIT      4018 -> reg4",
      "136674 PUSH MEMORY ELEMENT IF INIT      4019 -> reg8",
      "136677 GET      reg4[reg8] -> reg6",
      "136681 SET MEMORY ELEMENT IF INIT      4020 = reg6",
      "136684 PUSH MEMORY ELEMENT IF INIT      4020 -> reg4",
      "136687 GET      reg4[innerHTML] -> reg6",
      "136693 GET      reg6[indexOf] -> reg4",
      "136699 NEW ARRAY      1 -> reg8",
      "136702 PUT      reg8[0] = p-mouse-pointer",
      "136708 CALL FUNCTION      OBJ: reg6 FUNC: reg4 ARGS: reg8",
      "136712 SET      reg2 -> reg9",
      "136715 SUBTRACT      0 - 1 -> reg8",
      "136719 GREATER THAN      reg9 > reg8 -> reg10",
      "136723 JUMP IF FALSE      reg10 TO: 136750 | 136726"
  ],
  "136726": [
      "136726 PUSH MEMORY ELEMENT IF INIT      4016 -> reg4",
      "136729 GET      reg4[raw] -> reg8",
      "136735 PUT      reg8[stl] = true",
      "136741 PUSH MEMORY ELEMENT IF INIT      4016 -> reg4",
      "136744 PUT      reg4[verdict] = true",
      "136750 PUSH MEMORY ELEMENT IF INIT      4019 -> reg8",
      "136753 SET      reg8 -> reg9",
      "136756 ADD      reg81-> reg8",
      "136760 SET MEMORY ELEMENT IF INIT      4019 = reg8",
      "136763 JUMP      136652",
      "136652 PUSH MEMORY ELEMENT IF INIT      4019 -> reg4",
      "136655 PUSH MEMORY ELEMENT IF INIT      4018 -> reg6",
      "136658 GET      reg6[length] -> reg9",
      "136664 LESS THAN      reg4 < reg9 -> reg8",
      "136668 JUMP IF FALSE      reg8 TO: 136765 | 136671"
  ],
  "136750": [
      "136750 PUSH MEMORY ELEMENT IF INIT      4019 -> reg8",
      "136753 SET      reg8 -> reg9",
      "136756 ADD      reg81-> reg8",
      "136760 SET MEMORY ELEMENT IF INIT      4019 = reg8",
      "136763 JUMP      136652",
      "136652 PUSH MEMORY ELEMENT IF INIT      4019 -> reg4",
      "136655 PUSH MEMORY ELEMENT IF INIT      4018 -> reg6",
      "136658 GET      reg6[length] -> reg9",
      "136664 LESS THAN      reg4 < reg9 -> reg8",
      "136668 JUMP IF FALSE      reg8 TO: 136765 | 136671"
  ],
  "136765": [
      "136765 PUSH MEMORY ELEMENT IF INIT      4016 -> reg8",
      "136768 PUSH MEMORY ELEMENT IF INIT      280 -> reg4",
      "136771 GET      reg4[stringify] -> reg10",
      "136777 NEW ARRAY      1 -> reg11",
      "136780 PUSH MEMORY ELEMENT IF INIT      4016 -> reg12",
      "136783 GET      reg12[raw] -> reg14",
      "136789 PUT      reg11[0] = reg14",
      "136793 CALL FUNCTION      OBJ: reg4 FUNC: reg10 ARGS: reg11",
      "136797 SET      reg2 -> reg9",
      "136800 PUT      reg8[raw] = reg9",
      "136806 PUSH MEMORY ELEMENT IF INIT      4016 -> reg8",
      "136809 JUMP OR RETURN VAL      reg8"
  ],
  "136813": [
      "136813 SET I      null",
      "136815 PUSH F.K      -> reg8",
      "136817 VOID F",
      "136818 SET MEMORY ELEMENT      0 = reg8",
      "136821 EMPTY OBJECT      -> reg9",
      "136823 PUT      reg9[verdict] = false",
      "136829 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "136832 GET      reg10[toString] -> reg11",
      "136838 EMPTY ARRAY      -> reg12",
      "136840 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "136844 SET      reg2 -> reg8",
      "136847 PUT      reg9[raw] = reg8",
      "136853 PUT      reg9[error] = true",
      "136859 JUMP OR RETURN VAL      reg9"
  ],
  "136957": [
      "136957 GET WINDOW PROP      navigator -> reg4",
      "136962 GET      reg4[userAgentData] -> reg6",
      "136968 JUMP IF FALSE      reg6 TO: 136991 | 136971"
  ],
  "136971": [
      "136971 GET WINDOW PROP      navigator -> reg8",
      "136976 GET      reg8[userAgentData] -> reg4",
      "136982 GET      reg4[brands] -> reg7",
      "136988 SET      reg7 -> reg6",
      "136991 JUMP IF FALSE      reg6 TO: 137254 | 136994"
  ],
  "136991": ["136991 JUMP IF FALSE      reg6 TO: 137254 | 136994"],
  "136994": [
      "136994 PUSH MEMORY ELEMENT IF INIT      4026 -> reg6",
      "136997 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "137000 GET      reg7[stringify] -> reg9",
      "137006 NEW ARRAY      1 -> reg8",
      "137009 GET WINDOW PROP      navigator -> reg10",
      "137014 GET      reg10[userAgentData] -> reg12",
      "137020 GET      reg12[brands] -> reg10",
      "137026 PUT      reg8[0] = reg10",
      "137030 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg8",
      "137034 SET      reg2 -> reg4",
      "137037 PUT      reg6[raw] = reg4",
      "137043 SET MEMORY ELEMENT IF INIT      4027 = false",
      "137046 PUSH MEMORY ELEMENT IF INIT      21 -> reg8",
      "137049 NEW ARRAY      1 -> reg6",
      "137052 GET WINDOW PROP      navigator -> reg9",
      "137057 GET      reg9[userAgentData] -> reg10",
      "137063 GET      reg10[brands] -> reg11",
      "137069 PUT      reg6[0] = reg11",
      "137073 CALL FUNCTION      PTR: reg8 MEM: reg6",
      "137077 SET      reg2 -> reg4",
      "137080 SET MEMORY ELEMENT IF INIT      4028 = reg4",
      "137083 SET I      137175",
      "137085 SET N      137209",
      "137087 PUSH MEMORY ELEMENT IF INIT      4028 -> reg11",
      "137090 GET      reg11[s] -> reg8",
      "137096 EMPTY ARRAY      -> reg6",
      "137098 CALL FUNCTION      OBJ: reg11 FUNC: reg8 ARGS: reg6",
      "137102 SET      reg2 -> reg4",
      "137105 PUSH MEMORY ELEMENT IF INIT      4028 -> reg8",
      "137108 GET      reg8[n] -> reg10",
      "137114 EMPTY ARRAY      -> reg9",
      "137116 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg9",
      "137120 SET      reg2 -> reg6",
      "137123 SET MEMORY ELEMENT IF INIT      4029 = reg6",
      "137126 GET      reg6[done] -> reg9",
      "137132 NOT      reg9 -> reg6",
      "137135 JUMP IF FALSE      reg6 TO: 137173 | 137138"
  ],
  "137138": [
      "137138 PUSH MEMORY ELEMENT IF INIT      4029 -> reg6",
      "137141 GET      reg6[value] -> reg9",
      "137147 SET MEMORY ELEMENT IF INIT      4030 = reg9",
      "137150 PUSH MEMORY ELEMENT IF INIT      4030 -> reg10",
      "137153 GET      reg10[brand] -> reg9",
      "137159 STRICT EQUAL      reg9 === Google Chrome -> reg6",
      "137165 JUMP IF FALSE      reg6 TO: 137171 | 137168"
  ],
  "137168": [
      "137168 SET MEMORY ELEMENT IF INIT      4027 = true",
      "137171 JUMP      137105",
      "137105 PUSH MEMORY ELEMENT IF INIT      4028 -> reg8",
      "137108 GET      reg8[n] -> reg10",
      "137114 EMPTY ARRAY      -> reg9",
      "137116 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg9",
      "137120 SET      reg2 -> reg6",
      "137123 SET MEMORY ELEMENT IF INIT      4029 = reg6",
      "137126 GET      reg6[done] -> reg9",
      "137132 NOT      reg9 -> reg6",
      "137135 JUMP IF FALSE      reg6 TO: 137173 | 137138"
  ],
  "137171": [
      "137171 JUMP      137105",
      "137105 PUSH MEMORY ELEMENT IF INIT      4028 -> reg8",
      "137108 GET      reg8[n] -> reg10",
      "137114 EMPTY ARRAY      -> reg9",
      "137116 CALL FUNCTION      OBJ: reg8 FUNC: reg10 ARGS: reg9",
      "137120 SET      reg2 -> reg6",
      "137123 SET MEMORY ELEMENT IF INIT      4029 = reg6",
      "137126 GET      reg6[done] -> reg9",
      "137132 NOT      reg9 -> reg6",
      "137135 JUMP IF FALSE      reg6 TO: 137173 | 137138"
  ],
  "137173": [
      "137173 JUMP      137209",
      "137209 SET I      137281",
      "137211 SET N      null",
      "137213 PUSH MEMORY ELEMENT IF INIT      4028 -> reg10",
      "137216 GET      reg10[f] -> reg6",
      "137222 EMPTY ARRAY      -> reg13",
      "137224 CALL FUNCTION      OBJ: reg10 FUNC: reg6 ARGS: reg13",
      "137228 SET      reg2 -> reg12",
      "137231 HANDLE TRACE OR JUMP OR RETURN C",
      "137232 SET I      137281",
      "137234 PUSH MEMORY ELEMENT IF INIT      4027 -> reg6",
      "137237 NOT      reg6 -> reg12",
      "137240 JUMP IF FALSE      reg12 TO: 137252 | 137243"
  ],
  "137175": [
      "137175 SET I      137209",
      "137177 PUSH F.K      -> reg6",
      "137179 VOID F",
      "137180 SET MEMORY ELEMENT      0 = reg6",
      "137183 PUSH MEMORY ELEMENT IF INIT      4028 -> reg9",
      "137186 GET      reg9[e] -> reg10",
      "137192 NEW ARRAY      1 -> reg13",
      "137195 PUSH MEMORY ELEMENT IF INIT      0 -> reg12",
      "137198 PUT      reg13[0] = reg12",
      "137202 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg13",
      "137206 SET      reg2 -> reg6",
      "137209 SET I      137281",
      "137211 SET N      null",
      "137213 PUSH MEMORY ELEMENT IF INIT      4028 -> reg10",
      "137216 GET      reg10[f] -> reg6",
      "137222 EMPTY ARRAY      -> reg13",
      "137224 CALL FUNCTION      OBJ: reg10 FUNC: reg6 ARGS: reg13",
      "137228 SET      reg2 -> reg12",
      "137231 HANDLE TRACE OR JUMP OR RETURN C",
      "137232 SET I      137281",
      "137234 PUSH MEMORY ELEMENT IF INIT      4027 -> reg6",
      "137237 NOT      reg6 -> reg12",
      "137240 JUMP IF FALSE      reg12 TO: 137252 | 137243"
  ],
  "137209": [
      "137209 SET I      137281",
      "137211 SET N      null",
      "137213 PUSH MEMORY ELEMENT IF INIT      4028 -> reg10",
      "137216 GET      reg10[f] -> reg6",
      "137222 EMPTY ARRAY      -> reg13",
      "137224 CALL FUNCTION      OBJ: reg10 FUNC: reg6 ARGS: reg13",
      "137228 SET      reg2 -> reg12",
      "137231 HANDLE TRACE OR JUMP OR RETURN C",
      "137232 SET I      137281",
      "137234 PUSH MEMORY ELEMENT IF INIT      4027 -> reg6",
      "137237 NOT      reg6 -> reg12",
      "137240 JUMP IF FALSE      reg12 TO: 137252 | 137243"
  ],
  "137243": [
      "137243 PUSH MEMORY ELEMENT IF INIT      4026 -> reg13",
      "137246 PUT      reg13[verdict] = true",
      "137252 JUMP      137274",
      "137274 PUSH MEMORY ELEMENT IF INIT      4026 -> reg6",
      "137277 JUMP OR RETURN VAL      reg6"
  ],
  "137252": [
      "137252 JUMP      137274",
      "137274 PUSH MEMORY ELEMENT IF INIT      4026 -> reg6",
      "137277 JUMP OR RETURN VAL      reg6"
  ],
  "137254": [
      "137254 PUSH MEMORY ELEMENT IF INIT      4026 -> reg6",
      "137257 PUT      reg6[verdict] = true",
      "137263 PUSH MEMORY ELEMENT IF INIT      4026 -> reg12",
      "137266 PUT      reg12[raw] = missing",
      "137274 PUSH MEMORY ELEMENT IF INIT      4026 -> reg6",
      "137277 JUMP OR RETURN VAL      reg6"
  ],
  "137274": [
      "137274 PUSH MEMORY ELEMENT IF INIT      4026 -> reg6",
      "137277 JUMP OR RETURN VAL      reg6"
  ],
  "137281": [
      "137281 SET I      null",
      "137283 PUSH F.K      -> reg6",
      "137285 VOID F",
      "137286 SET MEMORY ELEMENT      0 = reg6",
      "137289 EMPTY OBJECT      -> reg12",
      "137291 PUT      reg12[verdict] = false",
      "137297 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "137300 GET      reg6[toString] -> reg14",
      "137306 EMPTY ARRAY      -> reg15",
      "137308 CALL FUNCTION      OBJ: reg6 FUNC: reg14 ARGS: reg15",
      "137312 SET      reg2 -> reg13",
      "137315 PUT      reg12[raw] = reg13",
      "137321 PUT      reg12[error] = true",
      "137327 JUMP OR RETURN VAL      reg12"
  ],
  "137402": [
      "137402 PUSH MEMORY ELEMENT IF INIT      4041 -> reg5",
      "137405 STRICT EQUAL      reg5 === 600 -> reg6",
      "137409 SET      reg6 -> reg7",
      "137412 PUT      reg4[verdict] = reg7",
      "137418 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "137421 GET      reg6[stringify] -> reg7",
      "137427 NEW ARRAY      1 -> reg8",
      "137430 EMPTY OBJECT      -> reg9",
      "137432 PUSH MEMORY ELEMENT IF INIT      4040 -> reg10",
      "137435 PUT      reg9[w] = reg10",
      "137441 PUSH MEMORY ELEMENT IF INIT      4041 -> reg10",
      "137444 PUT      reg9[h] = reg10",
      "137450 PUT      reg8[0] = reg9",
      "137454 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "137458 SET      reg2 -> reg5",
      "137461 PUT      reg4[raw] = reg5",
      "137467 PUT      reg4[error] = false",
      "137473 JUMP OR RETURN VAL      reg4"
  ],
  "137412": [
      "137412 PUT      reg4[verdict] = reg7",
      "137418 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "137421 GET      reg6[stringify] -> reg7",
      "137427 NEW ARRAY      1 -> reg8",
      "137430 EMPTY OBJECT      -> reg9",
      "137432 PUSH MEMORY ELEMENT IF INIT      4040 -> reg10",
      "137435 PUT      reg9[w] = reg10",
      "137441 PUSH MEMORY ELEMENT IF INIT      4041 -> reg10",
      "137444 PUT      reg9[h] = reg10",
      "137450 PUT      reg8[0] = reg9",
      "137454 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "137458 SET      reg2 -> reg5",
      "137461 PUT      reg4[raw] = reg5",
      "137467 PUT      reg4[error] = false",
      "137473 JUMP OR RETURN VAL      reg4"
  ],
  "137477": [
      "137477 SET I      null",
      "137479 PUSH F.K      -> reg4",
      "137481 VOID F",
      "137482 SET MEMORY ELEMENT      0 = reg4",
      "137485 EMPTY OBJECT      -> reg9",
      "137487 PUT      reg9[verdict] = false",
      "137493 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "137496 GET      reg5[toString] -> reg7",
      "137502 EMPTY ARRAY      -> reg10",
      "137504 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg10",
      "137508 SET      reg2 -> reg4",
      "137511 PUT      reg9[raw] = reg4",
      "137517 PUT      reg9[error] = true",
      "137523 JUMP OR RETURN VAL      reg9"
  ],
  "137588": [
      "137588 GET WINDOW PROP      Object -> reg6",
      "137593 GET      reg6[keys] -> reg8",
      "137599 NEW ARRAY      1 -> reg5",
      "137602 PUSH MEMORY ELEMENT IF INIT      4045 -> reg7",
      "137605 GET      reg7[bmak] -> reg10",
      "137611 PUT      reg5[0] = reg10",
      "137615 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg5",
      "137619 SET      reg2 -> reg4",
      "137622 SET MEMORY ELEMENT IF INIT      4046 = reg4",
      "137625 EMPTY OBJECT      -> reg4",
      "137627 SET MEMORY ELEMENT IF INIT      4047 = reg4",
      "137630 SET MEMORY ELEMENT IF INIT      4048 = 0",
      "137633 PUSH MEMORY ELEMENT IF INIT      4046 -> reg4",
      "137636 SET MEMORY ELEMENT IF INIT      4049 = reg4",
      "137639 PUSH MEMORY ELEMENT IF INIT      4048 -> reg4",
      "137642 PUSH MEMORY ELEMENT IF INIT      4049 -> reg5",
      "137645 GET      reg5[length] -> reg10",
      "137651 LESS THAN      reg4 < reg10 -> reg5",
      "137655 JUMP IF FALSE      reg5 TO: 137779 | 137658"
  ],
  "137658": [
      "137658 PUSH MEMORY ELEMENT IF INIT      4049 -> reg5",
      "137661 PUSH MEMORY ELEMENT IF INIT      4048 -> reg8",
      "137664 GET      reg5[reg8] -> reg4",
      "137668 SET MEMORY ELEMENT IF INIT      4050 = reg4",
      "137671 PUSH MEMORY ELEMENT IF INIT      4045 -> reg7",
      "137674 GET      reg7[bmak] -> reg4",
      "137680 PUSH MEMORY ELEMENT IF INIT      4050 -> reg7",
      "137683 GET      reg4[reg7] -> reg9",
      "137687 TYPEOF      reg9 -> reg5",
      "137690 STRICT EQUAL      reg5 === function -> reg7",
      "137696 JUMP IF FALSE      reg7 TO: 137764 | 137699"
  ],
  "137699": [
      "137699 PUSH MEMORY ELEMENT IF INIT      4047 -> reg5",
      "137702 PUSH MEMORY ELEMENT IF INIT      4050 -> reg4",
      "137705 PUSH MEMORY ELEMENT IF INIT      4045 -> reg9",
      "137708 GET      reg9[bmak] -> reg7",
      "137714 PUSH MEMORY ELEMENT IF INIT      4050 -> reg11",
      "137717 GET      reg7[reg11] -> reg9",
      "137721 GET      reg9[toString] -> reg7",
      "137727 EMPTY ARRAY      -> reg11",
      "137729 CALL FUNCTION      OBJ: reg9 FUNC: reg7 ARGS: reg11",
      "137733 SET      reg2 -> reg10",
      "137736 GET      reg10[substr] -> reg11",
      "137742 NEW ARRAY      2 -> reg13",
      "137745 PUT      reg13[0] = 0",
      "137749 PUT      reg13[1] = 120",
      "137753 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg13",
      "137757 SET      reg2 -> reg8",
      "137760 PUT      reg5[reg4] = reg8",
      "137764 PUSH MEMORY ELEMENT IF INIT      4048 -> reg4",
      "137767 SET      reg4 -> reg5",
      "137770 ADD      reg41-> reg4",
      "137774 SET MEMORY ELEMENT IF INIT      4048 = reg4",
      "137777 JUMP      137639",
      "137639 PUSH MEMORY ELEMENT IF INIT      4048 -> reg4",
      "137642 PUSH MEMORY ELEMENT IF INIT      4049 -> reg5",
      "137645 GET      reg5[length] -> reg10",
      "137651 LESS THAN      reg4 < reg10 -> reg5",
      "137655 JUMP IF FALSE      reg5 TO: 137779 | 137658"
  ],
  "137764": [
      "137764 PUSH MEMORY ELEMENT IF INIT      4048 -> reg4",
      "137767 SET      reg4 -> reg5",
      "137770 ADD      reg41-> reg4",
      "137774 SET MEMORY ELEMENT IF INIT      4048 = reg4",
      "137777 JUMP      137639",
      "137639 PUSH MEMORY ELEMENT IF INIT      4048 -> reg4",
      "137642 PUSH MEMORY ELEMENT IF INIT      4049 -> reg5",
      "137645 GET      reg5[length] -> reg10",
      "137651 LESS THAN      reg4 < reg10 -> reg5",
      "137655 JUMP IF FALSE      reg5 TO: 137779 | 137658"
  ],
  "137779": [
      "137779 PUSH MEMORY ELEMENT IF INIT      4045 -> reg4",
      "137782 GET      reg4[bmak] -> reg5",
      "137788 GET      reg5[calc_fp] -> reg4",
      "137794 JUMP IF FALSE      reg4 TO: 137860 | 137797"
  ],
  "137797": [
      "137797 PUSH MEMORY ELEMENT IF INIT      4045 -> reg11",
      "137800 GET      reg11[bmak] -> reg5",
      "137806 GET      reg5[calc_fp] -> reg11",
      "137812 GET      reg11[toString] -> reg12",
      "137818 EMPTY ARRAY      -> reg5",
      "137820 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg5",
      "137824 SET      reg2 -> reg8",
      "137827 GET      reg8[indexOf] -> reg5",
      "137833 NEW ARRAY      1 -> reg12",
      "137836 PUT      reg12[0] = bmak.fpcf.fpVal()",
      "137842 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg12",
      "137846 SET      reg2 -> reg7",
      "137849 SUBTRACT      0 - 1 -> reg5",
      "137853 GREATER THAN      reg7 > reg5 -> reg12",
      "137857 SET      reg12 -> reg4",
      "137860 SET MEMORY ELEMENT IF INIT      4051 = reg4",
      "137863 EMPTY OBJECT      -> reg4",
      "137865 PUSH MEMORY ELEMENT IF INIT      4051 -> reg5",
      "137868 PUT      reg4[verdict] = reg5",
      "137874 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "137877 GET      reg7[stringify] -> reg13",
      "137883 NEW ARRAY      1 -> reg12",
      "137886 PUSH MEMORY ELEMENT IF INIT      4047 -> reg14",
      "137889 PUT      reg12[0] = reg14",
      "137893 CALL FUNCTION      OBJ: reg7 FUNC: reg13 ARGS: reg12",
      "137897 SET      reg2 -> reg5",
      "137900 PUT      reg4[raw] = reg5",
      "137906 PUT      reg4[error] = false",
      "137912 JUMP OR RETURN VAL      reg4"
  ],
  "137860": [
      "137860 SET MEMORY ELEMENT IF INIT      4051 = reg4",
      "137863 EMPTY OBJECT      -> reg4",
      "137865 PUSH MEMORY ELEMENT IF INIT      4051 -> reg5",
      "137868 PUT      reg4[verdict] = reg5",
      "137874 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "137877 GET      reg7[stringify] -> reg13",
      "137883 NEW ARRAY      1 -> reg12",
      "137886 PUSH MEMORY ELEMENT IF INIT      4047 -> reg14",
      "137889 PUT      reg12[0] = reg14",
      "137893 CALL FUNCTION      OBJ: reg7 FUNC: reg13 ARGS: reg12",
      "137897 SET      reg2 -> reg5",
      "137900 PUT      reg4[raw] = reg5",
      "137906 PUT      reg4[error] = false",
      "137912 JUMP OR RETURN VAL      reg4"
  ],
  "137916": [
      "137916 EMPTY OBJECT      -> reg4",
      "137918 PUT      reg4[verdict] = false",
      "137924 PUT      reg4[raw] = n/a",
      "137932 PUT      reg4[error] = false",
      "137938 JUMP OR RETURN VAL      reg4"
  ],
  "137942": [
      "137942 SET I      null",
      "137944 PUSH F.K      -> reg12",
      "137946 VOID F",
      "137947 SET MEMORY ELEMENT      0 = reg12",
      "137950 PUSH MEMORY ELEMENT IF INIT      0 -> reg13",
      "137953 GET      reg13[toString] -> reg12",
      "137959 EMPTY ARRAY      -> reg14",
      "137961 CALL FUNCTION      OBJ: reg13 FUNC: reg12 ARGS: reg14",
      "137965 SET      reg2 -> reg5",
      "137968 GET      reg5[startsWith] -> reg12",
      "137974 NEW ARRAY      1 -> reg14",
      "137977 PUT      reg14[0] = SecurityError",
      "137983 CALL FUNCTION      OBJ: reg5 FUNC: reg12 ARGS: reg14",
      "137987 SET      reg2 -> reg4",
      "137990 NOT      reg4 -> reg12",
      "137993 JUMP IF FALSE      reg12 TO: 138038 | 137996"
  ],
  "137996": [
      "137996 EMPTY OBJECT      -> reg4",
      "137998 PUT      reg4[verdict] = false",
      "138004 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "138007 GET      reg14[toString] -> reg15",
      "138013 EMPTY ARRAY      -> reg16",
      "138015 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg16",
      "138019 SET      reg2 -> reg12",
      "138022 PUT      reg4[raw] = reg12",
      "138028 PUT      reg4[error] = true",
      "138034 JUMP OR RETURN VAL      reg4"
  ],
  "138038": [
      "138038 EMPTY OBJECT      -> reg4",
      "138040 PUT      reg4[verdict] = false",
      "138046 PUT      reg4[raw] = n/a",
      "138054 PUT      reg4[error] = false",
      "138060 JUMP OR RETURN VAL      reg4"
  ],
  "138105": [
      "138105 GET WINDOW PROP      Object -> reg5",
      "138110 GET      reg5[keys] -> reg8",
      "138116 NEW ARRAY      1 -> reg9",
      "138119 GET WINDOW PROP      window -> reg7",
      "138124 GET      reg7[bmak] -> reg6",
      "138130 PUT      reg9[0] = reg6",
      "138134 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg9",
      "138138 SET      reg2 -> reg4",
      "138141 SET MEMORY ELEMENT IF INIT      4059 = reg4",
      "138144 EMPTY OBJECT      -> reg6",
      "138146 SET MEMORY ELEMENT IF INIT      4060 = reg6",
      "138149 SET MEMORY ELEMENT IF INIT      4061 = 0",
      "138152 PUSH MEMORY ELEMENT IF INIT      4059 -> reg4",
      "138155 SET MEMORY ELEMENT IF INIT      4062 = reg4",
      "138158 PUSH MEMORY ELEMENT IF INIT      4061 -> reg8",
      "138161 PUSH MEMORY ELEMENT IF INIT      4062 -> reg6",
      "138164 GET      reg6[length] -> reg4",
      "138170 LESS THAN      reg8 < reg4 -> reg6",
      "138174 JUMP IF FALSE      reg6 TO: 138302 | 138177"
  ],
  "138177": [
      "138177 PUSH MEMORY ELEMENT IF INIT      4062 -> reg4",
      "138180 PUSH MEMORY ELEMENT IF INIT      4061 -> reg6",
      "138183 GET      reg4[reg6] -> reg8",
      "138187 SET MEMORY ELEMENT IF INIT      4063 = reg8",
      "138190 GET WINDOW PROP      window -> reg4",
      "138195 GET      reg4[bmak] -> reg6",
      "138201 PUSH MEMORY ELEMENT IF INIT      4063 -> reg4",
      "138204 GET      reg6[reg4] -> reg7",
      "138208 TYPEOF      reg7 -> reg6",
      "138211 STRICT EQUAL      reg6 === function -> reg4",
      "138217 JUMP IF FALSE      reg4 TO: 138287 | 138220"
  ],
  "138220": [
      "138220 PUSH MEMORY ELEMENT IF INIT      4060 -> reg6",
      "138223 PUSH MEMORY ELEMENT IF INIT      4063 -> reg7",
      "138226 GET WINDOW PROP      window -> reg9",
      "138231 GET      reg9[bmak] -> reg10",
      "138237 PUSH MEMORY ELEMENT IF INIT      4063 -> reg12",
      "138240 GET      reg10[reg12] -> reg9",
      "138244 GET      reg9[toString] -> reg10",
      "138250 EMPTY ARRAY      -> reg11",
      "138252 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "138256 SET      reg2 -> reg8",
      "138259 GET      reg8[substr] -> reg11",
      "138265 NEW ARRAY      2 -> reg10",
      "138268 PUT      reg10[0] = 0",
      "138272 PUT      reg10[1] = 120",
      "138276 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg10",
      "138280 SET      reg2 -> reg4",
      "138283 PUT      reg6[reg7] = reg4",
      "138287 PUSH MEMORY ELEMENT IF INIT      4061 -> reg4",
      "138290 SET      reg4 -> reg6",
      "138293 ADD      reg41-> reg4",
      "138297 SET MEMORY ELEMENT IF INIT      4061 = reg4",
      "138300 JUMP      138158",
      "138158 PUSH MEMORY ELEMENT IF INIT      4061 -> reg8",
      "138161 PUSH MEMORY ELEMENT IF INIT      4062 -> reg6",
      "138164 GET      reg6[length] -> reg4",
      "138170 LESS THAN      reg8 < reg4 -> reg6",
      "138174 JUMP IF FALSE      reg6 TO: 138302 | 138177"
  ],
  "138287": [
      "138287 PUSH MEMORY ELEMENT IF INIT      4061 -> reg4",
      "138290 SET      reg4 -> reg6",
      "138293 ADD      reg41-> reg4",
      "138297 SET MEMORY ELEMENT IF INIT      4061 = reg4",
      "138300 JUMP      138158",
      "138158 PUSH MEMORY ELEMENT IF INIT      4061 -> reg8",
      "138161 PUSH MEMORY ELEMENT IF INIT      4062 -> reg6",
      "138164 GET      reg6[length] -> reg4",
      "138170 LESS THAN      reg8 < reg4 -> reg6",
      "138174 JUMP IF FALSE      reg6 TO: 138302 | 138177"
  ],
  "138302": [
      "138302 GET WINDOW PROP      window -> reg4",
      "138307 GET      reg4[bmak] -> reg6",
      "138313 GET      reg6[calc_fp] -> reg7",
      "138319 JUMP IF FALSE      reg7 TO: 138387 | 138322"
  ],
  "138322": [
      "138322 GET WINDOW PROP      window -> reg10",
      "138327 GET      reg10[bmak] -> reg11",
      "138333 GET      reg11[calc_fp] -> reg12",
      "138339 GET      reg12[toString] -> reg13",
      "138345 EMPTY ARRAY      -> reg11",
      "138347 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg11",
      "138351 SET      reg2 -> reg6",
      "138354 GET      reg6[indexOf] -> reg10",
      "138360 NEW ARRAY      1 -> reg11",
      "138363 PUT      reg11[0] = bmak.fpcf.fpVal()",
      "138369 CALL FUNCTION      OBJ: reg6 FUNC: reg10 ARGS: reg11",
      "138373 SET      reg2 -> reg4",
      "138376 SUBTRACT      0 - 1 -> reg11",
      "138380 GREATER THAN      reg4 > reg11 -> reg14",
      "138384 SET      reg14 -> reg7",
      "138387 SET MEMORY ELEMENT IF INIT      4064 = reg7",
      "138390 EMPTY OBJECT      -> reg4",
      "138392 PUSH MEMORY ELEMENT IF INIT      4064 -> reg7",
      "138395 PUT      reg4[verdict] = reg7",
      "138401 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "138404 GET      reg11[stringify] -> reg7",
      "138410 NEW ARRAY      1 -> reg14",
      "138413 PUSH MEMORY ELEMENT IF INIT      4060 -> reg13",
      "138416 PUT      reg14[0] = reg13",
      "138420 CALL FUNCTION      OBJ: reg11 FUNC: reg7 ARGS: reg14",
      "138424 SET      reg2 -> reg10",
      "138427 PUT      reg4[raw] = reg10",
      "138433 PUT      reg4[error] = false",
      "138439 JUMP OR RETURN VAL      reg4"
  ],
  "138387": [
      "138387 SET MEMORY ELEMENT IF INIT      4064 = reg7",
      "138390 EMPTY OBJECT      -> reg4",
      "138392 PUSH MEMORY ELEMENT IF INIT      4064 -> reg7",
      "138395 PUT      reg4[verdict] = reg7",
      "138401 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "138404 GET      reg11[stringify] -> reg7",
      "138410 NEW ARRAY      1 -> reg14",
      "138413 PUSH MEMORY ELEMENT IF INIT      4060 -> reg13",
      "138416 PUT      reg14[0] = reg13",
      "138420 CALL FUNCTION      OBJ: reg11 FUNC: reg7 ARGS: reg14",
      "138424 SET      reg2 -> reg10",
      "138427 PUT      reg4[raw] = reg10",
      "138433 PUT      reg4[error] = false",
      "138439 JUMP OR RETURN VAL      reg4"
  ],
  "138443": [
      "138443 EMPTY OBJECT      -> reg7",
      "138445 PUT      reg7[verdict] = false",
      "138451 PUT      reg7[raw] = n/a",
      "138459 PUT      reg7[error] = false",
      "138465 JUMP OR RETURN VAL      reg7"
  ],
  "138469": [
      "138469 SET I      null",
      "138471 PUSH F.K      -> reg7",
      "138473 VOID F",
      "138474 SET MEMORY ELEMENT      0 = reg7",
      "138477 EMPTY OBJECT      -> reg13",
      "138479 PUT      reg13[verdict] = false",
      "138485 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "138488 GET      reg7[toString] -> reg10",
      "138494 EMPTY ARRAY      -> reg15",
      "138496 CALL FUNCTION      OBJ: reg7 FUNC: reg10 ARGS: reg15",
      "138500 SET      reg2 -> reg4",
      "138503 PUT      reg13[raw] = reg4",
      "138509 PUT      reg13[error] = true",
      "138515 JUMP OR RETURN VAL      reg13"
  ],
  "138873": [
      "138873 PUSH MEMORY ELEMENT IF INIT      4071 -> reg10",
      "138876 GET      reg10[n] -> reg9",
      "138882 GREATER THAN      reg9 > 0 -> reg11",
      "138886 SET      reg11 -> reg8",
      "138889 JUMP IF FALSE      reg8 TO: 138908 | 138892"
  ],
  "138889": ["138889 JUMP IF FALSE      reg8 TO: 138908 | 138892"],
  "138892": [
      "138892 PUSH MEMORY ELEMENT IF INIT      4071 -> reg9",
      "138895 GET      reg9[m] -> reg10",
      "138901 GREATER THAN      reg10 > 0 -> reg9",
      "138905 SET      reg9 -> reg8",
      "138908 SET MEMORY ELEMENT IF INIT      4073 = reg8",
      "138911 EMPTY OBJECT      -> reg9",
      "138913 PUSH MEMORY ELEMENT IF INIT      4073 -> reg8",
      "138916 PUT      reg9[verdict] = reg8",
      "138922 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "138925 GET      reg11[stringify] -> reg12",
      "138931 NEW ARRAY      1 -> reg10",
      "138934 PUSH MEMORY ELEMENT IF INIT      4071 -> reg15",
      "138937 PUT      reg10[0] = reg15",
      "138941 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg10",
      "138945 SET      reg2 -> reg8",
      "138948 PUT      reg9[raw] = reg8",
      "138954 PUT      reg9[error] = false",
      "138960 JUMP OR RETURN VAL      reg9"
  ],
  "138908": [
      "138908 SET MEMORY ELEMENT IF INIT      4073 = reg8",
      "138911 EMPTY OBJECT      -> reg9",
      "138913 PUSH MEMORY ELEMENT IF INIT      4073 -> reg8",
      "138916 PUT      reg9[verdict] = reg8",
      "138922 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "138925 GET      reg11[stringify] -> reg12",
      "138931 NEW ARRAY      1 -> reg10",
      "138934 PUSH MEMORY ELEMENT IF INIT      4071 -> reg15",
      "138937 PUT      reg10[0] = reg15",
      "138941 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg10",
      "138945 SET      reg2 -> reg8",
      "138948 PUT      reg9[raw] = reg8",
      "138954 PUT      reg9[error] = false",
      "138960 JUMP OR RETURN VAL      reg9"
  ],
  "138964": [
      "138964 SET I      null",
      "138966 PUSH F.K      -> reg8",
      "138968 VOID F",
      "138969 SET MEMORY ELEMENT      0 = reg8",
      "138972 EMPTY OBJECT      -> reg9",
      "138974 PUT      reg9[verdict] = false",
      "138980 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "138983 GET      reg10[toString] -> reg12",
      "138989 EMPTY ARRAY      -> reg14",
      "138991 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg14",
      "138995 SET      reg2 -> reg8",
      "138998 PUT      reg9[raw] = reg8",
      "139004 PUT      reg9[error] = true",
      "139010 JUMP OR RETURN VAL      reg9"
  ],
  "139102": [
      "139102 PUSH MEMORY ELEMENT IF INIT      4084 -> reg4",
      "139105 PUSH MEMORY ELEMENT IF INIT      4083 -> reg8",
      "139108 GET      reg4[reg8] -> reg6",
      "139112 SET MEMORY ELEMENT IF INIT      4085 = reg6",
      "139115 GET WINDOW PROP      window -> reg4",
      "139120 PUSH MEMORY ELEMENT IF INIT      4085 -> reg8",
      "139123 GET      reg4[reg8] -> reg6",
      "139127 TYPEOF      reg6 -> reg4",
      "139130 STRICT EQUAL      reg4 === function -> reg6",
      "139136 JUMP IF FALSE      reg6 TO: 139301 | 139139"
  ],
  "139139": [
      "139139 NEW REGEXP      _0x[0-9a-fA-F]+ ,  -> reg7",
      "139147 GET      reg7[test] -> reg6",
      "139153 NEW ARRAY      1 -> reg8",
      "139156 PUSH MEMORY ELEMENT IF INIT      4085 -> reg10",
      "139159 PUT      reg8[0] = reg10",
      "139163 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg8",
      "139167 SET      reg2 -> reg4",
      "139170 JUMP IF FALSE      reg4 TO: 139301 | 139173"
  ],
  "139173": [
      "139173 PUSH MEMORY ELEMENT IF INIT      4081 -> reg4",
      "139176 PUSH MEMORY ELEMENT IF INIT      4085 -> reg6",
      "139179 GET WINDOW PROP      window -> reg8",
      "139184 PUSH MEMORY ELEMENT IF INIT      4085 -> reg12",
      "139187 GET      reg8[reg12] -> reg11",
      "139191 GET      reg11[toString] -> reg8",
      "139197 EMPTY ARRAY      -> reg12",
      "139199 CALL FUNCTION      OBJ: reg11 FUNC: reg8 ARGS: reg12",
      "139203 SET      reg2 -> reg10",
      "139206 GET      reg10[substr] -> reg8",
      "139212 NEW ARRAY      2 -> reg12",
      "139215 PUT      reg12[0] = 0",
      "139219 PUT      reg12[1] = 1000",
      "139223 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg12",
      "139227 SET      reg2 -> reg9",
      "139230 PUT      reg4[reg6] = reg9",
      "139234 PUSH MEMORY ELEMENT IF INIT      4082 -> reg4",
      "139237 JUMP IF TRUE      reg4 TO: 139298 | 139240"
  ],
  "139240": [
      "139240 NEW REGEXP      ^function\\s*\\(\\)\\s*{\\s*return\\s+_0x[0-9a-fA-F]+;?\\s*}\\s* ,  -> reg6",
      "139248 GET      reg6[test] -> reg9",
      "139254 NEW ARRAY      1 -> reg13",
      "139257 GET WINDOW PROP      window -> reg14",
      "139262 PUSH MEMORY ELEMENT IF INIT      4085 -> reg16",
      "139265 GET      reg14[reg16] -> reg15",
      "139269 GET      reg15[toString] -> reg16",
      "139275 EMPTY ARRAY      -> reg14",
      "139277 CALL FUNCTION      OBJ: reg15 FUNC: reg16 ARGS: reg14",
      "139281 SET      reg2 -> reg8",
      "139284 PUT      reg13[0] = reg8",
      "139288 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg13",
      "139292 SET      reg2 -> reg12",
      "139295 SET      reg12 -> reg4",
      "139298 SET MEMORY ELEMENT IF INIT      4082 = reg4",
      "139301 PUSH MEMORY ELEMENT IF INIT      4083 -> reg8",
      "139304 SET      reg8 -> reg4",
      "139307 ADD      reg81-> reg8",
      "139311 SET MEMORY ELEMENT IF INIT      4083 = reg8",
      "139314 JUMP      139083",
      "139083 PUSH MEMORY ELEMENT IF INIT      4083 -> reg4",
      "139086 PUSH MEMORY ELEMENT IF INIT      4084 -> reg7",
      "139089 GET      reg7[length] -> reg6",
      "139095 LESS THAN      reg4 < reg6 -> reg8",
      "139099 JUMP IF FALSE      reg8 TO: 139316 | 139102"
  ],
  "139298": [
      "139298 SET MEMORY ELEMENT IF INIT      4082 = reg4",
      "139301 PUSH MEMORY ELEMENT IF INIT      4083 -> reg8",
      "139304 SET      reg8 -> reg4",
      "139307 ADD      reg81-> reg8",
      "139311 SET MEMORY ELEMENT IF INIT      4083 = reg8",
      "139314 JUMP      139083",
      "139083 PUSH MEMORY ELEMENT IF INIT      4083 -> reg4",
      "139086 PUSH MEMORY ELEMENT IF INIT      4084 -> reg7",
      "139089 GET      reg7[length] -> reg6",
      "139095 LESS THAN      reg4 < reg6 -> reg8",
      "139099 JUMP IF FALSE      reg8 TO: 139316 | 139102"
  ],
  "139301": [
      "139301 PUSH MEMORY ELEMENT IF INIT      4083 -> reg8",
      "139304 SET      reg8 -> reg4",
      "139307 ADD      reg81-> reg8",
      "139311 SET MEMORY ELEMENT IF INIT      4083 = reg8",
      "139314 JUMP      139083",
      "139083 PUSH MEMORY ELEMENT IF INIT      4083 -> reg4",
      "139086 PUSH MEMORY ELEMENT IF INIT      4084 -> reg7",
      "139089 GET      reg7[length] -> reg6",
      "139095 LESS THAN      reg4 < reg6 -> reg8",
      "139099 JUMP IF FALSE      reg8 TO: 139316 | 139102"
  ],
  "139316": [
      "139316 EMPTY OBJECT      -> reg9",
      "139318 PUSH MEMORY ELEMENT IF INIT      4082 -> reg4",
      "139321 PUT      reg9[verdict] = reg4",
      "139327 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "139330 GET      reg12[stringify] -> reg8",
      "139336 NEW ARRAY      1 -> reg14",
      "139339 PUSH MEMORY ELEMENT IF INIT      4081 -> reg17",
      "139342 PUT      reg14[0] = reg17",
      "139346 CALL FUNCTION      OBJ: reg12 FUNC: reg8 ARGS: reg14",
      "139350 SET      reg2 -> reg4",
      "139353 PUT      reg9[raw] = reg4",
      "139359 PUT      reg9[error] = false",
      "139365 JUMP OR RETURN VAL      reg9"
  ],
  "139369": [
      "139369 SET I      null",
      "139371 PUSH F.K      -> reg4",
      "139373 VOID F",
      "139374 SET MEMORY ELEMENT      0 = reg4",
      "139377 EMPTY OBJECT      -> reg4",
      "139379 PUT      reg4[verdict] = false",
      "139385 PUSH MEMORY ELEMENT IF INIT      0 -> reg9",
      "139388 GET      reg9[toString] -> reg13",
      "139394 EMPTY ARRAY      -> reg14",
      "139396 CALL FUNCTION      OBJ: reg9 FUNC: reg13 ARGS: reg14",
      "139400 SET      reg2 -> reg8",
      "139403 PUT      reg4[raw] = reg8",
      "139409 PUT      reg4[error] = true",
      "139415 JUMP OR RETURN VAL      reg4"
  ],
  "139775": [
      "139775 PUSH MEMORY ELEMENT IF INIT      4095 -> reg13",
      "139778 GET      reg13[ok] -> reg8",
      "139784 GET      reg8[indexOf] -> reg12",
      "139790 NEW ARRAY      1 -> reg17",
      "139793 ADD      toStringNaN-> reg14",
      "139801 ADD      reg14NaN-> reg13",
      "139807 PUT      reg17[0] = reg13",
      "139811 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg17",
      "139815 SET      reg2 -> reg4",
      "139818 SUBTRACT      0 - 1 -> reg12",
      "139822 STRICT NOT EQUAL      reg4 !== reg12 -> reg13",
      "139826 SET      reg13 -> reg11",
      "139829 SET MEMORY ELEMENT IF INIT      4096 = reg11",
      "139832 EMPTY OBJECT      -> reg12",
      "139834 PUSH MEMORY ELEMENT IF INIT      4096 -> reg4",
      "139837 PUT      reg12[verdict] = reg4",
      "139843 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "139846 GET      reg11[stringify] -> reg14",
      "139852 NEW ARRAY      1 -> reg13",
      "139855 PUSH MEMORY ELEMENT IF INIT      4095 -> reg16",
      "139858 PUT      reg13[0] = reg16",
      "139862 CALL FUNCTION      OBJ: reg11 FUNC: reg14 ARGS: reg13",
      "139866 SET      reg2 -> reg4",
      "139869 PUT      reg12[raw] = reg4",
      "139875 PUT      reg12[error] = false",
      "139881 JUMP OR RETURN VAL      reg12"
  ],
  "139829": [
      "139829 SET MEMORY ELEMENT IF INIT      4096 = reg11",
      "139832 EMPTY OBJECT      -> reg12",
      "139834 PUSH MEMORY ELEMENT IF INIT      4096 -> reg4",
      "139837 PUT      reg12[verdict] = reg4",
      "139843 PUSH MEMORY ELEMENT IF INIT      280 -> reg11",
      "139846 GET      reg11[stringify] -> reg14",
      "139852 NEW ARRAY      1 -> reg13",
      "139855 PUSH MEMORY ELEMENT IF INIT      4095 -> reg16",
      "139858 PUT      reg13[0] = reg16",
      "139862 CALL FUNCTION      OBJ: reg11 FUNC: reg14 ARGS: reg13",
      "139866 SET      reg2 -> reg4",
      "139869 PUT      reg12[raw] = reg4",
      "139875 PUT      reg12[error] = false",
      "139881 JUMP OR RETURN VAL      reg12"
  ],
  "139885": [
      "139885 SET I      null",
      "139887 PUSH F.K      -> reg4",
      "139889 VOID F",
      "139890 SET MEMORY ELEMENT      0 = reg4",
      "139893 EMPTY OBJECT      -> reg4",
      "139895 PUT      reg4[verdict] = false",
      "139901 PUSH MEMORY ELEMENT IF INIT      0 -> reg14",
      "139904 GET      reg14[toString] -> reg13",
      "139910 EMPTY ARRAY      -> reg15",
      "139912 CALL FUNCTION      OBJ: reg14 FUNC: reg13 ARGS: reg15",
      "139916 SET      reg2 -> reg12",
      "139919 PUT      reg4[raw] = reg12",
      "139925 PUT      reg4[error] = true",
      "139931 JUMP OR RETURN VAL      reg4"
  ],
  "140001": [
      "140001 EMPTY OBJECT      -> reg5",
      "140003 SET      reg5 -> reg4",
      "140006 SET MEMORY ELEMENT IF INIT      4103 = reg4",
      "140009 PUSH MEMORY ELEMENT IF INIT      4103 -> reg4",
      "140012 GET WINDOW PROP      Date -> reg5",
      "140017 GET      reg5[now] -> reg8",
      "140023 EMPTY ARRAY      -> reg9",
      "140025 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg9",
      "140029 SET      reg2 -> reg7",
      "140032 PUSH MEMORY ELEMENT IF INIT      4102 -> reg8",
      "140035 SUBTRACT      reg7 - reg8 -> reg11",
      "140039 PUT      reg4[time] = reg11",
      "140045 PUSH MEMORY ELEMENT IF INIT      4103 -> reg4",
      "140048 JUMP OR RETURN VAL      reg4"
  ],
  "140006": [
      "140006 SET MEMORY ELEMENT IF INIT      4103 = reg4",
      "140009 PUSH MEMORY ELEMENT IF INIT      4103 -> reg4",
      "140012 GET WINDOW PROP      Date -> reg5",
      "140017 GET      reg5[now] -> reg8",
      "140023 EMPTY ARRAY      -> reg9",
      "140025 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg9",
      "140029 SET      reg2 -> reg7",
      "140032 PUSH MEMORY ELEMENT IF INIT      4102 -> reg8",
      "140035 SUBTRACT      reg7 - reg8 -> reg11",
      "140039 PUT      reg4[time] = reg11",
      "140045 PUSH MEMORY ELEMENT IF INIT      4103 -> reg4",
      "140048 JUMP OR RETURN VAL      reg4"
  ],
  "140081": [
      "140081 SET MEMORY ELEMENT IF INIT      275 = true",
      "140084 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "140087 PUT      reg4[action] = block",
      "140095 PUSH MEMORY ELEMENT IF INIT      4106 -> reg5",
      "140098 JUMP OR RETURN VAL      reg5"
  ],
  "140095": [
      "140095 PUSH MEMORY ELEMENT IF INIT      4106 -> reg5",
      "140098 JUMP OR RETURN VAL      reg5"
  ],
  "140236": [
      "140236 SET I      140244",
      "140238 PUSH F.K      -> reg4",
      "140240 VOID F",
      "140241 SET MEMORY ELEMENT      0 = reg4",
      "140244 SET I      null",
      "140246 SET N      null",
      "140248 GET WINDOW PROP      document -> reg6",
      "140253 GET      reg6[body] -> reg8",
      "140259 GET      reg8[removeChild] -> reg9",
      "140265 NEW ARRAY      1 -> reg6",
      "140268 PUSH MEMORY ELEMENT IF INIT      4109 -> reg10",
      "140271 PUT      reg6[0] = reg10",
      "140275 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg6",
      "140279 SET      reg2 -> reg4",
      "140282 HANDLE TRACE OR JUMP OR RETURN C",
      "140283 SET I      null",
      "140285 JUMP OR RETURN"
  ],
  "140244": [
      "140244 SET I      null",
      "140246 SET N      null",
      "140248 GET WINDOW PROP      document -> reg6",
      "140253 GET      reg6[body] -> reg8",
      "140259 GET      reg8[removeChild] -> reg9",
      "140265 NEW ARRAY      1 -> reg6",
      "140268 PUSH MEMORY ELEMENT IF INIT      4109 -> reg10",
      "140271 PUT      reg6[0] = reg10",
      "140275 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg6",
      "140279 SET      reg2 -> reg4",
      "140282 HANDLE TRACE OR JUMP OR RETURN C",
      "140283 SET I      null",
      "140285 JUMP OR RETURN"
  ],
  "141014": [
      "141014 SET I      141233",
      "141016 PUSH F.K      -> reg7",
      "141018 VOID F",
      "141019 SET MEMORY ELEMENT      0 = reg7",
      "141022 PUSH MEMORY ELEMENT IF INIT      0 -> reg7",
      "141025 GET      reg7[stack] -> reg8",
      "141031 GET      reg8[indexOf] -> reg7",
      "141037 NEW ARRAY      1 -> reg9",
      "141040 PUT      reg9[0] = [object Function]",
      "141046 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "141050 SET      reg2 -> reg4",
      "141053 SUBTRACT      0 - 1 -> reg10",
      "141057 GREATER THAN      reg4 > reg10 -> reg7",
      "141061 JUMP IF FALSE      reg7 TO: 141083 | 141064"
  ],
  "141064": [
      "141064 GET WINDOW PROP      window -> reg4",
      "141069 GET      reg4[location] -> reg7",
      "141075 PUT      reg7[href] = about:blank",
      "141083 SET I      141233",
      "141085 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "141088 GET WINDOW PROP      Date -> reg10",
      "141093 GET      reg10[now] -> reg15",
      "141099 EMPTY ARRAY      -> reg7",
      "141101 CALL FUNCTION      OBJ: reg10 FUNC: reg15 ARGS: reg7",
      "141105 SET      reg2 -> reg9",
      "141108 PUSH MEMORY ELEMENT IF INIT      3896 -> reg7",
      "141111 SUBTRACT      reg9 - reg7 -> reg11",
      "141115 PUT      reg4[time] = reg11",
      "141121 PUSH MEMORY ELEMENT IF INIT      3897 -> reg11",
      "141124 GET      reg11[action] -> reg4",
      "141130 STRICT EQUAL      reg4 === block -> reg12",
      "141136 JUMP IF FALSE      reg12 TO: 141182 | 141139"
  ],
  "141083": [
      "141083 SET I      141233",
      "141085 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "141088 GET WINDOW PROP      Date -> reg10",
      "141093 GET      reg10[now] -> reg15",
      "141099 EMPTY ARRAY      -> reg7",
      "141101 CALL FUNCTION      OBJ: reg10 FUNC: reg15 ARGS: reg7",
      "141105 SET      reg2 -> reg9",
      "141108 PUSH MEMORY ELEMENT IF INIT      3896 -> reg7",
      "141111 SUBTRACT      reg9 - reg7 -> reg11",
      "141115 PUT      reg4[time] = reg11",
      "141121 PUSH MEMORY ELEMENT IF INIT      3897 -> reg11",
      "141124 GET      reg11[action] -> reg4",
      "141130 STRICT EQUAL      reg4 === block -> reg12",
      "141136 JUMP IF FALSE      reg12 TO: 141182 | 141139"
  ],
  "141139": [
      "141139 PUSH MEMORY ELEMENT IF INIT      3897 -> reg4",
      "141142 GET      reg4[type] -> reg7",
      "141148 STRICT EQUAL      reg7 === ab -> reg9",
      "141154 JUMP IF FALSE      reg9 TO: 141160 | 141157"
  ],
  "141157": [
      "141157 SET MEMORY ELEMENT IF INIT      275 = true",
      "141160 PUSH MEMORY ELEMENT IF INIT      3875 -> reg7",
      "141163 NEW ARRAY      1 -> reg9",
      "141166 PUSH MEMORY ELEMENT IF INIT      3897 -> reg15",
      "141169 PUT      reg9[0] = reg15",
      "141173 CALL FUNCTION      PTR: reg7 MEM: reg9",
      "141177 SET      reg2 -> reg4",
      "141180 JUMP      141231",
      "141231 JUMP      141241",
      "141241 SET I      null",
      "141243 JUMP OR RETURN"
  ],
  "141160": [
      "141160 PUSH MEMORY ELEMENT IF INIT      3875 -> reg7",
      "141163 NEW ARRAY      1 -> reg9",
      "141166 PUSH MEMORY ELEMENT IF INIT      3897 -> reg15",
      "141169 PUT      reg9[0] = reg15",
      "141173 CALL FUNCTION      PTR: reg7 MEM: reg9",
      "141177 SET      reg2 -> reg4",
      "141180 JUMP      141231",
      "141231 JUMP      141241",
      "141241 SET I      null",
      "141243 JUMP OR RETURN"
  ],
  "141182": [
      "141182 GET WINDOW PROP      Math -> reg7",
      "141187 GET      reg7[random] -> reg9",
      "141193 EMPTY ARRAY      -> reg12",
      "141195 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg12",
      "141199 SET      reg2 -> reg4",
      "141202 LESS THAN      reg4 < 0.01 -> reg15",
      "141208 JUMP IF FALSE      reg15 TO: 141231 | 141211"
  ],
  "141211": [
      "141211 PUSH MEMORY ELEMENT IF INIT      3875 -> reg4",
      "141214 NEW ARRAY      1 -> reg11",
      "141217 PUSH MEMORY ELEMENT IF INIT      3897 -> reg13",
      "141220 PUT      reg11[0] = reg13",
      "141224 CALL FUNCTION      PTR: reg4 MEM: reg11",
      "141228 SET      reg2 -> reg9",
      "141231 JUMP      141241",
      "141241 SET I      null",
      "141243 JUMP OR RETURN"
  ],
  "141231": [
      "141231 JUMP      141241",
      "141241 SET I      null",
      "141243 JUMP OR RETURN"
  ],
  "141233": [
      "141233 SET I      null",
      "141235 PUSH F.K      -> reg4",
      "141237 VOID F",
      "141238 SET MEMORY ELEMENT      0 = reg4",
      "141241 SET I      null",
      "141243 JUMP OR RETURN"
  ],
  "141434": [
      "141434 SET      0 -> reg7",
      "141437 GET      reg4[reg7] -> reg6",
      "141441 SET MEMORY ELEMENT IF INIT      4128 = reg6",
      "141444 PUSH MEMORY ELEMENT IF INIT      4122 -> reg9",
      "141447 PUSH MEMORY ELEMENT IF INIT      4128 -> reg11",
      "141450 GET      reg9[reg11] -> reg10",
      "141454 GET WINDOW PROP      window -> reg9",
      "141459 GET      reg9[outerHeight] -> reg11",
      "141465 STRICT EQUAL      reg10 === reg11 -> reg9",
      "141469 JUMP IF FALSE      reg9 TO: 141475 | 141472"
  ],
  "141437": [
      "141437 GET      reg4[reg7] -> reg6",
      "141441 SET MEMORY ELEMENT IF INIT      4128 = reg6",
      "141444 PUSH MEMORY ELEMENT IF INIT      4122 -> reg9",
      "141447 PUSH MEMORY ELEMENT IF INIT      4128 -> reg11",
      "141450 GET      reg9[reg11] -> reg10",
      "141454 GET WINDOW PROP      window -> reg9",
      "141459 GET      reg9[outerHeight] -> reg11",
      "141465 STRICT EQUAL      reg10 === reg11 -> reg9",
      "141469 JUMP IF FALSE      reg9 TO: 141475 | 141472"
  ],
  "141472": [
      "141472 SET MEMORY ELEMENT IF INIT      4127 = true",
      "141475 ADD      reg71-> reg7",
      "141479 LESS THAN      reg7 < reg8 -> reg11",
      "141483 JUMP IF TRUE      reg11 TO: 141437 | 141486"
  ],
  "141475": [
      "141475 ADD      reg71-> reg7",
      "141479 LESS THAN      reg7 < reg8 -> reg11",
      "141483 JUMP IF TRUE      reg11 TO: 141437 | 141486"
  ],
  "141486": [
      "141486 PUSH MEMORY ELEMENT IF INIT      4123 -> reg4",
      "141489 JUMP IF FALSE      reg4 TO: 141498 | 141492"
  ],
  "141492": [
      "141492 PUSH MEMORY ELEMENT IF INIT      4124 -> reg6",
      "141495 SET      reg6 -> reg4",
      "141498 JUMP IF FALSE      reg4 TO: 141507 | 141501"
  ],
  "141498": ["141498 JUMP IF FALSE      reg4 TO: 141507 | 141501"],
  "141501": [
      "141501 PUSH MEMORY ELEMENT IF INIT      4125 -> reg7",
      "141504 SET      reg7 -> reg4",
      "141507 JUMP IF FALSE      reg4 TO: 141516 | 141510"
  ],
  "141507": ["141507 JUMP IF FALSE      reg4 TO: 141516 | 141510"],
  "141510": [
      "141510 PUSH MEMORY ELEMENT IF INIT      4126 -> reg7",
      "141513 SET      reg7 -> reg4",
      "141516 JUMP IF FALSE      reg4 TO: 141525 | 141519"
  ],
  "141516": ["141516 JUMP IF FALSE      reg4 TO: 141525 | 141519"],
  "141519": [
      "141519 PUSH MEMORY ELEMENT IF INIT      4127 -> reg7",
      "141522 SET      reg7 -> reg4",
      "141525 JUMP OR RETURN VAL      reg4"
  ],
  "141525": ["141525 JUMP OR RETURN VAL      reg4"],
  "141743": [
      "141743 SET MEMORY ELEMENT IF INIT      275 = true",
      "141746 JUMP      141756",
      "141756 SET I      null",
      "141758 JUMP OR RETURN"
  ],
  "141746": [
      "141746 JUMP      141756",
      "141756 SET I      null",
      "141758 JUMP OR RETURN"
  ],
  "141748": [
      "141748 SET I      null",
      "141750 PUSH F.K      -> reg4",
      "141752 VOID F",
      "141753 SET MEMORY ELEMENT      0 = reg4",
      "141756 SET I      null",
      "141758 JUMP OR RETURN"
  ],
  "141827": [
      "141827 PUSH MEMORY ELEMENT IF INIT      4145 -> reg7",
      "141830 GET      reg7[Date] -> reg8",
      "141836 EMPTY ARRAY      -> reg7",
      "141838 BIND APPLY      reg8 reg7 -> 6",
      "141842 GET      reg6[toString] -> reg7",
      "141848 EMPTY ARRAY      -> reg8",
      "141850 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "141854 SET      reg2 -> reg4",
      "141857 GET      reg4[match] -> reg7",
      "141863 NEW ARRAY      1 -> reg8",
      "141866 NEW REGEXP      \\((.+)\\) ,  -> reg10",
      "141874 PUT      reg8[0] = reg10",
      "141878 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg8",
      "141882 SET      reg2 -> reg5",
      "141885 GET      reg5[1] -> reg7",
      "141889 JUMP OR RETURN VAL      reg7"
  ],
  "141893": ["141893 JUMP OR RETURN VAL      NaN"],
  "142069": [
      "142069 SET I      null",
      "142071 PUSH F.K      -> reg4",
      "142073 VOID F",
      "142074 SET MEMORY ELEMENT      0 = reg4",
      "142077 EMPTY OBJECT      -> reg4",
      "142079 EMPTY OBJECT      -> reg8",
      "142081 PUT      reg4[navigator] = reg8",
      "142087 JUMP OR RETURN VAL      reg4"
  ],
  "142191": [
      "142191 PUSH MEMORY ELEMENT IF INIT      4154 -> reg8",
      "142194 GET      reg8[getContext] -> reg11",
      "142200 NEW ARRAY      1 -> reg9",
      "142203 PUT      reg9[0] = experimental-webgl2",
      "142209 CALL FUNCTION      OBJ: reg8 FUNC: reg11 ARGS: reg9",
      "142213 SET      reg2 -> reg7",
      "142216 SET      reg7 -> reg4",
      "142219 JUMP IF TRUE      reg4 TO: 142250 | 142222"
  ],
  "142219": ["142219 JUMP IF TRUE      reg4 TO: 142250 | 142222"],
  "142222": [
      "142222 PUSH MEMORY ELEMENT IF INIT      4154 -> reg9",
      "142225 GET      reg9[getContext] -> reg10",
      "142231 NEW ARRAY      1 -> reg11",
      "142234 PUT      reg11[0] = webgl",
      "142240 CALL FUNCTION      OBJ: reg9 FUNC: reg10 ARGS: reg11",
      "142244 SET      reg2 -> reg7",
      "142247 SET      reg7 -> reg4",
      "142250 JUMP IF TRUE      reg4 TO: 142281 | 142253"
  ],
  "142250": ["142250 JUMP IF TRUE      reg4 TO: 142281 | 142253"],
  "142253": [
      "142253 PUSH MEMORY ELEMENT IF INIT      4154 -> reg10",
      "142256 GET      reg10[getContext] -> reg11",
      "142262 NEW ARRAY      1 -> reg13",
      "142265 PUT      reg13[0] = experimental-webgl",
      "142271 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg13",
      "142275 SET      reg2 -> reg7",
      "142278 SET      reg7 -> reg4",
      "142281 JUMP IF TRUE      reg4 TO: 142312 | 142284"
  ],
  "142281": ["142281 JUMP IF TRUE      reg4 TO: 142312 | 142284"],
  "142284": [
      "142284 PUSH MEMORY ELEMENT IF INIT      4154 -> reg12",
      "142287 GET      reg12[getContext] -> reg11",
      "142293 NEW ARRAY      1 -> reg13",
      "142296 PUT      reg13[0] = moz-webgl",
      "142302 CALL FUNCTION      OBJ: reg12 FUNC: reg11 ARGS: reg13",
      "142306 SET      reg2 -> reg7",
      "142309 SET      reg7 -> reg4",
      "142312 SET MEMORY ELEMENT IF INIT      4155 = reg4",
      "142315 PUSH MEMORY ELEMENT IF INIT      4155 -> reg4",
      "142318 JUMP IF FALSE      reg4 TO: 142450 | 142321"
  ],
  "142312": [
      "142312 SET MEMORY ELEMENT IF INIT      4155 = reg4",
      "142315 PUSH MEMORY ELEMENT IF INIT      4155 -> reg4",
      "142318 JUMP IF FALSE      reg4 TO: 142450 | 142321"
  ],
  "142321": [
      "142321 PUSH MEMORY ELEMENT IF INIT      4155 -> reg4",
      "142324 GET      reg4[getExtension] -> reg13",
      "142330 NEW ARRAY      1 -> reg11",
      "142333 PUT      reg11[0] = WEBGL_debug_renderer_info",
      "142339 CALL FUNCTION      OBJ: reg4 FUNC: reg13 ARGS: reg11",
      "142343 SET      reg2 -> reg7",
      "142346 SET MEMORY ELEMENT IF INIT      4156 = reg7",
      "142349 EMPTY OBJECT      -> reg7",
      "142351 PUSH MEMORY ELEMENT IF INIT      4155 -> reg13",
      "142354 GET      reg13[getParameter] -> reg14",
      "142360 NEW ARRAY      1 -> reg15",
      "142363 PUSH MEMORY ELEMENT IF INIT      4156 -> reg16",
      "142366 GET      reg16[UNMASKED_VENDOR_WEBGL] -> reg17",
      "142372 PUT      reg15[0] = reg17",
      "142376 CALL FUNCTION      OBJ: reg13 FUNC: reg14 ARGS: reg15",
      "142380 SET      reg2 -> reg11",
      "142383 PUT      reg7[vendor] = reg11",
      "142389 PUSH MEMORY ELEMENT IF INIT      4155 -> reg14",
      "142392 GET      reg14[getParameter] -> reg15",
      "142398 NEW ARRAY      1 -> reg16",
      "142401 PUSH MEMORY ELEMENT IF INIT      4156 -> reg17",
      "142404 GET      reg17[UNMASKED_RENDERER_WEBGL] -> reg18",
      "142410 PUT      reg16[0] = reg18",
      "142414 CALL FUNCTION      OBJ: reg14 FUNC: reg15 ARGS: reg16",
      "142418 SET      reg2 -> reg11",
      "142421 PUT      reg7[renderer] = reg11",
      "142427 PUSH MEMORY ELEMENT IF INIT      4153 -> reg15",
      "142430 GET      reg15[navigator] -> reg16",
      "142436 GET      reg16[userAgent] -> reg15",
      "142442 PUT      reg7[userAgent] = reg15",
      "142448 JUMP OR RETURN VAL      reg7"
  ],
  "142450": [
      "142450 EMPTY OBJECT      -> reg7",
      "142452 PUT      reg7[vendor] = unknown",
      "142460 PUT      reg7[renderer] = unknown",
      "142468 PUSH MEMORY ELEMENT IF INIT      4153 -> reg11",
      "142471 GET      reg11[navigator] -> reg15",
      "142477 GET      reg15[userAgent] -> reg16",
      "142483 PUT      reg7[userAgent] = reg16",
      "142489 JUMP OR RETURN VAL      reg7"
  ],
  "142493": [
      "142493 SET I      null",
      "142495 PUSH F.K      -> reg11",
      "142497 VOID F",
      "142498 SET MEMORY ELEMENT      0 = reg11",
      "142501 EMPTY OBJECT      -> reg15",
      "142503 PUT      reg15[vendor] = unknown",
      "142511 PUT      reg15[renderer] = unknown",
      "142519 PUSH MEMORY ELEMENT IF INIT      0 -> reg16",
      "142522 GET      reg16[toString] -> reg7",
      "142528 EMPTY ARRAY      -> reg17",
      "142530 CALL FUNCTION      OBJ: reg16 FUNC: reg7 ARGS: reg17",
      "142534 SET      reg2 -> reg11",
      "142537 PUT      reg15[err] = reg11",
      "142543 JUMP OR RETURN VAL      reg15"
  ],
  "142898": [
      "142898 SET I      null",
      "142900 PUSH F.K      -> reg4",
      "142902 VOID F",
      "142903 SET MEMORY ELEMENT      0 = reg4",
      "142906 SET I      null",
      "142908 JUMP OR RETURN"
  ],
  "143109": [
      "143109 SET I      null",
      "143111 PUSH F.K      -> reg4",
      "143113 VOID F",
      "143114 SET MEMORY ELEMENT      0 = reg4",
      "143117 EMPTY OBJECT      -> reg4",
      "143119 EMPTY OBJECT      -> reg6",
      "143121 PUT      reg4[navigator] = reg6",
      "143127 JUMP OR RETURN VAL      reg4"
  ],
  "143508": [
      "143508 PUSH MEMORY ELEMENT IF INIT      4178 -> reg5",
      "143511 GET      reg5[n] -> reg10",
      "143517 GREATER THAN      reg10 > 0 -> reg5",
      "143521 SET      reg5 -> reg8",
      "143524 JUMP IF FALSE      reg8 TO: 143543 | 143527"
  ],
  "143524": ["143524 JUMP IF FALSE      reg8 TO: 143543 | 143527"],
  "143527": [
      "143527 PUSH MEMORY ELEMENT IF INIT      4178 -> reg5",
      "143530 GET      reg5[m] -> reg10",
      "143536 GREATER THAN      reg10 > 0 -> reg5",
      "143540 SET      reg5 -> reg8",
      "143543 JUMP IF FALSE      reg8 TO: 143615 | 143546"
  ],
  "143543": ["143543 JUMP IF FALSE      reg8 TO: 143615 | 143546"],
  "143546": [
      "143546 PUSH MEMORY ELEMENT IF INIT      4170 -> reg8",
      "143549 NEW ARRAY      2 -> reg10",
      "143552 PUT      reg10[0] = ch-ua-d",
      "143558 PUT      reg10[1] = 70231",
      "143564 CALL FUNCTION      PTR: reg8 MEM: reg10",
      "143568 SET      reg2 -> reg5",
      "143571 GET WINDOW PROP      setTimeout -> reg10",
      "143576 NEW ARRAY      2 -> reg5",
      "143579 INIT FUNCTION STATE      PTR: 143588 NAME:  LEN: 0 -> reg11",
      "143586 JUMP      143600",
      "143600 PUT      reg5[0] = reg11",
      "143604 PUT      reg5[1] = 2000",
      "143608 CALL FUNCTION      PTR: reg10 MEM: reg5",
      "143612 SET      reg2 -> reg8",
      "143615 JUMP      143625",
      "143625 SET I      null",
      "143627 JUMP OR RETURN"
  ],
  "143615": [
      "143615 JUMP      143625",
      "143625 SET I      null",
      "143627 JUMP OR RETURN"
  ],
  "143617": [
      "143617 SET I      null",
      "143619 PUSH F.K      -> reg5",
      "143621 VOID F",
      "143622 SET MEMORY ELEMENT      0 = reg5",
      "143625 SET I      null",
      "143627 JUMP OR RETURN"
  ],
  "143749": [
      "143749 SET I      null",
      "143751 PUSH F.K      -> reg4",
      "143753 VOID F",
      "143754 SET MEMORY ELEMENT      0 = reg4",
      "143757 SET I      null",
      "143759 JUMP OR RETURN"
  ],
  "143881": [
      "143881 GET WINDOW PROP      navigator -> reg8",
      "143886 PUT      reg8[cto] = 102",
      "143894 GET WINDOW PROP      document -> reg8",
      "143899 GET      reg8[body] -> reg4",
      "143905 GET      reg4[removeChild] -> reg8",
      "143911 NEW ARRAY      1 -> reg9",
      "143914 PUSH MEMORY ELEMENT IF INIT      4195 -> reg10",
      "143917 PUT      reg9[0] = reg10",
      "143921 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg9",
      "143925 SET      reg2 -> reg5",
      "143928 JUMP      143938",
      "143938 SET I      null",
      "143940 JUMP OR RETURN"
  ],
  "143894": [
      "143894 GET WINDOW PROP      document -> reg8",
      "143899 GET      reg8[body] -> reg4",
      "143905 GET      reg4[removeChild] -> reg8",
      "143911 NEW ARRAY      1 -> reg9",
      "143914 PUSH MEMORY ELEMENT IF INIT      4195 -> reg10",
      "143917 PUT      reg9[0] = reg10",
      "143921 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg9",
      "143925 SET      reg2 -> reg5",
      "143928 JUMP      143938",
      "143938 SET I      null",
      "143940 JUMP OR RETURN"
  ],
  "143930": [
      "143930 SET I      null",
      "143932 PUSH F.K      -> reg5",
      "143934 VOID F",
      "143935 SET MEMORY ELEMENT      0 = reg5",
      "143938 SET I      null",
      "143940 JUMP OR RETURN"
  ],
  "144155": [
      "144155 GET WINDOW PROP      window -> reg5",
      "144160 GET      reg5[outerWidth] -> reg7",
      "144166 STRICT EQUAL      reg7 === 1000 -> reg5",
      "144170 SET      reg5 -> reg4",
      "144173 JUMP IF FALSE      reg4 TO: 144194 | 144176"
  ],
  "144173": ["144173 JUMP IF FALSE      reg4 TO: 144194 | 144176"],
  "144176": [
      "144176 GET WINDOW PROP      window -> reg5",
      "144181 GET      reg5[innerHeight] -> reg7",
      "144187 STRICT EQUAL      reg7 === 0 -> reg5",
      "144191 SET      reg5 -> reg4",
      "144194 JUMP IF FALSE      reg4 TO: 144215 | 144197"
  ],
  "144194": ["144194 JUMP IF FALSE      reg4 TO: 144215 | 144197"],
  "144197": [
      "144197 GET WINDOW PROP      window -> reg6",
      "144202 GET      reg6[innerWidth] -> reg5",
      "144208 STRICT EQUAL      reg5 === 0 -> reg6",
      "144212 SET      reg6 -> reg4",
      "144215 JUMP IF FALSE      reg4 TO: 144236 | 144218"
  ],
  "144215": ["144215 JUMP IF FALSE      reg4 TO: 144236 | 144218"],
  "144218": [
      "144218 GET WINDOW PROP      screen -> reg5",
      "144223 GET      reg5[availHeight] -> reg8",
      "144229 STRICT EQUAL      reg8 === 1040 -> reg5",
      "144233 SET      reg5 -> reg4",
      "144236 JUMP IF FALSE      reg4 TO: 144257 | 144239"
  ],
  "144236": ["144236 JUMP IF FALSE      reg4 TO: 144257 | 144239"],
  "144239": [
      "144239 GET WINDOW PROP      screen -> reg5",
      "144244 GET      reg5[availWidth] -> reg6",
      "144250 STRICT EQUAL      reg6 === 1920 -> reg5",
      "144254 SET      reg5 -> reg4",
      "144257 JUMP IF FALSE      reg4 TO: 144278 | 144260"
  ],
  "144257": ["144257 JUMP IF FALSE      reg4 TO: 144278 | 144260"],
  "144260": [
      "144260 GET WINDOW PROP      screen -> reg5",
      "144265 GET      reg5[height] -> reg6",
      "144271 STRICT EQUAL      reg6 === 1080 -> reg5",
      "144275 SET      reg5 -> reg4",
      "144278 SET MEMORY ELEMENT IF INIT      4200 = reg4",
      "144281 GET WINDOW PROP      navigator -> reg4",
      "144286 GET      reg4[platform] -> reg5",
      "144292 STRICT EQUAL      reg5 === Win32 -> reg4",
      "144298 SET MEMORY ELEMENT IF INIT      4201 = reg4",
      "144301 PUSH MEMORY ELEMENT IF INIT      4201 -> reg4",
      "144304 STRICT EQUAL      reg4 === true -> reg5",
      "144308 JUMP IF FALSE      reg5 TO: 144321 | 144311"
  ],
  "144278": [
      "144278 SET MEMORY ELEMENT IF INIT      4200 = reg4",
      "144281 GET WINDOW PROP      navigator -> reg4",
      "144286 GET      reg4[platform] -> reg5",
      "144292 STRICT EQUAL      reg5 === Win32 -> reg4",
      "144298 SET MEMORY ELEMENT IF INIT      4201 = reg4",
      "144301 PUSH MEMORY ELEMENT IF INIT      4201 -> reg4",
      "144304 STRICT EQUAL      reg4 === true -> reg5",
      "144308 JUMP IF FALSE      reg5 TO: 144321 | 144311"
  ],
  "144311": [
      "144311 PUSH MEMORY ELEMENT IF INIT      4200 -> reg6",
      "144314 STRICT EQUAL      reg6 === true -> reg4",
      "144318 SET      reg4 -> reg5",
      "144321 SET MEMORY ELEMENT IF INIT      4202 = reg5",
      "144324 PUSH MEMORY ELEMENT IF INIT      4202 -> reg5",
      "144327 STRICT EQUAL      reg5 === true -> reg4",
      "144331 JUMP IF FALSE      reg4 TO: 144337 | 144334"
  ],
  "144321": [
      "144321 SET MEMORY ELEMENT IF INIT      4202 = reg5",
      "144324 PUSH MEMORY ELEMENT IF INIT      4202 -> reg5",
      "144327 STRICT EQUAL      reg5 === true -> reg4",
      "144331 JUMP IF FALSE      reg4 TO: 144337 | 144334"
  ],
  "144334": [
      "144334 SET MEMORY ELEMENT IF INIT      275 = true",
      "144337 JUMP      144347",
      "144347 SET I      null",
      "144349 JUMP OR RETURN"
  ],
  "144337": [
      "144337 JUMP      144347",
      "144347 SET I      null",
      "144349 JUMP OR RETURN"
  ],
  "144339": [
      "144339 SET I      null",
      "144341 PUSH F.K      -> reg4",
      "144343 VOID F",
      "144344 SET MEMORY ELEMENT      0 = reg4",
      "144347 SET I      null",
      "144349 JUMP OR RETURN"
  ],
  "144392": [
      "144392 GET WINDOW PROP      navigator -> reg4",
      "144397 PUT      reg4[autoTranslate] = true",
      "144403 JUMP      144413",
      "144413 SET I      144417",
      "144415 JUMP      144425",
      "144425 SET I      null",
      "144427 JUMP OR RETURN"
  ],
  "144403": [
      "144403 JUMP      144413",
      "144413 SET I      144417",
      "144415 JUMP      144425",
      "144425 SET I      null",
      "144427 JUMP OR RETURN"
  ],
  "144405": [
      "144405 SET I      144417",
      "144407 PUSH F.K      -> reg4",
      "144409 VOID F",
      "144410 SET MEMORY ELEMENT      0 = reg4",
      "144413 SET I      144417",
      "144415 JUMP      144425",
      "144425 SET I      null",
      "144427 JUMP OR RETURN"
  ],
  "144417": [
      "144417 SET I      null",
      "144419 PUSH F.K      -> reg4",
      "144421 VOID F",
      "144422 SET MEMORY ELEMENT      0 = reg4",
      "144425 SET I      null",
      "144427 JUMP OR RETURN"
  ],
  "144511": [
      "144511 PUSH MEMORY ELEMENT IF INIT      4230 -> reg5",
      "144514 GET WINDOW PROP      String -> reg6",
      "144519 GET      reg6[fromCharCode] -> reg7",
      "144525 NEW ARRAY      1 -> reg9",
      "144528 PUSH MEMORY ELEMENT IF INIT      4228 -> reg10",
      "144531 GET      reg10[charCodeAt] -> reg11",
      "144537 NEW ARRAY      1 -> reg12",
      "144540 PUSH MEMORY ELEMENT IF INIT      4231 -> reg13",
      "144543 PUT      reg12[0] = reg13",
      "144547 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "144551 SET      reg2 -> reg8",
      "144554 PUSH MEMORY ELEMENT IF INIT      4229 -> reg12",
      "144557 GET      reg12[charCodeAt] -> reg13",
      "144563 NEW ARRAY      1 -> reg14",
      "144566 PUSH MEMORY ELEMENT IF INIT      4231 -> reg15",
      "144569 PUSH MEMORY ELEMENT IF INIT      4229 -> reg16",
      "144572 GET      reg16[length] -> reg17",
      "144578 MOD      reg15 % reg17 -> reg16",
      "144582 PUT      reg14[0] = reg16",
      "144586 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "144590 SET      reg2 -> reg11",
      "144593 XOR      reg8 ^ reg11 -> reg13",
      "144597 PUT      reg9[0] = reg13",
      "144601 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "144605 SET      reg2 -> reg4",
      "144608 ADD      reg5NaN-> reg4",
      "144612 SET MEMORY ELEMENT IF INIT      4230 = reg4",
      "144615 PUSH MEMORY ELEMENT IF INIT      4231 -> reg4",
      "144618 SET      reg4 -> reg5",
      "144621 ADD      reg41-> reg4",
      "144625 SET MEMORY ELEMENT IF INIT      4231 = reg4",
      "144628 JUMP      144492",
      "144492 PUSH MEMORY ELEMENT IF INIT      4231 -> reg5",
      "144495 PUSH MEMORY ELEMENT IF INIT      4228 -> reg4",
      "144498 GET      reg4[length] -> reg7",
      "144504 LESS THAN      reg5 < reg7 -> reg4",
      "144508 JUMP IF FALSE      reg4 TO: 144630 | 144511"
  ],
  "144630": [
      "144630 PUSH MEMORY ELEMENT IF INIT      4230 -> reg5",
      "144633 JUMP OR RETURN VAL      reg5"
  ],
  "144673": [
      "144673 GET      reg3[1] -> reg4",
      "144677 GET WINDOW PROP      undefined -> reg8",
      "144682 STRICT NOT EQUAL      reg4 !== reg8 -> reg5",
      "144686 SET      reg5 -> reg6",
      "144689 JUMP IF FALSE      reg6 TO: 144701 | 144692"
  ],
  "144689": ["144689 JUMP IF FALSE      reg6 TO: 144701 | 144692"],
  "144692": [
      "144692 GET      reg3[1] -> reg5",
      "144696 SET      reg5 -> reg4",
      "144699 JUMP      144704",
      "144704 SET MEMORY ELEMENT IF INIT      4235 = reg4",
      "144707 PUSH MEMORY ELEMENT IF INIT      280 -> reg4",
      "144710 GET      reg4[stringify] -> reg6",
      "144716 NEW ARRAY      1 -> reg7",
      "144719 PUSH MEMORY ELEMENT IF INIT      4234 -> reg8",
      "144722 PUT      reg7[0] = reg8",
      "144726 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "144730 SET      reg2 -> reg5",
      "144733 SET MEMORY ELEMENT IF INIT      4236 = reg5",
      "144736 GET WINDOW PROP      encodeURI -> reg5",
      "144741 NEW ARRAY      1 -> reg6",
      "144744 PUSH MEMORY ELEMENT IF INIT      4236 -> reg8",
      "144747 PUT      reg6[0] = reg8",
      "144751 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "144755 SET      reg2 -> reg7",
      "144758 SET MEMORY ELEMENT IF INIT      4236 = reg7",
      "144761 PUSH MEMORY ELEMENT IF INIT      4221 -> reg6",
      "144764 NEW ARRAY      2 -> reg7",
      "144767 PUSH MEMORY ELEMENT IF INIT      4236 -> reg8",
      "144770 PUT      reg7[0] = reg8",
      "144774 ADD      omgtoNaN-> reg8",
      "144782 PUT      reg7[1] = reg8",
      "144786 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "144790 SET      reg2 -> reg5",
      "144793 SET MEMORY ELEMENT IF INIT      4237 = reg5",
      "144796 GET WINDOW PROP      btoa -> reg6",
      "144801 NEW ARRAY      1 -> reg5",
      "144804 PUSH MEMORY ELEMENT IF INIT      4237 -> reg8",
      "144807 PUT      reg5[0] = reg8",
      "144811 CALL FUNCTION      PTR: reg6 MEM: reg5",
      "144815 SET      reg2 -> reg7",
      "144818 SET MEMORY ELEMENT IF INIT      4238 = reg7",
      "144821 GET WINDOW PROP      XMLHttpRequest -> reg9",
      "144826 EMPTY ARRAY      -> reg6",
      "144828 BIND APPLY      reg9 reg6 -> 5",
      "144832 SET MEMORY ELEMENT IF INIT      4239 = reg5",
      "144835 PUSH MEMORY ELEMENT IF INIT      4239 -> reg6",
      "144838 GET      reg6[open] -> reg7",
      "144844 NEW ARRAY      3 -> reg8",
      "144847 PUT      reg8[0] = POST",
      "144853 PUT      reg8[1] = https://reporting.cdndex.io/error",
      "144859 PUSH MEMORY ELEMENT IF INIT      4235 -> reg9",
      "144862 PUT      reg8[2] = reg9",
      "144866 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "144870 SET      reg2 -> reg5",
      "144873 PUSH MEMORY ELEMENT IF INIT      4239 -> reg5",
      "144876 GET      reg5[setRequestHeader] -> reg8",
      "144882 NEW ARRAY      2 -> reg9",
      "144885 PUT      reg9[0] = Content-Type",
      "144891 PUT      reg9[1] = application/json;charset=UTF-8",
      "144897 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg9",
      "144901 SET      reg2 -> reg7",
      "144904 PUSH MEMORY ELEMENT IF INIT      4239 -> reg10",
      "144907 GET      reg10[send] -> reg8",
      "144913 NEW ARRAY      1 -> reg9",
      "144916 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "144919 GET      reg12[stringify] -> reg13",
      "144925 NEW ARRAY      1 -> reg14",
      "144928 EMPTY OBJECT      -> reg16",
      "144930 PUSH MEMORY ELEMENT IF INIT      4238 -> reg15",
      "144933 PUT      reg16[data] = reg15",
      "144939 PUT      reg14[0] = reg16",
      "144943 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "144947 SET      reg2 -> reg11",
      "144950 PUT      reg9[0] = reg11",
      "144954 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg9",
      "144958 SET      reg2 -> reg7",
      "144961 JUMP OR RETURN"
  ],
  "144701": [
      "144701 SET      false -> reg4",
      "144704 SET MEMORY ELEMENT IF INIT      4235 = reg4",
      "144707 PUSH MEMORY ELEMENT IF INIT      280 -> reg4",
      "144710 GET      reg4[stringify] -> reg6",
      "144716 NEW ARRAY      1 -> reg7",
      "144719 PUSH MEMORY ELEMENT IF INIT      4234 -> reg8",
      "144722 PUT      reg7[0] = reg8",
      "144726 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "144730 SET      reg2 -> reg5",
      "144733 SET MEMORY ELEMENT IF INIT      4236 = reg5",
      "144736 GET WINDOW PROP      encodeURI -> reg5",
      "144741 NEW ARRAY      1 -> reg6",
      "144744 PUSH MEMORY ELEMENT IF INIT      4236 -> reg8",
      "144747 PUT      reg6[0] = reg8",
      "144751 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "144755 SET      reg2 -> reg7",
      "144758 SET MEMORY ELEMENT IF INIT      4236 = reg7",
      "144761 PUSH MEMORY ELEMENT IF INIT      4221 -> reg6",
      "144764 NEW ARRAY      2 -> reg7",
      "144767 PUSH MEMORY ELEMENT IF INIT      4236 -> reg8",
      "144770 PUT      reg7[0] = reg8",
      "144774 ADD      omgtoNaN-> reg8",
      "144782 PUT      reg7[1] = reg8",
      "144786 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "144790 SET      reg2 -> reg5",
      "144793 SET MEMORY ELEMENT IF INIT      4237 = reg5",
      "144796 GET WINDOW PROP      btoa -> reg6",
      "144801 NEW ARRAY      1 -> reg5",
      "144804 PUSH MEMORY ELEMENT IF INIT      4237 -> reg8",
      "144807 PUT      reg5[0] = reg8",
      "144811 CALL FUNCTION      PTR: reg6 MEM: reg5",
      "144815 SET      reg2 -> reg7",
      "144818 SET MEMORY ELEMENT IF INIT      4238 = reg7",
      "144821 GET WINDOW PROP      XMLHttpRequest -> reg9",
      "144826 EMPTY ARRAY      -> reg6",
      "144828 BIND APPLY      reg9 reg6 -> 5",
      "144832 SET MEMORY ELEMENT IF INIT      4239 = reg5",
      "144835 PUSH MEMORY ELEMENT IF INIT      4239 -> reg6",
      "144838 GET      reg6[open] -> reg7",
      "144844 NEW ARRAY      3 -> reg8",
      "144847 PUT      reg8[0] = POST",
      "144853 PUT      reg8[1] = https://reporting.cdndex.io/error",
      "144859 PUSH MEMORY ELEMENT IF INIT      4235 -> reg9",
      "144862 PUT      reg8[2] = reg9",
      "144866 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "144870 SET      reg2 -> reg5",
      "144873 PUSH MEMORY ELEMENT IF INIT      4239 -> reg5",
      "144876 GET      reg5[setRequestHeader] -> reg8",
      "144882 NEW ARRAY      2 -> reg9",
      "144885 PUT      reg9[0] = Content-Type",
      "144891 PUT      reg9[1] = application/json;charset=UTF-8",
      "144897 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg9",
      "144901 SET      reg2 -> reg7",
      "144904 PUSH MEMORY ELEMENT IF INIT      4239 -> reg10",
      "144907 GET      reg10[send] -> reg8",
      "144913 NEW ARRAY      1 -> reg9",
      "144916 PUSH MEMORY ELEMENT IF INIT      280 -> reg12",
      "144919 GET      reg12[stringify] -> reg13",
      "144925 NEW ARRAY      1 -> reg14",
      "144928 EMPTY OBJECT      -> reg16",
      "144930 PUSH MEMORY ELEMENT IF INIT      4238 -> reg15",
      "144933 PUT      reg16[data] = reg15",
      "144939 PUT      reg14[0] = reg16",
      "144943 CALL FUNCTION      OBJ: reg12 FUNC: reg13 ARGS: reg14",
      "144947 SET      reg2 -> reg11",
      "144950 PUT      reg9[0] = reg11",
      "144954 CALL FUNCTION      OBJ: reg10 FUNC: reg8 ARGS: reg9",
      "144958 SET      reg2 -> reg7",
      "144961 JUMP OR RETURN"
  ],
  "145009": [
      "145009 PUSH H       -> reg5",
      "145011 GET WINDOW PROP      document -> reg7",
      "145016 GET      reg7[createElement] -> reg6",
      "145022 NEW ARRAY      1 -> reg9",
      "145025 PUT      reg9[0] = iframe",
      "145031 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg9",
      "145035 SET      reg2 -> reg4",
      "145038 PUT      reg5[_ifr] = reg4",
      "145044 PUSH H       -> reg4",
      "145046 GET      reg4[_ifr] -> reg5",
      "145052 GET      reg5[style] -> reg4",
      "145058 PUT      reg4[display] = none",
      "145066 PUSH H       -> reg6",
      "145068 GET      reg6[_ifr] -> reg4",
      "145074 PUT      reg4[src] = javascript:;",
      "145082 GET WINDOW PROP      document -> reg4",
      "145087 GET      reg4[body] -> reg6",
      "145093 GET      reg6[appendChild] -> reg4",
      "145099 NEW ARRAY      1 -> reg9",
      "145102 PUSH H       -> reg10",
      "145104 GET      reg10[_ifr] -> reg8",
      "145110 PUT      reg9[0] = reg8",
      "145114 CALL FUNCTION      OBJ: reg6 FUNC: reg4 ARGS: reg9",
      "145118 SET      reg2 -> reg5",
      "145121 PUSH H       -> reg4",
      "145123 GET      reg4[_ifr] -> reg5",
      "145129 JUMP OR RETURN VAL      reg5"
  ],
  "145121": [
      "145121 PUSH H       -> reg4",
      "145123 GET      reg4[_ifr] -> reg5",
      "145129 JUMP OR RETURN VAL      reg5"
  ],
  "145195": [
      "145195 SET      0 -> reg7",
      "145198 GET      reg5[reg7] -> reg6",
      "145202 SET MEMORY ELEMENT IF INIT      4247 = reg6",
      "145205 PUSH MEMORY ELEMENT IF INIT      4245 -> reg8",
      "145208 PUSH MEMORY ELEMENT IF INIT      4247 -> reg10",
      "145211 GET      reg8[reg10] -> reg9",
      "145215 TYPEOF      reg9 -> reg8",
      "145218 STRICT NOT EQUAL      reg8 !== object -> reg9",
      "145224 JUMP IF FALSE      reg9 TO: 145229 | 145227"
  ],
  "145198": [
      "145198 GET      reg5[reg7] -> reg6",
      "145202 SET MEMORY ELEMENT IF INIT      4247 = reg6",
      "145205 PUSH MEMORY ELEMENT IF INIT      4245 -> reg8",
      "145208 PUSH MEMORY ELEMENT IF INIT      4247 -> reg10",
      "145211 GET      reg8[reg10] -> reg9",
      "145215 TYPEOF      reg9 -> reg8",
      "145218 STRICT NOT EQUAL      reg8 !== object -> reg9",
      "145224 JUMP IF FALSE      reg9 TO: 145229 | 145227"
  ],
  "145227": [
      "145227 JUMP      145345",
      "145345 ADD      reg71-> reg7",
      "145349 LESS THAN      reg7 < reg4 -> reg8",
      "145353 JUMP IF TRUE      reg8 TO: 145198 | 145356"
  ],
  "145229": [
      "145229 PUSH MEMORY ELEMENT IF INIT      4245 -> reg8",
      "145232 PUSH MEMORY ELEMENT IF INIT      4247 -> reg9",
      "145235 GET      reg8[reg9] -> reg10",
      "145239 IN      score inreg10 -> reg8",
      "145245 JUMP IF FALSE      reg8 TO: 145345 | 145248"
  ],
  "145248": [
      "145248 PUSH MEMORY ELEMENT IF INIT      4245 -> reg8",
      "145251 PUSH MEMORY ELEMENT IF INIT      4247 -> reg10",
      "145254 GET      reg8[reg10] -> reg9",
      "145258 GET      reg9[score] -> reg8",
      "145264 TYPEOF      reg8 -> reg9",
      "145267 STRICT NOT EQUAL      reg9 !== number -> reg8",
      "145273 JUMP IF FALSE      reg8 TO: 145278 | 145276"
  ],
  "145276": [
      "145276 JUMP      145345",
      "145345 ADD      reg71-> reg7",
      "145349 LESS THAN      reg7 < reg4 -> reg8",
      "145353 JUMP IF TRUE      reg8 TO: 145198 | 145356"
  ],
  "145278": [
      "145278 PUSH MEMORY ELEMENT IF INIT      4246 -> reg8",
      "145281 GET      reg8[v] -> reg9",
      "145287 PUSH MEMORY ELEMENT IF INIT      4247 -> reg8",
      "145290 PUSH MEMORY ELEMENT IF INIT      4245 -> reg10",
      "145293 PUSH MEMORY ELEMENT IF INIT      4247 -> reg11",
      "145296 GET      reg10[reg11] -> reg12",
      "145300 GET      reg12[score] -> reg10",
      "145306 PUT      reg9[reg8] = reg10",
      "145310 PUSH MEMORY ELEMENT IF INIT      4246 -> reg8",
      "145313 GET      reg8[total] -> reg10",
      "145319 PUSH MEMORY ELEMENT IF INIT      4245 -> reg9",
      "145322 PUSH MEMORY ELEMENT IF INIT      4247 -> reg12",
      "145325 GET      reg9[reg12] -> reg11",
      "145329 GET      reg11[score] -> reg12",
      "145335 ADD      reg10NaN-> reg12",
      "145339 PUT      reg8[total] = reg12",
      "145345 ADD      reg71-> reg7",
      "145349 LESS THAN      reg7 < reg4 -> reg8",
      "145353 JUMP IF TRUE      reg8 TO: 145198 | 145356"
  ],
  "145345": [
      "145345 ADD      reg71-> reg7",
      "145349 LESS THAN      reg7 < reg4 -> reg8",
      "145353 JUMP IF TRUE      reg8 TO: 145198 | 145356"
  ],
  "145356": [
      "145356 PUSH MEMORY ELEMENT IF INIT      4246 -> reg6",
      "145359 GET      reg6[total] -> reg4",
      "145365 GREATER THAN OR EQUAL      reg4 >= 100 -> reg5",
      "145369 SET MEMORY ELEMENT IF INIT      4248 = reg5",
      "145372 EMPTY OBJECT      -> reg5",
      "145374 PUSH MEMORY ELEMENT IF INIT      4248 -> reg6",
      "145377 PUT      reg5[verdict] = reg6",
      "145383 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "145386 GET      reg7[stringify] -> reg6",
      "145392 NEW ARRAY      1 -> reg10",
      "145395 PUSH MEMORY ELEMENT IF INIT      4246 -> reg8",
      "145398 PUT      reg10[0] = reg8",
      "145402 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg10",
      "145406 SET      reg2 -> reg4",
      "145409 PUT      reg5[raw] = reg4",
      "145415 PUT      reg5[error] = false",
      "145421 JUMP OR RETURN VAL      reg5"
  ],
  "145425": [
      "145425 SET I      null",
      "145427 PUSH F.K      -> reg4",
      "145429 VOID F",
      "145430 SET MEMORY ELEMENT      0 = reg4",
      "145433 EMPTY OBJECT      -> reg4",
      "145435 PUT      reg4[verdict] = false",
      "145441 PUSH MEMORY ELEMENT IF INIT      0 -> reg6",
      "145444 GET      reg6[toString] -> reg8",
      "145450 EMPTY ARRAY      -> reg9",
      "145452 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "145456 SET      reg2 -> reg5",
      "145459 PUT      reg4[raw] = reg5",
      "145465 PUT      reg4[error] = true",
      "145471 JUMP OR RETURN VAL      reg4"
  ],
  "145606": [
      "145606 PUSH MEMORY ELEMENT IF INIT      4284 -> reg5",
      "145609 GET      reg5[charCodeAt] -> reg8",
      "145615 NEW ARRAY      1 -> reg6",
      "145618 PUSH MEMORY ELEMENT IF INIT      4286 -> reg9",
      "145621 PUT      reg6[0] = reg9",
      "145625 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg6",
      "145629 SET      reg2 -> reg4",
      "145632 SET MEMORY ELEMENT IF INIT      4288 = reg4",
      "145635 PUSH MEMORY ELEMENT IF INIT      4288 -> reg4",
      "145638 LESS THAN      reg4 < 128 -> reg7",
      "145642 JUMP IF FALSE      reg7 TO: 145673 | 145645"
  ],
  "145645": [
      "145645 PUSH MEMORY ELEMENT IF INIT      4285 -> reg6",
      "145648 GET      reg6[push] -> reg8",
      "145654 NEW ARRAY      1 -> reg7",
      "145657 PUSH MEMORY ELEMENT IF INIT      4288 -> reg10",
      "145660 PUT      reg7[0] = reg10",
      "145664 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg7",
      "145668 SET      reg2 -> reg4",
      "145671 JUMP      145977",
      "145977 PUSH MEMORY ELEMENT IF INIT      4286 -> reg4",
      "145980 ADD      reg41-> reg4",
      "145984 SET MEMORY ELEMENT IF INIT      4286 = reg4",
      "145987 JUMP      145593",
      "145593 PUSH MEMORY ELEMENT IF INIT      4286 -> reg5",
      "145596 PUSH MEMORY ELEMENT IF INIT      4287 -> reg4",
      "145599 LESS THAN      reg5 < reg4 -> reg6",
      "145603 JUMP IF FALSE      reg6 TO: 145989 | 145606"
  ],
  "145673": [
      "145673 PUSH MEMORY ELEMENT IF INIT      4288 -> reg4",
      "145676 LESS THAN      reg4 < 2048 -> reg7",
      "145680 JUMP IF FALSE      reg7 TO: 145734 | 145683"
  ],
  "145683": [
      "145683 PUSH MEMORY ELEMENT IF INIT      4285 -> reg8",
      "145686 GET      reg8[push] -> reg7",
      "145692 NEW ARRAY      2 -> reg10",
      "145695 PUSH MEMORY ELEMENT IF INIT      4288 -> reg9",
      "145698 RSHIFT      reg9 >> 6 -> reg12",
      "145702 OR      192 | reg12 -> reg14",
      "145706 PUT      reg10[0] = reg14",
      "145710 PUSH MEMORY ELEMENT IF INIT      4288 -> reg9",
      "145713 AND      reg9 & 63 -> reg12",
      "145717 OR      128 | reg12 -> reg9",
      "145721 PUT      reg10[1] = reg9",
      "145725 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg10",
      "145729 SET      reg2 -> reg4",
      "145732 JUMP      145977",
      "145977 PUSH MEMORY ELEMENT IF INIT      4286 -> reg4",
      "145980 ADD      reg41-> reg4",
      "145984 SET MEMORY ELEMENT IF INIT      4286 = reg4",
      "145987 JUMP      145593",
      "145593 PUSH MEMORY ELEMENT IF INIT      4286 -> reg5",
      "145596 PUSH MEMORY ELEMENT IF INIT      4287 -> reg4",
      "145599 LESS THAN      reg5 < reg4 -> reg6",
      "145603 JUMP IF FALSE      reg6 TO: 145989 | 145606"
  ],
  "145734": [
      "145734 PUSH MEMORY ELEMENT IF INIT      4288 -> reg4",
      "145737 LESS THAN      reg4 < 55296 -> reg7",
      "145741 JUMP IF TRUE      reg7 TO: 145754 | 145744"
  ],
  "145744": [
      "145744 PUSH MEMORY ELEMENT IF INIT      4288 -> reg9",
      "145747 GREATER THAN OR EQUAL      reg9 >= 57344 -> reg4",
      "145751 SET      reg4 -> reg7",
      "145754 JUMP IF FALSE      reg7 TO: 145827 | 145757"
  ],
  "145754": ["145754 JUMP IF FALSE      reg7 TO: 145827 | 145757"],
  "145757": [
      "145757 PUSH MEMORY ELEMENT IF INIT      4285 -> reg7",
      "145760 GET      reg7[push] -> reg9",
      "145766 NEW ARRAY      3 -> reg10",
      "145769 PUSH MEMORY ELEMENT IF INIT      4288 -> reg11",
      "145772 RSHIFT      reg11 >> 12 -> reg12",
      "145776 OR      224 | reg12 -> reg11",
      "145780 PUT      reg10[0] = reg11",
      "145784 PUSH MEMORY ELEMENT IF INIT      4288 -> reg11",
      "145787 RSHIFT      reg11 >> 6 -> reg12",
      "145791 AND      reg12 & 63 -> reg13",
      "145795 OR      128 | reg13 -> reg12",
      "145799 PUT      reg10[1] = reg12",
      "145803 PUSH MEMORY ELEMENT IF INIT      4288 -> reg11",
      "145806 AND      reg11 & 63 -> reg12",
      "145810 OR      128 | reg12 -> reg11",
      "145814 PUT      reg10[2] = reg11",
      "145818 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "145822 SET      reg2 -> reg4",
      "145825 JUMP      145977",
      "145977 PUSH MEMORY ELEMENT IF INIT      4286 -> reg4",
      "145980 ADD      reg41-> reg4",
      "145984 SET MEMORY ELEMENT IF INIT      4286 = reg4",
      "145987 JUMP      145593",
      "145593 PUSH MEMORY ELEMENT IF INIT      4286 -> reg5",
      "145596 PUSH MEMORY ELEMENT IF INIT      4287 -> reg4",
      "145599 LESS THAN      reg5 < reg4 -> reg6",
      "145603 JUMP IF FALSE      reg6 TO: 145989 | 145606"
  ],
  "145827": [
      "145827 PUSH MEMORY ELEMENT IF INIT      4288 -> reg4",
      "145830 AND      reg4 & 1023 -> reg9",
      "145834 LSHIFT      reg9 << 10 -> reg4",
      "145838 PUSH MEMORY ELEMENT IF INIT      4284 -> reg10",
      "145841 GET      reg10[charCodeAt] -> reg11",
      "145847 NEW ARRAY      1 -> reg13",
      "145850 PUSH MEMORY ELEMENT IF INIT      4286 -> reg12",
      "145853 ADD      reg121-> reg12",
      "145857 SET MEMORY ELEMENT IF INIT      4286 = reg12",
      "145860 PUT      reg13[0] = reg12",
      "145864 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg13",
      "145868 SET      reg2 -> reg9",
      "145871 AND      reg9 & 1023 -> reg12",
      "145875 OR      reg4 | reg12 -> reg11",
      "145879 ADD      65536NaN-> reg9",
      "145883 SET MEMORY ELEMENT IF INIT      4289 = reg9",
      "145886 PUSH MEMORY ELEMENT IF INIT      4285 -> reg11",
      "145889 GET      reg11[push] -> reg9",
      "145895 NEW ARRAY      4 -> reg12",
      "145898 PUSH MEMORY ELEMENT IF INIT      4289 -> reg13",
      "145901 RSHIFT      reg13 >> 18 -> reg14",
      "145905 AND      reg14 & 7 -> reg13",
      "145909 OR      240 | reg13 -> reg15",
      "145913 PUT      reg12[0] = reg15",
      "145917 PUSH MEMORY ELEMENT IF INIT      4289 -> reg13",
      "145920 RSHIFT      reg13 >> 12 -> reg14",
      "145924 AND      reg14 & 63 -> reg13",
      "145928 OR      128 | reg13 -> reg15",
      "145932 PUT      reg12[1] = reg15",
      "145936 PUSH MEMORY ELEMENT IF INIT      4289 -> reg13",
      "145939 RSHIFT      reg13 >> 6 -> reg16",
      "145943 AND      reg16 & 63 -> reg13",
      "145947 OR      128 | reg13 -> reg14",
      "145951 PUT      reg12[2] = reg14",
      "145955 PUSH MEMORY ELEMENT IF INIT      4289 -> reg13",
      "145958 AND      reg13 & 63 -> reg14",
      "145962 OR      128 | reg14 -> reg13",
      "145966 PUT      reg12[3] = reg13",
      "145970 CALL FUNCTION      OBJ: reg11 FUNC: reg9 ARGS: reg12",
      "145974 SET      reg2 -> reg4",
      "145977 PUSH MEMORY ELEMENT IF INIT      4286 -> reg4",
      "145980 ADD      reg41-> reg4",
      "145984 SET MEMORY ELEMENT IF INIT      4286 = reg4",
      "145987 JUMP      145593",
      "145593 PUSH MEMORY ELEMENT IF INIT      4286 -> reg5",
      "145596 PUSH MEMORY ELEMENT IF INIT      4287 -> reg4",
      "145599 LESS THAN      reg5 < reg4 -> reg6",
      "145603 JUMP IF FALSE      reg6 TO: 145989 | 145606"
  ],
  "145989": [
      "145989 GET WINDOW PROP      Uint8Array -> reg9",
      "145994 NEW ARRAY      1 -> reg12",
      "145997 PUSH MEMORY ELEMENT IF INIT      4285 -> reg13",
      "146000 PUT      reg12[0] = reg13",
      "146004 BIND APPLY      reg9 reg12 -> 4",
      "146008 JUMP OR RETURN VAL      reg4"
  ],
  "146049": [
      "146049 PUSH MEMORY ELEMENT IF INIT      4262 -> reg4",
      "146052 NEW ARRAY      1 -> reg7",
      "146055 PUSH MEMORY ELEMENT IF INIT      4255 -> reg8",
      "146058 PUT      reg7[0] = reg8",
      "146062 CALL FUNCTION      PTR: reg4 MEM: reg7",
      "146066 SET      reg2 -> reg6",
      "146069 SET      reg6 -> reg5",
      "146072 JUMP      146080",
      "146080 SET MEMORY ELEMENT IF INIT      4255 = reg5",
      "146083 PUSH MEMORY ELEMENT IF INIT      4255 -> reg4",
      "146086 SET MEMORY ELEMENT IF INIT      4263 = reg4",
      "146089 PUSH MEMORY ELEMENT IF INIT      4256 -> reg5",
      "146092 PUSH MEMORY ELEMENT IF INIT      4261 -> reg6",
      "146095 ADD      reg5NaN-> reg4",
      "146099 AND      reg4 & 4294967295 -> reg5",
      "146105 SET MEMORY ELEMENT IF INIT      4264 = reg5",
      "146108 SET MEMORY ELEMENT IF INIT      4265 = 0",
      "146111 PUSH MEMORY ELEMENT IF INIT      4263 -> reg4",
      "146114 GET      reg4[length] -> reg5",
      "146120 GREATER THAN OR EQUAL      reg5 >= 16 -> reg4",
      "146124 JUMP IF FALSE      reg4 TO: 146644 | 146127"
  ],
  "146074": [
      "146074 PUSH MEMORY ELEMENT IF INIT      4255 -> reg6",
      "146077 SET      reg6 -> reg5",
      "146080 SET MEMORY ELEMENT IF INIT      4255 = reg5",
      "146083 PUSH MEMORY ELEMENT IF INIT      4255 -> reg4",
      "146086 SET MEMORY ELEMENT IF INIT      4263 = reg4",
      "146089 PUSH MEMORY ELEMENT IF INIT      4256 -> reg5",
      "146092 PUSH MEMORY ELEMENT IF INIT      4261 -> reg6",
      "146095 ADD      reg5NaN-> reg4",
      "146099 AND      reg4 & 4294967295 -> reg5",
      "146105 SET MEMORY ELEMENT IF INIT      4264 = reg5",
      "146108 SET MEMORY ELEMENT IF INIT      4265 = 0",
      "146111 PUSH MEMORY ELEMENT IF INIT      4263 -> reg4",
      "146114 GET      reg4[length] -> reg5",
      "146120 GREATER THAN OR EQUAL      reg5 >= 16 -> reg4",
      "146124 JUMP IF FALSE      reg4 TO: 146644 | 146127"
  ],
  "146127": [
      "146127 NEW ARRAY      4 -> reg4",
      "146130 PUSH MEMORY ELEMENT IF INIT      4256 -> reg6",
      "146133 PUSH MEMORY ELEMENT IF INIT      4257 -> reg5",
      "146136 ADD      reg6NaN-> reg8",
      "146140 PUSH MEMORY ELEMENT IF INIT      4258 -> reg5",
      "146143 ADD      reg8NaN-> reg10",
      "146147 AND      reg10 & 4294967295 -> reg5",
      "146153 PUT      reg4[0] = reg5",
      "146157 PUSH MEMORY ELEMENT IF INIT      4256 -> reg5",
      "146160 PUSH MEMORY ELEMENT IF INIT      4258 -> reg6",
      "146163 ADD      reg5NaN-> reg7",
      "146167 AND      reg7 & 4294967295 -> reg6",
      "146173 PUT      reg4[1] = reg6",
      "146177 PUSH MEMORY ELEMENT IF INIT      4256 -> reg5",
      "146180 ADD      reg50-> reg6",
      "146184 AND      reg6 & 4294967295 -> reg7",
      "146190 PUT      reg4[2] = reg7",
      "146194 PUSH MEMORY ELEMENT IF INIT      4256 -> reg5",
      "146197 PUSH MEMORY ELEMENT IF INIT      4257 -> reg6",
      "146200 SUBTRACT      reg5 - reg6 -> reg7",
      "146204 AND      reg7 & 4294967295 -> reg5",
      "146210 PUT      reg4[3] = reg5",
      "146214 SET MEMORY ELEMENT IF INIT      4266 = reg4",
      "146217 PUSH MEMORY ELEMENT IF INIT      4255 -> reg4",
      "146220 SET MEMORY ELEMENT IF INIT      4267 = reg4",
      "146223 PUSH MEMORY ELEMENT IF INIT      4267 -> reg6",
      "146226 GET      reg6[length] -> reg5",
      "146232 SUBTRACT      reg5 - 16 -> reg4",
      "146236 SET MEMORY ELEMENT IF INIT      4268 = reg4",
      "146239 SET MEMORY ELEMENT IF INIT      4269 = 0",
      "146242 SET MEMORY ELEMENT IF INIT      4265 = 0",
      "146245 PUSH MEMORY ELEMENT IF INIT      4265 -> reg4",
      "146248 AND      reg4 & 4294967280 -> reg5",
      "146254 PUSH MEMORY ELEMENT IF INIT      4268 -> reg6",
      "146257 LESS THAN OR EQUAL      reg5 <= reg6 -> reg4",
      "146261 JUMP IF FALSE      reg4 TO: 146519 | 146264"
  ],
  "146264": [
      "146264 PUSH MEMORY ELEMENT IF INIT      4265 -> reg4",
      "146267 SET MEMORY ELEMENT IF INIT      4270 = reg4",
      "146270 PUSH MEMORY ELEMENT IF INIT      4267 -> reg6",
      "146273 PUSH MEMORY ELEMENT IF INIT      4270 -> reg5",
      "146276 ADD      reg50-> reg7",
      "146280 GET      reg6[reg7] -> reg4",
      "146284 PUSH MEMORY ELEMENT IF INIT      4267 -> reg5",
      "146287 PUSH MEMORY ELEMENT IF INIT      4270 -> reg7",
      "146290 ADD      reg71-> reg8",
      "146294 GET      reg5[reg8] -> reg6",
      "146298 LSHIFT      reg6 << 8 -> reg8",
      "146302 ADD      reg4NaN-> reg5",
      "146306 SET MEMORY ELEMENT IF INIT      4271 = reg5",
      "146309 PUSH MEMORY ELEMENT IF INIT      4267 -> reg4",
      "146312 PUSH MEMORY ELEMENT IF INIT      4270 -> reg7",
      "146315 ADD      reg72-> reg6",
      "146319 GET      reg4[reg6] -> reg5",
      "146323 PUSH MEMORY ELEMENT IF INIT      4267 -> reg4",
      "146326 PUSH MEMORY ELEMENT IF INIT      4270 -> reg7",
      "146329 ADD      reg73-> reg10",
      "146333 GET      reg4[reg10] -> reg6",
      "146337 LSHIFT      reg6 << 8 -> reg4",
      "146341 ADD      reg5NaN-> reg6",
      "146345 SET MEMORY ELEMENT IF INIT      4272 = reg6",
      "146348 PUSH MEMORY ELEMENT IF INIT      4271 -> reg5",
      "146351 PUSH MEMORY ELEMENT IF INIT      4258 -> reg4",
      "146354 MULTIPLY      reg5 * reg4 -> reg6",
      "146358 PUSH MEMORY ELEMENT IF INIT      4272 -> reg4",
      "146361 PUSH MEMORY ELEMENT IF INIT      4258 -> reg5",
      "146364 MULTIPLY      reg4 * reg5 -> reg7",
      "146368 LSHIFT      reg7 << 16 -> reg5",
      "146372 ADD      reg6NaN-> reg7",
      "146376 SET MEMORY ELEMENT IF INIT      4273 = reg7",
      "146379 PUSH MEMORY ELEMENT IF INIT      4266 -> reg7",
      "146382 PUSH MEMORY ELEMENT IF INIT      4269 -> reg4",
      "146385 GET      reg7[reg4] -> reg5",
      "146389 PUSH MEMORY ELEMENT IF INIT      4273 -> reg4",
      "146392 ADD      reg5NaN-> reg9",
      "146396 AND      reg9 & 4294967295 -> reg4",
      "146402 SET MEMORY ELEMENT IF INIT      4274 = reg4",
      "146405 PUSH MEMORY ELEMENT IF INIT      4274 -> reg5",
      "146408 LSHIFT      reg5 << 13 -> reg4",
      "146412 PUSH MEMORY ELEMENT IF INIT      4274 -> reg7",
      "146415 USHIFT      reg7 >>> 19 -> reg8",
      "146419 OR      reg4 | reg8 -> reg6",
      "146423 SET MEMORY ELEMENT IF INIT      4274 = reg6",
      "146426 PUSH MEMORY ELEMENT IF INIT      4274 -> reg4",
      "146429 AND      reg4 & 65535 -> reg5",
      "146433 SET MEMORY ELEMENT IF INIT      4275 = reg5",
      "146436 PUSH MEMORY ELEMENT IF INIT      4274 -> reg4",
      "146439 USHIFT      reg4 >>> 16 -> reg8",
      "146443 SET MEMORY ELEMENT IF INIT      4276 = reg8",
      "146446 PUSH MEMORY ELEMENT IF INIT      4266 -> reg5",
      "146449 PUSH MEMORY ELEMENT IF INIT      4269 -> reg4",
      "146452 PUSH MEMORY ELEMENT IF INIT      4275 -> reg6",
      "146455 PUSH MEMORY ELEMENT IF INIT      4257 -> reg7",
      "146458 MULTIPLY      reg6 * reg7 -> reg9",
      "146462 PUSH MEMORY ELEMENT IF INIT      4276 -> reg7",
      "146465 PUSH MEMORY ELEMENT IF INIT      4257 -> reg8",
      "146468 MULTIPLY      reg7 * reg8 -> reg10",
      "146472 LSHIFT      reg10 << 16 -> reg7",
      "146476 ADD      reg9NaN-> reg6",
      "146480 AND      reg6 & 4294967295 -> reg7",
      "146486 PUT      reg5[reg4] = reg7",
      "146490 PUSH MEMORY ELEMENT IF INIT      4269 -> reg5",
      "146493 ADD      reg51-> reg4",
      "146497 AND      reg4 & 3 -> reg5",
      "146501 SET MEMORY ELEMENT IF INIT      4269 = reg5",
      "146504 PUSH MEMORY ELEMENT IF INIT      4265 -> reg4",
      "146507 SET      4 -> reg5",
      "146510 ADD      reg4NaN-> reg5",
      "146514 SET MEMORY ELEMENT IF INIT      4265 = reg5",
      "146517 JUMP      146245",
      "146245 PUSH MEMORY ELEMENT IF INIT      4265 -> reg4",
      "146248 AND      reg4 & 4294967280 -> reg5",
      "146254 PUSH MEMORY ELEMENT IF INIT      4268 -> reg6",
      "146257 LESS THAN OR EQUAL      reg5 <= reg6 -> reg4",
      "146261 JUMP IF FALSE      reg4 TO: 146519 | 146264"
  ],
  "146519": [
      "146519 PUSH MEMORY ELEMENT IF INIT      4266 -> reg4",
      "146522 GET      reg4[0] -> reg6",
      "146526 LSHIFT      reg6 << 1 -> reg5",
      "146530 PUSH MEMORY ELEMENT IF INIT      4266 -> reg4",
      "146533 GET      reg4[0] -> reg6",
      "146537 USHIFT      reg6 >>> 31 -> reg4",
      "146541 OR      reg5 | reg4 -> reg6",
      "146545 PUSH MEMORY ELEMENT IF INIT      4266 -> reg4",
      "146548 GET      reg4[1] -> reg5",
      "146552 LSHIFT      reg5 << 7 -> reg4",
      "146556 PUSH MEMORY ELEMENT IF INIT      4266 -> reg5",
      "146559 GET      reg5[1] -> reg8",
      "146563 USHIFT      reg8 >>> 25 -> reg5",
      "146567 OR      reg4 | reg5 -> reg7",
      "146571 ADD      reg6NaN-> reg5",
      "146575 PUSH MEMORY ELEMENT IF INIT      4266 -> reg4",
      "146578 GET      reg4[2] -> reg6",
      "146582 LSHIFT      reg6 << 12 -> reg4",
      "146586 PUSH MEMORY ELEMENT IF INIT      4266 -> reg6",
      "146589 GET      reg6[2] -> reg7",
      "146593 USHIFT      reg7 >>> 20 -> reg8",
      "146597 OR      reg4 | reg8 -> reg7",
      "146601 ADD      reg5NaN-> reg4",
      "146605 PUSH MEMORY ELEMENT IF INIT      4266 -> reg5",
      "146608 GET      reg5[3] -> reg6",
      "146612 LSHIFT      reg6 << 18 -> reg5",
      "146616 PUSH MEMORY ELEMENT IF INIT      4266 -> reg6",
      "146619 GET      reg6[3] -> reg7",
      "146623 USHIFT      reg7 >>> 14 -> reg6",
      "146627 OR      reg5 | reg6 -> reg7",
      "146631 ADD      reg4NaN-> reg5",
      "146635 AND      reg5 & 4294967295 -> reg10",
      "146641 SET MEMORY ELEMENT IF INIT      4264 = reg10",
      "146644 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "146647 PUSH MEMORY ELEMENT IF INIT      4255 -> reg5",
      "146650 GET      reg5[length] -> reg7",
      "146656 ADD      reg4NaN-> reg5",
      "146660 AND      reg5 & 4294967295 -> reg10",
      "146666 SET MEMORY ELEMENT IF INIT      4264 = reg10",
      "146669 PUSH MEMORY ELEMENT IF INIT      4255 -> reg5",
      "146672 GET      reg5[length] -> reg4",
      "146678 SUBTRACT      reg4 - 4 -> reg7",
      "146682 SET MEMORY ELEMENT IF INIT      4277 = reg7",
      "146685 PUSH MEMORY ELEMENT IF INIT      4265 -> reg4",
      "146688 PUSH MEMORY ELEMENT IF INIT      4277 -> reg5",
      "146691 LESS THAN OR EQUAL      reg4 <= reg5 -> reg7",
      "146695 JUMP IF FALSE      reg7 TO: 146913 | 146698"
  ],
  "146644": [
      "146644 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "146647 PUSH MEMORY ELEMENT IF INIT      4255 -> reg5",
      "146650 GET      reg5[length] -> reg7",
      "146656 ADD      reg4NaN-> reg5",
      "146660 AND      reg5 & 4294967295 -> reg10",
      "146666 SET MEMORY ELEMENT IF INIT      4264 = reg10",
      "146669 PUSH MEMORY ELEMENT IF INIT      4255 -> reg5",
      "146672 GET      reg5[length] -> reg4",
      "146678 SUBTRACT      reg4 - 4 -> reg7",
      "146682 SET MEMORY ELEMENT IF INIT      4277 = reg7",
      "146685 PUSH MEMORY ELEMENT IF INIT      4265 -> reg4",
      "146688 PUSH MEMORY ELEMENT IF INIT      4277 -> reg5",
      "146691 LESS THAN OR EQUAL      reg4 <= reg5 -> reg7",
      "146695 JUMP IF FALSE      reg7 TO: 146913 | 146698"
  ],
  "146698": [
      "146698 PUSH MEMORY ELEMENT IF INIT      4265 -> reg4",
      "146701 SET MEMORY ELEMENT IF INIT      4278 = reg4",
      "146704 PUSH MEMORY ELEMENT IF INIT      4263 -> reg5",
      "146707 PUSH MEMORY ELEMENT IF INIT      4278 -> reg4",
      "146710 ADD      reg40-> reg8",
      "146714 GET      reg5[reg8] -> reg6",
      "146718 PUSH MEMORY ELEMENT IF INIT      4263 -> reg4",
      "146721 PUSH MEMORY ELEMENT IF INIT      4278 -> reg7",
      "146724 ADD      reg71-> reg10",
      "146728 GET      reg4[reg10] -> reg5",
      "146732 LSHIFT      reg5 << 8 -> reg4",
      "146736 ADD      reg6NaN-> reg5",
      "146740 SET MEMORY ELEMENT IF INIT      4279 = reg5",
      "146743 PUSH MEMORY ELEMENT IF INIT      4263 -> reg9",
      "146746 PUSH MEMORY ELEMENT IF INIT      4278 -> reg4",
      "146749 ADD      reg42-> reg8",
      "146753 GET      reg9[reg8] -> reg5",
      "146757 PUSH MEMORY ELEMENT IF INIT      4263 -> reg4",
      "146760 PUSH MEMORY ELEMENT IF INIT      4278 -> reg7",
      "146763 ADD      reg73-> reg9",
      "146767 GET      reg4[reg9] -> reg6",
      "146771 LSHIFT      reg6 << 8 -> reg4",
      "146775 ADD      reg5NaN-> reg6",
      "146779 SET MEMORY ELEMENT IF INIT      4280 = reg6",
      "146782 PUSH MEMORY ELEMENT IF INIT      4279 -> reg4",
      "146785 PUSH MEMORY ELEMENT IF INIT      4259 -> reg5",
      "146788 MULTIPLY      reg4 * reg5 -> reg6",
      "146792 PUSH MEMORY ELEMENT IF INIT      4280 -> reg4",
      "146795 PUSH MEMORY ELEMENT IF INIT      4259 -> reg5",
      "146798 MULTIPLY      reg4 * reg5 -> reg7",
      "146802 LSHIFT      reg7 << 16 -> reg4",
      "146806 ADD      reg6NaN-> reg5",
      "146810 SET MEMORY ELEMENT IF INIT      4281 = reg5",
      "146813 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "146816 PUSH MEMORY ELEMENT IF INIT      4281 -> reg6",
      "146819 ADD      reg4NaN-> reg5",
      "146823 AND      reg5 & 4294967295 -> reg4",
      "146829 SET MEMORY ELEMENT IF INIT      4264 = reg4",
      "146832 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "146835 LSHIFT      reg4 << 17 -> reg6",
      "146839 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "146842 USHIFT      reg4 >>> 15 -> reg11",
      "146846 OR      reg6 | reg11 -> reg5",
      "146850 SET MEMORY ELEMENT IF INIT      4264 = reg5",
      "146853 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "146856 AND      reg4 & 65535 -> reg5",
      "146860 PUSH MEMORY ELEMENT IF INIT      4260 -> reg4",
      "146863 MULTIPLY      reg5 * reg4 -> reg6",
      "146867 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "146870 USHIFT      reg4 >>> 16 -> reg9",
      "146874 PUSH MEMORY ELEMENT IF INIT      4260 -> reg8",
      "146877 MULTIPLY      reg9 * reg8 -> reg5",
      "146881 LSHIFT      reg5 << 16 -> reg4",
      "146885 ADD      reg6NaN-> reg5",
      "146889 AND      reg5 & 4294967295 -> reg4",
      "146895 SET MEMORY ELEMENT IF INIT      4264 = reg4",
      "146898 PUSH MEMORY ELEMENT IF INIT      4265 -> reg5",
      "146901 SET      4 -> reg4",
      "146904 ADD      reg5NaN-> reg4",
      "146908 SET MEMORY ELEMENT IF INIT      4265 = reg4",
      "146911 JUMP      146685",
      "146685 PUSH MEMORY ELEMENT IF INIT      4265 -> reg4",
      "146688 PUSH MEMORY ELEMENT IF INIT      4277 -> reg5",
      "146691 LESS THAN OR EQUAL      reg4 <= reg5 -> reg7",
      "146695 JUMP IF FALSE      reg7 TO: 146913 | 146698"
  ],
  "146913": [
      "146913 PUSH MEMORY ELEMENT IF INIT      4265 -> reg4",
      "146916 PUSH MEMORY ELEMENT IF INIT      4263 -> reg5",
      "146919 GET      reg5[length] -> reg7",
      "146925 LESS THAN      reg4 < reg7 -> reg5",
      "146929 JUMP IF FALSE      reg5 TO: 147043 | 146932"
  ],
  "146932": [
      "146932 PUSH MEMORY ELEMENT IF INIT      4263 -> reg4",
      "146935 PUSH MEMORY ELEMENT IF INIT      4265 -> reg7",
      "146938 GET      reg4[reg7] -> reg5",
      "146942 SET MEMORY ELEMENT IF INIT      4282 = reg5",
      "146945 PUSH MEMORY ELEMENT IF INIT      4264 -> reg5",
      "146948 PUSH MEMORY ELEMENT IF INIT      4282 -> reg4",
      "146951 PUSH MEMORY ELEMENT IF INIT      4261 -> reg6",
      "146954 MULTIPLY      reg4 * reg6 -> reg8",
      "146958 ADD      reg5NaN-> reg6",
      "146962 SET MEMORY ELEMENT IF INIT      4264 = reg6",
      "146965 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "146968 LSHIFT      reg4 << 11 -> reg5",
      "146972 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "146975 USHIFT      reg4 >>> 21 -> reg6",
      "146979 OR      reg5 | reg6 -> reg7",
      "146983 SET MEMORY ELEMENT IF INIT      4264 = reg7",
      "146986 PUSH MEMORY ELEMENT IF INIT      4264 -> reg5",
      "146989 AND      reg5 & 65535 -> reg4",
      "146993 PUSH MEMORY ELEMENT IF INIT      4257 -> reg6",
      "146996 MULTIPLY      reg4 * reg6 -> reg5",
      "147000 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "147003 USHIFT      reg4 >>> 16 -> reg6",
      "147007 PUSH MEMORY ELEMENT IF INIT      4257 -> reg4",
      "147010 MULTIPLY      reg6 * reg4 -> reg7",
      "147014 LSHIFT      reg7 << 16 -> reg4",
      "147018 ADD      reg5NaN-> reg6",
      "147022 AND      reg6 & 4294967295 -> reg5",
      "147028 SET MEMORY ELEMENT IF INIT      4264 = reg5",
      "147031 PUSH MEMORY ELEMENT IF INIT      4265 -> reg5",
      "147034 ADD      reg51-> reg5",
      "147038 SET MEMORY ELEMENT IF INIT      4265 = reg5",
      "147041 JUMP      146913",
      "146913 PUSH MEMORY ELEMENT IF INIT      4265 -> reg4",
      "146916 PUSH MEMORY ELEMENT IF INIT      4263 -> reg5",
      "146919 GET      reg5[length] -> reg7",
      "146925 LESS THAN      reg4 < reg7 -> reg5",
      "146929 JUMP IF FALSE      reg5 TO: 147043 | 146932"
  ],
  "147043": [
      "147043 PUSH MEMORY ELEMENT IF INIT      4264 -> reg5",
      "147046 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "147049 USHIFT      reg4 >>> 15 -> reg9",
      "147053 XOR      reg5 ^ reg9 -> reg4",
      "147057 SET MEMORY ELEMENT IF INIT      4264 = reg4",
      "147060 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "147063 AND      reg4 & 65535 -> reg6",
      "147067 PUSH MEMORY ELEMENT IF INIT      4258 -> reg4",
      "147070 MULTIPLY      reg6 * reg4 -> reg5",
      "147074 AND      reg5 & 4294967295 -> reg4",
      "147080 PUSH MEMORY ELEMENT IF INIT      4264 -> reg6",
      "147083 USHIFT      reg6 >>> 16 -> reg7",
      "147087 PUSH MEMORY ELEMENT IF INIT      4258 -> reg6",
      "147090 MULTIPLY      reg7 * reg6 -> reg5",
      "147094 LSHIFT      reg5 << 16 -> reg6",
      "147098 ADD      reg4NaN-> reg5",
      "147102 SET MEMORY ELEMENT IF INIT      4264 = reg5",
      "147105 PUSH MEMORY ELEMENT IF INIT      4264 -> reg6",
      "147108 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "147111 USHIFT      reg4 >>> 13 -> reg5",
      "147115 XOR      reg6 ^ reg5 -> reg7",
      "147119 SET MEMORY ELEMENT IF INIT      4264 = reg7",
      "147122 PUSH MEMORY ELEMENT IF INIT      4264 -> reg5",
      "147125 AND      reg5 & 65535 -> reg4",
      "147129 PUSH MEMORY ELEMENT IF INIT      4259 -> reg5",
      "147132 MULTIPLY      reg4 * reg5 -> reg8",
      "147136 AND      reg8 & 4294967295 -> reg4",
      "147142 PUSH MEMORY ELEMENT IF INIT      4264 -> reg6",
      "147145 USHIFT      reg6 >>> 16 -> reg5",
      "147149 PUSH MEMORY ELEMENT IF INIT      4259 -> reg6",
      "147152 MULTIPLY      reg5 * reg6 -> reg9",
      "147156 LSHIFT      reg9 << 16 -> reg5",
      "147160 ADD      reg4NaN-> reg6",
      "147164 SET MEMORY ELEMENT IF INIT      4264 = reg6",
      "147167 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "147170 PUSH MEMORY ELEMENT IF INIT      4264 -> reg6",
      "147173 USHIFT      reg6 >>> 16 -> reg5",
      "147177 XOR      reg4 ^ reg5 -> reg8",
      "147181 SET MEMORY ELEMENT IF INIT      4264 = reg8",
      "147184 PUSH MEMORY ELEMENT IF INIT      4264 -> reg4",
      "147187 LESS THAN      reg4 < 0 -> reg7",
      "147191 JUMP IF FALSE      reg7 TO: 147208 | 147194"
  ],
  "147194": [
      "147194 PUSH MEMORY ELEMENT IF INIT      4264 -> reg5",
      "147197 ADD      reg54294967296-> reg7",
      "147203 SET      reg7 -> reg4",
      "147206 JUMP      147214",
      "147214 JUMP OR RETURN VAL      reg4"
  ],
  "147208": [
      "147208 PUSH MEMORY ELEMENT IF INIT      4264 -> reg7",
      "147211 SET      reg7 -> reg4",
      "147214 JUMP OR RETURN VAL      reg4"
  ],
  "147251": [
      "147251 GET WINDOW PROP      document -> reg5",
      "147256 GET      reg5[body] -> reg7",
      "147262 GET      reg7[removeChild] -> reg5",
      "147268 NEW ARRAY      1 -> reg6",
      "147271 PUSH H       -> reg8",
      "147273 GET      reg8[_ifr] -> reg9",
      "147279 PUT      reg6[0] = reg9",
      "147283 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg6",
      "147287 SET      reg2 -> reg4",
      "147290 PUSH H       -> reg4",
      "147292 GET WINDOW PROP      undefined -> reg5",
      "147297 PUT      reg4[_ifr] = reg5",
      "147303 JUMP OR RETURN"
  ],
  "147303": ["147303 JUMP OR RETURN"],
  "147344": [
      "147344 INIT FUNCTION STATE      PTR: 147353 NAME:  LEN: 0 -> reg7",
      "147351 JUMP      148168",
      "148168 SET MEMORY ELEMENT IF INIT      4223 = reg7",
      "148171 INIT FUNCTION STATE      PTR: 148180 NAME:  LEN: 1 -> reg7",
      "148178 JUMP      148775",
      "148775 SET MEMORY ELEMENT IF INIT      4224 = reg7",
      "148778 INIT FUNCTION STATE      PTR: 148787 NAME:  LEN: 1 -> reg4",
      "148785 JUMP      148822",
      "148822 SET MEMORY ELEMENT IF INIT      4225 = reg4",
      "148825 GET WINDOW PROP      Date -> reg7",
      "148830 GET      reg7[now] -> reg5",
      "148836 EMPTY ARRAY      -> reg9",
      "148838 CALL FUNCTION      OBJ: reg7 FUNC: reg5 ARGS: reg9",
      "148842 SET      reg2 -> reg4",
      "148845 SET MEMORY ELEMENT IF INIT      4226 = reg4",
      "148848 PUSH MEMORY ELEMENT IF INIT      4220 -> reg4",
      "148851 GET      reg4[ifr] -> reg8",
      "148857 EMPTY ARRAY      -> reg9",
      "148859 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg9",
      "148863 SET      reg2 -> reg5",
      "148866 PUSH MEMORY ELEMENT IF INIT      4219 -> reg5",
      "148869 PUT      reg5[type] = ab",
      "148877 PUSH MEMORY ELEMENT IF INIT      4219 -> reg5",
      "148880 PUT      reg5[action] = allow",
      "148888 PUSH MEMORY ELEMENT IF INIT      4219 -> reg5",
      "148891 GET WINDOW PROP      window -> reg8",
      "148896 GET      reg8[location] -> reg9",
      "148902 GET      reg9[origin] -> reg8",
      "148908 PUT      reg5[og] = reg8",
      "148914 PUSH MEMORY ELEMENT IF INIT      4219 -> reg5",
      "148917 PUT      reg5[sid] = e0{WllSDlo0P1klP0tJBkBFXFZ3fwAYQWspBVpcWiQSWwgHXGNEQEYWMy0UBRtgFkYYKTkvSBUrPHgUFxQtBEtHO1FeXUYVKCM=}",
      "148925 PUSH MEMORY ELEMENT IF INIT      276 -> reg10",
      "148928 JUMP IF FALSE      reg10 TO: 148943 | 148931"
  ],
  "147413": [
      "147413 PUSH MEMORY ELEMENT IF INIT      4312 -> reg9",
      "147416 GET      reg9[Date] -> reg10",
      "147422 EMPTY ARRAY      -> reg11",
      "147424 BIND APPLY      reg10 reg11 -> 7",
      "147428 GET      reg7[toString] -> reg8",
      "147434 EMPTY ARRAY      -> reg9",
      "147436 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg9",
      "147440 SET      reg2 -> reg6",
      "147443 GET      reg6[match] -> reg9",
      "147449 NEW ARRAY      1 -> reg8",
      "147452 NEW REGEXP      \\((.+)\\) ,  -> reg10",
      "147460 PUT      reg8[0] = reg10",
      "147464 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg8",
      "147468 SET      reg2 -> reg4",
      "147471 GET      reg4[1] -> reg9",
      "147475 JUMP OR RETURN VAL      reg9"
  ],
  "147479": ["147479 JUMP OR RETURN VAL      NaN"],
  "147595": [
      "147595 PUSH MEMORY ELEMENT IF INIT      4316 -> reg8",
      "147598 GET      reg8[getContext] -> reg9",
      "147604 NEW ARRAY      1 -> reg12",
      "147607 PUT      reg12[0] = experimental-webgl2",
      "147613 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg12",
      "147617 SET      reg2 -> reg6",
      "147620 SET      reg6 -> reg4",
      "147623 JUMP IF TRUE      reg4 TO: 147654 | 147626"
  ],
  "147623": ["147623 JUMP IF TRUE      reg4 TO: 147654 | 147626"],
  "147626": [
      "147626 PUSH MEMORY ELEMENT IF INIT      4316 -> reg9",
      "147629 GET      reg9[getContext] -> reg11",
      "147635 NEW ARRAY      1 -> reg12",
      "147638 PUT      reg12[0] = webgl",
      "147644 CALL FUNCTION      OBJ: reg9 FUNC: reg11 ARGS: reg12",
      "147648 SET      reg2 -> reg6",
      "147651 SET      reg6 -> reg4",
      "147654 JUMP IF TRUE      reg4 TO: 147685 | 147657"
  ],
  "147654": ["147654 JUMP IF TRUE      reg4 TO: 147685 | 147657"],
  "147657": [
      "147657 PUSH MEMORY ELEMENT IF INIT      4316 -> reg12",
      "147660 GET      reg12[getContext] -> reg11",
      "147666 NEW ARRAY      1 -> reg13",
      "147669 PUT      reg13[0] = experimental-webgl",
      "147675 CALL FUNCTION      OBJ: reg12 FUNC: reg11 ARGS: reg13",
      "147679 SET      reg2 -> reg6",
      "147682 SET      reg6 -> reg4",
      "147685 JUMP IF TRUE      reg4 TO: 147716 | 147688"
  ],
  "147685": ["147685 JUMP IF TRUE      reg4 TO: 147716 | 147688"],
  "147688": [
      "147688 PUSH MEMORY ELEMENT IF INIT      4316 -> reg6",
      "147691 GET      reg6[getContext] -> reg13",
      "147697 NEW ARRAY      1 -> reg14",
      "147700 PUT      reg14[0] = moz-webgl",
      "147706 CALL FUNCTION      OBJ: reg6 FUNC: reg13 ARGS: reg14",
      "147710 SET      reg2 -> reg11",
      "147713 SET      reg11 -> reg4",
      "147716 SET MEMORY ELEMENT IF INIT      4317 = reg4",
      "147719 PUSH MEMORY ELEMENT IF INIT      4317 -> reg4",
      "147722 JUMP IF FALSE      reg4 TO: 147795 | 147725"
  ],
  "147716": [
      "147716 SET MEMORY ELEMENT IF INIT      4317 = reg4",
      "147719 PUSH MEMORY ELEMENT IF INIT      4317 -> reg4",
      "147722 JUMP IF FALSE      reg4 TO: 147795 | 147725"
  ],
  "147725": [
      "147725 PUSH MEMORY ELEMENT IF INIT      4317 -> reg14",
      "147728 GET      reg14[getExtension] -> reg11",
      "147734 NEW ARRAY      1 -> reg13",
      "147737 PUT      reg13[0] = WEBGL_debug_renderer_info",
      "147743 CALL FUNCTION      OBJ: reg14 FUNC: reg11 ARGS: reg13",
      "147747 SET      reg2 -> reg4",
      "147750 SET MEMORY ELEMENT IF INIT      4318 = reg4",
      "147753 EMPTY OBJECT      -> reg4",
      "147755 PUSH MEMORY ELEMENT IF INIT      4317 -> reg13",
      "147758 GET      reg13[getParameter] -> reg15",
      "147764 NEW ARRAY      1 -> reg16",
      "147767 PUSH MEMORY ELEMENT IF INIT      4318 -> reg17",
      "147770 GET      reg17[UNMASKED_RENDERER_WEBGL] -> reg18",
      "147776 PUT      reg16[0] = reg18",
      "147780 CALL FUNCTION      OBJ: reg13 FUNC: reg15 ARGS: reg16",
      "147784 SET      reg2 -> reg11",
      "147787 PUT      reg4[renderer] = reg11",
      "147793 JUMP OR RETURN VAL      reg4"
  ],
  "147795": [
      "147795 EMPTY OBJECT      -> reg4",
      "147797 PUT      reg4[renderer] = unknown",
      "147805 JUMP OR RETURN VAL      reg4"
  ],
  "147809": [
      "147809 SET I      null",
      "147811 PUSH F.K      -> reg4",
      "147813 VOID F",
      "147814 SET MEMORY ELEMENT      0 = reg4",
      "147817 EMPTY OBJECT      -> reg4",
      "147819 PUT      reg4[renderer] = unknown",
      "147827 PUSH MEMORY ELEMENT IF INIT      0 -> reg15",
      "147830 GET      reg15[toString] -> reg16",
      "147836 EMPTY ARRAY      -> reg17",
      "147838 CALL FUNCTION      OBJ: reg15 FUNC: reg16 ARGS: reg17",
      "147842 SET      reg2 -> reg11",
      "147845 PUT      reg4[err] = reg11",
      "147851 JUMP OR RETURN VAL      reg4"
  ],
  "147956": [
      "147956 PUSH MEMORY ELEMENT IF INIT      4308 -> reg6",
      "147959 GET      reg6[t] -> reg4",
      "147965 STRICT EQUAL      reg4 === Eastern Standard Time -> reg6",
      "147971 JUMP IF FALSE      reg6 TO: 147992 | 147974"
  ],
  "147974": [
      "147974 PUSH MEMORY ELEMENT IF INIT      4308 -> reg8",
      "147977 GET      reg8[l] -> reg4",
      "147983 STRICT EQUAL      reg4 === zh-CN -> reg7",
      "147989 SET      reg7 -> reg6",
      "147992 JUMP IF TRUE      reg6 TO: 148013 | 147995"
  ],
  "147992": ["147992 JUMP IF TRUE      reg6 TO: 148013 | 147995"],
  "147995": [
      "147995 PUSH MEMORY ELEMENT IF INIT      4308 -> reg4",
      "147998 GET      reg4[t] -> reg7",
      "148004 STRICT EQUAL      reg7 === Coordinated Universal Time -> reg4",
      "148010 SET      reg4 -> reg6",
      "148013 SET      reg6 -> reg5",
      "148016 JUMP IF FALSE      reg5 TO: 148067 | 148019"
  ],
  "148013": [
      "148013 SET      reg6 -> reg5",
      "148016 JUMP IF FALSE      reg5 TO: 148067 | 148019"
  ],
  "148016": ["148016 JUMP IF FALSE      reg5 TO: 148067 | 148019"],
  "148019": [
      "148019 EMPTY OBJECT      -> reg4",
      "148021 PUT      reg4[verdict] = true",
      "148027 PUSH MEMORY ELEMENT IF INIT      280 -> reg8",
      "148030 GET      reg8[stringify] -> reg9",
      "148036 NEW ARRAY      1 -> reg5",
      "148039 PUSH MEMORY ELEMENT IF INIT      4308 -> reg10",
      "148042 PUT      reg5[0] = reg10",
      "148046 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg5",
      "148050 SET      reg2 -> reg6",
      "148053 PUT      reg4[raw] = reg6",
      "148059 PUT      reg4[error] = false",
      "148065 JUMP OR RETURN VAL      reg4"
  ],
  "148067": [
      "148067 EMPTY OBJECT      -> reg4",
      "148069 PUT      reg4[verdict] = false",
      "148075 PUSH MEMORY ELEMENT IF INIT      280 -> reg6",
      "148078 GET      reg6[stringify] -> reg7",
      "148084 NEW ARRAY      1 -> reg9",
      "148087 PUSH MEMORY ELEMENT IF INIT      4308 -> reg10",
      "148090 PUT      reg9[0] = reg10",
      "148094 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "148098 SET      reg2 -> reg5",
      "148101 PUT      reg4[raw] = reg5",
      "148107 PUT      reg4[error] = false",
      "148113 JUMP OR RETURN VAL      reg4"
  ],
  "148117": [
      "148117 SET I      null",
      "148119 PUSH F.K      -> reg5",
      "148121 VOID F",
      "148122 SET MEMORY ELEMENT      0 = reg5",
      "148125 EMPTY OBJECT      -> reg4",
      "148127 PUT      reg4[verdict] = false",
      "148133 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "148136 GET      reg10[toString] -> reg11",
      "148142 EMPTY ARRAY      -> reg9",
      "148144 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg9",
      "148148 SET      reg2 -> reg5",
      "148151 PUT      reg4[raw] = reg5",
      "148157 PUT      reg4[error] = true",
      "148163 JUMP OR RETURN VAL      reg4"
  ],
  "148242": [
      "148242 EMPTY OBJECT      -> reg6",
      "148244 SET      reg6 -> reg4",
      "148247 SET MEMORY ELEMENT IF INIT      4332 = reg4",
      "148250 JUMP      148301",
      "148301 SET I      null",
      "148303 SET I      148679",
      "148305 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148308 GET      reg4[raw] -> reg6",
      "148314 TYPEOF      reg6 -> reg4",
      "148317 STRICT NOT EQUAL      reg4 !== string -> reg10",
      "148323 JUMP IF FALSE      reg10 TO: 148367 | 148326"
  ],
  "148247": [
      "148247 SET MEMORY ELEMENT IF INIT      4332 = reg4",
      "148250 JUMP      148301",
      "148301 SET I      null",
      "148303 SET I      148679",
      "148305 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148308 GET      reg4[raw] -> reg6",
      "148314 TYPEOF      reg6 -> reg4",
      "148317 STRICT NOT EQUAL      reg4 !== string -> reg10",
      "148323 JUMP IF FALSE      reg10 TO: 148367 | 148326"
  ],
  "148252": [
      "148252 SET I      null",
      "148254 PUSH F.K      -> reg4",
      "148256 VOID F",
      "148257 SET MEMORY ELEMENT      0 = reg4",
      "148260 EMPTY OBJECT      -> reg4",
      "148262 PUT      reg4[verdict] = false",
      "148268 PUSH MEMORY ELEMENT IF INIT      0 -> reg8",
      "148271 GET      reg8[toString] -> reg9",
      "148277 EMPTY ARRAY      -> reg7",
      "148279 CALL FUNCTION      OBJ: reg8 FUNC: reg9 ARGS: reg7",
      "148283 SET      reg2 -> reg6",
      "148286 PUT      reg4[raw] = reg6",
      "148292 PUT      reg4[error] = true",
      "148298 SET MEMORY ELEMENT IF INIT      4332 = reg4",
      "148301 SET I      null",
      "148303 SET I      148679",
      "148305 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148308 GET      reg4[raw] -> reg6",
      "148314 TYPEOF      reg6 -> reg4",
      "148317 STRICT NOT EQUAL      reg4 !== string -> reg10",
      "148323 JUMP IF FALSE      reg10 TO: 148367 | 148326"
  ],
  "148326": [
      "148326 PUSH MEMORY ELEMENT IF INIT      4332 -> reg6",
      "148329 PUSH MEMORY ELEMENT IF INIT      280 -> reg7",
      "148332 GET      reg7[stringify] -> reg10",
      "148338 NEW ARRAY      1 -> reg9",
      "148341 PUSH MEMORY ELEMENT IF INIT      4332 -> reg11",
      "148344 GET      reg11[raw] -> reg14",
      "148350 PUT      reg9[0] = reg14",
      "148354 CALL FUNCTION      OBJ: reg7 FUNC: reg10 ARGS: reg9",
      "148358 SET      reg2 -> reg4",
      "148361 PUT      reg6[raw] = reg4",
      "148367 EMPTY ARRAY      -> reg4",
      "148369 SET MEMORY ELEMENT IF INIT      4333 = reg4",
      "148372 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148375 GET      reg4[verdict] -> reg9",
      "148381 TYPEOF      reg9 -> reg4",
      "148384 STRICT NOT EQUAL      reg4 !== boolean -> reg6",
      "148390 JUMP IF FALSE      reg6 TO: 148418 | 148393"
  ],
  "148367": [
      "148367 EMPTY ARRAY      -> reg4",
      "148369 SET MEMORY ELEMENT IF INIT      4333 = reg4",
      "148372 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148375 GET      reg4[verdict] -> reg9",
      "148381 TYPEOF      reg9 -> reg4",
      "148384 STRICT NOT EQUAL      reg4 !== boolean -> reg6",
      "148390 JUMP IF FALSE      reg6 TO: 148418 | 148393"
  ],
  "148393": [
      "148393 PUSH MEMORY ELEMENT IF INIT      4333 -> reg9",
      "148396 GET      reg9[push] -> reg4",
      "148402 NEW ARRAY      1 -> reg11",
      "148405 PUT      reg11[0] = v is not boolean",
      "148411 CALL FUNCTION      OBJ: reg9 FUNC: reg4 ARGS: reg11",
      "148415 SET      reg2 -> reg6",
      "148418 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148421 GET      reg4[error] -> reg6",
      "148427 TYPEOF      reg6 -> reg4",
      "148430 STRICT NOT EQUAL      reg4 !== boolean -> reg10",
      "148436 JUMP IF FALSE      reg10 TO: 148464 | 148439"
  ],
  "148418": [
      "148418 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148421 GET      reg4[error] -> reg6",
      "148427 TYPEOF      reg6 -> reg4",
      "148430 STRICT NOT EQUAL      reg4 !== boolean -> reg10",
      "148436 JUMP IF FALSE      reg10 TO: 148464 | 148439"
  ],
  "148439": [
      "148439 PUSH MEMORY ELEMENT IF INIT      4333 -> reg6",
      "148442 GET      reg6[push] -> reg10",
      "148448 NEW ARRAY      1 -> reg12",
      "148451 PUT      reg12[0] = e is not boolean",
      "148457 CALL FUNCTION      OBJ: reg6 FUNC: reg10 ARGS: reg12",
      "148461 SET      reg2 -> reg4",
      "148464 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148467 IN      score inreg4 -> reg10",
      "148473 JUMP IF FALSE      reg10 TO: 148497 | 148476"
  ],
  "148464": [
      "148464 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148467 IN      score inreg4 -> reg10",
      "148473 JUMP IF FALSE      reg10 TO: 148497 | 148476"
  ],
  "148476": [
      "148476 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148479 GET      reg4[score] -> reg11",
      "148485 GET WINDOW PROP      undefined -> reg4",
      "148490 STRICT NOT EQUAL      reg11 !== reg4 -> reg12",
      "148494 SET      reg12 -> reg10",
      "148497 JUMP IF FALSE      reg10 TO: 148521 | 148500"
  ],
  "148497": ["148497 JUMP IF FALSE      reg10 TO: 148521 | 148500"],
  "148500": [
      "148500 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148503 GET      reg4[score] -> reg11",
      "148509 TYPEOF      reg11 -> reg4",
      "148512 STRICT NOT EQUAL      reg4 !== number -> reg11",
      "148518 SET      reg11 -> reg10",
      "148521 JUMP IF FALSE      reg10 TO: 148549 | 148524"
  ],
  "148521": ["148521 JUMP IF FALSE      reg10 TO: 148549 | 148524"],
  "148524": [
      "148524 PUSH MEMORY ELEMENT IF INIT      4333 -> reg10",
      "148527 GET      reg10[push] -> reg11",
      "148533 NEW ARRAY      1 -> reg12",
      "148536 PUT      reg12[0] = score is not numeric",
      "148542 CALL FUNCTION      OBJ: reg10 FUNC: reg11 ARGS: reg12",
      "148546 SET      reg2 -> reg4",
      "148549 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148552 GET      reg4[error] -> reg11",
      "148558 STRICT EQUAL      reg11 === true -> reg4",
      "148562 JUMP IF FALSE      reg4 TO: 148581 | 148565"
  ],
  "148549": [
      "148549 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148552 GET      reg4[error] -> reg11",
      "148558 STRICT EQUAL      reg11 === true -> reg4",
      "148562 JUMP IF FALSE      reg4 TO: 148581 | 148565"
  ],
  "148565": [
      "148565 PUSH MEMORY ELEMENT IF INIT      4332 -> reg11",
      "148568 GET      reg11[verdict] -> reg13",
      "148574 STRICT EQUAL      reg13 === true -> reg11",
      "148578 SET      reg11 -> reg4",
      "148581 JUMP IF FALSE      reg4 TO: 148609 | 148584"
  ],
  "148581": ["148581 JUMP IF FALSE      reg4 TO: 148609 | 148584"],
  "148584": [
      "148584 PUSH MEMORY ELEMENT IF INIT      4333 -> reg11",
      "148587 GET      reg11[push] -> reg12",
      "148593 NEW ARRAY      1 -> reg14",
      "148596 PUT      reg14[0] = v and e both true",
      "148602 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg14",
      "148606 SET      reg2 -> reg4",
      "148609 PUSH MEMORY ELEMENT IF INIT      4333 -> reg4",
      "148612 GET      reg4[length] -> reg12",
      "148618 GREATER THAN      reg12 > 0 -> reg4",
      "148622 JUMP IF FALSE      reg4 TO: 148677 | 148625"
  ],
  "148609": [
      "148609 PUSH MEMORY ELEMENT IF INIT      4333 -> reg4",
      "148612 GET      reg4[length] -> reg12",
      "148618 GREATER THAN      reg12 > 0 -> reg4",
      "148622 JUMP IF FALSE      reg4 TO: 148677 | 148625"
  ],
  "148625": [
      "148625 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148628 PUSH MEMORY ELEMENT IF INIT      4333 -> reg13",
      "148631 GET      reg13[join] -> reg16",
      "148637 NEW ARRAY      1 -> reg12",
      "148640 PUT      reg12[0] = ; ",
      "148646 CALL FUNCTION      OBJ: reg13 FUNC: reg16 ARGS: reg12",
      "148650 SET      reg2 -> reg14",
      "148653 PUT      reg4[problems] = reg14",
      "148659 PUSH MEMORY ELEMENT IF INIT      4332 -> reg12",
      "148662 PUT      reg12[verdict] = false",
      "148668 PUSH MEMORY ELEMENT IF INIT      4332 -> reg12",
      "148671 PUT      reg12[error] = true",
      "148677 JUMP      148732",
      "148732 SET I      null",
      "148734 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148737 GET WINDOW PROP      Date -> reg17",
      "148742 GET      reg17[now] -> reg14",
      "148748 EMPTY ARRAY      -> reg16",
      "148750 CALL FUNCTION      OBJ: reg17 FUNC: reg14 ARGS: reg16",
      "148754 SET      reg2 -> reg15",
      "148757 PUSH MEMORY ELEMENT IF INIT      4331 -> reg16",
      "148760 SUBTRACT      reg15 - reg16 -> reg18",
      "148764 PUT      reg4[time] = reg18",
      "148770 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148773 JUMP OR RETURN VAL      reg4"
  ],
  "148677": [
      "148677 JUMP      148732",
      "148732 SET I      null",
      "148734 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148737 GET WINDOW PROP      Date -> reg17",
      "148742 GET      reg17[now] -> reg14",
      "148748 EMPTY ARRAY      -> reg16",
      "148750 CALL FUNCTION      OBJ: reg17 FUNC: reg14 ARGS: reg16",
      "148754 SET      reg2 -> reg15",
      "148757 PUSH MEMORY ELEMENT IF INIT      4331 -> reg16",
      "148760 SUBTRACT      reg15 - reg16 -> reg18",
      "148764 PUT      reg4[time] = reg18",
      "148770 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148773 JUMP OR RETURN VAL      reg4"
  ],
  "148679": [
      "148679 SET I      null",
      "148681 PUSH F.K      -> reg4",
      "148683 VOID F",
      "148684 SET MEMORY ELEMENT      0 = reg4",
      "148687 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148690 PUSH MEMORY ELEMENT IF INIT      0 -> reg12",
      "148693 GET      reg12[toString] -> reg14",
      "148699 EMPTY ARRAY      -> reg18",
      "148701 CALL FUNCTION      OBJ: reg12 FUNC: reg14 ARGS: reg18",
      "148705 SET      reg2 -> reg15",
      "148708 PUT      reg4[problems] = reg15",
      "148714 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148717 PUT      reg4[verdict] = false",
      "148723 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148726 PUT      reg4[error] = true",
      "148732 SET I      null",
      "148734 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148737 GET WINDOW PROP      Date -> reg17",
      "148742 GET      reg17[now] -> reg14",
      "148748 EMPTY ARRAY      -> reg16",
      "148750 CALL FUNCTION      OBJ: reg17 FUNC: reg14 ARGS: reg16",
      "148754 SET      reg2 -> reg15",
      "148757 PUSH MEMORY ELEMENT IF INIT      4331 -> reg16",
      "148760 SUBTRACT      reg15 - reg16 -> reg18",
      "148764 PUT      reg4[time] = reg18",
      "148770 PUSH MEMORY ELEMENT IF INIT      4332 -> reg4",
      "148773 JUMP OR RETURN VAL      reg4"
  ],
  "148806": [
      "148806 PUSH MEMORY ELEMENT IF INIT      4219 -> reg4",
      "148809 PUT      reg4[action] = block",
      "148817 PUSH MEMORY ELEMENT IF INIT      4347 -> reg5",
      "148820 JUMP OR RETURN VAL      reg5"
  ],
  "148817": [
      "148817 PUSH MEMORY ELEMENT IF INIT      4347 -> reg5",
      "148820 JUMP OR RETURN VAL      reg5"
  ],
  "148931": [
      "148931 PUSH MEMORY ELEMENT IF INIT      4219 -> reg8",
      "148934 PUSH MEMORY ELEMENT IF INIT      276 -> reg5",
      "148937 PUT      reg8[cmd] = reg5",
      "148943 PUSH MEMORY ELEMENT IF INIT      4219 -> reg5",
      "148946 PUSH MEMORY ELEMENT IF INIT      4225 -> reg9",
      "148949 NEW ARRAY      1 -> reg10",
      "148952 PUSH MEMORY ELEMENT IF INIT      4224 -> reg11",
      "148955 NEW ARRAY      1 -> reg13",
      "148958 PUSH MEMORY ELEMENT IF INIT      4223 -> reg14",
      "148961 PUT      reg13[0] = reg14",
      "148965 CALL FUNCTION      PTR: reg11 MEM: reg13",
      "148969 SET      reg2 -> reg12",
      "148972 PUT      reg10[0] = reg12",
      "148976 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "148980 SET      reg2 -> reg8",
      "148983 PUT      reg5[rm] = reg8",
      "148989 PUSH MEMORY ELEMENT IF INIT      4219 -> reg11",
      "148992 GET WINDOW PROP      Date -> reg8",
      "148997 GET      reg8[now] -> reg12",
      "149003 EMPTY ARRAY      -> reg9",
      "149005 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg9",
      "149009 SET      reg2 -> reg5",
      "149012 PUSH MEMORY ELEMENT IF INIT      4226 -> reg9",
      "149015 SUBTRACT      reg5 - reg9 -> reg10",
      "149019 PUT      reg11[time] = reg10",
      "149025 PUSH MEMORY ELEMENT IF INIT      4219 -> reg5",
      "149028 GET      reg5[action] -> reg9",
      "149034 STRICT EQUAL      reg9 === block -> reg10",
      "149040 JUMP IF FALSE      reg10 TO: 149088 | 149043"
  ],
  "148943": [
      "148943 PUSH MEMORY ELEMENT IF INIT      4219 -> reg5",
      "148946 PUSH MEMORY ELEMENT IF INIT      4225 -> reg9",
      "148949 NEW ARRAY      1 -> reg10",
      "148952 PUSH MEMORY ELEMENT IF INIT      4224 -> reg11",
      "148955 NEW ARRAY      1 -> reg13",
      "148958 PUSH MEMORY ELEMENT IF INIT      4223 -> reg14",
      "148961 PUT      reg13[0] = reg14",
      "148965 CALL FUNCTION      PTR: reg11 MEM: reg13",
      "148969 SET      reg2 -> reg12",
      "148972 PUT      reg10[0] = reg12",
      "148976 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "148980 SET      reg2 -> reg8",
      "148983 PUT      reg5[rm] = reg8",
      "148989 PUSH MEMORY ELEMENT IF INIT      4219 -> reg11",
      "148992 GET WINDOW PROP      Date -> reg8",
      "148997 GET      reg8[now] -> reg12",
      "149003 EMPTY ARRAY      -> reg9",
      "149005 CALL FUNCTION      OBJ: reg8 FUNC: reg12 ARGS: reg9",
      "149009 SET      reg2 -> reg5",
      "149012 PUSH MEMORY ELEMENT IF INIT      4226 -> reg9",
      "149015 SUBTRACT      reg5 - reg9 -> reg10",
      "149019 PUT      reg11[time] = reg10",
      "149025 PUSH MEMORY ELEMENT IF INIT      4219 -> reg5",
      "149028 GET      reg5[action] -> reg9",
      "149034 STRICT EQUAL      reg9 === block -> reg10",
      "149040 JUMP IF FALSE      reg10 TO: 149088 | 149043"
  ],
  "149043": [
      "149043 PUSH MEMORY ELEMENT IF INIT      4219 -> reg5",
      "149046 GET      reg5[type] -> reg9",
      "149052 STRICT EQUAL      reg9 === ab -> reg5",
      "149058 JUMP IF FALSE      reg5 TO: 149064 | 149061"
  ],
  "149061": [
      "149061 SET MEMORY ELEMENT IF INIT      275 = true",
      "149064 PUSH MEMORY ELEMENT IF INIT      4222 -> reg9",
      "149067 NEW ARRAY      2 -> reg10",
      "149070 PUSH MEMORY ELEMENT IF INIT      4219 -> reg11",
      "149073 PUT      reg10[0] = reg11",
      "149077 PUT      reg10[1] = true",
      "149081 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "149085 SET      reg2 -> reg5",
      "149088 JUMP      149186",
      "149186 SET I      null",
      "149188 SET N      null",
      "149190 PUSH MEMORY ELEMENT IF INIT      4220 -> reg5",
      "149193 GET      reg5[exit] -> reg9",
      "149199 EMPTY ARRAY      -> reg11",
      "149201 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg11",
      "149205 SET      reg2 -> reg16",
      "149208 HANDLE TRACE OR JUMP OR RETURN C",
      "149209 SET I      null",
      "149211 JUMP OR RETURN"
  ],
  "149064": [
      "149064 PUSH MEMORY ELEMENT IF INIT      4222 -> reg9",
      "149067 NEW ARRAY      2 -> reg10",
      "149070 PUSH MEMORY ELEMENT IF INIT      4219 -> reg11",
      "149073 PUT      reg10[0] = reg11",
      "149077 PUT      reg10[1] = true",
      "149081 CALL FUNCTION      PTR: reg9 MEM: reg10",
      "149085 SET      reg2 -> reg5",
      "149088 JUMP      149186",
      "149186 SET I      null",
      "149188 SET N      null",
      "149190 PUSH MEMORY ELEMENT IF INIT      4220 -> reg5",
      "149193 GET      reg5[exit] -> reg9",
      "149199 EMPTY ARRAY      -> reg11",
      "149201 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg11",
      "149205 SET      reg2 -> reg16",
      "149208 HANDLE TRACE OR JUMP OR RETURN C",
      "149209 SET I      null",
      "149211 JUMP OR RETURN"
  ],
  "149088": [
      "149088 JUMP      149186",
      "149186 SET I      null",
      "149188 SET N      null",
      "149190 PUSH MEMORY ELEMENT IF INIT      4220 -> reg5",
      "149193 GET      reg5[exit] -> reg9",
      "149199 EMPTY ARRAY      -> reg11",
      "149201 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg11",
      "149205 SET      reg2 -> reg16",
      "149208 HANDLE TRACE OR JUMP OR RETURN C",
      "149209 SET I      null",
      "149211 JUMP OR RETURN"
  ],
  "149090": [
      "149090 SET I      149186",
      "149092 PUSH F.K      -> reg5",
      "149094 VOID F",
      "149095 SET MEMORY ELEMENT      0 = reg5",
      "149098 SET I      149176",
      "149100 PUSH MEMORY ELEMENT IF INIT      4219 -> reg5",
      "149103 PUT      reg5[error] = true",
      "149109 PUSH MEMORY ELEMENT IF INIT      4219 -> reg5",
      "149112 PUSH MEMORY ELEMENT IF INIT      0 -> reg10",
      "149115 GET      reg10[toString] -> reg12",
      "149121 EMPTY ARRAY      -> reg11",
      "149123 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg11",
      "149127 SET      reg2 -> reg9",
      "149130 PUT      reg5[error_msg] = reg9",
      "149136 PUSH MEMORY ELEMENT IF INIT      4219 -> reg9",
      "149139 PUSH MEMORY ELEMENT IF INIT      0 -> reg5",
      "149142 GET      reg5[stack] -> reg11",
      "149148 PUT      reg9[error_stack] = reg11",
      "149154 PUSH MEMORY ELEMENT IF INIT      4222 -> reg5",
      "149157 NEW ARRAY      1 -> reg9",
      "149160 PUSH MEMORY ELEMENT IF INIT      4219 -> reg14",
      "149163 PUT      reg9[0] = reg14",
      "149167 CALL FUNCTION      PTR: reg5 MEM: reg9",
      "149171 SET      reg2 -> reg11",
      "149174 JUMP      149184",
      "149184 SET I      null",
      "149186 SET I      null",
      "149188 SET N      null",
      "149190 PUSH MEMORY ELEMENT IF INIT      4220 -> reg5",
      "149193 GET      reg5[exit] -> reg9",
      "149199 EMPTY ARRAY      -> reg11",
      "149201 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg11",
      "149205 SET      reg2 -> reg16",
      "149208 HANDLE TRACE OR JUMP OR RETURN C",
      "149209 SET I      null",
      "149211 JUMP OR RETURN"
  ],
  "149176": [
      "149176 SET I      null",
      "149178 PUSH F.K      -> reg9",
      "149180 VOID F",
      "149181 SET MEMORY ELEMENT      0 = reg9",
      "149184 SET I      null",
      "149186 SET I      null",
      "149188 SET N      null",
      "149190 PUSH MEMORY ELEMENT IF INIT      4220 -> reg5",
      "149193 GET      reg5[exit] -> reg9",
      "149199 EMPTY ARRAY      -> reg11",
      "149201 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg11",
      "149205 SET      reg2 -> reg16",
      "149208 HANDLE TRACE OR JUMP OR RETURN C",
      "149209 SET I      null",
      "149211 JUMP OR RETURN"
  ],
  "149186": [
      "149186 SET I      null",
      "149188 SET N      null",
      "149190 PUSH MEMORY ELEMENT IF INIT      4220 -> reg5",
      "149193 GET      reg5[exit] -> reg9",
      "149199 EMPTY ARRAY      -> reg11",
      "149201 CALL FUNCTION      OBJ: reg5 FUNC: reg9 ARGS: reg11",
      "149205 SET      reg2 -> reg16",
      "149208 HANDLE TRACE OR JUMP OR RETURN C",
      "149209 SET I      null",
      "149211 JUMP OR RETURN"
  ],
  "149242": [
      "149242 PUSH MEMORY ELEMENT IF INIT      274 -> reg5",
      "149245 GET WINDOW PROP      KPSDK -> reg11",
      "149250 GET      reg11[now] -> reg12",
      "149256 EMPTY ARRAY      -> reg14",
      "149258 CALL FUNCTION      OBJ: reg11 FUNC: reg12 ARGS: reg14",
      "149262 SET      reg2 -> reg10",
      "149265 PUT      reg5[kfw] = reg10",
      "149271 SET MEMORY ELEMENT IF INIT      283 = 15000",
      "149274 PUSH MEMORY ELEMENT IF INIT      281 -> reg12",
      "149277 GET      reg12[initialise] -> reg5",
      "149283 NEW ARRAY      3 -> reg10",
      "149286 NEW ARRAY      10 -> reg14",
      "149289 INIT FUNCTION STATE      PTR: 149298 NAME:  LEN: 1 -> reg16",
      "149296 JUMP      153061",
      "153061 PUT      reg14[0] = reg16",
      "153065 INIT FUNCTION STATE      PTR: 153074 NAME:  LEN: 1 -> reg15",
      "153072 JUMP      157134",
      "157134 PUT      reg14[1] = reg15",
      "157138 INIT FUNCTION STATE      PTR: 157147 NAME:  LEN: 1 -> reg15",
      "157145 JUMP      160874",
      "160874 PUT      reg14[2] = reg15",
      "160878 INIT FUNCTION STATE      PTR: 160887 NAME:  LEN: 1 -> reg15",
      "160885 JUMP      165290",
      "165290 PUT      reg14[3] = reg15",
      "165294 INIT FUNCTION STATE      PTR: 165303 NAME:  LEN: 1 -> reg15",
      "165301 JUMP      169164",
      "169164 PUT      reg14[4] = reg15",
      "169168 INIT FUNCTION STATE      PTR: 169177 NAME:  LEN: 1 -> reg15",
      "169175 JUMP      173824",
      "173824 PUT      reg14[5] = reg15",
      "173828 INIT FUNCTION STATE      PTR: 173837 NAME:  LEN: 1 -> reg15",
      "173835 JUMP      177785",
      "177785 PUT      reg14[6] = reg15",
      "177789 INIT FUNCTION STATE      PTR: 177798 NAME:  LEN: 1 -> reg15",
      "177796 JUMP      181871",
      "181871 PUT      reg14[7] = reg15",
      "181875 INIT FUNCTION STATE      PTR: 181884 NAME:  LEN: 1 -> reg15",
      "181882 JUMP      184052",
      "184052 PUT      reg14[8] = reg15",
      "184056 INIT FUNCTION STATE      PTR: 184065 NAME:  LEN: 1 -> reg15",
      "184063 JUMP      187385",
      "187385 PUT      reg14[9] = reg15",
      "187389 PUT      reg10[0] = reg14",
      "187393 PUSH MEMORY ELEMENT IF INIT      282 -> reg15",
      "187396 PUT      reg10[1] = reg15",
      "187400 PUSH MEMORY ELEMENT IF INIT      283 -> reg14",
      "187403 PUT      reg10[2] = reg14",
      "187407 CALL FUNCTION      OBJ: reg12 FUNC: reg5 ARGS: reg10",
      "187411 SET      reg2 -> reg13",
      "187414 JUMP OR RETURN"
  ],
  "149271": [
      "149271 SET MEMORY ELEMENT IF INIT      283 = 15000",
      "149274 PUSH MEMORY ELEMENT IF INIT      281 -> reg12",
      "149277 GET      reg12[initialise] -> reg5",
      "149283 NEW ARRAY      3 -> reg10",
      "149286 NEW ARRAY      10 -> reg14",
      "149289 INIT FUNCTION STATE      PTR: 149298 NAME:  LEN: 1 -> reg16",
      "149296 JUMP      153061",
      "153061 PUT      reg14[0] = reg16",
      "153065 INIT FUNCTION STATE      PTR: 153074 NAME:  LEN: 1 -> reg15",
      "153072 JUMP      157134",
      "157134 PUT      reg14[1] = reg15",
      "157138 INIT FUNCTION STATE      PTR: 157147 NAME:  LEN: 1 -> reg15",
      "157145 JUMP      160874",
      "160874 PUT      reg14[2] = reg15",
      "160878 INIT FUNCTION STATE      PTR: 160887 NAME:  LEN: 1 -> reg15",
      "160885 JUMP      165290",
      "165290 PUT      reg14[3] = reg15",
      "165294 INIT FUNCTION STATE      PTR: 165303 NAME:  LEN: 1 -> reg15",
      "165301 JUMP      169164",
      "169164 PUT      reg14[4] = reg15",
      "169168 INIT FUNCTION STATE      PTR: 169177 NAME:  LEN: 1 -> reg15",
      "169175 JUMP      173824",
      "173824 PUT      reg14[5] = reg15",
      "173828 INIT FUNCTION STATE      PTR: 173837 NAME:  LEN: 1 -> reg15",
      "173835 JUMP      177785",
      "177785 PUT      reg14[6] = reg15",
      "177789 INIT FUNCTION STATE      PTR: 177798 NAME:  LEN: 1 -> reg15",
      "177796 JUMP      181871",
      "181871 PUT      reg14[7] = reg15",
      "181875 INIT FUNCTION STATE      PTR: 181884 NAME:  LEN: 1 -> reg15",
      "181882 JUMP      184052",
      "184052 PUT      reg14[8] = reg15",
      "184056 INIT FUNCTION STATE      PTR: 184065 NAME:  LEN: 1 -> reg15",
      "184063 JUMP      187385",
      "187385 PUT      reg14[9] = reg15",
      "187389 PUT      reg10[0] = reg14",
      "187393 PUSH MEMORY ELEMENT IF INIT      282 -> reg15",
      "187396 PUT      reg10[1] = reg15",
      "187400 PUSH MEMORY ELEMENT IF INIT      283 -> reg14",
      "187403 PUT      reg10[2] = reg14",
      "187407 CALL FUNCTION      OBJ: reg12 FUNC: reg5 ARGS: reg10",
      "187411 SET      reg2 -> reg13",
      "187414 JUMP OR RETURN"
  ],
  "149531": [
      "149531 GET      reg3[1] -> reg4",
      "149535 GET WINDOW PROP      undefined -> reg6",
      "149540 STRICT NOT EQUAL      reg4 !== reg6 -> reg9",
      "149544 SET      reg9 -> reg5",
      "149547 JUMP IF FALSE      reg5 TO: 149559 | 149550"
  ],
  "149547": ["149547 JUMP IF FALSE      reg5 TO: 149559 | 149550"],
  "149550": [
      "149550 GET      reg3[1] -> reg5",
      "149554 SET      reg5 -> reg4",
      "149557 JUMP      149562",
      "149562 SET MEMORY ELEMENT IF INIT      4369 = reg4",
      "149565 PUSH MEMORY ELEMENT IF INIT      4368 -> reg5",
      "149568 GET      reg5[slice] -> reg6",
      "149574 NEW ARRAY      1 -> reg9",
      "149577 PUT      reg9[0] = 0",
      "149581 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg9",
      "149585 SET      reg2 -> reg4",
      "149588 SET MEMORY ELEMENT IF INIT      4371 = reg4",
      "149591 PUSH MEMORY ELEMENT IF INIT      4371 -> reg4",
      "149594 GET      reg4[length] -> reg6",
      "149600 SET MEMORY ELEMENT IF INIT      4372 = reg6",
      "149603 PUSH MEMORY ELEMENT IF INIT      4372 -> reg4",
      "149606 JUMP IF FALSE      reg4 TO: 149735 | 149609"
  ],
  "149559": [
      "149559 SET      78012697 -> reg4",
      "149562 SET MEMORY ELEMENT IF INIT      4369 = reg4",
      "149565 PUSH MEMORY ELEMENT IF INIT      4368 -> reg5",
      "149568 GET      reg5[slice] -> reg6",
      "149574 NEW ARRAY      1 -> reg9",
      "149577 PUT      reg9[0] = 0",
      "149581 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg9",
      "149585 SET      reg2 -> reg4",
      "149588 SET MEMORY ELEMENT IF INIT      4371 = reg4",
      "149591 PUSH MEMORY ELEMENT IF INIT      4371 -> reg4",
      "149594 GET      reg4[length] -> reg6",
      "149600 SET MEMORY ELEMENT IF INIT      4372 = reg6",
      "149603 PUSH MEMORY ELEMENT IF INIT      4372 -> reg4",
      "149606 JUMP IF FALSE      reg4 TO: 149735 | 149609"
  ],
  "149609": [
      "149609 GET WINDOW PROP      Math -> reg4",
      "149614 GET      reg4[floor] -> reg6",
      "149620 NEW ARRAY      1 -> reg7",
      "149623 PUSH MEMORY ELEMENT IF INIT      4370 -> reg14",
      "149626 NEW ARRAY      1 -> reg10",
      "149629 PUSH MEMORY ELEMENT IF INIT      4369 -> reg11",
      "149632 PUT      reg10[0] = reg11",
      "149636 CALL FUNCTION      PTR: reg14 MEM: reg10",
      "149640 SET      reg2 -> reg9",
      "149643 PUSH MEMORY ELEMENT IF INIT      4372 -> reg11",
      "149646 SET      reg11 -> reg10",
      "149649 SUBTRACT      reg11 - 1 -> reg11",
      "149653 SET MEMORY ELEMENT IF INIT      4372 = reg11",
      "149656 MULTIPLY      reg9 * reg10 -> reg12",
      "149660 PUT      reg7[0] = reg12",
      "149664 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "149668 SET      reg2 -> reg8",
      "149671 SET MEMORY ELEMENT IF INIT      4374 = reg8",
      "149674 PUSH MEMORY ELEMENT IF INIT      4371 -> reg6",
      "149677 PUSH MEMORY ELEMENT IF INIT      4372 -> reg8",
      "149680 GET      reg6[reg8] -> reg7",
      "149684 SET MEMORY ELEMENT IF INIT      4373 = reg7",
      "149687 PUSH MEMORY ELEMENT IF INIT      4371 -> reg7",
      "149690 PUSH MEMORY ELEMENT IF INIT      4372 -> reg6",
      "149693 PUSH MEMORY ELEMENT IF INIT      4371 -> reg8",
      "149696 PUSH MEMORY ELEMENT IF INIT      4374 -> reg14",
      "149699 GET      reg8[reg14] -> reg9",
      "149703 PUT      reg7[reg6] = reg9",
      "149707 PUSH MEMORY ELEMENT IF INIT      4371 -> reg7",
      "149710 PUSH MEMORY ELEMENT IF INIT      4374 -> reg9",
      "149713 PUSH MEMORY ELEMENT IF INIT      4373 -> reg11",
      "149716 PUT      reg7[reg9] = reg11",
      "149720 PUSH MEMORY ELEMENT IF INIT      4369 -> reg6",
      "149723 SET      1 -> reg7",
      "149726 ADD      reg6NaN-> reg7",
      "149730 SET MEMORY ELEMENT IF INIT      4369 = reg7",
      "149733 JUMP      149603",
      "149603 PUSH MEMORY ELEMENT IF INIT      4372 -> reg4",
      "149606 JUMP IF FALSE      reg4 TO: 149735 | 149609"
  ],
  "149735": [
      "149735 PUSH MEMORY ELEMENT IF INIT      4371 -> reg6",
      "149738 JUMP OR RETURN VAL      reg6"
  ],
  "149815": [
      "149815 PUSH MEMORY ELEMENT IF INIT      4385 -> reg4",
      "149818 SET      undefined -> reg6",
      "149821 STRICT EQUAL      reg4 === reg6 -> reg7",
      "149825 SET      reg7 -> reg5",
      "149828 JUMP IF FALSE      reg5 TO: 149839 | 149831"
  ],
  "149828": ["149828 JUMP IF FALSE      reg5 TO: 149839 | 149831"],
  "149831": [
      "149831 SET      undefined -> reg6",
      "149834 SET      reg6 -> reg4",
      "149837 JUMP      149851",
      "149851 SET MEMORY ELEMENT IF INIT      4386 = reg4",
      "149854 STRICT EQUAL      reg4 === null -> reg5",
      "149858 JUMP IF TRUE      reg5 TO: 149874 | 149861"
  ],
  "149839": [
      "149839 PUSH MEMORY ELEMENT IF INIT      4385 -> reg5",
      "149842 GET      reg5[video] -> reg9",
      "149848 SET      reg9 -> reg4",
      "149851 SET MEMORY ELEMENT IF INIT      4386 = reg4",
      "149854 STRICT EQUAL      reg4 === null -> reg5",
      "149858 JUMP IF TRUE      reg5 TO: 149874 | 149861"
  ],
  "149861": [
      "149861 PUSH MEMORY ELEMENT IF INIT      4386 -> reg4",
      "149864 SET      undefined -> reg6",
      "149867 STRICT EQUAL      reg4 === reg6 -> reg7",
      "149871 SET      reg7 -> reg5",
      "149874 JUMP IF FALSE      reg5 TO: 149885 | 149877"
  ],
  "149874": ["149874 JUMP IF FALSE      reg5 TO: 149885 | 149877"],
  "149877": [
      "149877 SET      undefined -> reg6",
      "149880 SET      reg6 -> reg7",
      "149883 JUMP      149913",
      "149913 SET MEMORY ELEMENT IF INIT      4387 = reg7",
      "149916 STRICT NOT EQUAL      reg7 !== null -> reg5",
      "149920 JUMP IF FALSE      reg5 TO: 149936 | 149923"
  ],
  "149885": [
      "149885 PUSH MEMORY ELEMENT IF INIT      4386 -> reg4",
      "149888 GET      reg4[canPlayType] -> reg8",
      "149894 NEW ARRAY      1 -> reg6",
      "149897 PUT      reg6[0] = video/webm; codecs=vorbis",
      "149903 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg6",
      "149907 SET      reg2 -> reg5",
      "149910 SET      reg5 -> reg7",
      "149913 SET MEMORY ELEMENT IF INIT      4387 = reg7",
      "149916 STRICT NOT EQUAL      reg7 !== null -> reg5",
      "149920 JUMP IF FALSE      reg5 TO: 149936 | 149923"
  ],
  "149923": [
      "149923 PUSH MEMORY ELEMENT IF INIT      4387 -> reg6",
      "149926 SET      undefined -> reg7",
      "149929 STRICT NOT EQUAL      reg6 !== reg7 -> reg10",
      "149933 SET      reg10 -> reg5",
      "149936 JUMP IF FALSE      reg5 TO: 149947 | 149939"
  ],
  "149936": ["149936 JUMP IF FALSE      reg5 TO: 149947 | 149939"],
  "149939": [
      "149939 PUSH MEMORY ELEMENT IF INIT      4387 -> reg9",
      "149942 SET      reg9 -> reg6",
      "149945 JUMP      149952",
      "149952 JUMP OR RETURN VAL      reg6"
  ],
  "149947": [
      "149947 SET      no -> reg6",
      "149952 JUMP OR RETURN VAL      reg6"
  ],
  "150115": [
      "150115 PUSH MEMORY ELEMENT IF INIT      4400 -> reg5",
      "150118 SET      undefined -> reg7",
      "150121 STRICT EQUAL      reg5 === reg7 -> reg6",
      "150125 SET      reg6 -> reg4",
      "150128 JUMP IF FALSE      reg4 TO: 150139 | 150131"
  ],
  "150128": ["150128 JUMP IF FALSE      reg4 TO: 150139 | 150131"],
  "150131": [
      "150131 SET      undefined -> reg4",
      "150134 SET      reg4 -> reg5",
      "150137 JUMP      150157",
      "150157 SET MEMORY ELEMENT IF INIT      4401 = reg5",
      "150160 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "150164 JUMP IF FALSE      reg4 TO: 150180 | 150167"
  ],
  "150139": [
      "150139 PUSH MEMORY ELEMENT IF INIT      4400 -> reg4",
      "150142 GET      reg4[styleTags] -> reg6",
      "150148 GET      reg6[image] -> reg4",
      "150154 SET      reg4 -> reg5",
      "150157 SET MEMORY ELEMENT IF INIT      4401 = reg5",
      "150160 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "150164 JUMP IF FALSE      reg4 TO: 150180 | 150167"
  ],
  "150167": [
      "150167 PUSH MEMORY ELEMENT IF INIT      4401 -> reg5",
      "150170 SET      undefined -> reg6",
      "150173 STRICT NOT EQUAL      reg5 !== reg6 -> reg7",
      "150177 SET      reg7 -> reg4",
      "150180 JUMP IF FALSE      reg4 TO: 150191 | 150183"
  ],
  "150180": ["150180 JUMP IF FALSE      reg4 TO: 150191 | 150183"],
  "150183": [
      "150183 PUSH MEMORY ELEMENT IF INIT      4401 -> reg4",
      "150186 SET      reg4 -> reg5",
      "150189 JUMP      150194",
      "150194 JUMP OR RETURN VAL      reg5"
  ],
  "150191": [
      "150191 SET      0 -> reg5",
      "150194 JUMP OR RETURN VAL      reg5"
  ],
  "150288": [
      "150288 PUSH MEMORY ELEMENT IF INIT      4410 -> reg9",
      "150291 SET      undefined -> reg6",
      "150294 STRICT EQUAL      reg9 === reg6 -> reg8",
      "150298 SET      reg8 -> reg5",
      "150301 JUMP IF FALSE      reg5 TO: 150312 | 150304"
  ],
  "150301": ["150301 JUMP IF FALSE      reg5 TO: 150312 | 150304"],
  "150304": [
      "150304 SET      undefined -> reg5",
      "150307 SET      reg5 -> reg7",
      "150310 JUMP      150324",
      "150324 SET MEMORY ELEMENT IF INIT      4411 = reg7",
      "150327 STRICT EQUAL      reg7 === null -> reg4",
      "150331 JUMP IF TRUE      reg4 TO: 150347 | 150334"
  ],
  "150312": [
      "150312 PUSH MEMORY ELEMENT IF INIT      4410 -> reg4",
      "150315 GET      reg4[audio] -> reg5",
      "150321 SET      reg5 -> reg7",
      "150324 SET MEMORY ELEMENT IF INIT      4411 = reg7",
      "150327 STRICT EQUAL      reg7 === null -> reg4",
      "150331 JUMP IF TRUE      reg4 TO: 150347 | 150334"
  ],
  "150334": [
      "150334 PUSH MEMORY ELEMENT IF INIT      4411 -> reg5",
      "150337 SET      undefined -> reg8",
      "150340 STRICT EQUAL      reg5 === reg8 -> reg6",
      "150344 SET      reg6 -> reg4",
      "150347 JUMP IF FALSE      reg4 TO: 150358 | 150350"
  ],
  "150347": ["150347 JUMP IF FALSE      reg4 TO: 150358 | 150350"],
  "150350": [
      "150350 SET      undefined -> reg5",
      "150353 SET      reg5 -> reg6",
      "150356 JUMP      150386",
      "150386 SET MEMORY ELEMENT IF INIT      4412 = reg6",
      "150389 STRICT NOT EQUAL      reg6 !== null -> reg8",
      "150393 JUMP IF FALSE      reg8 TO: 150409 | 150396"
  ],
  "150358": [
      "150358 PUSH MEMORY ELEMENT IF INIT      4411 -> reg4",
      "150361 GET      reg4[canPlayType] -> reg7",
      "150367 NEW ARRAY      1 -> reg9",
      "150370 PUT      reg9[0] = audio/x-m4a;",
      "150376 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg9",
      "150380 SET      reg2 -> reg5",
      "150383 SET      reg5 -> reg6",
      "150386 SET MEMORY ELEMENT IF INIT      4412 = reg6",
      "150389 STRICT NOT EQUAL      reg6 !== null -> reg8",
      "150393 JUMP IF FALSE      reg8 TO: 150409 | 150396"
  ],
  "150396": [
      "150396 PUSH MEMORY ELEMENT IF INIT      4412 -> reg5",
      "150399 SET      undefined -> reg6",
      "150402 STRICT NOT EQUAL      reg5 !== reg6 -> reg9",
      "150406 SET      reg9 -> reg8",
      "150409 JUMP IF FALSE      reg8 TO: 150420 | 150412"
  ],
  "150409": ["150409 JUMP IF FALSE      reg8 TO: 150420 | 150412"],
  "150412": [
      "150412 PUSH MEMORY ELEMENT IF INIT      4412 -> reg7",
      "150415 SET      reg7 -> reg6",
      "150418 JUMP      150425",
      "150425 JUMP OR RETURN VAL      reg6"
  ],
  "150420": [
      "150420 SET      no -> reg6",
      "150425 JUMP OR RETURN VAL      reg6"
  ],
  "150519": [
      "150519 PUSH MEMORY ELEMENT IF INIT      4423 -> reg4",
      "150522 SET      undefined -> reg7",
      "150525 STRICT EQUAL      reg4 === reg7 -> reg6",
      "150529 SET      reg6 -> reg5",
      "150532 JUMP IF FALSE      reg5 TO: 150543 | 150535"
  ],
  "150532": ["150532 JUMP IF FALSE      reg5 TO: 150543 | 150535"],
  "150535": [
      "150535 SET      undefined -> reg6",
      "150538 SET      reg6 -> reg4",
      "150541 JUMP      150555",
      "150555 SET MEMORY ELEMENT IF INIT      4424 = reg4",
      "150558 STRICT EQUAL      reg4 === null -> reg5",
      "150562 JUMP IF TRUE      reg5 TO: 150578 | 150565"
  ],
  "150543": [
      "150543 PUSH MEMORY ELEMENT IF INIT      4423 -> reg5",
      "150546 GET      reg5[video] -> reg6",
      "150552 SET      reg6 -> reg4",
      "150555 SET MEMORY ELEMENT IF INIT      4424 = reg4",
      "150558 STRICT EQUAL      reg4 === null -> reg5",
      "150562 JUMP IF TRUE      reg5 TO: 150578 | 150565"
  ],
  "150565": [
      "150565 PUSH MEMORY ELEMENT IF INIT      4424 -> reg4",
      "150568 SET      undefined -> reg6",
      "150571 STRICT EQUAL      reg4 === reg6 -> reg7",
      "150575 SET      reg7 -> reg5",
      "150578 JUMP IF FALSE      reg5 TO: 150589 | 150581"
  ],
  "150578": ["150578 JUMP IF FALSE      reg5 TO: 150589 | 150581"],
  "150581": [
      "150581 SET      undefined -> reg5",
      "150584 SET      reg5 -> reg4",
      "150587 JUMP      150617",
      "150617 SET MEMORY ELEMENT IF INIT      4425 = reg4",
      "150620 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "150624 JUMP IF FALSE      reg7 TO: 150640 | 150627"
  ],
  "150589": [
      "150589 PUSH MEMORY ELEMENT IF INIT      4424 -> reg5",
      "150592 GET      reg5[canPlayType] -> reg6",
      "150598 NEW ARRAY      1 -> reg7",
      "150601 PUT      reg7[0] = video/mp2t; codecs=\"avc1.42E01E,mp4a.40.2\"",
      "150607 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "150611 SET      reg2 -> reg8",
      "150614 SET      reg8 -> reg4",
      "150617 SET MEMORY ELEMENT IF INIT      4425 = reg4",
      "150620 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "150624 JUMP IF FALSE      reg7 TO: 150640 | 150627"
  ],
  "150627": [
      "150627 PUSH MEMORY ELEMENT IF INIT      4425 -> reg4",
      "150630 SET      undefined -> reg6",
      "150633 STRICT NOT EQUAL      reg4 !== reg6 -> reg9",
      "150637 SET      reg9 -> reg7",
      "150640 JUMP IF FALSE      reg7 TO: 150651 | 150643"
  ],
  "150640": ["150640 JUMP IF FALSE      reg7 TO: 150651 | 150643"],
  "150643": [
      "150643 PUSH MEMORY ELEMENT IF INIT      4425 -> reg4",
      "150646 SET      reg4 -> reg8",
      "150649 JUMP      150656",
      "150656 JUMP OR RETURN VAL      reg8"
  ],
  "150651": [
      "150651 SET      no -> reg8",
      "150656 JUMP OR RETURN VAL      reg8"
  ],
  "150748": [
      "150748 PUSH MEMORY ELEMENT IF INIT      4436 -> reg5",
      "150751 SET      undefined -> reg6",
      "150754 STRICT EQUAL      reg5 === reg6 -> reg8",
      "150758 SET      reg8 -> reg4",
      "150761 JUMP IF FALSE      reg4 TO: 150772 | 150764"
  ],
  "150761": ["150761 JUMP IF FALSE      reg4 TO: 150772 | 150764"],
  "150764": [
      "150764 SET      undefined -> reg4",
      "150767 SET      reg4 -> reg6",
      "150770 JUMP      150790",
      "150790 SET MEMORY ELEMENT IF INIT      4437 = reg6",
      "150793 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "150797 JUMP IF FALSE      reg4 TO: 150813 | 150800"
  ],
  "150772": [
      "150772 PUSH MEMORY ELEMENT IF INIT      4436 -> reg4",
      "150775 GET      reg4[styleTags] -> reg5",
      "150781 GET      reg5[outline] -> reg4",
      "150787 SET      reg4 -> reg6",
      "150790 SET MEMORY ELEMENT IF INIT      4437 = reg6",
      "150793 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "150797 JUMP IF FALSE      reg4 TO: 150813 | 150800"
  ],
  "150800": [
      "150800 PUSH MEMORY ELEMENT IF INIT      4437 -> reg5",
      "150803 SET      undefined -> reg6",
      "150806 STRICT NOT EQUAL      reg5 !== reg6 -> reg7",
      "150810 SET      reg7 -> reg4",
      "150813 JUMP IF FALSE      reg4 TO: 150824 | 150816"
  ],
  "150813": ["150813 JUMP IF FALSE      reg4 TO: 150824 | 150816"],
  "150816": [
      "150816 PUSH MEMORY ELEMENT IF INIT      4437 -> reg4",
      "150819 SET      reg4 -> reg5",
      "150822 JUMP      150827",
      "150827 JUMP OR RETURN VAL      reg5"
  ],
  "150824": [
      "150824 SET      0 -> reg5",
      "150827 JUMP OR RETURN VAL      reg5"
  ],
  "151088": [
      "151088 PUSH MEMORY ELEMENT IF INIT      4451 -> reg4",
      "151091 SET      undefined -> reg6",
      "151094 STRICT EQUAL      reg4 === reg6 -> reg7",
      "151098 SET      reg7 -> reg5",
      "151101 JUMP IF FALSE      reg5 TO: 151112 | 151104"
  ],
  "151101": ["151101 JUMP IF FALSE      reg5 TO: 151112 | 151104"],
  "151104": [
      "151104 SET      undefined -> reg5",
      "151107 SET      reg5 -> reg4",
      "151110 JUMP      151130",
      "151130 SET MEMORY ELEMENT IF INIT      4452 = reg4",
      "151133 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "151137 JUMP IF FALSE      reg5 TO: 151153 | 151140"
  ],
  "151112": [
      "151112 PUSH MEMORY ELEMENT IF INIT      4451 -> reg6",
      "151115 GET      reg6[styleTags] -> reg7",
      "151121 GET      reg7[epub] -> reg6",
      "151127 SET      reg6 -> reg4",
      "151130 SET MEMORY ELEMENT IF INIT      4452 = reg4",
      "151133 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "151137 JUMP IF FALSE      reg5 TO: 151153 | 151140"
  ],
  "151140": [
      "151140 PUSH MEMORY ELEMENT IF INIT      4452 -> reg4",
      "151143 SET      undefined -> reg6",
      "151146 STRICT NOT EQUAL      reg4 !== reg6 -> reg7",
      "151150 SET      reg7 -> reg5",
      "151153 JUMP IF FALSE      reg5 TO: 151164 | 151156"
  ],
  "151153": ["151153 JUMP IF FALSE      reg5 TO: 151164 | 151156"],
  "151156": [
      "151156 PUSH MEMORY ELEMENT IF INIT      4452 -> reg4",
      "151159 SET      reg4 -> reg6",
      "151162 JUMP      151167",
      "151167 JUMP OR RETURN VAL      reg6"
  ],
  "151164": [
      "151164 SET      0 -> reg6",
      "151167 JUMP OR RETURN VAL      reg6"
  ],
  "151443": [
      "151443 PUSH MEMORY ELEMENT IF INIT      4467 -> reg4",
      "151446 SET      undefined -> reg5",
      "151449 STRICT EQUAL      reg4 === reg5 -> reg9",
      "151453 SET      reg9 -> reg6",
      "151456 JUMP IF FALSE      reg6 TO: 151467 | 151459"
  ],
  "151456": ["151456 JUMP IF FALSE      reg6 TO: 151467 | 151459"],
  "151459": [
      "151459 SET      undefined -> reg6",
      "151462 SET      reg6 -> reg4",
      "151465 JUMP      151485",
      "151485 SET MEMORY ELEMENT IF INIT      4468 = reg4",
      "151488 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "151492 JUMP IF FALSE      reg5 TO: 151508 | 151495"
  ],
  "151467": [
      "151467 PUSH MEMORY ELEMENT IF INIT      4467 -> reg5",
      "151470 GET      reg5[styleTags] -> reg6",
      "151476 GET      reg6[place] -> reg5",
      "151482 SET      reg5 -> reg4",
      "151485 SET MEMORY ELEMENT IF INIT      4468 = reg4",
      "151488 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "151492 JUMP IF FALSE      reg5 TO: 151508 | 151495"
  ],
  "151495": [
      "151495 PUSH MEMORY ELEMENT IF INIT      4468 -> reg4",
      "151498 SET      undefined -> reg6",
      "151501 STRICT NOT EQUAL      reg4 !== reg6 -> reg8",
      "151505 SET      reg8 -> reg5",
      "151508 JUMP IF FALSE      reg5 TO: 151519 | 151511"
  ],
  "151508": ["151508 JUMP IF FALSE      reg5 TO: 151519 | 151511"],
  "151511": [
      "151511 PUSH MEMORY ELEMENT IF INIT      4468 -> reg5",
      "151514 SET      reg5 -> reg6",
      "151517 JUMP      151522",
      "151522 JUMP OR RETURN VAL      reg6"
  ],
  "151519": [
      "151519 SET      0 -> reg6",
      "151522 JUMP OR RETURN VAL      reg6"
  ],
  "151706": [
      "151706 PUSH MEMORY ELEMENT IF INIT      4480 -> reg5",
      "151709 SET      undefined -> reg6",
      "151712 STRICT EQUAL      reg5 === reg6 -> reg7",
      "151716 SET      reg7 -> reg4",
      "151719 JUMP IF FALSE      reg4 TO: 151730 | 151722"
  ],
  "151719": ["151719 JUMP IF FALSE      reg4 TO: 151730 | 151722"],
  "151722": [
      "151722 SET      undefined -> reg4",
      "151725 SET      reg4 -> reg13",
      "151728 JUMP      151748",
      "151748 SET MEMORY ELEMENT IF INIT      4481 = reg13",
      "151751 STRICT NOT EQUAL      reg13 !== null -> reg5",
      "151755 JUMP IF FALSE      reg5 TO: 151771 | 151758"
  ],
  "151730": [
      "151730 PUSH MEMORY ELEMENT IF INIT      4480 -> reg4",
      "151733 GET      reg4[styleTags] -> reg6",
      "151739 GET      reg6[stop] -> reg4",
      "151745 SET      reg4 -> reg13",
      "151748 SET MEMORY ELEMENT IF INIT      4481 = reg13",
      "151751 STRICT NOT EQUAL      reg13 !== null -> reg5",
      "151755 JUMP IF FALSE      reg5 TO: 151771 | 151758"
  ],
  "151758": [
      "151758 PUSH MEMORY ELEMENT IF INIT      4481 -> reg4",
      "151761 SET      undefined -> reg6",
      "151764 STRICT NOT EQUAL      reg4 !== reg6 -> reg9",
      "151768 SET      reg9 -> reg5",
      "151771 JUMP IF FALSE      reg5 TO: 151782 | 151774"
  ],
  "151771": ["151771 JUMP IF FALSE      reg5 TO: 151782 | 151774"],
  "151774": [
      "151774 PUSH MEMORY ELEMENT IF INIT      4481 -> reg6",
      "151777 SET      reg6 -> reg4",
      "151780 JUMP      151785",
      "151785 JUMP OR RETURN VAL      reg4"
  ],
  "151782": [
      "151782 SET      0 -> reg4",
      "151785 JUMP OR RETURN VAL      reg4"
  ],
  "151892": [
      "151892 PUSH MEMORY ELEMENT IF INIT      4489 -> reg5",
      "151895 SET      undefined -> reg6",
      "151898 STRICT NOT EQUAL      reg5 !== reg6 -> reg7",
      "151902 SET      reg7 -> reg4",
      "151905 JUMP IF FALSE      reg4 TO: 151916 | 151908"
  ],
  "151905": ["151905 JUMP IF FALSE      reg4 TO: 151916 | 151908"],
  "151908": [
      "151908 PUSH MEMORY ELEMENT IF INIT      4489 -> reg6",
      "151911 SET      reg6 -> reg5",
      "151914 JUMP      151919",
      "151919 JUMP OR RETURN VAL      reg5"
  ],
  "151916": [
      "151916 SET      null -> reg5",
      "151919 JUMP OR RETURN VAL      reg5"
  ],
  "152011": [
      "152011 PUSH MEMORY ELEMENT IF INIT      4496 -> reg4",
      "152014 SET      undefined -> reg5",
      "152017 STRICT EQUAL      reg4 === reg5 -> reg8",
      "152021 SET      reg8 -> reg6",
      "152024 JUMP IF FALSE      reg6 TO: 152035 | 152027"
  ],
  "152024": ["152024 JUMP IF FALSE      reg6 TO: 152035 | 152027"],
  "152027": [
      "152027 SET      undefined -> reg5",
      "152030 SET      reg5 -> reg4",
      "152033 JUMP      152053",
      "152053 SET MEMORY ELEMENT IF INIT      4497 = reg4",
      "152056 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "152060 JUMP IF FALSE      reg5 TO: 152076 | 152063"
  ],
  "152035": [
      "152035 PUSH MEMORY ELEMENT IF INIT      4496 -> reg8",
      "152038 GET      reg8[styleTags] -> reg5",
      "152044 GET      reg5[justify] -> reg7",
      "152050 SET      reg7 -> reg4",
      "152053 SET MEMORY ELEMENT IF INIT      4497 = reg4",
      "152056 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "152060 JUMP IF FALSE      reg5 TO: 152076 | 152063"
  ],
  "152063": [
      "152063 PUSH MEMORY ELEMENT IF INIT      4497 -> reg7",
      "152066 SET      undefined -> reg4",
      "152069 STRICT NOT EQUAL      reg7 !== reg4 -> reg6",
      "152073 SET      reg6 -> reg5",
      "152076 JUMP IF FALSE      reg5 TO: 152087 | 152079"
  ],
  "152076": ["152076 JUMP IF FALSE      reg5 TO: 152087 | 152079"],
  "152079": [
      "152079 PUSH MEMORY ELEMENT IF INIT      4497 -> reg5",
      "152082 SET      reg5 -> reg4",
      "152085 JUMP      152090",
      "152090 JUMP OR RETURN VAL      reg4"
  ],
  "152087": [
      "152087 SET      0 -> reg4",
      "152090 JUMP OR RETURN VAL      reg4"
  ],
  "152277": [
      "152277 PUSH MEMORY ELEMENT IF INIT      4509 -> reg4",
      "152280 SET      undefined -> reg6",
      "152283 STRICT EQUAL      reg4 === reg6 -> reg7",
      "152287 SET      reg7 -> reg5",
      "152290 JUMP IF FALSE      reg5 TO: 152301 | 152293"
  ],
  "152290": ["152290 JUMP IF FALSE      reg5 TO: 152301 | 152293"],
  "152293": [
      "152293 SET      undefined -> reg5",
      "152296 SET      reg5 -> reg4",
      "152299 JUMP      152319",
      "152319 SET MEMORY ELEMENT IF INIT      4510 = reg4",
      "152322 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "152326 JUMP IF FALSE      reg6 TO: 152342 | 152329"
  ],
  "152301": [
      "152301 PUSH MEMORY ELEMENT IF INIT      4509 -> reg6",
      "152304 GET      reg6[styleTags] -> reg7",
      "152310 GET      reg7[border] -> reg5",
      "152316 SET      reg5 -> reg4",
      "152319 SET MEMORY ELEMENT IF INIT      4510 = reg4",
      "152322 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "152326 JUMP IF FALSE      reg6 TO: 152342 | 152329"
  ],
  "152329": [
      "152329 PUSH MEMORY ELEMENT IF INIT      4510 -> reg5",
      "152332 SET      undefined -> reg7",
      "152335 STRICT NOT EQUAL      reg5 !== reg7 -> reg8",
      "152339 SET      reg8 -> reg6",
      "152342 JUMP IF FALSE      reg6 TO: 152353 | 152345"
  ],
  "152342": ["152342 JUMP IF FALSE      reg6 TO: 152353 | 152345"],
  "152345": [
      "152345 PUSH MEMORY ELEMENT IF INIT      4510 -> reg4",
      "152348 SET      reg4 -> reg9",
      "152351 JUMP      152356",
      "152356 JUMP OR RETURN VAL      reg9"
  ],
  "152353": [
      "152353 SET      0 -> reg9",
      "152356 JUMP OR RETURN VAL      reg9"
  ],
  "152448": [
      "152448 PUSH MEMORY ELEMENT IF INIT      4519 -> reg4",
      "152451 SET      undefined -> reg7",
      "152454 STRICT EQUAL      reg4 === reg7 -> reg6",
      "152458 SET      reg6 -> reg5",
      "152461 JUMP IF FALSE      reg5 TO: 152472 | 152464"
  ],
  "152461": ["152461 JUMP IF FALSE      reg5 TO: 152472 | 152464"],
  "152464": [
      "152464 SET      undefined -> reg6",
      "152467 SET      reg6 -> reg4",
      "152470 JUMP      152490",
      "152490 SET MEMORY ELEMENT IF INIT      4520 = reg4",
      "152493 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "152497 JUMP IF FALSE      reg5 TO: 152513 | 152500"
  ],
  "152472": [
      "152472 PUSH MEMORY ELEMENT IF INIT      4519 -> reg5",
      "152475 GET      reg5[styleTags] -> reg7",
      "152481 GET      reg7[overflow] -> reg5",
      "152487 SET      reg5 -> reg4",
      "152490 SET MEMORY ELEMENT IF INIT      4520 = reg4",
      "152493 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "152497 JUMP IF FALSE      reg5 TO: 152513 | 152500"
  ],
  "152500": [
      "152500 PUSH MEMORY ELEMENT IF INIT      4520 -> reg4",
      "152503 SET      undefined -> reg8",
      "152506 STRICT NOT EQUAL      reg4 !== reg8 -> reg7",
      "152510 SET      reg7 -> reg5",
      "152513 JUMP IF FALSE      reg5 TO: 152524 | 152516"
  ],
  "152513": ["152513 JUMP IF FALSE      reg5 TO: 152524 | 152516"],
  "152516": [
      "152516 PUSH MEMORY ELEMENT IF INIT      4520 -> reg5",
      "152519 SET      reg5 -> reg4",
      "152522 JUMP      152527",
      "152527 JUMP OR RETURN VAL      reg4"
  ],
  "152524": [
      "152524 SET      0 -> reg4",
      "152527 JUMP OR RETURN VAL      reg4"
  ],
  "152722": [
      "152722 PUSH MEMORY ELEMENT IF INIT      4534 -> reg4",
      "152725 SET      undefined -> reg5",
      "152728 STRICT EQUAL      reg4 === reg5 -> reg7",
      "152732 SET      reg7 -> reg6",
      "152735 JUMP IF FALSE      reg6 TO: 152746 | 152738"
  ],
  "152735": ["152735 JUMP IF FALSE      reg6 TO: 152746 | 152738"],
  "152738": [
      "152738 SET      undefined -> reg5",
      "152741 SET      reg5 -> reg4",
      "152744 JUMP      152764",
      "152764 SET MEMORY ELEMENT IF INIT      4535 = reg4",
      "152767 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "152771 JUMP IF FALSE      reg5 TO: 152787 | 152774"
  ],
  "152746": [
      "152746 PUSH MEMORY ELEMENT IF INIT      4534 -> reg5",
      "152749 GET      reg5[styleTags] -> reg6",
      "152755 GET      reg6[object] -> reg8",
      "152761 SET      reg8 -> reg4",
      "152764 SET MEMORY ELEMENT IF INIT      4535 = reg4",
      "152767 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "152771 JUMP IF FALSE      reg5 TO: 152787 | 152774"
  ],
  "152774": [
      "152774 PUSH MEMORY ELEMENT IF INIT      4535 -> reg4",
      "152777 SET      undefined -> reg6",
      "152780 STRICT NOT EQUAL      reg4 !== reg6 -> reg8",
      "152784 SET      reg8 -> reg5",
      "152787 JUMP IF FALSE      reg5 TO: 152798 | 152790"
  ],
  "152787": ["152787 JUMP IF FALSE      reg5 TO: 152798 | 152790"],
  "152790": [
      "152790 PUSH MEMORY ELEMENT IF INIT      4535 -> reg4",
      "152793 SET      reg4 -> reg6",
      "152796 JUMP      152801",
      "152801 JUMP OR RETURN VAL      reg6"
  ],
  "152798": [
      "152798 SET      0 -> reg6",
      "152801 JUMP OR RETURN VAL      reg6"
  ],
  "152899": [
      "152899 SET      true -> reg4",
      "152902 JUMP      152907",
      "152907 JUMP OR RETURN VAL      reg4"
  ],
  "152904": [
      "152904 SET      null -> reg4",
      "152907 JUMP OR RETURN VAL      reg4"
  ],
  "153307": [
      "153307 GET      reg3[1] -> reg5",
      "153311 GET WINDOW PROP      undefined -> reg4",
      "153316 STRICT NOT EQUAL      reg5 !== reg4 -> reg8",
      "153320 SET      reg8 -> reg6",
      "153323 JUMP IF FALSE      reg6 TO: 153335 | 153326"
  ],
  "153323": ["153323 JUMP IF FALSE      reg6 TO: 153335 | 153326"],
  "153326": [
      "153326 GET      reg3[1] -> reg5",
      "153330 SET      reg5 -> reg4",
      "153333 JUMP      153338",
      "153338 SET MEMORY ELEMENT IF INIT      4561 = reg4",
      "153341 PUSH MEMORY ELEMENT IF INIT      4560 -> reg6",
      "153344 GET      reg6[slice] -> reg5",
      "153350 NEW ARRAY      1 -> reg7",
      "153353 PUT      reg7[0] = 0",
      "153357 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg7",
      "153361 SET      reg2 -> reg4",
      "153364 SET MEMORY ELEMENT IF INIT      4563 = reg4",
      "153367 PUSH MEMORY ELEMENT IF INIT      4563 -> reg7",
      "153370 GET      reg7[length] -> reg4",
      "153376 SET MEMORY ELEMENT IF INIT      4564 = reg4",
      "153379 PUSH MEMORY ELEMENT IF INIT      4564 -> reg4",
      "153382 JUMP IF FALSE      reg4 TO: 153511 | 153385"
  ],
  "153335": [
      "153335 SET      78012697 -> reg4",
      "153338 SET MEMORY ELEMENT IF INIT      4561 = reg4",
      "153341 PUSH MEMORY ELEMENT IF INIT      4560 -> reg6",
      "153344 GET      reg6[slice] -> reg5",
      "153350 NEW ARRAY      1 -> reg7",
      "153353 PUT      reg7[0] = 0",
      "153357 CALL FUNCTION      OBJ: reg6 FUNC: reg5 ARGS: reg7",
      "153361 SET      reg2 -> reg4",
      "153364 SET MEMORY ELEMENT IF INIT      4563 = reg4",
      "153367 PUSH MEMORY ELEMENT IF INIT      4563 -> reg7",
      "153370 GET      reg7[length] -> reg4",
      "153376 SET MEMORY ELEMENT IF INIT      4564 = reg4",
      "153379 PUSH MEMORY ELEMENT IF INIT      4564 -> reg4",
      "153382 JUMP IF FALSE      reg4 TO: 153511 | 153385"
  ],
  "153385": [
      "153385 GET WINDOW PROP      Math -> reg4",
      "153390 GET      reg4[floor] -> reg7",
      "153396 NEW ARRAY      1 -> reg9",
      "153399 PUSH MEMORY ELEMENT IF INIT      4562 -> reg10",
      "153402 NEW ARRAY      1 -> reg11",
      "153405 PUSH MEMORY ELEMENT IF INIT      4561 -> reg12",
      "153408 PUT      reg11[0] = reg12",
      "153412 CALL FUNCTION      PTR: reg10 MEM: reg11",
      "153416 SET      reg2 -> reg8",
      "153419 PUSH MEMORY ELEMENT IF INIT      4564 -> reg10",
      "153422 SET      reg10 -> reg11",
      "153425 SUBTRACT      reg10 - 1 -> reg10",
      "153429 SET MEMORY ELEMENT IF INIT      4564 = reg10",
      "153432 MULTIPLY      reg8 * reg11 -> reg10",
      "153436 PUT      reg9[0] = reg10",
      "153440 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg9",
      "153444 SET      reg2 -> reg5",
      "153447 SET MEMORY ELEMENT IF INIT      4566 = reg5",
      "153450 PUSH MEMORY ELEMENT IF INIT      4563 -> reg8",
      "153453 PUSH MEMORY ELEMENT IF INIT      4564 -> reg9",
      "153456 GET      reg8[reg9] -> reg5",
      "153460 SET MEMORY ELEMENT IF INIT      4565 = reg5",
      "153463 PUSH MEMORY ELEMENT IF INIT      4563 -> reg5",
      "153466 PUSH MEMORY ELEMENT IF INIT      4564 -> reg7",
      "153469 PUSH MEMORY ELEMENT IF INIT      4563 -> reg8",
      "153472 PUSH MEMORY ELEMENT IF INIT      4566 -> reg10",
      "153475 GET      reg8[reg10] -> reg9",
      "153479 PUT      reg5[reg7] = reg9",
      "153483 PUSH MEMORY ELEMENT IF INIT      4563 -> reg5",
      "153486 PUSH MEMORY ELEMENT IF INIT      4566 -> reg10",
      "153489 PUSH MEMORY ELEMENT IF INIT      4565 -> reg7",
      "153492 PUT      reg5[reg10] = reg7",
      "153496 PUSH MEMORY ELEMENT IF INIT      4561 -> reg5",
      "153499 SET      1 -> reg7",
      "153502 ADD      reg5NaN-> reg7",
      "153506 SET MEMORY ELEMENT IF INIT      4561 = reg7",
      "153509 JUMP      153379",
      "153379 PUSH MEMORY ELEMENT IF INIT      4564 -> reg4",
      "153382 JUMP IF FALSE      reg4 TO: 153511 | 153385"
  ],
  "153511": [
      "153511 PUSH MEMORY ELEMENT IF INIT      4563 -> reg5",
      "153514 JUMP OR RETURN VAL      reg5"
  ],
  "153589": [
      "153589 PUSH MEMORY ELEMENT IF INIT      4577 -> reg4",
      "153592 SET      undefined -> reg8",
      "153595 STRICT EQUAL      reg4 === reg8 -> reg5",
      "153599 SET      reg5 -> reg6",
      "153602 JUMP IF FALSE      reg6 TO: 153613 | 153605"
  ],
  "153602": ["153602 JUMP IF FALSE      reg6 TO: 153613 | 153605"],
  "153605": [
      "153605 SET      undefined -> reg7",
      "153608 SET      reg7 -> reg4",
      "153611 JUMP      153631",
      "153631 SET MEMORY ELEMENT IF INIT      4578 = reg4",
      "153634 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "153638 JUMP IF FALSE      reg6 TO: 153654 | 153641"
  ],
  "153613": [
      "153613 PUSH MEMORY ELEMENT IF INIT      4577 -> reg5",
      "153616 GET      reg5[styleTags] -> reg6",
      "153622 GET      reg6[padding] -> reg5",
      "153628 SET      reg5 -> reg4",
      "153631 SET MEMORY ELEMENT IF INIT      4578 = reg4",
      "153634 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "153638 JUMP IF FALSE      reg6 TO: 153654 | 153641"
  ],
  "153641": [
      "153641 PUSH MEMORY ELEMENT IF INIT      4578 -> reg4",
      "153644 SET      undefined -> reg5",
      "153647 STRICT NOT EQUAL      reg4 !== reg5 -> reg7",
      "153651 SET      reg7 -> reg6",
      "153654 JUMP IF FALSE      reg6 TO: 153665 | 153657"
  ],
  "153654": ["153654 JUMP IF FALSE      reg6 TO: 153665 | 153657"],
  "153657": [
      "153657 PUSH MEMORY ELEMENT IF INIT      4578 -> reg5",
      "153660 SET      reg5 -> reg4",
      "153663 JUMP      153668",
      "153668 JUMP OR RETURN VAL      reg4"
  ],
  "153665": [
      "153665 SET      0 -> reg4",
      "153668 JUMP OR RETURN VAL      reg4"
  ],
  "153762": [
      "153762 PUSH MEMORY ELEMENT IF INIT      4587 -> reg4",
      "153765 SET      undefined -> reg6",
      "153768 STRICT EQUAL      reg4 === reg6 -> reg8",
      "153772 SET      reg8 -> reg5",
      "153775 JUMP IF FALSE      reg5 TO: 153786 | 153778"
  ],
  "153775": ["153775 JUMP IF FALSE      reg5 TO: 153786 | 153778"],
  "153778": [
      "153778 SET      undefined -> reg5",
      "153781 SET      reg5 -> reg4",
      "153784 JUMP      153798",
      "153798 SET MEMORY ELEMENT IF INIT      4588 = reg4",
      "153801 STRICT EQUAL      reg4 === null -> reg5",
      "153805 JUMP IF TRUE      reg5 TO: 153821 | 153808"
  ],
  "153786": [
      "153786 PUSH MEMORY ELEMENT IF INIT      4587 -> reg5",
      "153789 GET      reg5[audio] -> reg6",
      "153795 SET      reg6 -> reg4",
      "153798 SET MEMORY ELEMENT IF INIT      4588 = reg4",
      "153801 STRICT EQUAL      reg4 === null -> reg5",
      "153805 JUMP IF TRUE      reg5 TO: 153821 | 153808"
  ],
  "153808": [
      "153808 PUSH MEMORY ELEMENT IF INIT      4588 -> reg4",
      "153811 SET      undefined -> reg6",
      "153814 STRICT EQUAL      reg4 === reg6 -> reg7",
      "153818 SET      reg7 -> reg5",
      "153821 JUMP IF FALSE      reg5 TO: 153832 | 153824"
  ],
  "153821": ["153821 JUMP IF FALSE      reg5 TO: 153832 | 153824"],
  "153824": [
      "153824 SET      undefined -> reg4",
      "153827 SET      reg4 -> reg6",
      "153830 JUMP      153860",
      "153860 SET MEMORY ELEMENT IF INIT      4589 = reg6",
      "153863 STRICT NOT EQUAL      reg6 !== null -> reg5",
      "153867 JUMP IF FALSE      reg5 TO: 153883 | 153870"
  ],
  "153832": [
      "153832 PUSH MEMORY ELEMENT IF INIT      4588 -> reg4",
      "153835 GET      reg4[canPlayType] -> reg8",
      "153841 NEW ARRAY      1 -> reg9",
      "153844 PUT      reg9[0] = audio/wav; codecs=\"2\"",
      "153850 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg9",
      "153854 SET      reg2 -> reg5",
      "153857 SET      reg5 -> reg6",
      "153860 SET MEMORY ELEMENT IF INIT      4589 = reg6",
      "153863 STRICT NOT EQUAL      reg6 !== null -> reg5",
      "153867 JUMP IF FALSE      reg5 TO: 153883 | 153870"
  ],
  "153870": [
      "153870 PUSH MEMORY ELEMENT IF INIT      4589 -> reg9",
      "153873 SET      undefined -> reg6",
      "153876 STRICT NOT EQUAL      reg9 !== reg6 -> reg7",
      "153880 SET      reg7 -> reg5",
      "153883 JUMP IF FALSE      reg5 TO: 153894 | 153886"
  ],
  "153883": ["153883 JUMP IF FALSE      reg5 TO: 153894 | 153886"],
  "153886": [
      "153886 PUSH MEMORY ELEMENT IF INIT      4589 -> reg5",
      "153889 SET      reg5 -> reg6",
      "153892 JUMP      153899",
      "153899 JUMP OR RETURN VAL      reg6"
  ],
  "153894": [
      "153894 SET      no -> reg6",
      "153899 JUMP OR RETURN VAL      reg6"
  ],
  "153991": [
      "153991 PUSH MEMORY ELEMENT IF INIT      4600 -> reg5",
      "153994 SET      undefined -> reg8",
      "153997 STRICT EQUAL      reg5 === reg8 -> reg9",
      "154001 SET      reg9 -> reg4",
      "154004 JUMP IF FALSE      reg4 TO: 154015 | 154007"
  ],
  "154004": ["154004 JUMP IF FALSE      reg4 TO: 154015 | 154007"],
  "154007": [
      "154007 SET      undefined -> reg4",
      "154010 SET      reg4 -> reg5",
      "154013 JUMP      154033",
      "154033 SET MEMORY ELEMENT IF INIT      4601 = reg5",
      "154036 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "154040 JUMP IF FALSE      reg4 TO: 154056 | 154043"
  ],
  "154015": [
      "154015 PUSH MEMORY ELEMENT IF INIT      4600 -> reg4",
      "154018 GET      reg4[styleTags] -> reg6",
      "154024 GET      reg6[break] -> reg4",
      "154030 SET      reg4 -> reg5",
      "154033 SET MEMORY ELEMENT IF INIT      4601 = reg5",
      "154036 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "154040 JUMP IF FALSE      reg4 TO: 154056 | 154043"
  ],
  "154043": [
      "154043 PUSH MEMORY ELEMENT IF INIT      4601 -> reg5",
      "154046 SET      undefined -> reg8",
      "154049 STRICT NOT EQUAL      reg5 !== reg8 -> reg6",
      "154053 SET      reg6 -> reg4",
      "154056 JUMP IF FALSE      reg4 TO: 154067 | 154059"
  ],
  "154056": ["154056 JUMP IF FALSE      reg4 TO: 154067 | 154059"],
  "154059": [
      "154059 PUSH MEMORY ELEMENT IF INIT      4601 -> reg4",
      "154062 SET      reg4 -> reg5",
      "154065 JUMP      154070",
      "154070 JUMP OR RETURN VAL      reg5"
  ],
  "154067": [
      "154067 SET      0 -> reg5",
      "154070 JUMP OR RETURN VAL      reg5"
  ],
  "154162": [
      "154162 PUSH MEMORY ELEMENT IF INIT      4610 -> reg7",
      "154165 SET      undefined -> reg5",
      "154168 STRICT EQUAL      reg7 === reg5 -> reg6",
      "154172 SET      reg6 -> reg4",
      "154175 JUMP IF FALSE      reg4 TO: 154186 | 154178"
  ],
  "154175": ["154175 JUMP IF FALSE      reg4 TO: 154186 | 154178"],
  "154178": [
      "154178 SET      undefined -> reg4",
      "154181 SET      reg4 -> reg6",
      "154184 JUMP      154204",
      "154204 SET MEMORY ELEMENT IF INIT      4611 = reg6",
      "154207 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "154211 JUMP IF FALSE      reg4 TO: 154227 | 154214"
  ],
  "154186": [
      "154186 PUSH MEMORY ELEMENT IF INIT      4610 -> reg4",
      "154189 GET      reg4[styleTags] -> reg5",
      "154195 GET      reg5[background] -> reg8",
      "154201 SET      reg8 -> reg6",
      "154204 SET MEMORY ELEMENT IF INIT      4611 = reg6",
      "154207 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "154211 JUMP IF FALSE      reg4 TO: 154227 | 154214"
  ],
  "154214": [
      "154214 PUSH MEMORY ELEMENT IF INIT      4611 -> reg5",
      "154217 SET      undefined -> reg6",
      "154220 STRICT NOT EQUAL      reg5 !== reg6 -> reg8",
      "154224 SET      reg8 -> reg4",
      "154227 JUMP IF FALSE      reg4 TO: 154238 | 154230"
  ],
  "154227": ["154227 JUMP IF FALSE      reg4 TO: 154238 | 154230"],
  "154230": [
      "154230 PUSH MEMORY ELEMENT IF INIT      4611 -> reg6",
      "154233 SET      reg6 -> reg5",
      "154236 JUMP      154241",
      "154241 JUMP OR RETURN VAL      reg5"
  ],
  "154238": [
      "154238 SET      0 -> reg5",
      "154241 JUMP OR RETURN VAL      reg5"
  ],
  "154335": [
      "154335 PUSH MEMORY ELEMENT IF INIT      4620 -> reg4",
      "154338 SET      undefined -> reg5",
      "154341 STRICT EQUAL      reg4 === reg5 -> reg8",
      "154345 SET      reg8 -> reg6",
      "154348 JUMP IF FALSE      reg6 TO: 154359 | 154351"
  ],
  "154348": ["154348 JUMP IF FALSE      reg6 TO: 154359 | 154351"],
  "154351": [
      "154351 SET      undefined -> reg5",
      "154354 SET      reg5 -> reg4",
      "154357 JUMP      154371",
      "154371 SET MEMORY ELEMENT IF INIT      4621 = reg4",
      "154374 STRICT EQUAL      reg4 === null -> reg5",
      "154378 JUMP IF TRUE      reg5 TO: 154394 | 154381"
  ],
  "154359": [
      "154359 PUSH MEMORY ELEMENT IF INIT      4620 -> reg5",
      "154362 GET      reg5[audio] -> reg7",
      "154368 SET      reg7 -> reg4",
      "154371 SET MEMORY ELEMENT IF INIT      4621 = reg4",
      "154374 STRICT EQUAL      reg4 === null -> reg5",
      "154378 JUMP IF TRUE      reg5 TO: 154394 | 154381"
  ],
  "154381": [
      "154381 PUSH MEMORY ELEMENT IF INIT      4621 -> reg6",
      "154384 SET      undefined -> reg4",
      "154387 STRICT EQUAL      reg6 === reg4 -> reg7",
      "154391 SET      reg7 -> reg5",
      "154394 JUMP IF FALSE      reg5 TO: 154405 | 154397"
  ],
  "154394": ["154394 JUMP IF FALSE      reg5 TO: 154405 | 154397"],
  "154397": [
      "154397 SET      undefined -> reg5",
      "154400 SET      reg5 -> reg4",
      "154403 JUMP      154433",
      "154433 SET MEMORY ELEMENT IF INIT      4622 = reg4",
      "154436 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "154440 JUMP IF FALSE      reg5 TO: 154456 | 154443"
  ],
  "154405": [
      "154405 PUSH MEMORY ELEMENT IF INIT      4621 -> reg8",
      "154408 GET      reg8[canPlayType] -> reg5",
      "154414 NEW ARRAY      1 -> reg7",
      "154417 PUT      reg7[0] = audio/wav; codecs=\"0\"",
      "154423 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg7",
      "154427 SET      reg2 -> reg6",
      "154430 SET      reg6 -> reg4",
      "154433 SET MEMORY ELEMENT IF INIT      4622 = reg4",
      "154436 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "154440 JUMP IF FALSE      reg5 TO: 154456 | 154443"
  ],
  "154443": [
      "154443 PUSH MEMORY ELEMENT IF INIT      4622 -> reg4",
      "154446 SET      undefined -> reg6",
      "154449 STRICT NOT EQUAL      reg4 !== reg6 -> reg9",
      "154453 SET      reg9 -> reg5",
      "154456 JUMP IF FALSE      reg5 TO: 154467 | 154459"
  ],
  "154456": ["154456 JUMP IF FALSE      reg5 TO: 154467 | 154459"],
  "154459": [
      "154459 PUSH MEMORY ELEMENT IF INIT      4622 -> reg5",
      "154462 SET      reg5 -> reg4",
      "154465 JUMP      154472",
      "154472 JUMP OR RETURN VAL      reg4"
  ],
  "154467": [
      "154467 SET      no -> reg4",
      "154472 JUMP OR RETURN VAL      reg4"
  ],
  "154566": [
      "154566 PUSH MEMORY ELEMENT IF INIT      4633 -> reg4",
      "154569 SET      undefined -> reg5",
      "154572 STRICT EQUAL      reg4 === reg5 -> reg7",
      "154576 SET      reg7 -> reg6",
      "154579 JUMP IF FALSE      reg6 TO: 154590 | 154582"
  ],
  "154579": ["154579 JUMP IF FALSE      reg6 TO: 154590 | 154582"],
  "154582": [
      "154582 SET      undefined -> reg5",
      "154585 SET      reg5 -> reg4",
      "154588 JUMP      154602",
      "154602 SET MEMORY ELEMENT IF INIT      4634 = reg4",
      "154605 STRICT EQUAL      reg4 === null -> reg5",
      "154609 JUMP IF TRUE      reg5 TO: 154625 | 154612"
  ],
  "154590": [
      "154590 PUSH MEMORY ELEMENT IF INIT      4633 -> reg6",
      "154593 GET      reg6[video] -> reg5",
      "154599 SET      reg5 -> reg4",
      "154602 SET MEMORY ELEMENT IF INIT      4634 = reg4",
      "154605 STRICT EQUAL      reg4 === null -> reg5",
      "154609 JUMP IF TRUE      reg5 TO: 154625 | 154612"
  ],
  "154612": [
      "154612 PUSH MEMORY ELEMENT IF INIT      4634 -> reg6",
      "154615 SET      undefined -> reg4",
      "154618 STRICT EQUAL      reg6 === reg4 -> reg7",
      "154622 SET      reg7 -> reg5",
      "154625 JUMP IF FALSE      reg5 TO: 154636 | 154628"
  ],
  "154625": ["154625 JUMP IF FALSE      reg5 TO: 154636 | 154628"],
  "154628": [
      "154628 SET      undefined -> reg5",
      "154631 SET      reg5 -> reg4",
      "154634 JUMP      154664",
      "154664 SET MEMORY ELEMENT IF INIT      4635 = reg4",
      "154667 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "154671 JUMP IF FALSE      reg5 TO: 154687 | 154674"
  ],
  "154636": [
      "154636 PUSH MEMORY ELEMENT IF INIT      4634 -> reg6",
      "154639 GET      reg6[canPlayType] -> reg8",
      "154645 NEW ARRAY      1 -> reg7",
      "154648 PUT      reg7[0] = video/ogg; codecs=speex",
      "154654 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg7",
      "154658 SET      reg2 -> reg5",
      "154661 SET      reg5 -> reg4",
      "154664 SET MEMORY ELEMENT IF INIT      4635 = reg4",
      "154667 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "154671 JUMP IF FALSE      reg5 TO: 154687 | 154674"
  ],
  "154674": [
      "154674 PUSH MEMORY ELEMENT IF INIT      4635 -> reg4",
      "154677 SET      undefined -> reg7",
      "154680 STRICT NOT EQUAL      reg4 !== reg7 -> reg10",
      "154684 SET      reg10 -> reg5",
      "154687 JUMP IF FALSE      reg5 TO: 154698 | 154690"
  ],
  "154687": ["154687 JUMP IF FALSE      reg5 TO: 154698 | 154690"],
  "154690": [
      "154690 PUSH MEMORY ELEMENT IF INIT      4635 -> reg5",
      "154693 SET      reg5 -> reg4",
      "154696 JUMP      154703",
      "154703 JUMP OR RETURN VAL      reg4"
  ],
  "154698": [
      "154698 SET      no -> reg4",
      "154703 JUMP OR RETURN VAL      reg4"
  ],
  "155420": [
      "155420 PUSH MEMORY ELEMENT IF INIT      4669 -> reg5",
      "155423 SET      undefined -> reg7",
      "155426 STRICT NOT EQUAL      reg5 !== reg7 -> reg6",
      "155430 SET      reg6 -> reg4",
      "155433 JUMP IF FALSE      reg4 TO: 155444 | 155436"
  ],
  "155433": ["155433 JUMP IF FALSE      reg4 TO: 155444 | 155436"],
  "155436": [
      "155436 PUSH MEMORY ELEMENT IF INIT      4669 -> reg4",
      "155439 SET      reg4 -> reg6",
      "155442 JUMP      155447",
      "155447 JUMP OR RETURN VAL      reg6"
  ],
  "155444": [
      "155444 SET      null -> reg6",
      "155447 JUMP OR RETURN VAL      reg6"
  ],
  "155539": [
      "155539 PUSH MEMORY ELEMENT IF INIT      4676 -> reg8",
      "155542 SET      undefined -> reg7",
      "155545 STRICT EQUAL      reg8 === reg7 -> reg5",
      "155549 SET      reg5 -> reg4",
      "155552 JUMP IF FALSE      reg4 TO: 155563 | 155555"
  ],
  "155552": ["155552 JUMP IF FALSE      reg4 TO: 155563 | 155555"],
  "155555": [
      "155555 SET      undefined -> reg4",
      "155558 SET      reg4 -> reg5",
      "155561 JUMP      155581",
      "155581 SET MEMORY ELEMENT IF INIT      4677 = reg5",
      "155584 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "155588 JUMP IF FALSE      reg6 TO: 155604 | 155591"
  ],
  "155563": [
      "155563 PUSH MEMORY ELEMENT IF INIT      4676 -> reg8",
      "155566 GET      reg8[styleTags] -> reg4",
      "155572 GET      reg4[page] -> reg6",
      "155578 SET      reg6 -> reg5",
      "155581 SET MEMORY ELEMENT IF INIT      4677 = reg5",
      "155584 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "155588 JUMP IF FALSE      reg6 TO: 155604 | 155591"
  ],
  "155591": [
      "155591 PUSH MEMORY ELEMENT IF INIT      4677 -> reg9",
      "155594 SET      undefined -> reg4",
      "155597 STRICT NOT EQUAL      reg9 !== reg4 -> reg5",
      "155601 SET      reg5 -> reg6",
      "155604 JUMP IF FALSE      reg6 TO: 155615 | 155607"
  ],
  "155604": ["155604 JUMP IF FALSE      reg6 TO: 155615 | 155607"],
  "155607": [
      "155607 PUSH MEMORY ELEMENT IF INIT      4677 -> reg4",
      "155610 SET      reg4 -> reg7",
      "155613 JUMP      155618",
      "155618 JUMP OR RETURN VAL      reg7"
  ],
  "155615": [
      "155615 SET      0 -> reg7",
      "155618 JUMP OR RETURN VAL      reg7"
  ],
  "155710": [
      "155710 PUSH MEMORY ELEMENT IF INIT      4686 -> reg5",
      "155713 SET      undefined -> reg4",
      "155716 STRICT EQUAL      reg5 === reg4 -> reg9",
      "155720 SET      reg9 -> reg7",
      "155723 JUMP IF FALSE      reg7 TO: 155734 | 155726"
  ],
  "155723": ["155723 JUMP IF FALSE      reg7 TO: 155734 | 155726"],
  "155726": [
      "155726 SET      undefined -> reg5",
      "155729 SET      reg5 -> reg4",
      "155732 JUMP      155752",
      "155752 SET MEMORY ELEMENT IF INIT      4687 = reg4",
      "155755 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "155759 JUMP IF FALSE      reg6 TO: 155775 | 155762"
  ],
  "155734": [
      "155734 PUSH MEMORY ELEMENT IF INIT      4686 -> reg6",
      "155737 GET      reg6[styleTags] -> reg8",
      "155743 GET      reg8[box] -> reg5",
      "155749 SET      reg5 -> reg4",
      "155752 SET MEMORY ELEMENT IF INIT      4687 = reg4",
      "155755 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "155759 JUMP IF FALSE      reg6 TO: 155775 | 155762"
  ],
  "155762": [
      "155762 PUSH MEMORY ELEMENT IF INIT      4687 -> reg4",
      "155765 SET      undefined -> reg7",
      "155768 STRICT NOT EQUAL      reg4 !== reg7 -> reg8",
      "155772 SET      reg8 -> reg6",
      "155775 JUMP IF FALSE      reg6 TO: 155786 | 155778"
  ],
  "155775": ["155775 JUMP IF FALSE      reg6 TO: 155786 | 155778"],
  "155778": [
      "155778 PUSH MEMORY ELEMENT IF INIT      4687 -> reg5",
      "155781 SET      reg5 -> reg4",
      "155784 JUMP      155789",
      "155789 JUMP OR RETURN VAL      reg4"
  ],
  "155786": [
      "155786 SET      0 -> reg4",
      "155789 JUMP OR RETURN VAL      reg4"
  ],
  "156027": [
      "156027 PUSH MEMORY ELEMENT IF INIT      4704 -> reg4",
      "156030 SET      undefined -> reg5",
      "156033 STRICT EQUAL      reg4 === reg5 -> reg7",
      "156037 SET      reg7 -> reg6",
      "156040 JUMP IF FALSE      reg6 TO: 156051 | 156043"
  ],
  "156040": ["156040 JUMP IF FALSE      reg6 TO: 156051 | 156043"],
  "156043": [
      "156043 SET      undefined -> reg6",
      "156046 SET      reg6 -> reg4",
      "156049 JUMP      156063",
      "156063 SET MEMORY ELEMENT IF INIT      4705 = reg4",
      "156066 STRICT EQUAL      reg4 === null -> reg5",
      "156070 JUMP IF TRUE      reg5 TO: 156086 | 156073"
  ],
  "156051": [
      "156051 PUSH MEMORY ELEMENT IF INIT      4704 -> reg5",
      "156054 GET      reg5[audio] -> reg6",
      "156060 SET      reg6 -> reg4",
      "156063 SET MEMORY ELEMENT IF INIT      4705 = reg4",
      "156066 STRICT EQUAL      reg4 === null -> reg5",
      "156070 JUMP IF TRUE      reg5 TO: 156086 | 156073"
  ],
  "156073": [
      "156073 PUSH MEMORY ELEMENT IF INIT      4705 -> reg6",
      "156076 SET      undefined -> reg8",
      "156079 STRICT EQUAL      reg6 === reg8 -> reg4",
      "156083 SET      reg4 -> reg5",
      "156086 JUMP IF FALSE      reg5 TO: 156097 | 156089"
  ],
  "156086": ["156086 JUMP IF FALSE      reg5 TO: 156097 | 156089"],
  "156089": [
      "156089 SET      undefined -> reg4",
      "156092 SET      reg4 -> reg6",
      "156095 JUMP      156125",
      "156125 SET MEMORY ELEMENT IF INIT      4706 = reg6",
      "156128 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "156132 JUMP IF FALSE      reg4 TO: 156148 | 156135"
  ],
  "156097": [
      "156097 PUSH MEMORY ELEMENT IF INIT      4705 -> reg7",
      "156100 GET      reg7[canPlayType] -> reg4",
      "156106 NEW ARRAY      1 -> reg8",
      "156109 PUT      reg8[0] = audio/wave; codecs=1",
      "156115 CALL FUNCTION      OBJ: reg7 FUNC: reg4 ARGS: reg8",
      "156119 SET      reg2 -> reg5",
      "156122 SET      reg5 -> reg6",
      "156125 SET MEMORY ELEMENT IF INIT      4706 = reg6",
      "156128 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "156132 JUMP IF FALSE      reg4 TO: 156148 | 156135"
  ],
  "156135": [
      "156135 PUSH MEMORY ELEMENT IF INIT      4706 -> reg5",
      "156138 SET      undefined -> reg8",
      "156141 STRICT NOT EQUAL      reg5 !== reg8 -> reg6",
      "156145 SET      reg6 -> reg4",
      "156148 JUMP IF FALSE      reg4 TO: 156159 | 156151"
  ],
  "156148": ["156148 JUMP IF FALSE      reg4 TO: 156159 | 156151"],
  "156151": [
      "156151 PUSH MEMORY ELEMENT IF INIT      4706 -> reg6",
      "156154 SET      reg6 -> reg5",
      "156157 JUMP      156164",
      "156164 JUMP OR RETURN VAL      reg5"
  ],
  "156159": [
      "156159 SET      no -> reg5",
      "156164 JUMP OR RETURN VAL      reg5"
  ],
  "156256": [
      "156256 PUSH MEMORY ELEMENT IF INIT      4717 -> reg4",
      "156259 SET      undefined -> reg6",
      "156262 STRICT EQUAL      reg4 === reg6 -> reg9",
      "156266 SET      reg9 -> reg5",
      "156269 JUMP IF FALSE      reg5 TO: 156280 | 156272"
  ],
  "156269": ["156269 JUMP IF FALSE      reg5 TO: 156280 | 156272"],
  "156272": [
      "156272 SET      undefined -> reg5",
      "156275 SET      reg5 -> reg7",
      "156278 JUMP      156298",
      "156298 SET MEMORY ELEMENT IF INIT      4718 = reg7",
      "156301 STRICT NOT EQUAL      reg7 !== null -> reg5",
      "156305 JUMP IF FALSE      reg5 TO: 156321 | 156308"
  ],
  "156280": [
      "156280 PUSH MEMORY ELEMENT IF INIT      4717 -> reg4",
      "156283 GET      reg4[styleTags] -> reg5",
      "156289 GET      reg5[transform] -> reg6",
      "156295 SET      reg6 -> reg7",
      "156298 SET MEMORY ELEMENT IF INIT      4718 = reg7",
      "156301 STRICT NOT EQUAL      reg7 !== null -> reg5",
      "156305 JUMP IF FALSE      reg5 TO: 156321 | 156308"
  ],
  "156308": [
      "156308 PUSH MEMORY ELEMENT IF INIT      4718 -> reg4",
      "156311 SET      undefined -> reg6",
      "156314 STRICT NOT EQUAL      reg4 !== reg6 -> reg7",
      "156318 SET      reg7 -> reg5",
      "156321 JUMP IF FALSE      reg5 TO: 156332 | 156324"
  ],
  "156321": ["156321 JUMP IF FALSE      reg5 TO: 156332 | 156324"],
  "156324": [
      "156324 PUSH MEMORY ELEMENT IF INIT      4718 -> reg5",
      "156327 SET      reg5 -> reg4",
      "156330 JUMP      156335",
      "156335 JUMP OR RETURN VAL      reg4"
  ],
  "156332": [
      "156332 SET      0 -> reg4",
      "156335 JUMP OR RETURN VAL      reg4"
  ],
  "156429": [
      "156429 PUSH MEMORY ELEMENT IF INIT      4725 -> reg4",
      "156432 GET      reg4[rkg] -> reg5",
      "156438 GET      reg5[toolbar] -> reg4",
      "156444 GET      reg4[visible] -> reg5",
      "156450 SET      reg5 -> reg6",
      "156453 SET MEMORY ELEMENT IF INIT      4726 = reg6",
      "156456 STRICT NOT EQUAL      reg6 !== null -> reg5",
      "156460 JUMP IF FALSE      reg5 TO: 156476 | 156463"
  ],
  "156453": [
      "156453 SET MEMORY ELEMENT IF INIT      4726 = reg6",
      "156456 STRICT NOT EQUAL      reg6 !== null -> reg5",
      "156460 JUMP IF FALSE      reg5 TO: 156476 | 156463"
  ],
  "156463": [
      "156463 PUSH MEMORY ELEMENT IF INIT      4726 -> reg4",
      "156466 SET      undefined -> reg7",
      "156469 STRICT NOT EQUAL      reg4 !== reg7 -> reg6",
      "156473 SET      reg6 -> reg5",
      "156476 JUMP IF FALSE      reg5 TO: 156487 | 156479"
  ],
  "156476": ["156476 JUMP IF FALSE      reg5 TO: 156487 | 156479"],
  "156479": [
      "156479 PUSH MEMORY ELEMENT IF INIT      4726 -> reg5",
      "156482 SET      reg5 -> reg4",
      "156485 JUMP      156490",
      "156490 JUMP OR RETURN VAL      reg4"
  ],
  "156487": [
      "156487 SET      false -> reg4",
      "156490 JUMP OR RETURN VAL      reg4"
  ],
  "156720": [
      "156720 PUSH MEMORY ELEMENT IF INIT      4738 -> reg5",
      "156723 SET      undefined -> reg7",
      "156726 STRICT NOT EQUAL      reg5 !== reg7 -> reg6",
      "156730 SET      reg6 -> reg4",
      "156733 JUMP IF FALSE      reg4 TO: 156744 | 156736"
  ],
  "156733": ["156733 JUMP IF FALSE      reg4 TO: 156744 | 156736"],
  "156736": [
      "156736 PUSH MEMORY ELEMENT IF INIT      4738 -> reg4",
      "156739 SET      reg4 -> reg5",
      "156742 JUMP      156749",
      "156749 JUMP OR RETURN VAL      reg5"
  ],
  "156744": [
      "156744 SET      not supported -> reg5",
      "156749 JUMP OR RETURN VAL      reg5"
  ],
  "156843": [
      "156843 PUSH MEMORY ELEMENT IF INIT      4745 -> reg8",
      "156846 SET      undefined -> reg6",
      "156849 STRICT EQUAL      reg8 === reg6 -> reg5",
      "156853 SET      reg5 -> reg4",
      "156856 JUMP IF FALSE      reg4 TO: 156867 | 156859"
  ],
  "156856": ["156856 JUMP IF FALSE      reg4 TO: 156867 | 156859"],
  "156859": [
      "156859 SET      undefined -> reg6",
      "156862 SET      reg6 -> reg5",
      "156865 JUMP      156879",
      "156879 SET MEMORY ELEMENT IF INIT      4746 = reg5",
      "156882 STRICT EQUAL      reg5 === null -> reg4",
      "156886 JUMP IF TRUE      reg4 TO: 156902 | 156889"
  ],
  "156867": [
      "156867 PUSH MEMORY ELEMENT IF INIT      4745 -> reg4",
      "156870 GET      reg4[video] -> reg6",
      "156876 SET      reg6 -> reg5",
      "156879 SET MEMORY ELEMENT IF INIT      4746 = reg5",
      "156882 STRICT EQUAL      reg5 === null -> reg4",
      "156886 JUMP IF TRUE      reg4 TO: 156902 | 156889"
  ],
  "156889": [
      "156889 PUSH MEMORY ELEMENT IF INIT      4746 -> reg5",
      "156892 SET      undefined -> reg6",
      "156895 STRICT EQUAL      reg5 === reg6 -> reg7",
      "156899 SET      reg7 -> reg4",
      "156902 JUMP IF FALSE      reg4 TO: 156913 | 156905"
  ],
  "156902": ["156902 JUMP IF FALSE      reg4 TO: 156913 | 156905"],
  "156905": [
      "156905 SET      undefined -> reg4",
      "156908 SET      reg4 -> reg7",
      "156911 JUMP      156941",
      "156941 SET MEMORY ELEMENT IF INIT      4747 = reg7",
      "156944 STRICT NOT EQUAL      reg7 !== null -> reg4",
      "156948 JUMP IF FALSE      reg4 TO: 156964 | 156951"
  ],
  "156913": [
      "156913 PUSH MEMORY ELEMENT IF INIT      4746 -> reg5",
      "156916 GET      reg5[canPlayType] -> reg6",
      "156922 NEW ARRAY      1 -> reg8",
      "156925 PUT      reg8[0] = video/mp4; codecs=\"avc1.42c00d\"",
      "156931 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "156935 SET      reg2 -> reg4",
      "156938 SET      reg4 -> reg7",
      "156941 SET MEMORY ELEMENT IF INIT      4747 = reg7",
      "156944 STRICT NOT EQUAL      reg7 !== null -> reg4",
      "156948 JUMP IF FALSE      reg4 TO: 156964 | 156951"
  ],
  "156951": [
      "156951 PUSH MEMORY ELEMENT IF INIT      4747 -> reg6",
      "156954 SET      undefined -> reg8",
      "156957 STRICT NOT EQUAL      reg6 !== reg8 -> reg11",
      "156961 SET      reg11 -> reg4",
      "156964 JUMP IF FALSE      reg4 TO: 156975 | 156967"
  ],
  "156964": ["156964 JUMP IF FALSE      reg4 TO: 156975 | 156967"],
  "156967": [
      "156967 PUSH MEMORY ELEMENT IF INIT      4747 -> reg4",
      "156970 SET      reg4 -> reg6",
      "156973 JUMP      156980",
      "156980 JUMP OR RETURN VAL      reg6"
  ],
  "156975": [
      "156975 SET      no -> reg6",
      "156980 JUMP OR RETURN VAL      reg6"
  ],
  "157380": [
      "157380 GET      reg3[1] -> reg7",
      "157384 GET WINDOW PROP      undefined -> reg4",
      "157389 STRICT NOT EQUAL      reg7 !== reg4 -> reg6",
      "157393 SET      reg6 -> reg5",
      "157396 JUMP IF FALSE      reg5 TO: 157408 | 157399"
  ],
  "157396": ["157396 JUMP IF FALSE      reg5 TO: 157408 | 157399"],
  "157399": [
      "157399 GET      reg3[1] -> reg5",
      "157403 SET      reg5 -> reg4",
      "157406 JUMP      157411",
      "157411 SET MEMORY ELEMENT IF INIT      4771 = reg4",
      "157414 PUSH MEMORY ELEMENT IF INIT      4770 -> reg5",
      "157417 GET      reg5[slice] -> reg6",
      "157423 NEW ARRAY      1 -> reg7",
      "157426 PUT      reg7[0] = 0",
      "157430 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "157434 SET      reg2 -> reg4",
      "157437 SET MEMORY ELEMENT IF INIT      4773 = reg4",
      "157440 PUSH MEMORY ELEMENT IF INIT      4773 -> reg4",
      "157443 GET      reg4[length] -> reg6",
      "157449 SET MEMORY ELEMENT IF INIT      4774 = reg6",
      "157452 PUSH MEMORY ELEMENT IF INIT      4774 -> reg4",
      "157455 JUMP IF FALSE      reg4 TO: 157584 | 157458"
  ],
  "157408": [
      "157408 SET      78012697 -> reg4",
      "157411 SET MEMORY ELEMENT IF INIT      4771 = reg4",
      "157414 PUSH MEMORY ELEMENT IF INIT      4770 -> reg5",
      "157417 GET      reg5[slice] -> reg6",
      "157423 NEW ARRAY      1 -> reg7",
      "157426 PUT      reg7[0] = 0",
      "157430 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "157434 SET      reg2 -> reg4",
      "157437 SET MEMORY ELEMENT IF INIT      4773 = reg4",
      "157440 PUSH MEMORY ELEMENT IF INIT      4773 -> reg4",
      "157443 GET      reg4[length] -> reg6",
      "157449 SET MEMORY ELEMENT IF INIT      4774 = reg6",
      "157452 PUSH MEMORY ELEMENT IF INIT      4774 -> reg4",
      "157455 JUMP IF FALSE      reg4 TO: 157584 | 157458"
  ],
  "157458": [
      "157458 GET WINDOW PROP      Math -> reg6",
      "157463 GET      reg6[floor] -> reg7",
      "157469 NEW ARRAY      1 -> reg8",
      "157472 PUSH MEMORY ELEMENT IF INIT      4772 -> reg10",
      "157475 NEW ARRAY      1 -> reg11",
      "157478 PUSH MEMORY ELEMENT IF INIT      4771 -> reg13",
      "157481 PUT      reg11[0] = reg13",
      "157485 CALL FUNCTION      PTR: reg10 MEM: reg11",
      "157489 SET      reg2 -> reg9",
      "157492 PUSH MEMORY ELEMENT IF INIT      4774 -> reg10",
      "157495 SET      reg10 -> reg11",
      "157498 SUBTRACT      reg10 - 1 -> reg10",
      "157502 SET MEMORY ELEMENT IF INIT      4774 = reg10",
      "157505 MULTIPLY      reg9 * reg11 -> reg12",
      "157509 PUT      reg8[0] = reg12",
      "157513 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "157517 SET      reg2 -> reg4",
      "157520 SET MEMORY ELEMENT IF INIT      4776 = reg4",
      "157523 PUSH MEMORY ELEMENT IF INIT      4773 -> reg4",
      "157526 PUSH MEMORY ELEMENT IF INIT      4774 -> reg9",
      "157529 GET      reg4[reg9] -> reg8",
      "157533 SET MEMORY ELEMENT IF INIT      4775 = reg8",
      "157536 PUSH MEMORY ELEMENT IF INIT      4773 -> reg4",
      "157539 PUSH MEMORY ELEMENT IF INIT      4774 -> reg8",
      "157542 PUSH MEMORY ELEMENT IF INIT      4773 -> reg7",
      "157545 PUSH MEMORY ELEMENT IF INIT      4776 -> reg10",
      "157548 GET      reg7[reg10] -> reg9",
      "157552 PUT      reg4[reg8] = reg9",
      "157556 PUSH MEMORY ELEMENT IF INIT      4773 -> reg4",
      "157559 PUSH MEMORY ELEMENT IF INIT      4776 -> reg7",
      "157562 PUSH MEMORY ELEMENT IF INIT      4775 -> reg8",
      "157565 PUT      reg4[reg7] = reg8",
      "157569 PUSH MEMORY ELEMENT IF INIT      4771 -> reg4",
      "157572 SET      1 -> reg7",
      "157575 ADD      reg4NaN-> reg7",
      "157579 SET MEMORY ELEMENT IF INIT      4771 = reg7",
      "157582 JUMP      157452",
      "157452 PUSH MEMORY ELEMENT IF INIT      4774 -> reg4",
      "157455 JUMP IF FALSE      reg4 TO: 157584 | 157458"
  ],
  "157584": [
      "157584 PUSH MEMORY ELEMENT IF INIT      4773 -> reg4",
      "157587 JUMP OR RETURN VAL      reg4"
  ],
  "157757": [
      "157757 SET      true -> reg5",
      "157760 JUMP      157765",
      "157765 JUMP OR RETURN VAL      reg5"
  ],
  "157762": [
      "157762 SET      null -> reg5",
      "157765 JUMP OR RETURN VAL      reg5"
  ],
  "157961": [
      "157961 PUSH MEMORY ELEMENT IF INIT      4796 -> reg6",
      "157964 SET      undefined -> reg4",
      "157967 STRICT NOT EQUAL      reg6 !== reg4 -> reg7",
      "157971 SET      reg7 -> reg5",
      "157974 JUMP IF FALSE      reg5 TO: 157985 | 157977"
  ],
  "157974": ["157974 JUMP IF FALSE      reg5 TO: 157985 | 157977"],
  "157977": [
      "157977 PUSH MEMORY ELEMENT IF INIT      4796 -> reg5",
      "157980 SET      reg5 -> reg4",
      "157983 JUMP      157988",
      "157988 JUMP OR RETURN VAL      reg4"
  ],
  "157985": [
      "157985 SET      null -> reg4",
      "157988 JUMP OR RETURN VAL      reg4"
  ],
  "158082": [
      "158082 PUSH MEMORY ELEMENT IF INIT      4801 -> reg5",
      "158085 GET      reg5[rkg] -> reg7",
      "158091 GET      reg7[locationbar] -> reg5",
      "158097 GET      reg5[visible] -> reg7",
      "158103 SET      reg7 -> reg4",
      "158106 SET MEMORY ELEMENT IF INIT      4802 = reg4",
      "158109 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "158113 JUMP IF FALSE      reg5 TO: 158129 | 158116"
  ],
  "158106": [
      "158106 SET MEMORY ELEMENT IF INIT      4802 = reg4",
      "158109 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "158113 JUMP IF FALSE      reg5 TO: 158129 | 158116"
  ],
  "158116": [
      "158116 PUSH MEMORY ELEMENT IF INIT      4802 -> reg4",
      "158119 SET      undefined -> reg6",
      "158122 STRICT NOT EQUAL      reg4 !== reg6 -> reg7",
      "158126 SET      reg7 -> reg5",
      "158129 JUMP IF FALSE      reg5 TO: 158140 | 158132"
  ],
  "158129": ["158129 JUMP IF FALSE      reg5 TO: 158140 | 158132"],
  "158132": [
      "158132 PUSH MEMORY ELEMENT IF INIT      4802 -> reg5",
      "158135 SET      reg5 -> reg4",
      "158138 JUMP      158143",
      "158143 JUMP OR RETURN VAL      reg4"
  ],
  "158140": [
      "158140 SET      false -> reg4",
      "158143 JUMP OR RETURN VAL      reg4"
  ],
  "158332": [
      "158332 PUSH MEMORY ELEMENT IF INIT      4813 -> reg5",
      "158335 SET      undefined -> reg6",
      "158338 STRICT EQUAL      reg5 === reg6 -> reg7",
      "158342 SET      reg7 -> reg4",
      "158345 JUMP IF FALSE      reg4 TO: 158356 | 158348"
  ],
  "158345": ["158345 JUMP IF FALSE      reg4 TO: 158356 | 158348"],
  "158348": [
      "158348 SET      undefined -> reg4",
      "158351 SET      reg4 -> reg6",
      "158354 JUMP      158368",
      "158368 SET MEMORY ELEMENT IF INIT      4814 = reg6",
      "158371 STRICT EQUAL      reg6 === null -> reg4",
      "158375 JUMP IF TRUE      reg4 TO: 158391 | 158378"
  ],
  "158356": [
      "158356 PUSH MEMORY ELEMENT IF INIT      4813 -> reg4",
      "158359 GET      reg4[audio] -> reg5",
      "158365 SET      reg5 -> reg6",
      "158368 SET MEMORY ELEMENT IF INIT      4814 = reg6",
      "158371 STRICT EQUAL      reg6 === null -> reg4",
      "158375 JUMP IF TRUE      reg4 TO: 158391 | 158378"
  ],
  "158378": [
      "158378 PUSH MEMORY ELEMENT IF INIT      4814 -> reg5",
      "158381 SET      undefined -> reg7",
      "158384 STRICT EQUAL      reg5 === reg7 -> reg8",
      "158388 SET      reg8 -> reg4",
      "158391 JUMP IF FALSE      reg4 TO: 158402 | 158394"
  ],
  "158391": ["158391 JUMP IF FALSE      reg4 TO: 158402 | 158394"],
  "158394": [
      "158394 SET      undefined -> reg6",
      "158397 SET      reg6 -> reg5",
      "158400 JUMP      158430",
      "158430 SET MEMORY ELEMENT IF INIT      4815 = reg5",
      "158433 STRICT NOT EQUAL      reg5 !== null -> reg8",
      "158437 JUMP IF FALSE      reg8 TO: 158453 | 158440"
  ],
  "158402": [
      "158402 PUSH MEMORY ELEMENT IF INIT      4814 -> reg7",
      "158405 GET      reg7[canPlayType] -> reg6",
      "158411 NEW ARRAY      1 -> reg8",
      "158414 PUT      reg8[0] = audio/wave; codecs=0",
      "158420 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg8",
      "158424 SET      reg2 -> reg4",
      "158427 SET      reg4 -> reg5",
      "158430 SET MEMORY ELEMENT IF INIT      4815 = reg5",
      "158433 STRICT NOT EQUAL      reg5 !== null -> reg8",
      "158437 JUMP IF FALSE      reg8 TO: 158453 | 158440"
  ],
  "158440": [
      "158440 PUSH MEMORY ELEMENT IF INIT      4815 -> reg4",
      "158443 SET      undefined -> reg5",
      "158446 STRICT NOT EQUAL      reg4 !== reg5 -> reg9",
      "158450 SET      reg9 -> reg8",
      "158453 JUMP IF FALSE      reg8 TO: 158464 | 158456"
  ],
  "158453": ["158453 JUMP IF FALSE      reg8 TO: 158464 | 158456"],
  "158456": [
      "158456 PUSH MEMORY ELEMENT IF INIT      4815 -> reg9",
      "158459 SET      reg9 -> reg4",
      "158462 JUMP      158469",
      "158469 JUMP OR RETURN VAL      reg4"
  ],
  "158464": [
      "158464 SET      no -> reg4",
      "158469 JUMP OR RETURN VAL      reg4"
  ],
  "158563": [
      "158563 PUSH MEMORY ELEMENT IF INIT      4826 -> reg4",
      "158566 SET      undefined -> reg6",
      "158569 STRICT EQUAL      reg4 === reg6 -> reg7",
      "158573 SET      reg7 -> reg5",
      "158576 JUMP IF FALSE      reg5 TO: 158587 | 158579"
  ],
  "158576": ["158576 JUMP IF FALSE      reg5 TO: 158587 | 158579"],
  "158579": [
      "158579 SET      undefined -> reg4",
      "158582 SET      reg4 -> reg7",
      "158585 JUMP      158599",
      "158599 SET MEMORY ELEMENT IF INIT      4827 = reg7",
      "158602 STRICT EQUAL      reg7 === null -> reg5",
      "158606 JUMP IF TRUE      reg5 TO: 158622 | 158609"
  ],
  "158587": [
      "158587 PUSH MEMORY ELEMENT IF INIT      4826 -> reg5",
      "158590 GET      reg5[video] -> reg8",
      "158596 SET      reg8 -> reg7",
      "158599 SET MEMORY ELEMENT IF INIT      4827 = reg7",
      "158602 STRICT EQUAL      reg7 === null -> reg5",
      "158606 JUMP IF TRUE      reg5 TO: 158622 | 158609"
  ],
  "158609": [
      "158609 PUSH MEMORY ELEMENT IF INIT      4827 -> reg4",
      "158612 SET      undefined -> reg7",
      "158615 STRICT EQUAL      reg4 === reg7 -> reg6",
      "158619 SET      reg6 -> reg5",
      "158622 JUMP IF FALSE      reg5 TO: 158633 | 158625"
  ],
  "158622": ["158622 JUMP IF FALSE      reg5 TO: 158633 | 158625"],
  "158625": [
      "158625 SET      undefined -> reg4",
      "158628 SET      reg4 -> reg6",
      "158631 JUMP      158661",
      "158661 SET MEMORY ELEMENT IF INIT      4828 = reg6",
      "158664 STRICT NOT EQUAL      reg6 !== null -> reg7",
      "158668 JUMP IF FALSE      reg7 TO: 158684 | 158671"
  ],
  "158633": [
      "158633 PUSH MEMORY ELEMENT IF INIT      4827 -> reg4",
      "158636 GET      reg4[canPlayType] -> reg7",
      "158642 NEW ARRAY      1 -> reg8",
      "158645 PUT      reg8[0] = video/3gpp; codecs=\"mp4v.20.8, samr\"",
      "158651 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg8",
      "158655 SET      reg2 -> reg5",
      "158658 SET      reg5 -> reg6",
      "158661 SET MEMORY ELEMENT IF INIT      4828 = reg6",
      "158664 STRICT NOT EQUAL      reg6 !== null -> reg7",
      "158668 JUMP IF FALSE      reg7 TO: 158684 | 158671"
  ],
  "158671": [
      "158671 PUSH MEMORY ELEMENT IF INIT      4828 -> reg6",
      "158674 SET      undefined -> reg5",
      "158677 STRICT NOT EQUAL      reg6 !== reg5 -> reg8",
      "158681 SET      reg8 -> reg7",
      "158684 JUMP IF FALSE      reg7 TO: 158695 | 158687"
  ],
  "158684": ["158684 JUMP IF FALSE      reg7 TO: 158695 | 158687"],
  "158687": [
      "158687 PUSH MEMORY ELEMENT IF INIT      4828 -> reg6",
      "158690 SET      reg6 -> reg5",
      "158693 JUMP      158700",
      "158700 JUMP OR RETURN VAL      reg5"
  ],
  "158695": [
      "158695 SET      no -> reg5",
      "158700 JUMP OR RETURN VAL      reg5"
  ],
  "158794": [
      "158794 PUSH MEMORY ELEMENT IF INIT      4839 -> reg4",
      "158797 SET      undefined -> reg10",
      "158800 STRICT EQUAL      reg4 === reg10 -> reg6",
      "158804 SET      reg6 -> reg5",
      "158807 JUMP IF FALSE      reg5 TO: 158818 | 158810"
  ],
  "158807": ["158807 JUMP IF FALSE      reg5 TO: 158818 | 158810"],
  "158810": [
      "158810 SET      undefined -> reg6",
      "158813 SET      reg6 -> reg4",
      "158816 JUMP      158830",
      "158830 SET MEMORY ELEMENT IF INIT      4840 = reg4",
      "158833 STRICT EQUAL      reg4 === null -> reg5",
      "158837 JUMP IF TRUE      reg5 TO: 158853 | 158840"
  ],
  "158818": [
      "158818 PUSH MEMORY ELEMENT IF INIT      4839 -> reg5",
      "158821 GET      reg5[video] -> reg6",
      "158827 SET      reg6 -> reg4",
      "158830 SET MEMORY ELEMENT IF INIT      4840 = reg4",
      "158833 STRICT EQUAL      reg4 === null -> reg5",
      "158837 JUMP IF TRUE      reg5 TO: 158853 | 158840"
  ],
  "158840": [
      "158840 PUSH MEMORY ELEMENT IF INIT      4840 -> reg4",
      "158843 SET      undefined -> reg6",
      "158846 STRICT EQUAL      reg4 === reg6 -> reg7",
      "158850 SET      reg7 -> reg5",
      "158853 JUMP IF FALSE      reg5 TO: 158864 | 158856"
  ],
  "158853": ["158853 JUMP IF FALSE      reg5 TO: 158864 | 158856"],
  "158856": [
      "158856 SET      undefined -> reg5",
      "158859 SET      reg5 -> reg4",
      "158862 JUMP      158892",
      "158892 SET MEMORY ELEMENT IF INIT      4841 = reg4",
      "158895 STRICT NOT EQUAL      reg4 !== null -> reg9",
      "158899 JUMP IF FALSE      reg9 TO: 158915 | 158902"
  ],
  "158864": [
      "158864 PUSH MEMORY ELEMENT IF INIT      4840 -> reg6",
      "158867 GET      reg6[canPlayType] -> reg7",
      "158873 NEW ARRAY      1 -> reg8",
      "158876 PUT      reg8[0] = video/x-matroska; codecs=\"theora, vorbis\"",
      "158882 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "158886 SET      reg2 -> reg5",
      "158889 SET      reg5 -> reg4",
      "158892 SET MEMORY ELEMENT IF INIT      4841 = reg4",
      "158895 STRICT NOT EQUAL      reg4 !== null -> reg9",
      "158899 JUMP IF FALSE      reg9 TO: 158915 | 158902"
  ],
  "158902": [
      "158902 PUSH MEMORY ELEMENT IF INIT      4841 -> reg4",
      "158905 SET      undefined -> reg5",
      "158908 STRICT NOT EQUAL      reg4 !== reg5 -> reg8",
      "158912 SET      reg8 -> reg9",
      "158915 JUMP IF FALSE      reg9 TO: 158926 | 158918"
  ],
  "158915": ["158915 JUMP IF FALSE      reg9 TO: 158926 | 158918"],
  "158918": [
      "158918 PUSH MEMORY ELEMENT IF INIT      4841 -> reg7",
      "158921 SET      reg7 -> reg5",
      "158924 JUMP      158931",
      "158931 JUMP OR RETURN VAL      reg5"
  ],
  "158926": [
      "158926 SET      no -> reg5",
      "158931 JUMP OR RETURN VAL      reg5"
  ],
  "159025": [
      "159025 PUSH MEMORY ELEMENT IF INIT      4850 -> reg5",
      "159028 GET      reg5[npx] -> reg6",
      "159034 GET      reg6[toolbar] -> reg5",
      "159040 GET      reg5[visible] -> reg6",
      "159046 SET      reg6 -> reg4",
      "159049 SET MEMORY ELEMENT IF INIT      4851 = reg4",
      "159052 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "159056 JUMP IF FALSE      reg6 TO: 159072 | 159059"
  ],
  "159049": [
      "159049 SET MEMORY ELEMENT IF INIT      4851 = reg4",
      "159052 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "159056 JUMP IF FALSE      reg6 TO: 159072 | 159059"
  ],
  "159059": [
      "159059 PUSH MEMORY ELEMENT IF INIT      4851 -> reg4",
      "159062 SET      undefined -> reg5",
      "159065 STRICT NOT EQUAL      reg4 !== reg5 -> reg8",
      "159069 SET      reg8 -> reg6",
      "159072 JUMP IF FALSE      reg6 TO: 159083 | 159075"
  ],
  "159072": ["159072 JUMP IF FALSE      reg6 TO: 159083 | 159075"],
  "159075": [
      "159075 PUSH MEMORY ELEMENT IF INIT      4851 -> reg5",
      "159078 SET      reg5 -> reg4",
      "159081 JUMP      159086",
      "159086 JUMP OR RETURN VAL      reg4"
  ],
  "159083": [
      "159083 SET      false -> reg4",
      "159086 JUMP OR RETURN VAL      reg4"
  ],
  "159178": [
      "159178 PUSH MEMORY ELEMENT IF INIT      4859 -> reg4",
      "159181 SET      undefined -> reg6",
      "159184 STRICT EQUAL      reg4 === reg6 -> reg8",
      "159188 SET      reg8 -> reg7",
      "159191 JUMP IF FALSE      reg7 TO: 159202 | 159194"
  ],
  "159191": ["159191 JUMP IF FALSE      reg7 TO: 159202 | 159194"],
  "159194": [
      "159194 SET      undefined -> reg4",
      "159197 SET      reg4 -> reg5",
      "159200 JUMP      159220",
      "159220 SET MEMORY ELEMENT IF INIT      4860 = reg5",
      "159223 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "159227 JUMP IF FALSE      reg6 TO: 159243 | 159230"
  ],
  "159202": [
      "159202 PUSH MEMORY ELEMENT IF INIT      4859 -> reg4",
      "159205 GET      reg4[styleTags] -> reg6",
      "159211 GET      reg6[min] -> reg8",
      "159217 SET      reg8 -> reg5",
      "159220 SET MEMORY ELEMENT IF INIT      4860 = reg5",
      "159223 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "159227 JUMP IF FALSE      reg6 TO: 159243 | 159230"
  ],
  "159230": [
      "159230 PUSH MEMORY ELEMENT IF INIT      4860 -> reg4",
      "159233 SET      undefined -> reg5",
      "159236 STRICT NOT EQUAL      reg4 !== reg5 -> reg7",
      "159240 SET      reg7 -> reg6",
      "159243 JUMP IF FALSE      reg6 TO: 159254 | 159246"
  ],
  "159243": ["159243 JUMP IF FALSE      reg6 TO: 159254 | 159246"],
  "159246": [
      "159246 PUSH MEMORY ELEMENT IF INIT      4860 -> reg8",
      "159249 SET      reg8 -> reg7",
      "159252 JUMP      159257",
      "159257 JUMP OR RETURN VAL      reg7"
  ],
  "159254": [
      "159254 SET      0 -> reg7",
      "159257 JUMP OR RETURN VAL      reg7"
  ],
  "159483": [
      "159483 PUSH MEMORY ELEMENT IF INIT      4871 -> reg4",
      "159486 SET      undefined -> reg6",
      "159489 STRICT NOT EQUAL      reg4 !== reg6 -> reg7",
      "159493 SET      reg7 -> reg5",
      "159496 JUMP IF FALSE      reg5 TO: 159507 | 159499"
  ],
  "159496": ["159496 JUMP IF FALSE      reg5 TO: 159507 | 159499"],
  "159499": [
      "159499 PUSH MEMORY ELEMENT IF INIT      4871 -> reg4",
      "159502 SET      reg4 -> reg6",
      "159505 JUMP      159510",
      "159510 JUMP OR RETURN VAL      reg6"
  ],
  "159507": [
      "159507 SET      false -> reg6",
      "159510 JUMP OR RETURN VAL      reg6"
  ],
  "159602": [
      "159602 PUSH MEMORY ELEMENT IF INIT      4878 -> reg4",
      "159605 SET      undefined -> reg7",
      "159608 STRICT EQUAL      reg4 === reg7 -> reg5",
      "159612 SET      reg5 -> reg6",
      "159615 JUMP IF FALSE      reg6 TO: 159626 | 159618"
  ],
  "159615": ["159615 JUMP IF FALSE      reg6 TO: 159626 | 159618"],
  "159618": [
      "159618 SET      undefined -> reg6",
      "159621 SET      reg6 -> reg5",
      "159624 JUMP      159644",
      "159644 SET MEMORY ELEMENT IF INIT      4879 = reg5",
      "159647 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "159651 JUMP IF FALSE      reg6 TO: 159667 | 159654"
  ],
  "159626": [
      "159626 PUSH MEMORY ELEMENT IF INIT      4878 -> reg4",
      "159629 GET      reg4[styleTags] -> reg6",
      "159635 GET      reg6[color] -> reg11",
      "159641 SET      reg11 -> reg5",
      "159644 SET MEMORY ELEMENT IF INIT      4879 = reg5",
      "159647 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "159651 JUMP IF FALSE      reg6 TO: 159667 | 159654"
  ],
  "159654": [
      "159654 PUSH MEMORY ELEMENT IF INIT      4879 -> reg4",
      "159657 SET      undefined -> reg8",
      "159660 STRICT NOT EQUAL      reg4 !== reg8 -> reg5",
      "159664 SET      reg5 -> reg6",
      "159667 JUMP IF FALSE      reg6 TO: 159678 | 159670"
  ],
  "159667": ["159667 JUMP IF FALSE      reg6 TO: 159678 | 159670"],
  "159670": [
      "159670 PUSH MEMORY ELEMENT IF INIT      4879 -> reg4",
      "159673 SET      reg4 -> reg5",
      "159676 JUMP      159681",
      "159681 JUMP OR RETURN VAL      reg5"
  ],
  "159678": [
      "159678 SET      0 -> reg5",
      "159681 JUMP OR RETURN VAL      reg5"
  ],
  "159965": [
      "159965 PUSH MEMORY ELEMENT IF INIT      4894 -> reg7",
      "159968 SET      undefined -> reg4",
      "159971 STRICT EQUAL      reg7 === reg4 -> reg6",
      "159975 SET      reg6 -> reg5",
      "159978 JUMP IF FALSE      reg5 TO: 159989 | 159981"
  ],
  "159978": ["159978 JUMP IF FALSE      reg5 TO: 159989 | 159981"],
  "159981": [
      "159981 SET      undefined -> reg7",
      "159984 SET      reg7 -> reg4",
      "159987 JUMP      160001",
      "160001 SET MEMORY ELEMENT IF INIT      4895 = reg4",
      "160004 STRICT EQUAL      reg4 === null -> reg5",
      "160008 JUMP IF TRUE      reg5 TO: 160024 | 160011"
  ],
  "159989": [
      "159989 PUSH MEMORY ELEMENT IF INIT      4894 -> reg5",
      "159992 GET      reg5[video] -> reg6",
      "159998 SET      reg6 -> reg4",
      "160001 SET MEMORY ELEMENT IF INIT      4895 = reg4",
      "160004 STRICT EQUAL      reg4 === null -> reg5",
      "160008 JUMP IF TRUE      reg5 TO: 160024 | 160011"
  ],
  "160011": [
      "160011 PUSH MEMORY ELEMENT IF INIT      4895 -> reg6",
      "160014 SET      undefined -> reg4",
      "160017 STRICT EQUAL      reg6 === reg4 -> reg7",
      "160021 SET      reg7 -> reg5",
      "160024 JUMP IF FALSE      reg5 TO: 160035 | 160027"
  ],
  "160024": ["160024 JUMP IF FALSE      reg5 TO: 160035 | 160027"],
  "160027": [
      "160027 SET      undefined -> reg4",
      "160030 SET      reg4 -> reg7",
      "160033 JUMP      160063",
      "160063 SET MEMORY ELEMENT IF INIT      4896 = reg7",
      "160066 STRICT NOT EQUAL      reg7 !== null -> reg5",
      "160070 JUMP IF FALSE      reg5 TO: 160086 | 160073"
  ],
  "160035": [
      "160035 PUSH MEMORY ELEMENT IF INIT      4895 -> reg4",
      "160038 GET      reg4[canPlayType] -> reg5",
      "160044 NEW ARRAY      1 -> reg8",
      "160047 PUT      reg8[0] = video/mp4; codecs=\"avc1.42E01E\"",
      "160053 CALL FUNCTION      OBJ: reg4 FUNC: reg5 ARGS: reg8",
      "160057 SET      reg2 -> reg6",
      "160060 SET      reg6 -> reg7",
      "160063 SET MEMORY ELEMENT IF INIT      4896 = reg7",
      "160066 STRICT NOT EQUAL      reg7 !== null -> reg5",
      "160070 JUMP IF FALSE      reg5 TO: 160086 | 160073"
  ],
  "160073": [
      "160073 PUSH MEMORY ELEMENT IF INIT      4896 -> reg6",
      "160076 SET      undefined -> reg7",
      "160079 STRICT NOT EQUAL      reg6 !== reg7 -> reg8",
      "160083 SET      reg8 -> reg5",
      "160086 JUMP IF FALSE      reg5 TO: 160097 | 160089"
  ],
  "160086": ["160086 JUMP IF FALSE      reg5 TO: 160097 | 160089"],
  "160089": [
      "160089 PUSH MEMORY ELEMENT IF INIT      4896 -> reg7",
      "160092 SET      reg7 -> reg6",
      "160095 JUMP      160102",
      "160102 JUMP OR RETURN VAL      reg6"
  ],
  "160097": [
      "160097 SET      no -> reg6",
      "160102 JUMP OR RETURN VAL      reg6"
  ],
  "160381": [
      "160381 PUSH MEMORY ELEMENT IF INIT      4913 -> reg6",
      "160384 SET      undefined -> reg4",
      "160387 STRICT EQUAL      reg6 === reg4 -> reg7",
      "160391 SET      reg7 -> reg5",
      "160394 JUMP IF FALSE      reg5 TO: 160405 | 160397"
  ],
  "160394": ["160394 JUMP IF FALSE      reg5 TO: 160405 | 160397"],
  "160397": [
      "160397 SET      undefined -> reg5",
      "160400 SET      reg5 -> reg4",
      "160403 JUMP      160423",
      "160423 SET MEMORY ELEMENT IF INIT      4914 = reg4",
      "160426 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "160430 JUMP IF FALSE      reg6 TO: 160446 | 160433"
  ],
  "160405": [
      "160405 PUSH MEMORY ELEMENT IF INIT      4913 -> reg5",
      "160408 GET      reg5[styleTags] -> reg6",
      "160414 GET      reg6[flood] -> reg8",
      "160420 SET      reg8 -> reg4",
      "160423 SET MEMORY ELEMENT IF INIT      4914 = reg4",
      "160426 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "160430 JUMP IF FALSE      reg6 TO: 160446 | 160433"
  ],
  "160433": [
      "160433 PUSH MEMORY ELEMENT IF INIT      4914 -> reg4",
      "160436 SET      undefined -> reg7",
      "160439 STRICT NOT EQUAL      reg4 !== reg7 -> reg5",
      "160443 SET      reg5 -> reg6",
      "160446 JUMP IF FALSE      reg6 TO: 160457 | 160449"
  ],
  "160446": ["160446 JUMP IF FALSE      reg6 TO: 160457 | 160449"],
  "160449": [
      "160449 PUSH MEMORY ELEMENT IF INIT      4914 -> reg5",
      "160452 SET      reg5 -> reg4",
      "160455 JUMP      160460",
      "160460 JUMP OR RETURN VAL      reg4"
  ],
  "160457": [
      "160457 SET      0 -> reg4",
      "160460 JUMP OR RETURN VAL      reg4"
  ],
  "160641": [
      "160641 PUSH MEMORY ELEMENT IF INIT      4926 -> reg4",
      "160644 SET      undefined -> reg6",
      "160647 STRICT EQUAL      reg4 === reg6 -> reg7",
      "160651 SET      reg7 -> reg5",
      "160654 JUMP IF FALSE      reg5 TO: 160665 | 160657"
  ],
  "160654": ["160654 JUMP IF FALSE      reg5 TO: 160665 | 160657"],
  "160657": [
      "160657 SET      undefined -> reg5",
      "160660 SET      reg5 -> reg4",
      "160663 JUMP      160683",
      "160683 SET MEMORY ELEMENT IF INIT      4927 = reg4",
      "160686 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "160690 JUMP IF FALSE      reg6 TO: 160706 | 160693"
  ],
  "160665": [
      "160665 PUSH MEMORY ELEMENT IF INIT      4926 -> reg6",
      "160668 GET      reg6[styleTags] -> reg5",
      "160674 GET      reg5[font] -> reg6",
      "160680 SET      reg6 -> reg4",
      "160683 SET MEMORY ELEMENT IF INIT      4927 = reg4",
      "160686 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "160690 JUMP IF FALSE      reg6 TO: 160706 | 160693"
  ],
  "160693": [
      "160693 PUSH MEMORY ELEMENT IF INIT      4927 -> reg4",
      "160696 SET      undefined -> reg5",
      "160699 STRICT NOT EQUAL      reg4 !== reg5 -> reg7",
      "160703 SET      reg7 -> reg6",
      "160706 JUMP IF FALSE      reg6 TO: 160717 | 160709"
  ],
  "160706": ["160706 JUMP IF FALSE      reg6 TO: 160717 | 160709"],
  "160709": [
      "160709 PUSH MEMORY ELEMENT IF INIT      4927 -> reg5",
      "160712 SET      reg5 -> reg4",
      "160715 JUMP      160720",
      "160720 JUMP OR RETURN VAL      reg4"
  ],
  "160717": [
      "160717 SET      0 -> reg4",
      "160720 JUMP OR RETURN VAL      reg4"
  ],
  "161120": [
      "161120 GET      reg3[1] -> reg6",
      "161124 GET WINDOW PROP      undefined -> reg4",
      "161129 STRICT NOT EQUAL      reg6 !== reg4 -> reg7",
      "161133 SET      reg7 -> reg5",
      "161136 JUMP IF FALSE      reg5 TO: 161148 | 161139"
  ],
  "161136": ["161136 JUMP IF FALSE      reg5 TO: 161148 | 161139"],
  "161139": [
      "161139 GET      reg3[1] -> reg5",
      "161143 SET      reg5 -> reg4",
      "161146 JUMP      161151",
      "161151 SET MEMORY ELEMENT IF INIT      4949 = reg4",
      "161154 PUSH MEMORY ELEMENT IF INIT      4948 -> reg5",
      "161157 GET      reg5[slice] -> reg6",
      "161163 NEW ARRAY      1 -> reg8",
      "161166 PUT      reg8[0] = 0",
      "161170 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "161174 SET      reg2 -> reg4",
      "161177 SET MEMORY ELEMENT IF INIT      4951 = reg4",
      "161180 PUSH MEMORY ELEMENT IF INIT      4951 -> reg7",
      "161183 GET      reg7[length] -> reg4",
      "161189 SET MEMORY ELEMENT IF INIT      4952 = reg4",
      "161192 PUSH MEMORY ELEMENT IF INIT      4952 -> reg7",
      "161195 JUMP IF FALSE      reg7 TO: 161324 | 161198"
  ],
  "161148": [
      "161148 SET      78012697 -> reg4",
      "161151 SET MEMORY ELEMENT IF INIT      4949 = reg4",
      "161154 PUSH MEMORY ELEMENT IF INIT      4948 -> reg5",
      "161157 GET      reg5[slice] -> reg6",
      "161163 NEW ARRAY      1 -> reg8",
      "161166 PUT      reg8[0] = 0",
      "161170 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "161174 SET      reg2 -> reg4",
      "161177 SET MEMORY ELEMENT IF INIT      4951 = reg4",
      "161180 PUSH MEMORY ELEMENT IF INIT      4951 -> reg7",
      "161183 GET      reg7[length] -> reg4",
      "161189 SET MEMORY ELEMENT IF INIT      4952 = reg4",
      "161192 PUSH MEMORY ELEMENT IF INIT      4952 -> reg7",
      "161195 JUMP IF FALSE      reg7 TO: 161324 | 161198"
  ],
  "161198": [
      "161198 GET WINDOW PROP      Math -> reg6",
      "161203 GET      reg6[floor] -> reg7",
      "161209 NEW ARRAY      1 -> reg8",
      "161212 PUSH MEMORY ELEMENT IF INIT      4950 -> reg10",
      "161215 NEW ARRAY      1 -> reg11",
      "161218 PUSH MEMORY ELEMENT IF INIT      4949 -> reg13",
      "161221 PUT      reg11[0] = reg13",
      "161225 CALL FUNCTION      PTR: reg10 MEM: reg11",
      "161229 SET      reg2 -> reg9",
      "161232 PUSH MEMORY ELEMENT IF INIT      4952 -> reg10",
      "161235 SET      reg10 -> reg11",
      "161238 SUBTRACT      reg10 - 1 -> reg10",
      "161242 SET MEMORY ELEMENT IF INIT      4952 = reg10",
      "161245 MULTIPLY      reg9 * reg11 -> reg10",
      "161249 PUT      reg8[0] = reg10",
      "161253 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "161257 SET      reg2 -> reg4",
      "161260 SET MEMORY ELEMENT IF INIT      4954 = reg4",
      "161263 PUSH MEMORY ELEMENT IF INIT      4951 -> reg4",
      "161266 PUSH MEMORY ELEMENT IF INIT      4952 -> reg7",
      "161269 GET      reg4[reg7] -> reg8",
      "161273 SET MEMORY ELEMENT IF INIT      4953 = reg8",
      "161276 PUSH MEMORY ELEMENT IF INIT      4951 -> reg4",
      "161279 PUSH MEMORY ELEMENT IF INIT      4952 -> reg7",
      "161282 PUSH MEMORY ELEMENT IF INIT      4951 -> reg11",
      "161285 PUSH MEMORY ELEMENT IF INIT      4954 -> reg8",
      "161288 GET      reg11[reg8] -> reg9",
      "161292 PUT      reg4[reg7] = reg9",
      "161296 PUSH MEMORY ELEMENT IF INIT      4951 -> reg7",
      "161299 PUSH MEMORY ELEMENT IF INIT      4954 -> reg8",
      "161302 PUSH MEMORY ELEMENT IF INIT      4953 -> reg4",
      "161305 PUT      reg7[reg8] = reg4",
      "161309 PUSH MEMORY ELEMENT IF INIT      4949 -> reg4",
      "161312 SET      1 -> reg8",
      "161315 ADD      reg4NaN-> reg8",
      "161319 SET MEMORY ELEMENT IF INIT      4949 = reg8",
      "161322 JUMP      161192",
      "161192 PUSH MEMORY ELEMENT IF INIT      4952 -> reg7",
      "161195 JUMP IF FALSE      reg7 TO: 161324 | 161198"
  ],
  "161324": [
      "161324 PUSH MEMORY ELEMENT IF INIT      4951 -> reg4",
      "161327 JUMP OR RETURN VAL      reg4"
  ],
  "161417": [
      "161417 PUSH MEMORY ELEMENT IF INIT      4964 -> reg5",
      "161420 SET      undefined -> reg4",
      "161423 STRICT NOT EQUAL      reg5 !== reg4 -> reg6",
      "161427 SET      reg6 -> reg7",
      "161430 JUMP IF FALSE      reg7 TO: 161441 | 161433"
  ],
  "161430": ["161430 JUMP IF FALSE      reg7 TO: 161441 | 161433"],
  "161433": [
      "161433 PUSH MEMORY ELEMENT IF INIT      4964 -> reg5",
      "161436 SET      reg5 -> reg4",
      "161439 JUMP      161444",
      "161444 JUMP OR RETURN VAL      reg4"
  ],
  "161441": [
      "161441 SET      null -> reg4",
      "161444 JUMP OR RETURN VAL      reg4"
  ],
  "161551": [
      "161551 PUSH MEMORY ELEMENT IF INIT      4970 -> reg5",
      "161554 SET      undefined -> reg6",
      "161557 STRICT NOT EQUAL      reg5 !== reg6 -> reg9",
      "161561 SET      reg9 -> reg4",
      "161564 JUMP IF FALSE      reg4 TO: 161575 | 161567"
  ],
  "161564": ["161564 JUMP IF FALSE      reg4 TO: 161575 | 161567"],
  "161567": [
      "161567 PUSH MEMORY ELEMENT IF INIT      4970 -> reg4",
      "161570 SET      reg4 -> reg5",
      "161573 JUMP      161578",
      "161578 JUMP OR RETURN VAL      reg5"
  ],
  "161575": [
      "161575 SET      null -> reg5",
      "161578 JUMP OR RETURN VAL      reg5"
  ],
  "161672": [
      "161672 PUSH MEMORY ELEMENT IF INIT      4977 -> reg4",
      "161675 SET      undefined -> reg7",
      "161678 STRICT EQUAL      reg4 === reg7 -> reg5",
      "161682 SET      reg5 -> reg6",
      "161685 JUMP IF FALSE      reg6 TO: 161696 | 161688"
  ],
  "161685": ["161685 JUMP IF FALSE      reg6 TO: 161696 | 161688"],
  "161688": [
      "161688 SET      undefined -> reg6",
      "161691 SET      reg6 -> reg5",
      "161694 JUMP      161708",
      "161708 SET MEMORY ELEMENT IF INIT      4978 = reg5",
      "161711 STRICT EQUAL      reg5 === null -> reg4",
      "161715 JUMP IF TRUE      reg4 TO: 161731 | 161718"
  ],
  "161696": [
      "161696 PUSH MEMORY ELEMENT IF INIT      4977 -> reg4",
      "161699 GET      reg4[audio] -> reg6",
      "161705 SET      reg6 -> reg5",
      "161708 SET MEMORY ELEMENT IF INIT      4978 = reg5",
      "161711 STRICT EQUAL      reg5 === null -> reg4",
      "161715 JUMP IF TRUE      reg4 TO: 161731 | 161718"
  ],
  "161718": [
      "161718 PUSH MEMORY ELEMENT IF INIT      4978 -> reg7",
      "161721 SET      undefined -> reg5",
      "161724 STRICT EQUAL      reg7 === reg5 -> reg10",
      "161728 SET      reg10 -> reg4",
      "161731 JUMP IF FALSE      reg4 TO: 161742 | 161734"
  ],
  "161731": ["161731 JUMP IF FALSE      reg4 TO: 161742 | 161734"],
  "161734": [
      "161734 SET      undefined -> reg4",
      "161737 SET      reg4 -> reg5",
      "161740 JUMP      161770",
      "161770 SET MEMORY ELEMENT IF INIT      4979 = reg5",
      "161773 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "161777 JUMP IF FALSE      reg4 TO: 161793 | 161780"
  ],
  "161742": [
      "161742 PUSH MEMORY ELEMENT IF INIT      4978 -> reg8",
      "161745 GET      reg8[canPlayType] -> reg6",
      "161751 NEW ARRAY      1 -> reg9",
      "161754 PUT      reg9[0] = audio/mpeg;",
      "161760 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg9",
      "161764 SET      reg2 -> reg4",
      "161767 SET      reg4 -> reg5",
      "161770 SET MEMORY ELEMENT IF INIT      4979 = reg5",
      "161773 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "161777 JUMP IF FALSE      reg4 TO: 161793 | 161780"
  ],
  "161780": [
      "161780 PUSH MEMORY ELEMENT IF INIT      4979 -> reg5",
      "161783 SET      undefined -> reg6",
      "161786 STRICT NOT EQUAL      reg5 !== reg6 -> reg7",
      "161790 SET      reg7 -> reg4",
      "161793 JUMP IF FALSE      reg4 TO: 161804 | 161796"
  ],
  "161793": ["161793 JUMP IF FALSE      reg4 TO: 161804 | 161796"],
  "161796": [
      "161796 PUSH MEMORY ELEMENT IF INIT      4979 -> reg4",
      "161799 SET      reg4 -> reg6",
      "161802 JUMP      161809",
      "161809 JUMP OR RETURN VAL      reg6"
  ],
  "161804": [
      "161804 SET      no -> reg6",
      "161809 JUMP OR RETURN VAL      reg6"
  ],
  "161901": [
      "161901 PUSH MEMORY ELEMENT IF INIT      4990 -> reg4",
      "161904 SET      undefined -> reg5",
      "161907 STRICT EQUAL      reg4 === reg5 -> reg7",
      "161911 SET      reg7 -> reg6",
      "161914 JUMP IF FALSE      reg6 TO: 161925 | 161917"
  ],
  "161914": ["161914 JUMP IF FALSE      reg6 TO: 161925 | 161917"],
  "161917": [
      "161917 SET      undefined -> reg4",
      "161920 SET      reg4 -> reg5",
      "161923 JUMP      161943",
      "161943 SET MEMORY ELEMENT IF INIT      4991 = reg5",
      "161946 STRICT NOT EQUAL      reg5 !== null -> reg7",
      "161950 JUMP IF FALSE      reg7 TO: 161966 | 161953"
  ],
  "161925": [
      "161925 PUSH MEMORY ELEMENT IF INIT      4990 -> reg4",
      "161928 GET      reg4[styleTags] -> reg6",
      "161934 GET      reg6[ms] -> reg4",
      "161940 SET      reg4 -> reg5",
      "161943 SET MEMORY ELEMENT IF INIT      4991 = reg5",
      "161946 STRICT NOT EQUAL      reg5 !== null -> reg7",
      "161950 JUMP IF FALSE      reg7 TO: 161966 | 161953"
  ],
  "161953": [
      "161953 PUSH MEMORY ELEMENT IF INIT      4991 -> reg4",
      "161956 SET      undefined -> reg6",
      "161959 STRICT NOT EQUAL      reg4 !== reg6 -> reg5",
      "161963 SET      reg5 -> reg7",
      "161966 JUMP IF FALSE      reg7 TO: 161977 | 161969"
  ],
  "161966": ["161966 JUMP IF FALSE      reg7 TO: 161977 | 161969"],
  "161969": [
      "161969 PUSH MEMORY ELEMENT IF INIT      4991 -> reg5",
      "161972 SET      reg5 -> reg4",
      "161975 JUMP      161980",
      "161980 JUMP OR RETURN VAL      reg4"
  ],
  "161977": [
      "161977 SET      0 -> reg4",
      "161980 JUMP OR RETURN VAL      reg4"
  ],
  "162074": [
      "162074 PUSH MEMORY ELEMENT IF INIT      5000 -> reg6",
      "162077 SET      undefined -> reg4",
      "162080 STRICT EQUAL      reg6 === reg4 -> reg8",
      "162084 SET      reg8 -> reg5",
      "162087 JUMP IF FALSE      reg5 TO: 162098 | 162090"
  ],
  "162087": ["162087 JUMP IF FALSE      reg5 TO: 162098 | 162090"],
  "162090": [
      "162090 SET      undefined -> reg5",
      "162093 SET      reg5 -> reg4",
      "162096 JUMP      162110",
      "162110 SET MEMORY ELEMENT IF INIT      5001 = reg4",
      "162113 STRICT EQUAL      reg4 === null -> reg5",
      "162117 JUMP IF TRUE      reg5 TO: 162133 | 162120"
  ],
  "162098": [
      "162098 PUSH MEMORY ELEMENT IF INIT      5000 -> reg6",
      "162101 GET      reg6[audio] -> reg5",
      "162107 SET      reg5 -> reg4",
      "162110 SET MEMORY ELEMENT IF INIT      5001 = reg4",
      "162113 STRICT EQUAL      reg4 === null -> reg5",
      "162117 JUMP IF TRUE      reg5 TO: 162133 | 162120"
  ],
  "162120": [
      "162120 PUSH MEMORY ELEMENT IF INIT      5001 -> reg6",
      "162123 SET      undefined -> reg7",
      "162126 STRICT EQUAL      reg6 === reg7 -> reg4",
      "162130 SET      reg4 -> reg5",
      "162133 JUMP IF FALSE      reg5 TO: 162144 | 162136"
  ],
  "162133": ["162133 JUMP IF FALSE      reg5 TO: 162144 | 162136"],
  "162136": [
      "162136 SET      undefined -> reg8",
      "162139 SET      reg8 -> reg4",
      "162142 JUMP      162172",
      "162172 SET MEMORY ELEMENT IF INIT      5002 = reg4",
      "162175 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "162179 JUMP IF FALSE      reg5 TO: 162195 | 162182"
  ],
  "162144": [
      "162144 PUSH MEMORY ELEMENT IF INIT      5001 -> reg8",
      "162147 GET      reg8[canPlayType] -> reg5",
      "162153 NEW ARRAY      1 -> reg7",
      "162156 PUT      reg7[0] = audio/wave; codecs=2",
      "162162 CALL FUNCTION      OBJ: reg8 FUNC: reg5 ARGS: reg7",
      "162166 SET      reg2 -> reg6",
      "162169 SET      reg6 -> reg4",
      "162172 SET MEMORY ELEMENT IF INIT      5002 = reg4",
      "162175 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "162179 JUMP IF FALSE      reg5 TO: 162195 | 162182"
  ],
  "162182": [
      "162182 PUSH MEMORY ELEMENT IF INIT      5002 -> reg4",
      "162185 SET      undefined -> reg6",
      "162188 STRICT NOT EQUAL      reg4 !== reg6 -> reg7",
      "162192 SET      reg7 -> reg5",
      "162195 JUMP IF FALSE      reg5 TO: 162206 | 162198"
  ],
  "162195": ["162195 JUMP IF FALSE      reg5 TO: 162206 | 162198"],
  "162198": [
      "162198 PUSH MEMORY ELEMENT IF INIT      5002 -> reg4",
      "162201 SET      reg4 -> reg6",
      "162204 JUMP      162211",
      "162211 JUMP OR RETURN VAL      reg6"
  ],
  "162206": [
      "162206 SET      no -> reg6",
      "162211 JUMP OR RETURN VAL      reg6"
  ],
  "162303": [
      "162303 PUSH MEMORY ELEMENT IF INIT      5013 -> reg6",
      "162306 SET      undefined -> reg4",
      "162309 STRICT EQUAL      reg6 === reg4 -> reg7",
      "162313 SET      reg7 -> reg5",
      "162316 JUMP IF FALSE      reg5 TO: 162327 | 162319"
  ],
  "162316": ["162316 JUMP IF FALSE      reg5 TO: 162327 | 162319"],
  "162319": [
      "162319 SET      undefined -> reg5",
      "162322 SET      reg5 -> reg4",
      "162325 JUMP      162345",
      "162345 SET MEMORY ELEMENT IF INIT      5014 = reg4",
      "162348 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "162352 JUMP IF FALSE      reg6 TO: 162368 | 162355"
  ],
  "162327": [
      "162327 PUSH MEMORY ELEMENT IF INIT      5013 -> reg5",
      "162330 GET      reg5[styleTags] -> reg7",
      "162336 GET      reg7[offset] -> reg5",
      "162342 SET      reg5 -> reg4",
      "162345 SET MEMORY ELEMENT IF INIT      5014 = reg4",
      "162348 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "162352 JUMP IF FALSE      reg6 TO: 162368 | 162355"
  ],
  "162355": [
      "162355 PUSH MEMORY ELEMENT IF INIT      5014 -> reg4",
      "162358 SET      undefined -> reg5",
      "162361 STRICT NOT EQUAL      reg4 !== reg5 -> reg12",
      "162365 SET      reg12 -> reg6",
      "162368 JUMP IF FALSE      reg6 TO: 162379 | 162371"
  ],
  "162368": ["162368 JUMP IF FALSE      reg6 TO: 162379 | 162371"],
  "162371": [
      "162371 PUSH MEMORY ELEMENT IF INIT      5014 -> reg5",
      "162374 SET      reg5 -> reg4",
      "162377 JUMP      162382",
      "162382 JUMP OR RETURN VAL      reg4"
  ],
  "162379": [
      "162379 SET      0 -> reg4",
      "162382 JUMP OR RETURN VAL      reg4"
  ],
  "162799": [
      "162799 PUSH MEMORY ELEMENT IF INIT      5034 -> reg5",
      "162802 SET      undefined -> reg6",
      "162805 STRICT EQUAL      reg5 === reg6 -> reg7",
      "162809 SET      reg7 -> reg4",
      "162812 JUMP IF FALSE      reg4 TO: 162823 | 162815"
  ],
  "162812": ["162812 JUMP IF FALSE      reg4 TO: 162823 | 162815"],
  "162815": [
      "162815 SET      undefined -> reg4",
      "162818 SET      reg4 -> reg6",
      "162821 JUMP      162835",
      "162835 SET MEMORY ELEMENT IF INIT      5035 = reg6",
      "162838 STRICT EQUAL      reg6 === null -> reg7",
      "162842 JUMP IF TRUE      reg7 TO: 162858 | 162845"
  ],
  "162823": [
      "162823 PUSH MEMORY ELEMENT IF INIT      5034 -> reg4",
      "162826 GET      reg4[video] -> reg7",
      "162832 SET      reg7 -> reg6",
      "162835 SET MEMORY ELEMENT IF INIT      5035 = reg6",
      "162838 STRICT EQUAL      reg6 === null -> reg7",
      "162842 JUMP IF TRUE      reg7 TO: 162858 | 162845"
  ],
  "162845": [
      "162845 PUSH MEMORY ELEMENT IF INIT      5035 -> reg4",
      "162848 SET      undefined -> reg5",
      "162851 STRICT EQUAL      reg4 === reg5 -> reg6",
      "162855 SET      reg6 -> reg7",
      "162858 JUMP IF FALSE      reg7 TO: 162869 | 162861"
  ],
  "162858": ["162858 JUMP IF FALSE      reg7 TO: 162869 | 162861"],
  "162861": [
      "162861 SET      undefined -> reg6",
      "162864 SET      reg6 -> reg4",
      "162867 JUMP      162897",
      "162897 SET MEMORY ELEMENT IF INIT      5036 = reg4",
      "162900 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "162904 JUMP IF FALSE      reg7 TO: 162920 | 162907"
  ],
  "162869": [
      "162869 PUSH MEMORY ELEMENT IF INIT      5035 -> reg6",
      "162872 GET      reg6[canPlayType] -> reg7",
      "162878 NEW ARRAY      1 -> reg8",
      "162881 PUT      reg8[0] = video/ogg; codecs=\"theora\"",
      "162887 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "162891 SET      reg2 -> reg5",
      "162894 SET      reg5 -> reg4",
      "162897 SET MEMORY ELEMENT IF INIT      5036 = reg4",
      "162900 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "162904 JUMP IF FALSE      reg7 TO: 162920 | 162907"
  ],
  "162907": [
      "162907 PUSH MEMORY ELEMENT IF INIT      5036 -> reg4",
      "162910 SET      undefined -> reg5",
      "162913 STRICT NOT EQUAL      reg4 !== reg5 -> reg9",
      "162917 SET      reg9 -> reg7",
      "162920 JUMP IF FALSE      reg7 TO: 162931 | 162923"
  ],
  "162920": ["162920 JUMP IF FALSE      reg7 TO: 162931 | 162923"],
  "162923": [
      "162923 PUSH MEMORY ELEMENT IF INIT      5036 -> reg5",
      "162926 SET      reg5 -> reg4",
      "162929 JUMP      162936",
      "162936 JUMP OR RETURN VAL      reg4"
  ],
  "162931": [
      "162931 SET      no -> reg4",
      "162936 JUMP OR RETURN VAL      reg4"
  ],
  "163030": [
      "163030 PUSH MEMORY ELEMENT IF INIT      5045 -> reg6",
      "163033 GET      reg6[npx] -> reg7",
      "163039 GET      reg7[locationbar] -> reg5",
      "163045 GET      reg5[visible] -> reg6",
      "163051 SET      reg6 -> reg4",
      "163054 SET MEMORY ELEMENT IF INIT      5046 = reg4",
      "163057 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "163061 JUMP IF FALSE      reg5 TO: 163077 | 163064"
  ],
  "163054": [
      "163054 SET MEMORY ELEMENT IF INIT      5046 = reg4",
      "163057 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "163061 JUMP IF FALSE      reg5 TO: 163077 | 163064"
  ],
  "163064": [
      "163064 PUSH MEMORY ELEMENT IF INIT      5046 -> reg4",
      "163067 SET      undefined -> reg6",
      "163070 STRICT NOT EQUAL      reg4 !== reg6 -> reg7",
      "163074 SET      reg7 -> reg5",
      "163077 JUMP IF FALSE      reg5 TO: 163088 | 163080"
  ],
  "163077": ["163077 JUMP IF FALSE      reg5 TO: 163088 | 163080"],
  "163080": [
      "163080 PUSH MEMORY ELEMENT IF INIT      5046 -> reg8",
      "163083 SET      reg8 -> reg4",
      "163086 JUMP      163091",
      "163091 JUMP OR RETURN VAL      reg4"
  ],
  "163088": [
      "163088 SET      false -> reg4",
      "163091 JUMP OR RETURN VAL      reg4"
  ],
  "163185": [
      "163185 PUSH MEMORY ELEMENT IF INIT      5052 -> reg5",
      "163188 GET      reg5[npx] -> reg6",
      "163194 GET      reg6[personalbar] -> reg5",
      "163200 GET      reg5[visible] -> reg6",
      "163206 SET      reg6 -> reg4",
      "163209 SET MEMORY ELEMENT IF INIT      5053 = reg4",
      "163212 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "163216 JUMP IF FALSE      reg6 TO: 163232 | 163219"
  ],
  "163209": [
      "163209 SET MEMORY ELEMENT IF INIT      5053 = reg4",
      "163212 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "163216 JUMP IF FALSE      reg6 TO: 163232 | 163219"
  ],
  "163219": [
      "163219 PUSH MEMORY ELEMENT IF INIT      5053 -> reg4",
      "163222 SET      undefined -> reg7",
      "163225 STRICT NOT EQUAL      reg4 !== reg7 -> reg5",
      "163229 SET      reg5 -> reg6",
      "163232 JUMP IF FALSE      reg6 TO: 163243 | 163235"
  ],
  "163232": ["163232 JUMP IF FALSE      reg6 TO: 163243 | 163235"],
  "163235": [
      "163235 PUSH MEMORY ELEMENT IF INIT      5053 -> reg5",
      "163238 SET      reg5 -> reg4",
      "163241 JUMP      163246",
      "163246 JUMP OR RETURN VAL      reg4"
  ],
  "163243": [
      "163243 SET      false -> reg4",
      "163246 JUMP OR RETURN VAL      reg4"
  ],
  "163338": [
      "163338 PUSH MEMORY ELEMENT IF INIT      5061 -> reg7",
      "163341 SET      undefined -> reg4",
      "163344 STRICT EQUAL      reg7 === reg4 -> reg8",
      "163348 SET      reg8 -> reg5",
      "163351 JUMP IF FALSE      reg5 TO: 163362 | 163354"
  ],
  "163351": ["163351 JUMP IF FALSE      reg5 TO: 163362 | 163354"],
  "163354": [
      "163354 SET      undefined -> reg5",
      "163357 SET      reg5 -> reg4",
      "163360 JUMP      163380",
      "163380 SET MEMORY ELEMENT IF INIT      5062 = reg4",
      "163383 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "163387 JUMP IF FALSE      reg7 TO: 163403 | 163390"
  ],
  "163362": [
      "163362 PUSH MEMORY ELEMENT IF INIT      5061 -> reg5",
      "163365 GET      reg5[styleTags] -> reg6",
      "163371 GET      reg6[overscroll] -> reg5",
      "163377 SET      reg5 -> reg4",
      "163380 SET MEMORY ELEMENT IF INIT      5062 = reg4",
      "163383 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "163387 JUMP IF FALSE      reg7 TO: 163403 | 163390"
  ],
  "163390": [
      "163390 PUSH MEMORY ELEMENT IF INIT      5062 -> reg4",
      "163393 SET      undefined -> reg8",
      "163396 STRICT NOT EQUAL      reg4 !== reg8 -> reg6",
      "163400 SET      reg6 -> reg7",
      "163403 JUMP IF FALSE      reg7 TO: 163414 | 163406"
  ],
  "163403": ["163403 JUMP IF FALSE      reg7 TO: 163414 | 163406"],
  "163406": [
      "163406 PUSH MEMORY ELEMENT IF INIT      5062 -> reg5",
      "163409 SET      reg5 -> reg4",
      "163412 JUMP      163417",
      "163417 JUMP OR RETURN VAL      reg4"
  ],
  "163414": [
      "163414 SET      0 -> reg4",
      "163417 JUMP OR RETURN VAL      reg4"
  ],
  "163509": [
      "163509 PUSH MEMORY ELEMENT IF INIT      5071 -> reg4",
      "163512 SET      undefined -> reg5",
      "163515 STRICT EQUAL      reg4 === reg5 -> reg9",
      "163519 SET      reg9 -> reg7",
      "163522 JUMP IF FALSE      reg7 TO: 163533 | 163525"
  ],
  "163522": ["163522 JUMP IF FALSE      reg7 TO: 163533 | 163525"],
  "163525": [
      "163525 SET      undefined -> reg6",
      "163528 SET      reg6 -> reg5",
      "163531 JUMP      163551",
      "163551 SET MEMORY ELEMENT IF INIT      5072 = reg5",
      "163554 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "163558 JUMP IF FALSE      reg4 TO: 163574 | 163561"
  ],
  "163533": [
      "163533 PUSH MEMORY ELEMENT IF INIT      5071 -> reg4",
      "163536 GET      reg4[styleTags] -> reg6",
      "163542 GET      reg6[column] -> reg7",
      "163548 SET      reg7 -> reg5",
      "163551 SET MEMORY ELEMENT IF INIT      5072 = reg5",
      "163554 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "163558 JUMP IF FALSE      reg4 TO: 163574 | 163561"
  ],
  "163561": [
      "163561 PUSH MEMORY ELEMENT IF INIT      5072 -> reg5",
      "163564 SET      undefined -> reg8",
      "163567 STRICT NOT EQUAL      reg5 !== reg8 -> reg6",
      "163571 SET      reg6 -> reg4",
      "163574 JUMP IF FALSE      reg4 TO: 163585 | 163577"
  ],
  "163574": ["163574 JUMP IF FALSE      reg4 TO: 163585 | 163577"],
  "163577": [
      "163577 PUSH MEMORY ELEMENT IF INIT      5072 -> reg4",
      "163580 SET      reg4 -> reg5",
      "163583 JUMP      163588",
      "163588 JUMP OR RETURN VAL      reg5"
  ],
  "163585": [
      "163585 SET      0 -> reg5",
      "163588 JUMP OR RETURN VAL      reg5"
  ],
  "163682": [
      "163682 PUSH MEMORY ELEMENT IF INIT      5081 -> reg5",
      "163685 SET      undefined -> reg4",
      "163688 STRICT EQUAL      reg5 === reg4 -> reg6",
      "163692 SET      reg6 -> reg7",
      "163695 JUMP IF FALSE      reg7 TO: 163706 | 163698"
  ],
  "163695": ["163695 JUMP IF FALSE      reg7 TO: 163706 | 163698"],
  "163698": [
      "163698 SET      undefined -> reg5",
      "163701 SET      reg5 -> reg4",
      "163704 JUMP      163718",
      "163718 SET MEMORY ELEMENT IF INIT      5082 = reg4",
      "163721 STRICT EQUAL      reg4 === null -> reg6",
      "163725 JUMP IF TRUE      reg6 TO: 163741 | 163728"
  ],
  "163706": [
      "163706 PUSH MEMORY ELEMENT IF INIT      5081 -> reg5",
      "163709 GET      reg5[audio] -> reg6",
      "163715 SET      reg6 -> reg4",
      "163718 SET MEMORY ELEMENT IF INIT      5082 = reg4",
      "163721 STRICT EQUAL      reg4 === null -> reg6",
      "163725 JUMP IF TRUE      reg6 TO: 163741 | 163728"
  ],
  "163728": [
      "163728 PUSH MEMORY ELEMENT IF INIT      5082 -> reg4",
      "163731 SET      undefined -> reg5",
      "163734 STRICT EQUAL      reg4 === reg5 -> reg10",
      "163738 SET      reg10 -> reg6",
      "163741 JUMP IF FALSE      reg6 TO: 163752 | 163744"
  ],
  "163741": ["163741 JUMP IF FALSE      reg6 TO: 163752 | 163744"],
  "163744": [
      "163744 SET      undefined -> reg5",
      "163747 SET      reg5 -> reg4",
      "163750 JUMP      163780",
      "163780 SET MEMORY ELEMENT IF INIT      5083 = reg4",
      "163783 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "163787 JUMP IF FALSE      reg5 TO: 163803 | 163790"
  ],
  "163752": [
      "163752 PUSH MEMORY ELEMENT IF INIT      5082 -> reg6",
      "163755 GET      reg6[canPlayType] -> reg7",
      "163761 NEW ARRAY      1 -> reg10",
      "163764 PUT      reg10[0] = audio/mp4; codecs=\"mp4a.40.2\"",
      "163770 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg10",
      "163774 SET      reg2 -> reg5",
      "163777 SET      reg5 -> reg4",
      "163780 SET MEMORY ELEMENT IF INIT      5083 = reg4",
      "163783 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "163787 JUMP IF FALSE      reg5 TO: 163803 | 163790"
  ],
  "163790": [
      "163790 PUSH MEMORY ELEMENT IF INIT      5083 -> reg4",
      "163793 SET      undefined -> reg7",
      "163796 STRICT NOT EQUAL      reg4 !== reg7 -> reg9",
      "163800 SET      reg9 -> reg5",
      "163803 JUMP IF FALSE      reg5 TO: 163814 | 163806"
  ],
  "163803": ["163803 JUMP IF FALSE      reg5 TO: 163814 | 163806"],
  "163806": [
      "163806 PUSH MEMORY ELEMENT IF INIT      5083 -> reg8",
      "163809 SET      reg8 -> reg4",
      "163812 JUMP      163819",
      "163819 JUMP OR RETURN VAL      reg4"
  ],
  "163814": [
      "163814 SET      no -> reg4",
      "163819 JUMP OR RETURN VAL      reg4"
  ],
  "164012": [
      "164012 SET      true -> reg4",
      "164015 JUMP      164020",
      "164020 JUMP OR RETURN VAL      reg4"
  ],
  "164017": [
      "164017 SET      null -> reg4",
      "164020 JUMP OR RETURN VAL      reg4"
  ],
  "164233": [
      "164233 PUSH MEMORY ELEMENT IF INIT      5106 -> reg5",
      "164236 SET      undefined -> reg6",
      "164239 STRICT EQUAL      reg5 === reg6 -> reg7",
      "164243 SET      reg7 -> reg4",
      "164246 JUMP IF FALSE      reg4 TO: 164257 | 164249"
  ],
  "164246": ["164246 JUMP IF FALSE      reg4 TO: 164257 | 164249"],
  "164249": [
      "164249 SET      undefined -> reg5",
      "164252 SET      reg5 -> reg6",
      "164255 JUMP      164275",
      "164275 SET MEMORY ELEMENT IF INIT      5107 = reg6",
      "164278 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "164282 JUMP IF FALSE      reg4 TO: 164298 | 164285"
  ],
  "164257": [
      "164257 PUSH MEMORY ELEMENT IF INIT      5106 -> reg4",
      "164260 GET      reg4[styleTags] -> reg9",
      "164266 GET      reg9[shape] -> reg4",
      "164272 SET      reg4 -> reg6",
      "164275 SET MEMORY ELEMENT IF INIT      5107 = reg6",
      "164278 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "164282 JUMP IF FALSE      reg4 TO: 164298 | 164285"
  ],
  "164285": [
      "164285 PUSH MEMORY ELEMENT IF INIT      5107 -> reg5",
      "164288 SET      undefined -> reg6",
      "164291 STRICT NOT EQUAL      reg5 !== reg6 -> reg7",
      "164295 SET      reg7 -> reg4",
      "164298 JUMP IF FALSE      reg4 TO: 164309 | 164301"
  ],
  "164298": ["164298 JUMP IF FALSE      reg4 TO: 164309 | 164301"],
  "164301": [
      "164301 PUSH MEMORY ELEMENT IF INIT      5107 -> reg4",
      "164304 SET      reg4 -> reg6",
      "164307 JUMP      164312",
      "164312 JUMP OR RETURN VAL      reg6"
  ],
  "164309": [
      "164309 SET      0 -> reg6",
      "164312 JUMP OR RETURN VAL      reg6"
  ],
  "164404": [
      "164404 PUSH MEMORY ELEMENT IF INIT      5116 -> reg7",
      "164407 SET      undefined -> reg5",
      "164410 STRICT EQUAL      reg7 === reg5 -> reg4",
      "164414 SET      reg4 -> reg6",
      "164417 JUMP IF FALSE      reg6 TO: 164428 | 164420"
  ],
  "164417": ["164417 JUMP IF FALSE      reg6 TO: 164428 | 164420"],
  "164420": [
      "164420 SET      undefined -> reg6",
      "164423 SET      reg6 -> reg4",
      "164426 JUMP      164446",
      "164446 SET MEMORY ELEMENT IF INIT      5117 = reg4",
      "164449 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "164453 JUMP IF FALSE      reg6 TO: 164469 | 164456"
  ],
  "164428": [
      "164428 PUSH MEMORY ELEMENT IF INIT      5116 -> reg5",
      "164431 GET      reg5[styleTags] -> reg8",
      "164437 GET      reg8[max] -> reg6",
      "164443 SET      reg6 -> reg4",
      "164446 SET MEMORY ELEMENT IF INIT      5117 = reg4",
      "164449 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "164453 JUMP IF FALSE      reg6 TO: 164469 | 164456"
  ],
  "164456": [
      "164456 PUSH MEMORY ELEMENT IF INIT      5117 -> reg5",
      "164459 SET      undefined -> reg4",
      "164462 STRICT NOT EQUAL      reg5 !== reg4 -> reg8",
      "164466 SET      reg8 -> reg6",
      "164469 JUMP IF FALSE      reg6 TO: 164480 | 164472"
  ],
  "164469": ["164469 JUMP IF FALSE      reg6 TO: 164480 | 164472"],
  "164472": [
      "164472 PUSH MEMORY ELEMENT IF INIT      5117 -> reg4",
      "164475 SET      reg4 -> reg7",
      "164478 JUMP      164483",
      "164483 JUMP OR RETURN VAL      reg7"
  ],
  "164480": [
      "164480 SET      0 -> reg7",
      "164483 JUMP OR RETURN VAL      reg7"
  ],
  "164575": [
      "164575 PUSH MEMORY ELEMENT IF INIT      5126 -> reg4",
      "164578 SET      undefined -> reg6",
      "164581 STRICT EQUAL      reg4 === reg6 -> reg7",
      "164585 SET      reg7 -> reg5",
      "164588 JUMP IF FALSE      reg5 TO: 164599 | 164591"
  ],
  "164588": ["164588 JUMP IF FALSE      reg5 TO: 164599 | 164591"],
  "164591": [
      "164591 SET      undefined -> reg5",
      "164594 SET      reg5 -> reg4",
      "164597 JUMP      164617",
      "164617 SET MEMORY ELEMENT IF INIT      5127 = reg4",
      "164620 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "164624 JUMP IF FALSE      reg5 TO: 164640 | 164627"
  ],
  "164599": [
      "164599 PUSH MEMORY ELEMENT IF INIT      5126 -> reg6",
      "164602 GET      reg6[styleTags] -> reg5",
      "164608 GET      reg5[inset] -> reg6",
      "164614 SET      reg6 -> reg4",
      "164617 SET MEMORY ELEMENT IF INIT      5127 = reg4",
      "164620 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "164624 JUMP IF FALSE      reg5 TO: 164640 | 164627"
  ],
  "164627": [
      "164627 PUSH MEMORY ELEMENT IF INIT      5127 -> reg6",
      "164630 SET      undefined -> reg7",
      "164633 STRICT NOT EQUAL      reg6 !== reg7 -> reg8",
      "164637 SET      reg8 -> reg5",
      "164640 JUMP IF FALSE      reg5 TO: 164651 | 164643"
  ],
  "164640": ["164640 JUMP IF FALSE      reg5 TO: 164651 | 164643"],
  "164643": [
      "164643 PUSH MEMORY ELEMENT IF INIT      5127 -> reg5",
      "164646 SET      reg5 -> reg4",
      "164649 JUMP      164654",
      "164654 JUMP OR RETURN VAL      reg4"
  ],
  "164651": [
      "164651 SET      0 -> reg4",
      "164654 JUMP OR RETURN VAL      reg4"
  ],
  "164894": [
      "164894 SET I      null",
      "164896 PUSH F.K      -> reg9",
      "164898 VOID F",
      "164899 SET MEMORY ELEMENT      0 = reg9",
      "164902 JUMP OR RETURN VAL      false"
  ],
  "164999": [
      "164999 PUSH MEMORY ELEMENT IF INIT      5145 -> reg6",
      "165002 SET      undefined -> reg8",
      "165005 STRICT EQUAL      reg6 === reg8 -> reg4",
      "165009 SET      reg4 -> reg5",
      "165012 JUMP IF FALSE      reg5 TO: 165023 | 165015"
  ],
  "165012": ["165012 JUMP IF FALSE      reg5 TO: 165023 | 165015"],
  "165015": [
      "165015 SET      undefined -> reg5",
      "165018 SET      reg5 -> reg4",
      "165021 JUMP      165035",
      "165035 SET MEMORY ELEMENT IF INIT      5146 = reg4",
      "165038 STRICT EQUAL      reg4 === null -> reg5",
      "165042 JUMP IF TRUE      reg5 TO: 165058 | 165045"
  ],
  "165023": [
      "165023 PUSH MEMORY ELEMENT IF INIT      5145 -> reg5",
      "165026 GET      reg5[video] -> reg6",
      "165032 SET      reg6 -> reg4",
      "165035 SET MEMORY ELEMENT IF INIT      5146 = reg4",
      "165038 STRICT EQUAL      reg4 === null -> reg5",
      "165042 JUMP IF TRUE      reg5 TO: 165058 | 165045"
  ],
  "165045": [
      "165045 PUSH MEMORY ELEMENT IF INIT      5146 -> reg4",
      "165048 SET      undefined -> reg7",
      "165051 STRICT EQUAL      reg4 === reg7 -> reg6",
      "165055 SET      reg6 -> reg5",
      "165058 JUMP IF FALSE      reg5 TO: 165069 | 165061"
  ],
  "165058": ["165058 JUMP IF FALSE      reg5 TO: 165069 | 165061"],
  "165061": [
      "165061 SET      undefined -> reg5",
      "165064 SET      reg5 -> reg4",
      "165067 JUMP      165097",
      "165097 SET MEMORY ELEMENT IF INIT      5147 = reg4",
      "165100 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "165104 JUMP IF FALSE      reg7 TO: 165120 | 165107"
  ],
  "165069": [
      "165069 PUSH MEMORY ELEMENT IF INIT      5146 -> reg6",
      "165072 GET      reg6[canPlayType] -> reg8",
      "165078 NEW ARRAY      1 -> reg7",
      "165081 PUT      reg7[0] = video/webm; codecs=\"vorbis,vp9\"",
      "165087 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg7",
      "165091 SET      reg2 -> reg5",
      "165094 SET      reg5 -> reg4",
      "165097 SET MEMORY ELEMENT IF INIT      5147 = reg4",
      "165100 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "165104 JUMP IF FALSE      reg7 TO: 165120 | 165107"
  ],
  "165107": [
      "165107 PUSH MEMORY ELEMENT IF INIT      5147 -> reg4",
      "165110 SET      undefined -> reg5",
      "165113 STRICT NOT EQUAL      reg4 !== reg5 -> reg8",
      "165117 SET      reg8 -> reg7",
      "165120 JUMP IF FALSE      reg7 TO: 165131 | 165123"
  ],
  "165120": ["165120 JUMP IF FALSE      reg7 TO: 165131 | 165123"],
  "165123": [
      "165123 PUSH MEMORY ELEMENT IF INIT      5147 -> reg5",
      "165126 SET      reg5 -> reg4",
      "165129 JUMP      165136",
      "165136 JUMP OR RETURN VAL      reg4"
  ],
  "165131": [
      "165131 SET      no -> reg4",
      "165136 JUMP OR RETURN VAL      reg4"
  ],
  "165536": [
      "165536 GET      reg3[1] -> reg4",
      "165540 GET WINDOW PROP      undefined -> reg6",
      "165545 STRICT NOT EQUAL      reg4 !== reg6 -> reg9",
      "165549 SET      reg9 -> reg10",
      "165552 JUMP IF FALSE      reg10 TO: 165564 | 165555"
  ],
  "165552": ["165552 JUMP IF FALSE      reg10 TO: 165564 | 165555"],
  "165555": [
      "165555 GET      reg3[1] -> reg5",
      "165559 SET      reg5 -> reg4",
      "165562 JUMP      165567",
      "165567 SET MEMORY ELEMENT IF INIT      5171 = reg4",
      "165570 PUSH MEMORY ELEMENT IF INIT      5170 -> reg5",
      "165573 GET      reg5[slice] -> reg6",
      "165579 NEW ARRAY      1 -> reg7",
      "165582 PUT      reg7[0] = 0",
      "165586 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "165590 SET      reg2 -> reg4",
      "165593 SET MEMORY ELEMENT IF INIT      5173 = reg4",
      "165596 PUSH MEMORY ELEMENT IF INIT      5173 -> reg4",
      "165599 GET      reg4[length] -> reg7",
      "165605 SET MEMORY ELEMENT IF INIT      5174 = reg7",
      "165608 PUSH MEMORY ELEMENT IF INIT      5174 -> reg4",
      "165611 JUMP IF FALSE      reg4 TO: 165740 | 165614"
  ],
  "165564": [
      "165564 SET      78012697 -> reg4",
      "165567 SET MEMORY ELEMENT IF INIT      5171 = reg4",
      "165570 PUSH MEMORY ELEMENT IF INIT      5170 -> reg5",
      "165573 GET      reg5[slice] -> reg6",
      "165579 NEW ARRAY      1 -> reg7",
      "165582 PUT      reg7[0] = 0",
      "165586 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "165590 SET      reg2 -> reg4",
      "165593 SET MEMORY ELEMENT IF INIT      5173 = reg4",
      "165596 PUSH MEMORY ELEMENT IF INIT      5173 -> reg4",
      "165599 GET      reg4[length] -> reg7",
      "165605 SET MEMORY ELEMENT IF INIT      5174 = reg7",
      "165608 PUSH MEMORY ELEMENT IF INIT      5174 -> reg4",
      "165611 JUMP IF FALSE      reg4 TO: 165740 | 165614"
  ],
  "165614": [
      "165614 GET WINDOW PROP      Math -> reg8",
      "165619 GET      reg8[floor] -> reg7",
      "165625 NEW ARRAY      1 -> reg10",
      "165628 PUSH MEMORY ELEMENT IF INIT      5172 -> reg9",
      "165631 NEW ARRAY      1 -> reg4",
      "165634 PUSH MEMORY ELEMENT IF INIT      5171 -> reg12",
      "165637 PUT      reg4[0] = reg12",
      "165641 CALL FUNCTION      PTR: reg9 MEM: reg4",
      "165645 SET      reg2 -> reg11",
      "165648 PUSH MEMORY ELEMENT IF INIT      5174 -> reg4",
      "165651 SET      reg4 -> reg9",
      "165654 SUBTRACT      reg4 - 1 -> reg4",
      "165658 SET MEMORY ELEMENT IF INIT      5174 = reg4",
      "165661 MULTIPLY      reg11 * reg9 -> reg4",
      "165665 PUT      reg10[0] = reg4",
      "165669 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg10",
      "165673 SET      reg2 -> reg6",
      "165676 SET MEMORY ELEMENT IF INIT      5176 = reg6",
      "165679 PUSH MEMORY ELEMENT IF INIT      5173 -> reg6",
      "165682 PUSH MEMORY ELEMENT IF INIT      5174 -> reg10",
      "165685 GET      reg6[reg10] -> reg4",
      "165689 SET MEMORY ELEMENT IF INIT      5175 = reg4",
      "165692 PUSH MEMORY ELEMENT IF INIT      5173 -> reg4",
      "165695 PUSH MEMORY ELEMENT IF INIT      5174 -> reg7",
      "165698 PUSH MEMORY ELEMENT IF INIT      5173 -> reg6",
      "165701 PUSH MEMORY ELEMENT IF INIT      5176 -> reg10",
      "165704 GET      reg6[reg10] -> reg9",
      "165708 PUT      reg4[reg7] = reg9",
      "165712 PUSH MEMORY ELEMENT IF INIT      5173 -> reg4",
      "165715 PUSH MEMORY ELEMENT IF INIT      5176 -> reg7",
      "165718 PUSH MEMORY ELEMENT IF INIT      5175 -> reg9",
      "165721 PUT      reg4[reg7] = reg9",
      "165725 PUSH MEMORY ELEMENT IF INIT      5171 -> reg4",
      "165728 SET      1 -> reg7",
      "165731 ADD      reg4NaN-> reg7",
      "165735 SET MEMORY ELEMENT IF INIT      5171 = reg7",
      "165738 JUMP      165608",
      "165608 PUSH MEMORY ELEMENT IF INIT      5174 -> reg4",
      "165611 JUMP IF FALSE      reg4 TO: 165740 | 165614"
  ],
  "165740": [
      "165740 PUSH MEMORY ELEMENT IF INIT      5173 -> reg7",
      "165743 JUMP OR RETURN VAL      reg7"
  ],
  "166222": [
      "166222 PUSH MEMORY ELEMENT IF INIT      5203 -> reg4",
      "166225 SET      undefined -> reg6",
      "166228 STRICT EQUAL      reg4 === reg6 -> reg7",
      "166232 SET      reg7 -> reg5",
      "166235 JUMP IF FALSE      reg5 TO: 166246 | 166238"
  ],
  "166235": ["166235 JUMP IF FALSE      reg5 TO: 166246 | 166238"],
  "166238": [
      "166238 SET      undefined -> reg5",
      "166241 SET      reg5 -> reg4",
      "166244 JUMP      166264",
      "166264 SET MEMORY ELEMENT IF INIT      5204 = reg4",
      "166267 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "166271 JUMP IF FALSE      reg5 TO: 166287 | 166274"
  ],
  "166246": [
      "166246 PUSH MEMORY ELEMENT IF INIT      5203 -> reg6",
      "166249 GET      reg6[styleTags] -> reg7",
      "166255 GET      reg7[transition] -> reg5",
      "166261 SET      reg5 -> reg4",
      "166264 SET MEMORY ELEMENT IF INIT      5204 = reg4",
      "166267 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "166271 JUMP IF FALSE      reg5 TO: 166287 | 166274"
  ],
  "166274": [
      "166274 PUSH MEMORY ELEMENT IF INIT      5204 -> reg6",
      "166277 SET      undefined -> reg8",
      "166280 STRICT NOT EQUAL      reg6 !== reg8 -> reg4",
      "166284 SET      reg4 -> reg5",
      "166287 JUMP IF FALSE      reg5 TO: 166298 | 166290"
  ],
  "166287": ["166287 JUMP IF FALSE      reg5 TO: 166298 | 166290"],
  "166290": [
      "166290 PUSH MEMORY ELEMENT IF INIT      5204 -> reg5",
      "166293 SET      reg5 -> reg4",
      "166296 JUMP      166301",
      "166301 JUMP OR RETURN VAL      reg4"
  ],
  "166298": [
      "166298 SET      0 -> reg4",
      "166301 JUMP OR RETURN VAL      reg4"
  ],
  "166672": [
      "166672 PUSH MEMORY ELEMENT IF INIT      5222 -> reg6",
      "166675 SET      undefined -> reg4",
      "166678 STRICT EQUAL      reg6 === reg4 -> reg7",
      "166682 SET      reg7 -> reg5",
      "166685 JUMP IF FALSE      reg5 TO: 166696 | 166688"
  ],
  "166685": ["166685 JUMP IF FALSE      reg5 TO: 166696 | 166688"],
  "166688": [
      "166688 SET      undefined -> reg5",
      "166691 SET      reg5 -> reg4",
      "166694 JUMP      166714",
      "166714 SET MEMORY ELEMENT IF INIT      5223 = reg4",
      "166717 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "166721 JUMP IF FALSE      reg5 TO: 166737 | 166724"
  ],
  "166696": [
      "166696 PUSH MEMORY ELEMENT IF INIT      5222 -> reg7",
      "166699 GET      reg7[styleTags] -> reg5",
      "166705 GET      reg5[moz] -> reg6",
      "166711 SET      reg6 -> reg4",
      "166714 SET MEMORY ELEMENT IF INIT      5223 = reg4",
      "166717 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "166721 JUMP IF FALSE      reg5 TO: 166737 | 166724"
  ],
  "166724": [
      "166724 PUSH MEMORY ELEMENT IF INIT      5223 -> reg4",
      "166727 SET      undefined -> reg6",
      "166730 STRICT NOT EQUAL      reg4 !== reg6 -> reg8",
      "166734 SET      reg8 -> reg5",
      "166737 JUMP IF FALSE      reg5 TO: 166748 | 166740"
  ],
  "166737": ["166737 JUMP IF FALSE      reg5 TO: 166748 | 166740"],
  "166740": [
      "166740 PUSH MEMORY ELEMENT IF INIT      5223 -> reg5",
      "166743 SET      reg5 -> reg4",
      "166746 JUMP      166751",
      "166751 JUMP OR RETURN VAL      reg4"
  ],
  "166748": [
      "166748 SET      0 -> reg4",
      "166751 JUMP OR RETURN VAL      reg4"
  ],
  "167268": [
      "167268 PUSH MEMORY ELEMENT IF INIT      5248 -> reg4",
      "167271 SET      undefined -> reg5",
      "167274 STRICT EQUAL      reg4 === reg5 -> reg6",
      "167278 SET      reg6 -> reg7",
      "167281 JUMP IF FALSE      reg7 TO: 167292 | 167284"
  ],
  "167281": ["167281 JUMP IF FALSE      reg7 TO: 167292 | 167284"],
  "167284": [
      "167284 SET      undefined -> reg6",
      "167287 SET      reg6 -> reg5",
      "167290 JUMP      167304",
      "167304 SET MEMORY ELEMENT IF INIT      5249 = reg5",
      "167307 STRICT EQUAL      reg5 === null -> reg4",
      "167311 JUMP IF TRUE      reg4 TO: 167327 | 167314"
  ],
  "167292": [
      "167292 PUSH MEMORY ELEMENT IF INIT      5248 -> reg4",
      "167295 GET      reg4[video] -> reg7",
      "167301 SET      reg7 -> reg5",
      "167304 SET MEMORY ELEMENT IF INIT      5249 = reg5",
      "167307 STRICT EQUAL      reg5 === null -> reg4",
      "167311 JUMP IF TRUE      reg4 TO: 167327 | 167314"
  ],
  "167314": [
      "167314 PUSH MEMORY ELEMENT IF INIT      5249 -> reg5",
      "167317 SET      undefined -> reg6",
      "167320 STRICT EQUAL      reg5 === reg6 -> reg8",
      "167324 SET      reg8 -> reg4",
      "167327 JUMP IF FALSE      reg4 TO: 167338 | 167330"
  ],
  "167327": ["167327 JUMP IF FALSE      reg4 TO: 167338 | 167330"],
  "167330": [
      "167330 SET      undefined -> reg4",
      "167333 SET      reg4 -> reg5",
      "167336 JUMP      167366",
      "167366 SET MEMORY ELEMENT IF INIT      5250 = reg5",
      "167369 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "167373 JUMP IF FALSE      reg4 TO: 167389 | 167376"
  ],
  "167338": [
      "167338 PUSH MEMORY ELEMENT IF INIT      5249 -> reg6",
      "167341 GET      reg6[canPlayType] -> reg7",
      "167347 NEW ARRAY      1 -> reg9",
      "167350 PUT      reg9[0] = video/mp4; codecs=\"mp4v.20.8, mp4a.40.2\"",
      "167356 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "167360 SET      reg2 -> reg4",
      "167363 SET      reg4 -> reg5",
      "167366 SET MEMORY ELEMENT IF INIT      5250 = reg5",
      "167369 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "167373 JUMP IF FALSE      reg4 TO: 167389 | 167376"
  ],
  "167376": [
      "167376 PUSH MEMORY ELEMENT IF INIT      5250 -> reg5",
      "167379 SET      undefined -> reg7",
      "167382 STRICT NOT EQUAL      reg5 !== reg7 -> reg8",
      "167386 SET      reg8 -> reg4",
      "167389 JUMP IF FALSE      reg4 TO: 167400 | 167392"
  ],
  "167389": ["167389 JUMP IF FALSE      reg4 TO: 167400 | 167392"],
  "167392": [
      "167392 PUSH MEMORY ELEMENT IF INIT      5250 -> reg4",
      "167395 SET      reg4 -> reg5",
      "167398 JUMP      167405",
      "167405 JUMP OR RETURN VAL      reg5"
  ],
  "167400": [
      "167400 SET      no -> reg5",
      "167405 JUMP OR RETURN VAL      reg5"
  ],
  "167607": [
      "167607 PUSH MEMORY ELEMENT IF INIT      5263 -> reg5",
      "167610 SET      undefined -> reg6",
      "167613 STRICT NOT EQUAL      reg5 !== reg6 -> reg8",
      "167617 SET      reg8 -> reg4",
      "167620 JUMP IF FALSE      reg4 TO: 167631 | 167623"
  ],
  "167620": ["167620 JUMP IF FALSE      reg4 TO: 167631 | 167623"],
  "167623": [
      "167623 PUSH MEMORY ELEMENT IF INIT      5263 -> reg4",
      "167626 SET      reg4 -> reg6",
      "167629 JUMP      167636",
      "167636 JUMP OR RETURN VAL      reg6"
  ],
  "167631": [
      "167631 SET      not supported -> reg6",
      "167636 JUMP OR RETURN VAL      reg6"
  ],
  "167730": [
      "167730 PUSH MEMORY ELEMENT IF INIT      5270 -> reg5",
      "167733 SET      undefined -> reg6",
      "167736 STRICT EQUAL      reg5 === reg6 -> reg7",
      "167740 SET      reg7 -> reg4",
      "167743 JUMP IF FALSE      reg4 TO: 167754 | 167746"
  ],
  "167743": ["167743 JUMP IF FALSE      reg4 TO: 167754 | 167746"],
  "167746": [
      "167746 SET      undefined -> reg6",
      "167749 SET      reg6 -> reg5",
      "167752 JUMP      167766",
      "167766 SET MEMORY ELEMENT IF INIT      5271 = reg5",
      "167769 STRICT EQUAL      reg5 === null -> reg4",
      "167773 JUMP IF TRUE      reg4 TO: 167789 | 167776"
  ],
  "167754": [
      "167754 PUSH MEMORY ELEMENT IF INIT      5270 -> reg4",
      "167757 GET      reg4[video] -> reg6",
      "167763 SET      reg6 -> reg5",
      "167766 SET MEMORY ELEMENT IF INIT      5271 = reg5",
      "167769 STRICT EQUAL      reg5 === null -> reg4",
      "167773 JUMP IF TRUE      reg4 TO: 167789 | 167776"
  ],
  "167776": [
      "167776 PUSH MEMORY ELEMENT IF INIT      5271 -> reg5",
      "167779 SET      undefined -> reg6",
      "167782 STRICT EQUAL      reg5 === reg6 -> reg7",
      "167786 SET      reg7 -> reg4",
      "167789 JUMP IF FALSE      reg4 TO: 167800 | 167792"
  ],
  "167789": ["167789 JUMP IF FALSE      reg4 TO: 167800 | 167792"],
  "167792": [
      "167792 SET      undefined -> reg4",
      "167795 SET      reg4 -> reg5",
      "167798 JUMP      167828",
      "167828 SET MEMORY ELEMENT IF INIT      5272 = reg5",
      "167831 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "167835 JUMP IF FALSE      reg4 TO: 167851 | 167838"
  ],
  "167800": [
      "167800 PUSH MEMORY ELEMENT IF INIT      5271 -> reg6",
      "167803 GET      reg6[canPlayType] -> reg8",
      "167809 NEW ARRAY      1 -> reg7",
      "167812 PUT      reg7[0] = video/mp4; codecs=\"avc1.64001E, mp4a.40.2\"",
      "167818 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg7",
      "167822 SET      reg2 -> reg4",
      "167825 SET      reg4 -> reg5",
      "167828 SET MEMORY ELEMENT IF INIT      5272 = reg5",
      "167831 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "167835 JUMP IF FALSE      reg4 TO: 167851 | 167838"
  ],
  "167838": [
      "167838 PUSH MEMORY ELEMENT IF INIT      5272 -> reg5",
      "167841 SET      undefined -> reg7",
      "167844 STRICT NOT EQUAL      reg5 !== reg7 -> reg8",
      "167848 SET      reg8 -> reg4",
      "167851 JUMP IF FALSE      reg4 TO: 167862 | 167854"
  ],
  "167851": ["167851 JUMP IF FALSE      reg4 TO: 167862 | 167854"],
  "167854": [
      "167854 PUSH MEMORY ELEMENT IF INIT      5272 -> reg4",
      "167857 SET      reg4 -> reg5",
      "167860 JUMP      167867",
      "167867 JUMP OR RETURN VAL      reg5"
  ],
  "167862": [
      "167862 SET      no -> reg5",
      "167867 JUMP OR RETURN VAL      reg5"
  ],
  "167959": [
      "167959 PUSH MEMORY ELEMENT IF INIT      5283 -> reg4",
      "167962 SET      undefined -> reg6",
      "167965 STRICT EQUAL      reg4 === reg6 -> reg8",
      "167969 SET      reg8 -> reg5",
      "167972 JUMP IF FALSE      reg5 TO: 167983 | 167975"
  ],
  "167972": ["167972 JUMP IF FALSE      reg5 TO: 167983 | 167975"],
  "167975": [
      "167975 SET      undefined -> reg4",
      "167978 SET      reg4 -> reg6",
      "167981 JUMP      168001",
      "168001 SET MEMORY ELEMENT IF INIT      5284 = reg6",
      "168004 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "168008 JUMP IF FALSE      reg4 TO: 168024 | 168011"
  ],
  "167983": [
      "167983 PUSH MEMORY ELEMENT IF INIT      5283 -> reg5",
      "167986 GET      reg5[styleTags] -> reg4",
      "167992 GET      reg4[scroll] -> reg5",
      "167998 SET      reg5 -> reg6",
      "168001 SET MEMORY ELEMENT IF INIT      5284 = reg6",
      "168004 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "168008 JUMP IF FALSE      reg4 TO: 168024 | 168011"
  ],
  "168011": [
      "168011 PUSH MEMORY ELEMENT IF INIT      5284 -> reg5",
      "168014 SET      undefined -> reg7",
      "168017 STRICT NOT EQUAL      reg5 !== reg7 -> reg10",
      "168021 SET      reg10 -> reg4",
      "168024 JUMP IF FALSE      reg4 TO: 168035 | 168027"
  ],
  "168024": ["168024 JUMP IF FALSE      reg4 TO: 168035 | 168027"],
  "168027": [
      "168027 PUSH MEMORY ELEMENT IF INIT      5284 -> reg7",
      "168030 SET      reg7 -> reg6",
      "168033 JUMP      168038",
      "168038 JUMP OR RETURN VAL      reg6"
  ],
  "168035": [
      "168035 SET      0 -> reg6",
      "168038 JUMP OR RETURN VAL      reg6"
  ],
  "168130": [
      "168130 PUSH MEMORY ELEMENT IF INIT      5293 -> reg4",
      "168133 SET      undefined -> reg7",
      "168136 STRICT EQUAL      reg4 === reg7 -> reg6",
      "168140 SET      reg6 -> reg5",
      "168143 JUMP IF FALSE      reg5 TO: 168154 | 168146"
  ],
  "168143": ["168143 JUMP IF FALSE      reg5 TO: 168154 | 168146"],
  "168146": [
      "168146 SET      undefined -> reg5",
      "168149 SET      reg5 -> reg4",
      "168152 JUMP      168172",
      "168172 SET MEMORY ELEMENT IF INIT      5294 = reg4",
      "168175 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "168179 JUMP IF FALSE      reg5 TO: 168195 | 168182"
  ],
  "168154": [
      "168154 PUSH MEMORY ELEMENT IF INIT      5293 -> reg5",
      "168157 GET      reg5[styleTags] -> reg6",
      "168163 GET      reg6[set] -> reg5",
      "168169 SET      reg5 -> reg4",
      "168172 SET MEMORY ELEMENT IF INIT      5294 = reg4",
      "168175 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "168179 JUMP IF FALSE      reg5 TO: 168195 | 168182"
  ],
  "168182": [
      "168182 PUSH MEMORY ELEMENT IF INIT      5294 -> reg4",
      "168185 SET      undefined -> reg6",
      "168188 STRICT NOT EQUAL      reg4 !== reg6 -> reg10",
      "168192 SET      reg10 -> reg5",
      "168195 JUMP IF FALSE      reg5 TO: 168206 | 168198"
  ],
  "168195": ["168195 JUMP IF FALSE      reg5 TO: 168206 | 168198"],
  "168198": [
      "168198 PUSH MEMORY ELEMENT IF INIT      5294 -> reg6",
      "168201 SET      reg6 -> reg4",
      "168204 JUMP      168209",
      "168209 JUMP OR RETURN VAL      reg4"
  ],
  "168206": [
      "168206 SET      0 -> reg4",
      "168209 JUMP OR RETURN VAL      reg4"
  ],
  "168310": [
      "168310 PUSH MEMORY ELEMENT IF INIT      5302 -> reg5",
      "168313 SET      undefined -> reg4",
      "168316 STRICT NOT EQUAL      reg5 !== reg4 -> reg7",
      "168320 SET      reg7 -> reg6",
      "168323 JUMP IF FALSE      reg6 TO: 168334 | 168326"
  ],
  "168323": ["168323 JUMP IF FALSE      reg6 TO: 168334 | 168326"],
  "168326": [
      "168326 PUSH MEMORY ELEMENT IF INIT      5302 -> reg5",
      "168329 SET      reg5 -> reg4",
      "168332 JUMP      168337",
      "168337 JUMP OR RETURN VAL      reg4"
  ],
  "168334": [
      "168334 SET      false -> reg4",
      "168337 JUMP OR RETURN VAL      reg4"
  ],
  "168431": [
      "168431 PUSH MEMORY ELEMENT IF INIT      5307 -> reg4",
      "168434 GET      reg4[npx] -> reg6",
      "168440 GET      reg6[scrollbars] -> reg7",
      "168446 GET      reg7[visible] -> reg4",
      "168452 SET      reg4 -> reg5",
      "168455 SET MEMORY ELEMENT IF INIT      5308 = reg5",
      "168458 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "168462 JUMP IF FALSE      reg6 TO: 168478 | 168465"
  ],
  "168455": [
      "168455 SET MEMORY ELEMENT IF INIT      5308 = reg5",
      "168458 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "168462 JUMP IF FALSE      reg6 TO: 168478 | 168465"
  ],
  "168465": [
      "168465 PUSH MEMORY ELEMENT IF INIT      5308 -> reg4",
      "168468 SET      undefined -> reg5",
      "168471 STRICT NOT EQUAL      reg4 !== reg5 -> reg7",
      "168475 SET      reg7 -> reg6",
      "168478 JUMP IF FALSE      reg6 TO: 168489 | 168481"
  ],
  "168478": ["168478 JUMP IF FALSE      reg6 TO: 168489 | 168481"],
  "168481": [
      "168481 PUSH MEMORY ELEMENT IF INIT      5308 -> reg6",
      "168484 SET      reg6 -> reg4",
      "168487 JUMP      168492",
      "168492 JUMP OR RETURN VAL      reg4"
  ],
  "168489": [
      "168489 SET      false -> reg4",
      "168492 JUMP OR RETURN VAL      reg4"
  ],
  "168873": [
      "168873 PUSH MEMORY ELEMENT IF INIT      5327 -> reg4",
      "168876 SET      undefined -> reg5",
      "168879 STRICT EQUAL      reg4 === reg5 -> reg8",
      "168883 SET      reg8 -> reg6",
      "168886 JUMP IF FALSE      reg6 TO: 168897 | 168889"
  ],
  "168886": ["168886 JUMP IF FALSE      reg6 TO: 168897 | 168889"],
  "168889": [
      "168889 SET      undefined -> reg5",
      "168892 SET      reg5 -> reg4",
      "168895 JUMP      168909",
      "168909 SET MEMORY ELEMENT IF INIT      5328 = reg4",
      "168912 STRICT EQUAL      reg4 === null -> reg5",
      "168916 JUMP IF TRUE      reg5 TO: 168932 | 168919"
  ],
  "168897": [
      "168897 PUSH MEMORY ELEMENT IF INIT      5327 -> reg5",
      "168900 GET      reg5[audio] -> reg6",
      "168906 SET      reg6 -> reg4",
      "168909 SET MEMORY ELEMENT IF INIT      5328 = reg4",
      "168912 STRICT EQUAL      reg4 === null -> reg5",
      "168916 JUMP IF TRUE      reg5 TO: 168932 | 168919"
  ],
  "168919": [
      "168919 PUSH MEMORY ELEMENT IF INIT      5328 -> reg4",
      "168922 SET      undefined -> reg7",
      "168925 STRICT EQUAL      reg4 === reg7 -> reg6",
      "168929 SET      reg6 -> reg5",
      "168932 JUMP IF FALSE      reg5 TO: 168943 | 168935"
  ],
  "168932": ["168932 JUMP IF FALSE      reg5 TO: 168943 | 168935"],
  "168935": [
      "168935 SET      undefined -> reg4",
      "168938 SET      reg4 -> reg7",
      "168941 JUMP      168971",
      "168971 SET MEMORY ELEMENT IF INIT      5329 = reg7",
      "168974 STRICT NOT EQUAL      reg7 !== null -> reg4",
      "168978 JUMP IF FALSE      reg4 TO: 168994 | 168981"
  ],
  "168943": [
      "168943 PUSH MEMORY ELEMENT IF INIT      5328 -> reg6",
      "168946 GET      reg6[canPlayType] -> reg4",
      "168952 NEW ARRAY      1 -> reg8",
      "168955 PUT      reg8[0] = audio/wav;",
      "168961 CALL FUNCTION      OBJ: reg6 FUNC: reg4 ARGS: reg8",
      "168965 SET      reg2 -> reg5",
      "168968 SET      reg5 -> reg7",
      "168971 SET MEMORY ELEMENT IF INIT      5329 = reg7",
      "168974 STRICT NOT EQUAL      reg7 !== null -> reg4",
      "168978 JUMP IF FALSE      reg4 TO: 168994 | 168981"
  ],
  "168981": [
      "168981 PUSH MEMORY ELEMENT IF INIT      5329 -> reg5",
      "168984 SET      undefined -> reg10",
      "168987 STRICT NOT EQUAL      reg5 !== reg10 -> reg7",
      "168991 SET      reg7 -> reg4",
      "168994 JUMP IF FALSE      reg4 TO: 169005 | 168997"
  ],
  "168994": ["168994 JUMP IF FALSE      reg4 TO: 169005 | 168997"],
  "168997": [
      "168997 PUSH MEMORY ELEMENT IF INIT      5329 -> reg10",
      "169000 SET      reg10 -> reg5",
      "169003 JUMP      169010",
      "169010 JUMP OR RETURN VAL      reg5"
  ],
  "169005": [
      "169005 SET      no -> reg5",
      "169010 JUMP OR RETURN VAL      reg5"
  ],
  "169410": [
      "169410 GET      reg3[1] -> reg4",
      "169414 GET WINDOW PROP      undefined -> reg5",
      "169419 STRICT NOT EQUAL      reg4 !== reg5 -> reg8",
      "169423 SET      reg8 -> reg6",
      "169426 JUMP IF FALSE      reg6 TO: 169438 | 169429"
  ],
  "169426": ["169426 JUMP IF FALSE      reg6 TO: 169438 | 169429"],
  "169429": [
      "169429 GET      reg3[1] -> reg4",
      "169433 SET      reg4 -> reg8",
      "169436 JUMP      169441",
      "169441 SET MEMORY ELEMENT IF INIT      5353 = reg8",
      "169444 PUSH MEMORY ELEMENT IF INIT      5352 -> reg4",
      "169447 GET      reg4[slice] -> reg6",
      "169453 NEW ARRAY      1 -> reg7",
      "169456 PUT      reg7[0] = 0",
      "169460 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "169464 SET      reg2 -> reg5",
      "169467 SET MEMORY ELEMENT IF INIT      5355 = reg5",
      "169470 PUSH MEMORY ELEMENT IF INIT      5355 -> reg5",
      "169473 GET      reg5[length] -> reg6",
      "169479 SET MEMORY ELEMENT IF INIT      5356 = reg6",
      "169482 PUSH MEMORY ELEMENT IF INIT      5356 -> reg5",
      "169485 JUMP IF FALSE      reg5 TO: 169614 | 169488"
  ],
  "169438": [
      "169438 SET      78012697 -> reg8",
      "169441 SET MEMORY ELEMENT IF INIT      5353 = reg8",
      "169444 PUSH MEMORY ELEMENT IF INIT      5352 -> reg4",
      "169447 GET      reg4[slice] -> reg6",
      "169453 NEW ARRAY      1 -> reg7",
      "169456 PUT      reg7[0] = 0",
      "169460 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "169464 SET      reg2 -> reg5",
      "169467 SET MEMORY ELEMENT IF INIT      5355 = reg5",
      "169470 PUSH MEMORY ELEMENT IF INIT      5355 -> reg5",
      "169473 GET      reg5[length] -> reg6",
      "169479 SET MEMORY ELEMENT IF INIT      5356 = reg6",
      "169482 PUSH MEMORY ELEMENT IF INIT      5356 -> reg5",
      "169485 JUMP IF FALSE      reg5 TO: 169614 | 169488"
  ],
  "169488": [
      "169488 GET WINDOW PROP      Math -> reg6",
      "169493 GET      reg6[floor] -> reg9",
      "169499 NEW ARRAY      1 -> reg8",
      "169502 PUSH MEMORY ELEMENT IF INIT      5354 -> reg7",
      "169505 NEW ARRAY      1 -> reg14",
      "169508 PUSH MEMORY ELEMENT IF INIT      5353 -> reg15",
      "169511 PUT      reg14[0] = reg15",
      "169515 CALL FUNCTION      PTR: reg7 MEM: reg14",
      "169519 SET      reg2 -> reg10",
      "169522 PUSH MEMORY ELEMENT IF INIT      5356 -> reg7",
      "169525 SET      reg7 -> reg12",
      "169528 SUBTRACT      reg7 - 1 -> reg7",
      "169532 SET MEMORY ELEMENT IF INIT      5356 = reg7",
      "169535 MULTIPLY      reg10 * reg12 -> reg7",
      "169539 PUT      reg8[0] = reg7",
      "169543 CALL FUNCTION      OBJ: reg6 FUNC: reg9 ARGS: reg8",
      "169547 SET      reg2 -> reg5",
      "169550 SET MEMORY ELEMENT IF INIT      5358 = reg5",
      "169553 PUSH MEMORY ELEMENT IF INIT      5355 -> reg5",
      "169556 PUSH MEMORY ELEMENT IF INIT      5356 -> reg10",
      "169559 GET      reg5[reg10] -> reg7",
      "169563 SET MEMORY ELEMENT IF INIT      5357 = reg7",
      "169566 PUSH MEMORY ELEMENT IF INIT      5355 -> reg5",
      "169569 PUSH MEMORY ELEMENT IF INIT      5356 -> reg8",
      "169572 PUSH MEMORY ELEMENT IF INIT      5355 -> reg7",
      "169575 PUSH MEMORY ELEMENT IF INIT      5358 -> reg12",
      "169578 GET      reg7[reg12] -> reg10",
      "169582 PUT      reg5[reg8] = reg10",
      "169586 PUSH MEMORY ELEMENT IF INIT      5355 -> reg7",
      "169589 PUSH MEMORY ELEMENT IF INIT      5358 -> reg5",
      "169592 PUSH MEMORY ELEMENT IF INIT      5357 -> reg10",
      "169595 PUT      reg7[reg5] = reg10",
      "169599 PUSH MEMORY ELEMENT IF INIT      5353 -> reg5",
      "169602 SET      1 -> reg7",
      "169605 ADD      reg5NaN-> reg7",
      "169609 SET MEMORY ELEMENT IF INIT      5353 = reg7",
      "169612 JUMP      169482",
      "169482 PUSH MEMORY ELEMENT IF INIT      5356 -> reg5",
      "169485 JUMP IF FALSE      reg5 TO: 169614 | 169488"
  ],
  "169614": [
      "169614 PUSH MEMORY ELEMENT IF INIT      5355 -> reg5",
      "169617 JUMP OR RETURN VAL      reg5"
  ],
  "169787": [
      "169787 PUSH MEMORY ELEMENT IF INIT      5372 -> reg5",
      "169790 SET      undefined -> reg6",
      "169793 STRICT EQUAL      reg5 === reg6 -> reg7",
      "169797 SET      reg7 -> reg4",
      "169800 JUMP IF FALSE      reg4 TO: 169811 | 169803"
  ],
  "169800": ["169800 JUMP IF FALSE      reg4 TO: 169811 | 169803"],
  "169803": [
      "169803 SET      undefined -> reg8",
      "169806 SET      reg8 -> reg5",
      "169809 JUMP      169829",
      "169829 SET MEMORY ELEMENT IF INIT      5373 = reg5",
      "169832 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "169836 JUMP IF FALSE      reg4 TO: 169852 | 169839"
  ],
  "169811": [
      "169811 PUSH MEMORY ELEMENT IF INIT      5372 -> reg6",
      "169814 GET      reg6[styleTags] -> reg4",
      "169820 GET      reg4[word] -> reg6",
      "169826 SET      reg6 -> reg5",
      "169829 SET MEMORY ELEMENT IF INIT      5373 = reg5",
      "169832 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "169836 JUMP IF FALSE      reg4 TO: 169852 | 169839"
  ],
  "169839": [
      "169839 PUSH MEMORY ELEMENT IF INIT      5373 -> reg5",
      "169842 SET      undefined -> reg7",
      "169845 STRICT NOT EQUAL      reg5 !== reg7 -> reg10",
      "169849 SET      reg10 -> reg4",
      "169852 JUMP IF FALSE      reg4 TO: 169863 | 169855"
  ],
  "169852": ["169852 JUMP IF FALSE      reg4 TO: 169863 | 169855"],
  "169855": [
      "169855 PUSH MEMORY ELEMENT IF INIT      5373 -> reg4",
      "169858 SET      reg4 -> reg5",
      "169861 JUMP      169866",
      "169866 JUMP OR RETURN VAL      reg5"
  ],
  "169863": [
      "169863 SET      0 -> reg5",
      "169866 JUMP OR RETURN VAL      reg5"
  ],
  "170075": [
      "170075 PUSH MEMORY ELEMENT IF INIT      5387 -> reg4",
      "170078 SET      undefined -> reg6",
      "170081 STRICT EQUAL      reg4 === reg6 -> reg7",
      "170085 SET      reg7 -> reg5",
      "170088 JUMP IF FALSE      reg5 TO: 170099 | 170091"
  ],
  "170088": ["170088 JUMP IF FALSE      reg5 TO: 170099 | 170091"],
  "170091": [
      "170091 SET      undefined -> reg7",
      "170094 SET      reg7 -> reg4",
      "170097 JUMP      170117",
      "170117 SET MEMORY ELEMENT IF INIT      5388 = reg4",
      "170120 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "170124 JUMP IF FALSE      reg7 TO: 170140 | 170127"
  ],
  "170099": [
      "170099 PUSH MEMORY ELEMENT IF INIT      5387 -> reg5",
      "170102 GET      reg5[styleTags] -> reg6",
      "170108 GET      reg6[clip] -> reg5",
      "170114 SET      reg5 -> reg4",
      "170117 SET MEMORY ELEMENT IF INIT      5388 = reg4",
      "170120 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "170124 JUMP IF FALSE      reg7 TO: 170140 | 170127"
  ],
  "170127": [
      "170127 PUSH MEMORY ELEMENT IF INIT      5388 -> reg4",
      "170130 SET      undefined -> reg5",
      "170133 STRICT NOT EQUAL      reg4 !== reg5 -> reg6",
      "170137 SET      reg6 -> reg7",
      "170140 JUMP IF FALSE      reg7 TO: 170151 | 170143"
  ],
  "170140": ["170140 JUMP IF FALSE      reg7 TO: 170151 | 170143"],
  "170143": [
      "170143 PUSH MEMORY ELEMENT IF INIT      5388 -> reg4",
      "170146 SET      reg4 -> reg5",
      "170149 JUMP      170154",
      "170154 JUMP OR RETURN VAL      reg5"
  ],
  "170151": [
      "170151 SET      0 -> reg5",
      "170154 JUMP OR RETURN VAL      reg5"
  ],
  "170246": [
      "170246 PUSH MEMORY ELEMENT IF INIT      5397 -> reg5",
      "170249 SET      undefined -> reg6",
      "170252 STRICT EQUAL      reg5 === reg6 -> reg8",
      "170256 SET      reg8 -> reg4",
      "170259 JUMP IF FALSE      reg4 TO: 170270 | 170262"
  ],
  "170259": ["170259 JUMP IF FALSE      reg4 TO: 170270 | 170262"],
  "170262": [
      "170262 SET      undefined -> reg4",
      "170265 SET      reg4 -> reg5",
      "170268 JUMP      170288",
      "170288 SET MEMORY ELEMENT IF INIT      5398 = reg5",
      "170291 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "170295 JUMP IF FALSE      reg6 TO: 170311 | 170298"
  ],
  "170270": [
      "170270 PUSH MEMORY ELEMENT IF INIT      5397 -> reg4",
      "170273 GET      reg4[styleTags] -> reg6",
      "170279 GET      reg6[align] -> reg4",
      "170285 SET      reg4 -> reg5",
      "170288 SET MEMORY ELEMENT IF INIT      5398 = reg5",
      "170291 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "170295 JUMP IF FALSE      reg6 TO: 170311 | 170298"
  ],
  "170298": [
      "170298 PUSH MEMORY ELEMENT IF INIT      5398 -> reg4",
      "170301 SET      undefined -> reg5",
      "170304 STRICT NOT EQUAL      reg4 !== reg5 -> reg9",
      "170308 SET      reg9 -> reg6",
      "170311 JUMP IF FALSE      reg6 TO: 170322 | 170314"
  ],
  "170311": ["170311 JUMP IF FALSE      reg6 TO: 170322 | 170314"],
  "170314": [
      "170314 PUSH MEMORY ELEMENT IF INIT      5398 -> reg5",
      "170317 SET      reg5 -> reg4",
      "170320 JUMP      170325",
      "170325 JUMP OR RETURN VAL      reg4"
  ],
  "170322": [
      "170322 SET      0 -> reg4",
      "170325 JUMP OR RETURN VAL      reg4"
  ],
  "170419": [
      "170419 PUSH MEMORY ELEMENT IF INIT      5407 -> reg4",
      "170422 SET      undefined -> reg6",
      "170425 STRICT EQUAL      reg4 === reg6 -> reg7",
      "170429 SET      reg7 -> reg5",
      "170432 JUMP IF FALSE      reg5 TO: 170443 | 170435"
  ],
  "170432": ["170432 JUMP IF FALSE      reg5 TO: 170443 | 170435"],
  "170435": [
      "170435 SET      undefined -> reg5",
      "170438 SET      reg5 -> reg4",
      "170441 JUMP      170455",
      "170455 SET MEMORY ELEMENT IF INIT      5408 = reg4",
      "170458 STRICT EQUAL      reg4 === null -> reg5",
      "170462 JUMP IF TRUE      reg5 TO: 170478 | 170465"
  ],
  "170443": [
      "170443 PUSH MEMORY ELEMENT IF INIT      5407 -> reg5",
      "170446 GET      reg5[video] -> reg7",
      "170452 SET      reg7 -> reg4",
      "170455 SET MEMORY ELEMENT IF INIT      5408 = reg4",
      "170458 STRICT EQUAL      reg4 === null -> reg5",
      "170462 JUMP IF TRUE      reg5 TO: 170478 | 170465"
  ],
  "170465": [
      "170465 PUSH MEMORY ELEMENT IF INIT      5408 -> reg7",
      "170468 SET      undefined -> reg4",
      "170471 STRICT EQUAL      reg7 === reg4 -> reg6",
      "170475 SET      reg6 -> reg5",
      "170478 JUMP IF FALSE      reg5 TO: 170489 | 170481"
  ],
  "170478": ["170478 JUMP IF FALSE      reg5 TO: 170489 | 170481"],
  "170481": [
      "170481 SET      undefined -> reg5",
      "170484 SET      reg5 -> reg4",
      "170487 JUMP      170517",
      "170517 SET MEMORY ELEMENT IF INIT      5409 = reg4",
      "170520 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "170524 JUMP IF FALSE      reg5 TO: 170540 | 170527"
  ],
  "170489": [
      "170489 PUSH MEMORY ELEMENT IF INIT      5408 -> reg8",
      "170492 GET      reg8[canPlayType] -> reg6",
      "170498 NEW ARRAY      1 -> reg7",
      "170501 PUT      reg7[0] = video/mpeg;",
      "170507 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg7",
      "170511 SET      reg2 -> reg5",
      "170514 SET      reg5 -> reg4",
      "170517 SET MEMORY ELEMENT IF INIT      5409 = reg4",
      "170520 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "170524 JUMP IF FALSE      reg5 TO: 170540 | 170527"
  ],
  "170527": [
      "170527 PUSH MEMORY ELEMENT IF INIT      5409 -> reg4",
      "170530 SET      undefined -> reg6",
      "170533 STRICT NOT EQUAL      reg4 !== reg6 -> reg7",
      "170537 SET      reg7 -> reg5",
      "170540 JUMP IF FALSE      reg5 TO: 170551 | 170543"
  ],
  "170540": ["170540 JUMP IF FALSE      reg5 TO: 170551 | 170543"],
  "170543": [
      "170543 PUSH MEMORY ELEMENT IF INIT      5409 -> reg5",
      "170546 SET      reg5 -> reg4",
      "170549 JUMP      170556",
      "170556 JUMP OR RETURN VAL      reg4"
  ],
  "170551": [
      "170551 SET      no -> reg4",
      "170556 JUMP OR RETURN VAL      reg4"
  ],
  "170648": [
      "170648 PUSH MEMORY ELEMENT IF INIT      5420 -> reg6",
      "170651 SET      undefined -> reg8",
      "170654 STRICT EQUAL      reg6 === reg8 -> reg9",
      "170658 SET      reg9 -> reg4",
      "170661 JUMP IF FALSE      reg4 TO: 170672 | 170664"
  ],
  "170661": ["170661 JUMP IF FALSE      reg4 TO: 170672 | 170664"],
  "170664": [
      "170664 SET      undefined -> reg4",
      "170667 SET      reg4 -> reg5",
      "170670 JUMP      170690",
      "170690 SET MEMORY ELEMENT IF INIT      5421 = reg5",
      "170693 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "170697 JUMP IF FALSE      reg6 TO: 170713 | 170700"
  ],
  "170672": [
      "170672 PUSH MEMORY ELEMENT IF INIT      5420 -> reg7",
      "170675 GET      reg7[styleTags] -> reg4",
      "170681 GET      reg4[line] -> reg6",
      "170687 SET      reg6 -> reg5",
      "170690 SET MEMORY ELEMENT IF INIT      5421 = reg5",
      "170693 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "170697 JUMP IF FALSE      reg6 TO: 170713 | 170700"
  ],
  "170700": [
      "170700 PUSH MEMORY ELEMENT IF INIT      5421 -> reg5",
      "170703 SET      undefined -> reg4",
      "170706 STRICT NOT EQUAL      reg5 !== reg4 -> reg7",
      "170710 SET      reg7 -> reg6",
      "170713 JUMP IF FALSE      reg6 TO: 170724 | 170716"
  ],
  "170713": ["170713 JUMP IF FALSE      reg6 TO: 170724 | 170716"],
  "170716": [
      "170716 PUSH MEMORY ELEMENT IF INIT      5421 -> reg6",
      "170719 SET      reg6 -> reg4",
      "170722 JUMP      170727",
      "170727 JUMP OR RETURN VAL      reg4"
  ],
  "170724": [
      "170724 SET      0 -> reg4",
      "170727 JUMP OR RETURN VAL      reg4"
  ],
  "170819": [
      "170819 PUSH MEMORY ELEMENT IF INIT      5430 -> reg5",
      "170822 SET      undefined -> reg6",
      "170825 STRICT EQUAL      reg5 === reg6 -> reg8",
      "170829 SET      reg8 -> reg4",
      "170832 JUMP IF FALSE      reg4 TO: 170843 | 170835"
  ],
  "170832": ["170832 JUMP IF FALSE      reg4 TO: 170843 | 170835"],
  "170835": [
      "170835 SET      undefined -> reg4",
      "170838 SET      reg4 -> reg5",
      "170841 JUMP      170861",
      "170861 SET MEMORY ELEMENT IF INIT      5431 = reg5",
      "170864 STRICT NOT EQUAL      reg5 !== null -> reg7",
      "170868 JUMP IF FALSE      reg7 TO: 170884 | 170871"
  ],
  "170843": [
      "170843 PUSH MEMORY ELEMENT IF INIT      5430 -> reg4",
      "170846 GET      reg4[styleTags] -> reg6",
      "170852 GET      reg6[webkit] -> reg7",
      "170858 SET      reg7 -> reg5",
      "170861 SET MEMORY ELEMENT IF INIT      5431 = reg5",
      "170864 STRICT NOT EQUAL      reg5 !== null -> reg7",
      "170868 JUMP IF FALSE      reg7 TO: 170884 | 170871"
  ],
  "170871": [
      "170871 PUSH MEMORY ELEMENT IF INIT      5431 -> reg4",
      "170874 SET      undefined -> reg6",
      "170877 STRICT NOT EQUAL      reg4 !== reg6 -> reg5",
      "170881 SET      reg5 -> reg7",
      "170884 JUMP IF FALSE      reg7 TO: 170895 | 170887"
  ],
  "170884": ["170884 JUMP IF FALSE      reg7 TO: 170895 | 170887"],
  "170887": [
      "170887 PUSH MEMORY ELEMENT IF INIT      5431 -> reg4",
      "170890 SET      reg4 -> reg8",
      "170893 JUMP      170898",
      "170898 JUMP OR RETURN VAL      reg8"
  ],
  "170895": [
      "170895 SET      0 -> reg8",
      "170898 JUMP OR RETURN VAL      reg8"
  ],
  "171087": [
      "171087 PUSH MEMORY ELEMENT IF INIT      5443 -> reg4",
      "171090 SET      undefined -> reg5",
      "171093 STRICT EQUAL      reg4 === reg5 -> reg6",
      "171097 SET      reg6 -> reg7",
      "171100 JUMP IF FALSE      reg7 TO: 171111 | 171103"
  ],
  "171100": ["171100 JUMP IF FALSE      reg7 TO: 171111 | 171103"],
  "171103": [
      "171103 SET      undefined -> reg4",
      "171106 SET      reg4 -> reg6",
      "171109 JUMP      171123",
      "171123 SET MEMORY ELEMENT IF INIT      5444 = reg6",
      "171126 STRICT EQUAL      reg6 === null -> reg4",
      "171130 JUMP IF TRUE      reg4 TO: 171146 | 171133"
  ],
  "171111": [
      "171111 PUSH MEMORY ELEMENT IF INIT      5443 -> reg4",
      "171114 GET      reg4[audio] -> reg5",
      "171120 SET      reg5 -> reg6",
      "171123 SET MEMORY ELEMENT IF INIT      5444 = reg6",
      "171126 STRICT EQUAL      reg6 === null -> reg4",
      "171130 JUMP IF TRUE      reg4 TO: 171146 | 171133"
  ],
  "171133": [
      "171133 PUSH MEMORY ELEMENT IF INIT      5444 -> reg5",
      "171136 SET      undefined -> reg6",
      "171139 STRICT EQUAL      reg5 === reg6 -> reg7",
      "171143 SET      reg7 -> reg4",
      "171146 JUMP IF FALSE      reg4 TO: 171157 | 171149"
  ],
  "171146": ["171146 JUMP IF FALSE      reg4 TO: 171157 | 171149"],
  "171149": [
      "171149 SET      undefined -> reg7",
      "171152 SET      reg7 -> reg5",
      "171155 JUMP      171185",
      "171185 SET MEMORY ELEMENT IF INIT      5445 = reg5",
      "171188 STRICT NOT EQUAL      reg5 !== null -> reg7",
      "171192 JUMP IF FALSE      reg7 TO: 171208 | 171195"
  ],
  "171157": [
      "171157 PUSH MEMORY ELEMENT IF INIT      5444 -> reg4",
      "171160 GET      reg4[canPlayType] -> reg7",
      "171166 NEW ARRAY      1 -> reg6",
      "171169 PUT      reg6[0] = audio/wave;",
      "171175 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg6",
      "171179 SET      reg2 -> reg8",
      "171182 SET      reg8 -> reg5",
      "171185 SET MEMORY ELEMENT IF INIT      5445 = reg5",
      "171188 STRICT NOT EQUAL      reg5 !== null -> reg7",
      "171192 JUMP IF FALSE      reg7 TO: 171208 | 171195"
  ],
  "171195": [
      "171195 PUSH MEMORY ELEMENT IF INIT      5445 -> reg5",
      "171198 SET      undefined -> reg8",
      "171201 STRICT NOT EQUAL      reg5 !== reg8 -> reg6",
      "171205 SET      reg6 -> reg7",
      "171208 JUMP IF FALSE      reg7 TO: 171219 | 171211"
  ],
  "171208": ["171208 JUMP IF FALSE      reg7 TO: 171219 | 171211"],
  "171211": [
      "171211 PUSH MEMORY ELEMENT IF INIT      5445 -> reg6",
      "171214 SET      reg6 -> reg5",
      "171217 JUMP      171224",
      "171224 JUMP OR RETURN VAL      reg5"
  ],
  "171219": [
      "171219 SET      no -> reg5",
      "171224 JUMP OR RETURN VAL      reg5"
  ],
  "171506": [
      "171506 PUSH MEMORY ELEMENT IF INIT      5462 -> reg7",
      "171509 SET      undefined -> reg4",
      "171512 STRICT EQUAL      reg7 === reg4 -> reg6",
      "171516 SET      reg6 -> reg5",
      "171519 JUMP IF FALSE      reg5 TO: 171530 | 171522"
  ],
  "171519": ["171519 JUMP IF FALSE      reg5 TO: 171530 | 171522"],
  "171522": [
      "171522 SET      undefined -> reg5",
      "171525 SET      reg5 -> reg4",
      "171528 JUMP      171548",
      "171548 SET MEMORY ELEMENT IF INIT      5463 = reg4",
      "171551 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "171555 JUMP IF FALSE      reg5 TO: 171571 | 171558"
  ],
  "171530": [
      "171530 PUSH MEMORY ELEMENT IF INIT      5462 -> reg7",
      "171533 GET      reg7[styleTags] -> reg5",
      "171539 GET      reg5[grid] -> reg6",
      "171545 SET      reg6 -> reg4",
      "171548 SET MEMORY ELEMENT IF INIT      5463 = reg4",
      "171551 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "171555 JUMP IF FALSE      reg5 TO: 171571 | 171558"
  ],
  "171558": [
      "171558 PUSH MEMORY ELEMENT IF INIT      5463 -> reg7",
      "171561 SET      undefined -> reg6",
      "171564 STRICT NOT EQUAL      reg7 !== reg6 -> reg8",
      "171568 SET      reg8 -> reg5",
      "171571 JUMP IF FALSE      reg5 TO: 171582 | 171574"
  ],
  "171571": ["171571 JUMP IF FALSE      reg5 TO: 171582 | 171574"],
  "171574": [
      "171574 PUSH MEMORY ELEMENT IF INIT      5463 -> reg4",
      "171577 SET      reg4 -> reg7",
      "171580 JUMP      171585",
      "171585 JUMP OR RETURN VAL      reg7"
  ],
  "171582": [
      "171582 SET      0 -> reg7",
      "171585 JUMP OR RETURN VAL      reg7"
  ],
  "171677": [
      "171677 PUSH MEMORY ELEMENT IF INIT      5472 -> reg4",
      "171680 SET      undefined -> reg6",
      "171683 STRICT EQUAL      reg4 === reg6 -> reg7",
      "171687 SET      reg7 -> reg5",
      "171690 JUMP IF FALSE      reg5 TO: 171701 | 171693"
  ],
  "171690": ["171690 JUMP IF FALSE      reg5 TO: 171701 | 171693"],
  "171693": [
      "171693 SET      undefined -> reg4",
      "171696 SET      reg4 -> reg7",
      "171699 JUMP      171719",
      "171719 SET MEMORY ELEMENT IF INIT      5473 = reg7",
      "171722 STRICT NOT EQUAL      reg7 !== null -> reg5",
      "171726 JUMP IF FALSE      reg5 TO: 171742 | 171729"
  ],
  "171701": [
      "171701 PUSH MEMORY ELEMENT IF INIT      5472 -> reg5",
      "171704 GET      reg5[styleTags] -> reg4",
      "171710 GET      reg4[counter] -> reg5",
      "171716 SET      reg5 -> reg7",
      "171719 SET MEMORY ELEMENT IF INIT      5473 = reg7",
      "171722 STRICT NOT EQUAL      reg7 !== null -> reg5",
      "171726 JUMP IF FALSE      reg5 TO: 171742 | 171729"
  ],
  "171729": [
      "171729 PUSH MEMORY ELEMENT IF INIT      5473 -> reg4",
      "171732 SET      undefined -> reg6",
      "171735 STRICT NOT EQUAL      reg4 !== reg6 -> reg8",
      "171739 SET      reg8 -> reg5",
      "171742 JUMP IF FALSE      reg5 TO: 171753 | 171745"
  ],
  "171742": ["171742 JUMP IF FALSE      reg5 TO: 171753 | 171745"],
  "171745": [
      "171745 PUSH MEMORY ELEMENT IF INIT      5473 -> reg5",
      "171748 SET      reg5 -> reg4",
      "171751 JUMP      171756",
      "171756 JUMP OR RETURN VAL      reg4"
  ],
  "171753": [
      "171753 SET      0 -> reg4",
      "171756 JUMP OR RETURN VAL      reg4"
  ],
  "172128": [
      "172128 PUSH MEMORY ELEMENT IF INIT      5492 -> reg6",
      "172131 SET      undefined -> reg4",
      "172134 STRICT EQUAL      reg6 === reg4 -> reg7",
      "172138 SET      reg7 -> reg5",
      "172141 JUMP IF FALSE      reg5 TO: 172152 | 172144"
  ],
  "172141": ["172141 JUMP IF FALSE      reg5 TO: 172152 | 172144"],
  "172144": [
      "172144 SET      undefined -> reg7",
      "172147 SET      reg7 -> reg4",
      "172150 JUMP      172164",
      "172164 SET MEMORY ELEMENT IF INIT      5493 = reg4",
      "172167 STRICT EQUAL      reg4 === null -> reg5",
      "172171 JUMP IF TRUE      reg5 TO: 172187 | 172174"
  ],
  "172152": [
      "172152 PUSH MEMORY ELEMENT IF INIT      5492 -> reg5",
      "172155 GET      reg5[audio] -> reg7",
      "172161 SET      reg7 -> reg4",
      "172164 SET MEMORY ELEMENT IF INIT      5493 = reg4",
      "172167 STRICT EQUAL      reg4 === null -> reg5",
      "172171 JUMP IF TRUE      reg5 TO: 172187 | 172174"
  ],
  "172174": [
      "172174 PUSH MEMORY ELEMENT IF INIT      5493 -> reg6",
      "172177 SET      undefined -> reg8",
      "172180 STRICT EQUAL      reg6 === reg8 -> reg4",
      "172184 SET      reg4 -> reg5",
      "172187 JUMP IF FALSE      reg5 TO: 172198 | 172190"
  ],
  "172187": ["172187 JUMP IF FALSE      reg5 TO: 172198 | 172190"],
  "172190": [
      "172190 SET      undefined -> reg5",
      "172193 SET      reg5 -> reg4",
      "172196 JUMP      172226",
      "172226 SET MEMORY ELEMENT IF INIT      5494 = reg4",
      "172229 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "172233 JUMP IF FALSE      reg6 TO: 172249 | 172236"
  ],
  "172198": [
      "172198 PUSH MEMORY ELEMENT IF INIT      5493 -> reg8",
      "172201 GET      reg8[canPlayType] -> reg6",
      "172207 NEW ARRAY      1 -> reg7",
      "172210 PUT      reg7[0] = audio/x-mpegurl",
      "172216 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg7",
      "172220 SET      reg2 -> reg5",
      "172223 SET      reg5 -> reg4",
      "172226 SET MEMORY ELEMENT IF INIT      5494 = reg4",
      "172229 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "172233 JUMP IF FALSE      reg6 TO: 172249 | 172236"
  ],
  "172236": [
      "172236 PUSH MEMORY ELEMENT IF INIT      5494 -> reg4",
      "172239 SET      undefined -> reg5",
      "172242 STRICT NOT EQUAL      reg4 !== reg5 -> reg7",
      "172246 SET      reg7 -> reg6",
      "172249 JUMP IF FALSE      reg6 TO: 172260 | 172252"
  ],
  "172249": ["172249 JUMP IF FALSE      reg6 TO: 172260 | 172252"],
  "172252": [
      "172252 PUSH MEMORY ELEMENT IF INIT      5494 -> reg7",
      "172255 SET      reg7 -> reg4",
      "172258 JUMP      172265",
      "172265 JUMP OR RETURN VAL      reg4"
  ],
  "172260": [
      "172260 SET      no -> reg4",
      "172265 JUMP OR RETURN VAL      reg4"
  ],
  "172359": [
      "172359 PUSH MEMORY ELEMENT IF INIT      5505 -> reg4",
      "172362 SET      undefined -> reg6",
      "172365 STRICT EQUAL      reg4 === reg6 -> reg7",
      "172369 SET      reg7 -> reg5",
      "172372 JUMP IF FALSE      reg5 TO: 172383 | 172375"
  ],
  "172372": ["172372 JUMP IF FALSE      reg5 TO: 172383 | 172375"],
  "172375": [
      "172375 SET      undefined -> reg5",
      "172378 SET      reg5 -> reg4",
      "172381 JUMP      172395",
      "172395 SET MEMORY ELEMENT IF INIT      5506 = reg4",
      "172398 STRICT EQUAL      reg4 === null -> reg5",
      "172402 JUMP IF TRUE      reg5 TO: 172418 | 172405"
  ],
  "172383": [
      "172383 PUSH MEMORY ELEMENT IF INIT      5505 -> reg6",
      "172386 GET      reg6[audio] -> reg5",
      "172392 SET      reg5 -> reg4",
      "172395 SET MEMORY ELEMENT IF INIT      5506 = reg4",
      "172398 STRICT EQUAL      reg4 === null -> reg5",
      "172402 JUMP IF TRUE      reg5 TO: 172418 | 172405"
  ],
  "172405": [
      "172405 PUSH MEMORY ELEMENT IF INIT      5506 -> reg7",
      "172408 SET      undefined -> reg4",
      "172411 STRICT EQUAL      reg7 === reg4 -> reg8",
      "172415 SET      reg8 -> reg5",
      "172418 JUMP IF FALSE      reg5 TO: 172429 | 172421"
  ],
  "172418": ["172418 JUMP IF FALSE      reg5 TO: 172429 | 172421"],
  "172421": [
      "172421 SET      undefined -> reg7",
      "172424 SET      reg7 -> reg4",
      "172427 JUMP      172457",
      "172457 SET MEMORY ELEMENT IF INIT      5507 = reg4",
      "172460 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "172464 JUMP IF FALSE      reg5 TO: 172480 | 172467"
  ],
  "172429": [
      "172429 PUSH MEMORY ELEMENT IF INIT      5506 -> reg6",
      "172432 GET      reg6[canPlayType] -> reg7",
      "172438 NEW ARRAY      1 -> reg8",
      "172441 PUT      reg8[0] = audio/aac;",
      "172447 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "172451 SET      reg2 -> reg5",
      "172454 SET      reg5 -> reg4",
      "172457 SET MEMORY ELEMENT IF INIT      5507 = reg4",
      "172460 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "172464 JUMP IF FALSE      reg5 TO: 172480 | 172467"
  ],
  "172467": [
      "172467 PUSH MEMORY ELEMENT IF INIT      5507 -> reg4",
      "172470 SET      undefined -> reg7",
      "172473 STRICT NOT EQUAL      reg4 !== reg7 -> reg9",
      "172477 SET      reg9 -> reg5",
      "172480 JUMP IF FALSE      reg5 TO: 172491 | 172483"
  ],
  "172480": ["172480 JUMP IF FALSE      reg5 TO: 172491 | 172483"],
  "172483": [
      "172483 PUSH MEMORY ELEMENT IF INIT      5507 -> reg4",
      "172486 SET      reg4 -> reg7",
      "172489 JUMP      172496",
      "172496 JUMP OR RETURN VAL      reg7"
  ],
  "172491": [
      "172491 SET      no -> reg7",
      "172496 JUMP OR RETURN VAL      reg7"
  ],
  "172849": [
      "172849 PUSH MEMORY ELEMENT IF INIT      5535 -> reg5",
      "172852 GET      reg5[toString] -> reg6",
      "172858 EMPTY ARRAY      -> reg7",
      "172860 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "172864 SET      reg2 -> reg4",
      "172867 SET      reg4 -> reg8",
      "172870 JUMP      172878",
      "172878 SET MEMORY ELEMENT IF INIT      5538 = reg8",
      "172881 SET MEMORY ELEMENT IF INIT      5539 = 0",
      "172884 PUSH MEMORY ELEMENT IF INIT      5539 -> reg4",
      "172887 PUSH MEMORY ELEMENT IF INIT      5538 -> reg7",
      "172890 GET      reg7[length] -> reg8",
      "172896 LESS THAN      reg4 < reg8 -> reg6",
      "172900 JUMP IF FALSE      reg6 TO: 172954 | 172903"
  ],
  "172872": [
      "172872 PUSH MEMORY ELEMENT IF INIT      5535 -> reg4",
      "172875 SET      reg4 -> reg8",
      "172878 SET MEMORY ELEMENT IF INIT      5538 = reg8",
      "172881 SET MEMORY ELEMENT IF INIT      5539 = 0",
      "172884 PUSH MEMORY ELEMENT IF INIT      5539 -> reg4",
      "172887 PUSH MEMORY ELEMENT IF INIT      5538 -> reg7",
      "172890 GET      reg7[length] -> reg8",
      "172896 LESS THAN      reg4 < reg8 -> reg6",
      "172900 JUMP IF FALSE      reg6 TO: 172954 | 172903"
  ],
  "172903": [
      "172903 PUSH MEMORY ELEMENT IF INIT      5537 -> reg4",
      "172906 PUSH MEMORY ELEMENT IF INIT      5538 -> reg7",
      "172909 GET      reg7[charCodeAt] -> reg9",
      "172915 NEW ARRAY      1 -> reg10",
      "172918 PUSH MEMORY ELEMENT IF INIT      5539 -> reg8",
      "172921 PUT      reg10[0] = reg8",
      "172925 CALL FUNCTION      OBJ: reg7 FUNC: reg9 ARGS: reg10",
      "172929 SET      reg2 -> reg6",
      "172932 ADD      reg4NaN-> reg6",
      "172936 SET MEMORY ELEMENT IF INIT      5537 = reg6",
      "172939 PUSH MEMORY ELEMENT IF INIT      5539 -> reg6",
      "172942 PUSH MEMORY ELEMENT IF INIT      5536 -> reg4",
      "172945 ADD      reg6NaN-> reg4",
      "172949 SET MEMORY ELEMENT IF INIT      5539 = reg4",
      "172952 JUMP      172884",
      "172884 PUSH MEMORY ELEMENT IF INIT      5539 -> reg4",
      "172887 PUSH MEMORY ELEMENT IF INIT      5538 -> reg7",
      "172890 GET      reg7[length] -> reg8",
      "172896 LESS THAN      reg4 < reg8 -> reg6",
      "172900 JUMP IF FALSE      reg6 TO: 172954 | 172903"
  ],
  "172954": [
      "172954 PUSH MEMORY ELEMENT IF INIT      5537 -> reg4",
      "172957 JUMP OR RETURN VAL      reg4"
  ],
  "172989": [
      "172989 PUSH MEMORY ELEMENT IF INIT      5524 -> reg8",
      "172992 GET      reg8[navigator] -> reg10",
      "172998 GET      reg10[platform] -> reg8",
      "173004 SET      reg8 -> reg9",
      "173007 JUMP      173012",
      "173012 PUT      reg7[0] = reg9",
      "173016 PUT      reg7[1] = 4",
      "173020 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "173024 SET      reg2 -> reg5",
      "173027 SUBTRACT      reg4 - reg5 -> reg6",
      "173031 SET MEMORY ELEMENT IF INIT      5527 = reg6",
      "173034 PUSH MEMORY ELEMENT IF INIT      5527 -> reg5",
      "173037 PUSH MEMORY ELEMENT IF INIT      5533 -> reg6",
      "173040 NEW ARRAY      2 -> reg8",
      "173043 PUSH MEMORY ELEMENT IF INIT      5524 -> reg7",
      "173046 GET      reg7[screen] -> reg9",
      "173052 GET      reg9[width] -> reg7",
      "173058 JUMP IF FALSE      reg7 TO: 173081 | 173061"
  ],
  "173009": [
      "173009 SET      897 -> reg9",
      "173012 PUT      reg7[0] = reg9",
      "173016 PUT      reg7[1] = 4",
      "173020 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "173024 SET      reg2 -> reg5",
      "173027 SUBTRACT      reg4 - reg5 -> reg6",
      "173031 SET MEMORY ELEMENT IF INIT      5527 = reg6",
      "173034 PUSH MEMORY ELEMENT IF INIT      5527 -> reg5",
      "173037 PUSH MEMORY ELEMENT IF INIT      5533 -> reg6",
      "173040 NEW ARRAY      2 -> reg8",
      "173043 PUSH MEMORY ELEMENT IF INIT      5524 -> reg7",
      "173046 GET      reg7[screen] -> reg9",
      "173052 GET      reg9[width] -> reg7",
      "173058 JUMP IF FALSE      reg7 TO: 173081 | 173061"
  ],
  "173061": [
      "173061 PUSH MEMORY ELEMENT IF INIT      5524 -> reg9",
      "173064 GET      reg9[screen] -> reg10",
      "173070 GET      reg10[width] -> reg12",
      "173076 SET      reg12 -> reg11",
      "173079 JUMP      173084",
      "173084 PUT      reg8[0] = reg11",
      "173088 PUT      reg8[1] = 3",
      "173092 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "173096 SET      reg2 -> reg4",
      "173099 ADD      reg5NaN-> reg7",
      "173103 SET MEMORY ELEMENT IF INIT      5527 = reg7",
      "173106 PUSH MEMORY ELEMENT IF INIT      5527 -> reg5",
      "173109 PUSH MEMORY ELEMENT IF INIT      5533 -> reg6",
      "173112 NEW ARRAY      2 -> reg7",
      "173115 PUSH MEMORY ELEMENT IF INIT      5524 -> reg8",
      "173118 GET      reg8[navigator] -> reg9",
      "173124 GET      reg9[userAgent] -> reg10",
      "173130 JUMP IF FALSE      reg10 TO: 173153 | 173133"
  ],
  "173081": [
      "173081 SET      897 -> reg11",
      "173084 PUT      reg8[0] = reg11",
      "173088 PUT      reg8[1] = 3",
      "173092 CALL FUNCTION      PTR: reg6 MEM: reg8",
      "173096 SET      reg2 -> reg4",
      "173099 ADD      reg5NaN-> reg7",
      "173103 SET MEMORY ELEMENT IF INIT      5527 = reg7",
      "173106 PUSH MEMORY ELEMENT IF INIT      5527 -> reg5",
      "173109 PUSH MEMORY ELEMENT IF INIT      5533 -> reg6",
      "173112 NEW ARRAY      2 -> reg7",
      "173115 PUSH MEMORY ELEMENT IF INIT      5524 -> reg8",
      "173118 GET      reg8[navigator] -> reg9",
      "173124 GET      reg9[userAgent] -> reg10",
      "173130 JUMP IF FALSE      reg10 TO: 173153 | 173133"
  ],
  "173133": [
      "173133 PUSH MEMORY ELEMENT IF INIT      5524 -> reg13",
      "173136 GET      reg13[navigator] -> reg9",
      "173142 GET      reg9[userAgent] -> reg10",
      "173148 SET      reg10 -> reg8",
      "173151 JUMP      173156",
      "173156 PUT      reg7[0] = reg8",
      "173160 PUT      reg7[1] = 2",
      "173164 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "173168 SET      reg2 -> reg4",
      "173171 SUBTRACT      reg5 - reg4 -> reg6",
      "173175 SET MEMORY ELEMENT IF INIT      5527 = reg6",
      "173178 PUSH MEMORY ELEMENT IF INIT      5526 -> reg6",
      "173181 GET      reg6[push] -> reg7",
      "173187 NEW ARRAY      1 -> reg4",
      "173190 PUSH MEMORY ELEMENT IF INIT      5527 -> reg9",
      "173193 PUT      reg4[0] = reg9",
      "173197 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg4",
      "173201 SET      reg2 -> reg5",
      "173204 JUMP OR RETURN"
  ],
  "173153": [
      "173153 SET      897 -> reg8",
      "173156 PUT      reg7[0] = reg8",
      "173160 PUT      reg7[1] = 2",
      "173164 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "173168 SET      reg2 -> reg4",
      "173171 SUBTRACT      reg5 - reg4 -> reg6",
      "173175 SET MEMORY ELEMENT IF INIT      5527 = reg6",
      "173178 PUSH MEMORY ELEMENT IF INIT      5526 -> reg6",
      "173181 GET      reg6[push] -> reg7",
      "173187 NEW ARRAY      1 -> reg4",
      "173190 PUSH MEMORY ELEMENT IF INIT      5527 -> reg9",
      "173193 PUT      reg4[0] = reg9",
      "173197 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg4",
      "173201 SET      reg2 -> reg5",
      "173204 JUMP OR RETURN"
  ],
  "173344": [
      "173344 SET I      null",
      "173346 PUSH F.K      -> reg4",
      "173348 VOID F",
      "173349 SET MEMORY ELEMENT      0 = reg4",
      "173352 SET I      null",
      "173354 EMPTY OBJECT      -> reg5",
      "173356 PUSH MEMORY ELEMENT IF INIT      5526 -> reg4",
      "173359 PUT      reg5[value] = reg4",
      "173365 JUMP OR RETURN VAL      reg5"
  ],
  "174070": [
      "174070 GET      reg3[1] -> reg4",
      "174074 GET WINDOW PROP      undefined -> reg6",
      "174079 STRICT NOT EQUAL      reg4 !== reg6 -> reg7",
      "174083 SET      reg7 -> reg5",
      "174086 JUMP IF FALSE      reg5 TO: 174098 | 174089"
  ],
  "174086": ["174086 JUMP IF FALSE      reg5 TO: 174098 | 174089"],
  "174089": [
      "174089 GET      reg3[1] -> reg5",
      "174093 SET      reg5 -> reg4",
      "174096 JUMP      174101",
      "174101 SET MEMORY ELEMENT IF INIT      5580 = reg4",
      "174104 PUSH MEMORY ELEMENT IF INIT      5579 -> reg5",
      "174107 GET      reg5[slice] -> reg6",
      "174113 NEW ARRAY      1 -> reg7",
      "174116 PUT      reg7[0] = 0",
      "174120 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "174124 SET      reg2 -> reg4",
      "174127 SET MEMORY ELEMENT IF INIT      5582 = reg4",
      "174130 PUSH MEMORY ELEMENT IF INIT      5582 -> reg7",
      "174133 GET      reg7[length] -> reg6",
      "174139 SET MEMORY ELEMENT IF INIT      5583 = reg6",
      "174142 PUSH MEMORY ELEMENT IF INIT      5583 -> reg4",
      "174145 JUMP IF FALSE      reg4 TO: 174274 | 174148"
  ],
  "174098": [
      "174098 SET      78012697 -> reg4",
      "174101 SET MEMORY ELEMENT IF INIT      5580 = reg4",
      "174104 PUSH MEMORY ELEMENT IF INIT      5579 -> reg5",
      "174107 GET      reg5[slice] -> reg6",
      "174113 NEW ARRAY      1 -> reg7",
      "174116 PUT      reg7[0] = 0",
      "174120 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "174124 SET      reg2 -> reg4",
      "174127 SET MEMORY ELEMENT IF INIT      5582 = reg4",
      "174130 PUSH MEMORY ELEMENT IF INIT      5582 -> reg7",
      "174133 GET      reg7[length] -> reg6",
      "174139 SET MEMORY ELEMENT IF INIT      5583 = reg6",
      "174142 PUSH MEMORY ELEMENT IF INIT      5583 -> reg4",
      "174145 JUMP IF FALSE      reg4 TO: 174274 | 174148"
  ],
  "174148": [
      "174148 GET WINDOW PROP      Math -> reg6",
      "174153 GET      reg6[floor] -> reg7",
      "174159 NEW ARRAY      1 -> reg10",
      "174162 PUSH MEMORY ELEMENT IF INIT      5581 -> reg9",
      "174165 NEW ARRAY      1 -> reg11",
      "174168 PUSH MEMORY ELEMENT IF INIT      5580 -> reg13",
      "174171 PUT      reg11[0] = reg13",
      "174175 CALL FUNCTION      PTR: reg9 MEM: reg11",
      "174179 SET      reg2 -> reg8",
      "174182 PUSH MEMORY ELEMENT IF INIT      5583 -> reg9",
      "174185 SET      reg9 -> reg11",
      "174188 SUBTRACT      reg9 - 1 -> reg9",
      "174192 SET MEMORY ELEMENT IF INIT      5583 = reg9",
      "174195 MULTIPLY      reg8 * reg11 -> reg9",
      "174199 PUT      reg10[0] = reg9",
      "174203 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg10",
      "174207 SET      reg2 -> reg4",
      "174210 SET MEMORY ELEMENT IF INIT      5585 = reg4",
      "174213 PUSH MEMORY ELEMENT IF INIT      5582 -> reg7",
      "174216 PUSH MEMORY ELEMENT IF INIT      5583 -> reg10",
      "174219 GET      reg7[reg10] -> reg4",
      "174223 SET MEMORY ELEMENT IF INIT      5584 = reg4",
      "174226 PUSH MEMORY ELEMENT IF INIT      5582 -> reg4",
      "174229 PUSH MEMORY ELEMENT IF INIT      5583 -> reg7",
      "174232 PUSH MEMORY ELEMENT IF INIT      5582 -> reg8",
      "174235 PUSH MEMORY ELEMENT IF INIT      5585 -> reg12",
      "174238 GET      reg8[reg12] -> reg9",
      "174242 PUT      reg4[reg7] = reg9",
      "174246 PUSH MEMORY ELEMENT IF INIT      5582 -> reg8",
      "174249 PUSH MEMORY ELEMENT IF INIT      5585 -> reg7",
      "174252 PUSH MEMORY ELEMENT IF INIT      5584 -> reg4",
      "174255 PUT      reg8[reg7] = reg4",
      "174259 PUSH MEMORY ELEMENT IF INIT      5580 -> reg7",
      "174262 SET      1 -> reg8",
      "174265 ADD      reg7NaN-> reg8",
      "174269 SET MEMORY ELEMENT IF INIT      5580 = reg8",
      "174272 JUMP      174142",
      "174142 PUSH MEMORY ELEMENT IF INIT      5583 -> reg4",
      "174145 JUMP IF FALSE      reg4 TO: 174274 | 174148"
  ],
  "174274": [
      "174274 PUSH MEMORY ELEMENT IF INIT      5582 -> reg4",
      "174277 JUMP OR RETURN VAL      reg4"
  ],
  "174354": [
      "174354 PUSH MEMORY ELEMENT IF INIT      5596 -> reg4",
      "174357 SET      undefined -> reg5",
      "174360 STRICT EQUAL      reg4 === reg5 -> reg8",
      "174364 SET      reg8 -> reg6",
      "174367 JUMP IF FALSE      reg6 TO: 174378 | 174370"
  ],
  "174367": ["174367 JUMP IF FALSE      reg6 TO: 174378 | 174370"],
  "174370": [
      "174370 SET      undefined -> reg5",
      "174373 SET      reg5 -> reg4",
      "174376 JUMP      174390",
      "174390 SET MEMORY ELEMENT IF INIT      5597 = reg4",
      "174393 STRICT EQUAL      reg4 === null -> reg5",
      "174397 JUMP IF TRUE      reg5 TO: 174413 | 174400"
  ],
  "174378": [
      "174378 PUSH MEMORY ELEMENT IF INIT      5596 -> reg6",
      "174381 GET      reg6[video] -> reg5",
      "174387 SET      reg5 -> reg4",
      "174390 SET MEMORY ELEMENT IF INIT      5597 = reg4",
      "174393 STRICT EQUAL      reg4 === null -> reg5",
      "174397 JUMP IF TRUE      reg5 TO: 174413 | 174400"
  ],
  "174400": [
      "174400 PUSH MEMORY ELEMENT IF INIT      5597 -> reg4",
      "174403 SET      undefined -> reg6",
      "174406 STRICT EQUAL      reg4 === reg6 -> reg7",
      "174410 SET      reg7 -> reg5",
      "174413 JUMP IF FALSE      reg5 TO: 174424 | 174416"
  ],
  "174413": ["174413 JUMP IF FALSE      reg5 TO: 174424 | 174416"],
  "174416": [
      "174416 SET      undefined -> reg5",
      "174419 SET      reg5 -> reg4",
      "174422 JUMP      174452",
      "174452 SET MEMORY ELEMENT IF INIT      5598 = reg4",
      "174455 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "174459 JUMP IF FALSE      reg7 TO: 174475 | 174462"
  ],
  "174424": [
      "174424 PUSH MEMORY ELEMENT IF INIT      5597 -> reg6",
      "174427 GET      reg6[canPlayType] -> reg7",
      "174433 NEW ARRAY      1 -> reg8",
      "174436 PUT      reg8[0] = video/webm; codecs=\"vp8, vorbis\"",
      "174442 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "174446 SET      reg2 -> reg5",
      "174449 SET      reg5 -> reg4",
      "174452 SET MEMORY ELEMENT IF INIT      5598 = reg4",
      "174455 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "174459 JUMP IF FALSE      reg7 TO: 174475 | 174462"
  ],
  "174462": [
      "174462 PUSH MEMORY ELEMENT IF INIT      5598 -> reg5",
      "174465 SET      undefined -> reg8",
      "174468 STRICT NOT EQUAL      reg5 !== reg8 -> reg9",
      "174472 SET      reg9 -> reg7",
      "174475 JUMP IF FALSE      reg7 TO: 174486 | 174478"
  ],
  "174475": ["174475 JUMP IF FALSE      reg7 TO: 174486 | 174478"],
  "174478": [
      "174478 PUSH MEMORY ELEMENT IF INIT      5598 -> reg7",
      "174481 SET      reg7 -> reg4",
      "174484 JUMP      174491",
      "174491 JUMP OR RETURN VAL      reg4"
  ],
  "174486": [
      "174486 SET      no -> reg4",
      "174491 JUMP OR RETURN VAL      reg4"
  ],
  "174583": [
      "174583 SET      1 -> reg6",
      "174586 JUMP      174591",
      "174591 JUMP OR RETURN VAL      reg6"
  ],
  "174588": [
      "174588 SET      0 -> reg6",
      "174591 JUMP OR RETURN VAL      reg6"
  ],
  "174683": [
      "174683 PUSH MEMORY ELEMENT IF INIT      5613 -> reg5",
      "174686 SET      undefined -> reg8",
      "174689 STRICT EQUAL      reg5 === reg8 -> reg7",
      "174693 SET      reg7 -> reg4",
      "174696 JUMP IF FALSE      reg4 TO: 174707 | 174699"
  ],
  "174696": ["174696 JUMP IF FALSE      reg4 TO: 174707 | 174699"],
  "174699": [
      "174699 SET      undefined -> reg4",
      "174702 SET      reg4 -> reg5",
      "174705 JUMP      174725",
      "174725 SET MEMORY ELEMENT IF INIT      5614 = reg5",
      "174728 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "174732 JUMP IF FALSE      reg6 TO: 174748 | 174735"
  ],
  "174707": [
      "174707 PUSH MEMORY ELEMENT IF INIT      5613 -> reg4",
      "174710 GET      reg4[styleTags] -> reg7",
      "174716 GET      reg7[margin] -> reg4",
      "174722 SET      reg4 -> reg5",
      "174725 SET MEMORY ELEMENT IF INIT      5614 = reg5",
      "174728 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "174732 JUMP IF FALSE      reg6 TO: 174748 | 174735"
  ],
  "174735": [
      "174735 PUSH MEMORY ELEMENT IF INIT      5614 -> reg5",
      "174738 SET      undefined -> reg4",
      "174741 STRICT NOT EQUAL      reg5 !== reg4 -> reg8",
      "174745 SET      reg8 -> reg6",
      "174748 JUMP IF FALSE      reg6 TO: 174759 | 174751"
  ],
  "174748": ["174748 JUMP IF FALSE      reg6 TO: 174759 | 174751"],
  "174751": [
      "174751 PUSH MEMORY ELEMENT IF INIT      5614 -> reg5",
      "174754 SET      reg5 -> reg4",
      "174757 JUMP      174762",
      "174762 JUMP OR RETURN VAL      reg4"
  ],
  "174759": [
      "174759 SET      0 -> reg4",
      "174762 JUMP OR RETURN VAL      reg4"
  ],
  "174850": [
      "174850 PUSH MEMORY ELEMENT IF INIT      276 -> reg5",
      "174853 SET      reg5 -> reg9",
      "174856 JUMP      174866",
      "174866 SET MEMORY ELEMENT IF INIT      5621 = reg9",
      "174869 PUSH MEMORY ELEMENT IF INIT      5621 -> reg4",
      "174872 TYPEOF      reg4 -> reg5",
      "174875 STRICT NOT EQUAL      reg5 !== string -> reg4",
      "174881 JUMP IF FALSE      reg4 TO: 174886 | 174884"
  ],
  "174858": [
      "174858 GET WINDOW PROP      testValue -> reg4",
      "174863 SET      reg4 -> reg9",
      "174866 SET MEMORY ELEMENT IF INIT      5621 = reg9",
      "174869 PUSH MEMORY ELEMENT IF INIT      5621 -> reg4",
      "174872 TYPEOF      reg4 -> reg5",
      "174875 STRICT NOT EQUAL      reg5 !== string -> reg4",
      "174881 JUMP IF FALSE      reg4 TO: 174886 | 174884"
  ],
  "174884": ["174884 JUMP OR RETURN VAL      null"],
  "174886": [
      "174886 PUSH MEMORY ELEMENT IF INIT      5621 -> reg5",
      "174889 GET      reg5[slice] -> reg6",
      "174895 NEW ARRAY      2 -> reg7",
      "174898 PUT      reg7[0] = 0",
      "174902 PUT      reg7[1] = 256",
      "174906 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "174910 SET      reg2 -> reg4",
      "174913 JUMP OR RETURN VAL      reg4"
  ],
  "175096": [
      "175096 PUSH MEMORY ELEMENT IF INIT      5631 -> reg4",
      "175099 SET      undefined -> reg6",
      "175102 STRICT EQUAL      reg4 === reg6 -> reg7",
      "175106 SET      reg7 -> reg5",
      "175109 JUMP IF FALSE      reg5 TO: 175120 | 175112"
  ],
  "175109": ["175109 JUMP IF FALSE      reg5 TO: 175120 | 175112"],
  "175112": [
      "175112 SET      undefined -> reg5",
      "175115 SET      reg5 -> reg4",
      "175118 JUMP      175132",
      "175132 SET MEMORY ELEMENT IF INIT      5632 = reg4",
      "175135 STRICT EQUAL      reg4 === null -> reg5",
      "175139 JUMP IF TRUE      reg5 TO: 175155 | 175142"
  ],
  "175120": [
      "175120 PUSH MEMORY ELEMENT IF INIT      5631 -> reg5",
      "175123 GET      reg5[audio] -> reg6",
      "175129 SET      reg6 -> reg4",
      "175132 SET MEMORY ELEMENT IF INIT      5632 = reg4",
      "175135 STRICT EQUAL      reg4 === null -> reg5",
      "175139 JUMP IF TRUE      reg5 TO: 175155 | 175142"
  ],
  "175142": [
      "175142 PUSH MEMORY ELEMENT IF INIT      5632 -> reg4",
      "175145 SET      undefined -> reg6",
      "175148 STRICT EQUAL      reg4 === reg6 -> reg8",
      "175152 SET      reg8 -> reg5",
      "175155 JUMP IF FALSE      reg5 TO: 175166 | 175158"
  ],
  "175155": ["175155 JUMP IF FALSE      reg5 TO: 175166 | 175158"],
  "175158": [
      "175158 SET      undefined -> reg5",
      "175161 SET      reg5 -> reg4",
      "175164 JUMP      175194",
      "175194 SET MEMORY ELEMENT IF INIT      5633 = reg4",
      "175197 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "175201 JUMP IF FALSE      reg7 TO: 175217 | 175204"
  ],
  "175166": [
      "175166 PUSH MEMORY ELEMENT IF INIT      5632 -> reg6",
      "175169 GET      reg6[canPlayType] -> reg12",
      "175175 NEW ARRAY      1 -> reg9",
      "175178 PUT      reg9[0] = audio/ogg; codecs=\"vorbis\"",
      "175184 CALL FUNCTION      OBJ: reg6 FUNC: reg12 ARGS: reg9",
      "175188 SET      reg2 -> reg5",
      "175191 SET      reg5 -> reg4",
      "175194 SET MEMORY ELEMENT IF INIT      5633 = reg4",
      "175197 STRICT NOT EQUAL      reg4 !== null -> reg7",
      "175201 JUMP IF FALSE      reg7 TO: 175217 | 175204"
  ],
  "175204": [
      "175204 PUSH MEMORY ELEMENT IF INIT      5633 -> reg4",
      "175207 SET      undefined -> reg8",
      "175210 STRICT NOT EQUAL      reg4 !== reg8 -> reg5",
      "175214 SET      reg5 -> reg7",
      "175217 JUMP IF FALSE      reg7 TO: 175228 | 175220"
  ],
  "175217": ["175217 JUMP IF FALSE      reg7 TO: 175228 | 175220"],
  "175220": [
      "175220 PUSH MEMORY ELEMENT IF INIT      5633 -> reg5",
      "175223 SET      reg5 -> reg4",
      "175226 JUMP      175233",
      "175233 JUMP OR RETURN VAL      reg4"
  ],
  "175228": [
      "175228 SET      no -> reg4",
      "175233 JUMP OR RETURN VAL      reg4"
  ],
  "175327": [
      "175327 PUSH MEMORY ELEMENT IF INIT      5644 -> reg7",
      "175330 SET      undefined -> reg4",
      "175333 STRICT EQUAL      reg7 === reg4 -> reg6",
      "175337 SET      reg6 -> reg5",
      "175340 JUMP IF FALSE      reg5 TO: 175351 | 175343"
  ],
  "175340": ["175340 JUMP IF FALSE      reg5 TO: 175351 | 175343"],
  "175343": [
      "175343 SET      undefined -> reg4",
      "175346 SET      reg4 -> reg7",
      "175349 JUMP      175363",
      "175363 SET MEMORY ELEMENT IF INIT      5645 = reg7",
      "175366 STRICT EQUAL      reg7 === null -> reg4",
      "175370 JUMP IF TRUE      reg4 TO: 175386 | 175373"
  ],
  "175351": [
      "175351 PUSH MEMORY ELEMENT IF INIT      5644 -> reg4",
      "175354 GET      reg4[video] -> reg6",
      "175360 SET      reg6 -> reg7",
      "175363 SET MEMORY ELEMENT IF INIT      5645 = reg7",
      "175366 STRICT EQUAL      reg7 === null -> reg4",
      "175370 JUMP IF TRUE      reg4 TO: 175386 | 175373"
  ],
  "175373": [
      "175373 PUSH MEMORY ELEMENT IF INIT      5645 -> reg5",
      "175376 SET      undefined -> reg7",
      "175379 STRICT EQUAL      reg5 === reg7 -> reg6",
      "175383 SET      reg6 -> reg4",
      "175386 JUMP IF FALSE      reg4 TO: 175397 | 175389"
  ],
  "175386": ["175386 JUMP IF FALSE      reg4 TO: 175397 | 175389"],
  "175389": [
      "175389 SET      undefined -> reg4",
      "175392 SET      reg4 -> reg5",
      "175395 JUMP      175425",
      "175425 SET MEMORY ELEMENT IF INIT      5646 = reg5",
      "175428 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "175432 JUMP IF FALSE      reg6 TO: 175448 | 175435"
  ],
  "175397": [
      "175397 PUSH MEMORY ELEMENT IF INIT      5645 -> reg4",
      "175400 GET      reg4[canPlayType] -> reg8",
      "175406 NEW ARRAY      1 -> reg6",
      "175409 PUT      reg6[0] = video/x-mpeg",
      "175415 CALL FUNCTION      OBJ: reg4 FUNC: reg8 ARGS: reg6",
      "175419 SET      reg2 -> reg9",
      "175422 SET      reg9 -> reg5",
      "175425 SET MEMORY ELEMENT IF INIT      5646 = reg5",
      "175428 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "175432 JUMP IF FALSE      reg6 TO: 175448 | 175435"
  ],
  "175435": [
      "175435 PUSH MEMORY ELEMENT IF INIT      5646 -> reg5",
      "175438 SET      undefined -> reg7",
      "175441 STRICT NOT EQUAL      reg5 !== reg7 -> reg10",
      "175445 SET      reg10 -> reg6",
      "175448 JUMP IF FALSE      reg6 TO: 175459 | 175451"
  ],
  "175448": ["175448 JUMP IF FALSE      reg6 TO: 175459 | 175451"],
  "175451": [
      "175451 PUSH MEMORY ELEMENT IF INIT      5646 -> reg6",
      "175454 SET      reg6 -> reg5",
      "175457 JUMP      175464",
      "175464 JUMP OR RETURN VAL      reg5"
  ],
  "175459": [
      "175459 SET      no -> reg5",
      "175464 JUMP OR RETURN VAL      reg5"
  ],
  "175571": [
      "175571 PUSH MEMORY ELEMENT IF INIT      5656 -> reg6",
      "175574 SET      undefined -> reg5",
      "175577 STRICT NOT EQUAL      reg6 !== reg5 -> reg7",
      "175581 SET      reg7 -> reg4",
      "175584 JUMP IF FALSE      reg4 TO: 175595 | 175587"
  ],
  "175584": ["175584 JUMP IF FALSE      reg4 TO: 175595 | 175587"],
  "175587": [
      "175587 PUSH MEMORY ELEMENT IF INIT      5656 -> reg4",
      "175590 SET      reg4 -> reg6",
      "175593 JUMP      175598",
      "175598 JUMP OR RETURN VAL      reg6"
  ],
  "175595": [
      "175595 SET      null -> reg6",
      "175598 JUMP OR RETURN VAL      reg6"
  ],
  "175690": [
      "175690 PUSH MEMORY ELEMENT IF INIT      5663 -> reg4",
      "175693 SET      undefined -> reg6",
      "175696 STRICT EQUAL      reg4 === reg6 -> reg7",
      "175700 SET      reg7 -> reg5",
      "175703 JUMP IF FALSE      reg5 TO: 175714 | 175706"
  ],
  "175703": ["175703 JUMP IF FALSE      reg5 TO: 175714 | 175706"],
  "175706": [
      "175706 SET      undefined -> reg5",
      "175709 SET      reg5 -> reg4",
      "175712 JUMP      175732",
      "175732 SET MEMORY ELEMENT IF INIT      5664 = reg4",
      "175735 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "175739 JUMP IF FALSE      reg5 TO: 175755 | 175742"
  ],
  "175714": [
      "175714 PUSH MEMORY ELEMENT IF INIT      5663 -> reg5",
      "175717 GET      reg5[styleTags] -> reg6",
      "175723 GET      reg6[text] -> reg5",
      "175729 SET      reg5 -> reg4",
      "175732 SET MEMORY ELEMENT IF INIT      5664 = reg4",
      "175735 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "175739 JUMP IF FALSE      reg5 TO: 175755 | 175742"
  ],
  "175742": [
      "175742 PUSH MEMORY ELEMENT IF INIT      5664 -> reg4",
      "175745 SET      undefined -> reg6",
      "175748 STRICT NOT EQUAL      reg4 !== reg6 -> reg8",
      "175752 SET      reg8 -> reg5",
      "175755 JUMP IF FALSE      reg5 TO: 175766 | 175758"
  ],
  "175755": ["175755 JUMP IF FALSE      reg5 TO: 175766 | 175758"],
  "175758": [
      "175758 PUSH MEMORY ELEMENT IF INIT      5664 -> reg7",
      "175761 SET      reg7 -> reg4",
      "175764 JUMP      175769",
      "175769 JUMP OR RETURN VAL      reg4"
  ],
  "175766": [
      "175766 SET      0 -> reg4",
      "175769 JUMP OR RETURN VAL      reg4"
  ],
  "175863": [
      "175863 PUSH MEMORY ELEMENT IF INIT      5671 -> reg5",
      "175866 GET      reg5[rkg] -> reg8",
      "175872 GET      reg8[scrollbars] -> reg4",
      "175878 GET      reg4[visible] -> reg5",
      "175884 SET      reg5 -> reg6",
      "175887 SET MEMORY ELEMENT IF INIT      5672 = reg6",
      "175890 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "175894 JUMP IF FALSE      reg4 TO: 175910 | 175897"
  ],
  "175887": [
      "175887 SET MEMORY ELEMENT IF INIT      5672 = reg6",
      "175890 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "175894 JUMP IF FALSE      reg4 TO: 175910 | 175897"
  ],
  "175897": [
      "175897 PUSH MEMORY ELEMENT IF INIT      5672 -> reg5",
      "175900 SET      undefined -> reg7",
      "175903 STRICT NOT EQUAL      reg5 !== reg7 -> reg6",
      "175907 SET      reg6 -> reg4",
      "175910 JUMP IF FALSE      reg4 TO: 175921 | 175913"
  ],
  "175910": ["175910 JUMP IF FALSE      reg4 TO: 175921 | 175913"],
  "175913": [
      "175913 PUSH MEMORY ELEMENT IF INIT      5672 -> reg4",
      "175916 SET      reg4 -> reg5",
      "175919 JUMP      175924",
      "175924 JUMP OR RETURN VAL      reg5"
  ],
  "175921": [
      "175921 SET      false -> reg5",
      "175924 JUMP OR RETURN VAL      reg5"
  ],
  "176029": [
      "176029 GET      [concat] -> reg5",
      "176037 NEW ARRAY      1 -> reg6",
      "176040 PUSH MEMORY ELEMENT IF INIT      5678 -> reg7",
      "176043 GET      reg7[npx] -> reg10",
      "176049 GET      reg10[document] -> reg7",
      "176055 GET      reg7[body] -> reg8",
      "176061 GET      reg8[clientWidth] -> reg9",
      "176067 PUT      reg6[0] = reg9",
      "176071 CALL FUNCTION      OBJ:  FUNC: reg5 ARGS: reg6",
      "176077 SET      reg2 -> reg4",
      "176080 SET MEMORY ELEMENT IF INIT      5679 = reg4",
      "176083 PUSH MEMORY ELEMENT IF INIT      5679 -> reg5",
      "176086 JUMP OR RETURN VAL      reg5"
  ],
  "176083": [
      "176083 PUSH MEMORY ELEMENT IF INIT      5679 -> reg5",
      "176086 JUMP OR RETURN VAL      reg5"
  ],
  "176297": [
      "176297 PUSH MEMORY ELEMENT IF INIT      5690 -> reg4",
      "176300 SET      undefined -> reg8",
      "176303 STRICT EQUAL      reg4 === reg8 -> reg5",
      "176307 SET      reg5 -> reg7",
      "176310 JUMP IF FALSE      reg7 TO: 176321 | 176313"
  ],
  "176310": ["176310 JUMP IF FALSE      reg7 TO: 176321 | 176313"],
  "176313": [
      "176313 SET      undefined -> reg5",
      "176316 SET      reg5 -> reg4",
      "176319 JUMP      176333",
      "176333 SET MEMORY ELEMENT IF INIT      5691 = reg4",
      "176336 STRICT EQUAL      reg4 === null -> reg5",
      "176340 JUMP IF TRUE      reg5 TO: 176356 | 176343"
  ],
  "176321": [
      "176321 PUSH MEMORY ELEMENT IF INIT      5690 -> reg6",
      "176324 GET      reg6[video] -> reg5",
      "176330 SET      reg5 -> reg4",
      "176333 SET MEMORY ELEMENT IF INIT      5691 = reg4",
      "176336 STRICT EQUAL      reg4 === null -> reg5",
      "176340 JUMP IF TRUE      reg5 TO: 176356 | 176343"
  ],
  "176343": [
      "176343 PUSH MEMORY ELEMENT IF INIT      5691 -> reg4",
      "176346 SET      undefined -> reg6",
      "176349 STRICT EQUAL      reg4 === reg6 -> reg7",
      "176353 SET      reg7 -> reg5",
      "176356 JUMP IF FALSE      reg5 TO: 176367 | 176359"
  ],
  "176356": ["176356 JUMP IF FALSE      reg5 TO: 176367 | 176359"],
  "176359": [
      "176359 SET      undefined -> reg5",
      "176362 SET      reg5 -> reg4",
      "176365 JUMP      176395",
      "176395 SET MEMORY ELEMENT IF INIT      5692 = reg4",
      "176398 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "176402 JUMP IF FALSE      reg5 TO: 176418 | 176405"
  ],
  "176367": [
      "176367 PUSH MEMORY ELEMENT IF INIT      5691 -> reg6",
      "176370 GET      reg6[canPlayType] -> reg7",
      "176376 NEW ARRAY      1 -> reg9",
      "176379 PUT      reg9[0] = video/mp4; codecs=bogus",
      "176385 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg9",
      "176389 SET      reg2 -> reg5",
      "176392 SET      reg5 -> reg4",
      "176395 SET MEMORY ELEMENT IF INIT      5692 = reg4",
      "176398 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "176402 JUMP IF FALSE      reg5 TO: 176418 | 176405"
  ],
  "176405": [
      "176405 PUSH MEMORY ELEMENT IF INIT      5692 -> reg4",
      "176408 SET      undefined -> reg8",
      "176411 STRICT NOT EQUAL      reg4 !== reg8 -> reg9",
      "176415 SET      reg9 -> reg5",
      "176418 JUMP IF FALSE      reg5 TO: 176429 | 176421"
  ],
  "176418": ["176418 JUMP IF FALSE      reg5 TO: 176429 | 176421"],
  "176421": [
      "176421 PUSH MEMORY ELEMENT IF INIT      5692 -> reg7",
      "176424 SET      reg7 -> reg4",
      "176427 JUMP      176434",
      "176434 JUMP OR RETURN VAL      reg4"
  ],
  "176429": [
      "176429 SET      no -> reg4",
      "176434 JUMP OR RETURN VAL      reg4"
  ],
  "176526": [
      "176526 PUSH MEMORY ELEMENT IF INIT      5703 -> reg4",
      "176529 SET      undefined -> reg9",
      "176532 STRICT EQUAL      reg4 === reg9 -> reg6",
      "176536 SET      reg6 -> reg5",
      "176539 JUMP IF FALSE      reg5 TO: 176550 | 176542"
  ],
  "176539": ["176539 JUMP IF FALSE      reg5 TO: 176550 | 176542"],
  "176542": [
      "176542 SET      undefined -> reg5",
      "176545 SET      reg5 -> reg4",
      "176548 JUMP      176568",
      "176568 SET MEMORY ELEMENT IF INIT      5704 = reg4",
      "176571 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "176575 JUMP IF FALSE      reg6 TO: 176591 | 176578"
  ],
  "176550": [
      "176550 PUSH MEMORY ELEMENT IF INIT      5703 -> reg5",
      "176553 GET      reg5[styleTags] -> reg9",
      "176559 GET      reg9[css] -> reg5",
      "176565 SET      reg5 -> reg4",
      "176568 SET MEMORY ELEMENT IF INIT      5704 = reg4",
      "176571 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "176575 JUMP IF FALSE      reg6 TO: 176591 | 176578"
  ],
  "176578": [
      "176578 PUSH MEMORY ELEMENT IF INIT      5704 -> reg4",
      "176581 SET      undefined -> reg5",
      "176584 STRICT NOT EQUAL      reg4 !== reg5 -> reg8",
      "176588 SET      reg8 -> reg6",
      "176591 JUMP IF FALSE      reg6 TO: 176602 | 176594"
  ],
  "176591": ["176591 JUMP IF FALSE      reg6 TO: 176602 | 176594"],
  "176594": [
      "176594 PUSH MEMORY ELEMENT IF INIT      5704 -> reg5",
      "176597 SET      reg5 -> reg4",
      "176600 JUMP      176605",
      "176605 JUMP OR RETURN VAL      reg4"
  ],
  "176602": [
      "176602 SET      0 -> reg4",
      "176605 JUMP OR RETURN VAL      reg4"
  ],
  "176818": [
      "176818 PUSH MEMORY ELEMENT IF INIT      5718 -> reg6",
      "176821 SET      undefined -> reg4",
      "176824 STRICT EQUAL      reg6 === reg4 -> reg5",
      "176828 SET      reg5 -> reg7",
      "176831 JUMP IF FALSE      reg7 TO: 176842 | 176834"
  ],
  "176831": ["176831 JUMP IF FALSE      reg7 TO: 176842 | 176834"],
  "176834": [
      "176834 SET      undefined -> reg5",
      "176837 SET      reg5 -> reg4",
      "176840 JUMP      176860",
      "176860 SET MEMORY ELEMENT IF INIT      5719 = reg4",
      "176863 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "176867 JUMP IF FALSE      reg5 TO: 176883 | 176870"
  ],
  "176842": [
      "176842 PUSH MEMORY ELEMENT IF INIT      5718 -> reg5",
      "176845 GET      reg5[styleTags] -> reg6",
      "176851 GET      reg6[flex] -> reg5",
      "176857 SET      reg5 -> reg4",
      "176860 SET MEMORY ELEMENT IF INIT      5719 = reg4",
      "176863 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "176867 JUMP IF FALSE      reg5 TO: 176883 | 176870"
  ],
  "176870": [
      "176870 PUSH MEMORY ELEMENT IF INIT      5719 -> reg4",
      "176873 SET      undefined -> reg6",
      "176876 STRICT NOT EQUAL      reg4 !== reg6 -> reg9",
      "176880 SET      reg9 -> reg5",
      "176883 JUMP IF FALSE      reg5 TO: 176894 | 176886"
  ],
  "176883": ["176883 JUMP IF FALSE      reg5 TO: 176894 | 176886"],
  "176886": [
      "176886 PUSH MEMORY ELEMENT IF INIT      5719 -> reg6",
      "176889 SET      reg6 -> reg4",
      "176892 JUMP      176897",
      "176897 JUMP OR RETURN VAL      reg4"
  ],
  "176894": [
      "176894 SET      0 -> reg4",
      "176897 JUMP OR RETURN VAL      reg4"
  ],
  "176991": [
      "176991 PUSH MEMORY ELEMENT IF INIT      5728 -> reg6",
      "176994 SET      undefined -> reg4",
      "176997 STRICT EQUAL      reg6 === reg4 -> reg9",
      "177001 SET      reg9 -> reg5",
      "177004 JUMP IF FALSE      reg5 TO: 177015 | 177007"
  ],
  "177004": ["177004 JUMP IF FALSE      reg5 TO: 177015 | 177007"],
  "177007": [
      "177007 SET      undefined -> reg4",
      "177010 SET      reg4 -> reg6",
      "177013 JUMP      177027",
      "177027 SET MEMORY ELEMENT IF INIT      5729 = reg6",
      "177030 STRICT EQUAL      reg6 === null -> reg4",
      "177034 JUMP IF TRUE      reg4 TO: 177050 | 177037"
  ],
  "177015": [
      "177015 PUSH MEMORY ELEMENT IF INIT      5728 -> reg5",
      "177018 GET      reg5[audio] -> reg7",
      "177024 SET      reg7 -> reg6",
      "177027 SET MEMORY ELEMENT IF INIT      5729 = reg6",
      "177030 STRICT EQUAL      reg6 === null -> reg4",
      "177034 JUMP IF TRUE      reg4 TO: 177050 | 177037"
  ],
  "177037": [
      "177037 PUSH MEMORY ELEMENT IF INIT      5729 -> reg5",
      "177040 SET      undefined -> reg6",
      "177043 STRICT EQUAL      reg5 === reg6 -> reg7",
      "177047 SET      reg7 -> reg4",
      "177050 JUMP IF FALSE      reg4 TO: 177061 | 177053"
  ],
  "177050": ["177050 JUMP IF FALSE      reg4 TO: 177061 | 177053"],
  "177053": [
      "177053 SET      undefined -> reg4",
      "177056 SET      reg4 -> reg5",
      "177059 JUMP      177089",
      "177089 SET MEMORY ELEMENT IF INIT      5730 = reg5",
      "177092 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "177096 JUMP IF FALSE      reg4 TO: 177112 | 177099"
  ],
  "177061": [
      "177061 PUSH MEMORY ELEMENT IF INIT      5729 -> reg6",
      "177064 GET      reg6[canPlayType] -> reg7",
      "177070 NEW ARRAY      1 -> reg10",
      "177073 PUT      reg10[0] = audio/wav; codecs=\"1\"",
      "177079 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg10",
      "177083 SET      reg2 -> reg4",
      "177086 SET      reg4 -> reg5",
      "177089 SET MEMORY ELEMENT IF INIT      5730 = reg5",
      "177092 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "177096 JUMP IF FALSE      reg4 TO: 177112 | 177099"
  ],
  "177099": [
      "177099 PUSH MEMORY ELEMENT IF INIT      5730 -> reg7",
      "177102 SET      undefined -> reg5",
      "177105 STRICT NOT EQUAL      reg7 !== reg5 -> reg8",
      "177109 SET      reg8 -> reg4",
      "177112 JUMP IF FALSE      reg4 TO: 177123 | 177115"
  ],
  "177112": ["177112 JUMP IF FALSE      reg4 TO: 177123 | 177115"],
  "177115": [
      "177115 PUSH MEMORY ELEMENT IF INIT      5730 -> reg7",
      "177118 SET      reg7 -> reg5",
      "177121 JUMP      177128",
      "177128 JUMP OR RETURN VAL      reg5"
  ],
  "177123": [
      "177123 SET      no -> reg5",
      "177128 JUMP OR RETURN VAL      reg5"
  ],
  "177321": [
      "177321 PUSH MEMORY ELEMENT IF INIT      5744 -> reg4",
      "177324 SET      undefined -> reg6",
      "177327 STRICT EQUAL      reg4 === reg6 -> reg7",
      "177331 SET      reg7 -> reg5",
      "177334 JUMP IF FALSE      reg5 TO: 177345 | 177337"
  ],
  "177334": ["177334 JUMP IF FALSE      reg5 TO: 177345 | 177337"],
  "177337": [
      "177337 SET      undefined -> reg5",
      "177340 SET      reg5 -> reg4",
      "177343 JUMP      177363",
      "177363 SET MEMORY ELEMENT IF INIT      5745 = reg4",
      "177366 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "177370 JUMP IF FALSE      reg5 TO: 177386 | 177373"
  ],
  "177345": [
      "177345 PUSH MEMORY ELEMENT IF INIT      5744 -> reg8",
      "177348 GET      reg8[styleTags] -> reg5",
      "177354 GET      reg5[stroke] -> reg7",
      "177360 SET      reg7 -> reg4",
      "177363 SET MEMORY ELEMENT IF INIT      5745 = reg4",
      "177366 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "177370 JUMP IF FALSE      reg5 TO: 177386 | 177373"
  ],
  "177373": [
      "177373 PUSH MEMORY ELEMENT IF INIT      5745 -> reg4",
      "177376 SET      undefined -> reg7",
      "177379 STRICT NOT EQUAL      reg4 !== reg7 -> reg6",
      "177383 SET      reg6 -> reg5",
      "177386 JUMP IF FALSE      reg5 TO: 177397 | 177389"
  ],
  "177386": ["177386 JUMP IF FALSE      reg5 TO: 177397 | 177389"],
  "177389": [
      "177389 PUSH MEMORY ELEMENT IF INIT      5745 -> reg4",
      "177392 SET      reg4 -> reg8",
      "177395 JUMP      177400",
      "177400 JUMP OR RETURN VAL      reg8"
  ],
  "177397": [
      "177397 SET      0 -> reg8",
      "177400 JUMP OR RETURN VAL      reg8"
  ],
  "177494": [
      "177494 PUSH MEMORY ELEMENT IF INIT      5754 -> reg4",
      "177497 SET      undefined -> reg9",
      "177500 STRICT EQUAL      reg4 === reg9 -> reg5",
      "177504 SET      reg5 -> reg6",
      "177507 JUMP IF FALSE      reg6 TO: 177518 | 177510"
  ],
  "177507": ["177507 JUMP IF FALSE      reg6 TO: 177518 | 177510"],
  "177510": [
      "177510 SET      undefined -> reg5",
      "177513 SET      reg5 -> reg4",
      "177516 JUMP      177530",
      "177530 SET MEMORY ELEMENT IF INIT      5755 = reg4",
      "177533 STRICT EQUAL      reg4 === null -> reg5",
      "177537 JUMP IF TRUE      reg5 TO: 177553 | 177540"
  ],
  "177518": [
      "177518 PUSH MEMORY ELEMENT IF INIT      5754 -> reg6",
      "177521 GET      reg6[video] -> reg7",
      "177527 SET      reg7 -> reg4",
      "177530 SET MEMORY ELEMENT IF INIT      5755 = reg4",
      "177533 STRICT EQUAL      reg4 === null -> reg5",
      "177537 JUMP IF TRUE      reg5 TO: 177553 | 177540"
  ],
  "177540": [
      "177540 PUSH MEMORY ELEMENT IF INIT      5755 -> reg6",
      "177543 SET      undefined -> reg4",
      "177546 STRICT EQUAL      reg6 === reg4 -> reg7",
      "177550 SET      reg7 -> reg5",
      "177553 JUMP IF FALSE      reg5 TO: 177564 | 177556"
  ],
  "177553": ["177553 JUMP IF FALSE      reg5 TO: 177564 | 177556"],
  "177556": [
      "177556 SET      undefined -> reg4",
      "177559 SET      reg4 -> reg6",
      "177562 JUMP      177592",
      "177592 SET MEMORY ELEMENT IF INIT      5756 = reg6",
      "177595 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "177599 JUMP IF FALSE      reg4 TO: 177615 | 177602"
  ],
  "177564": [
      "177564 PUSH MEMORY ELEMENT IF INIT      5755 -> reg5",
      "177567 GET      reg5[canPlayType] -> reg7",
      "177573 NEW ARRAY      1 -> reg9",
      "177576 PUT      reg9[0] = video/ogg; codecs=opus",
      "177582 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg9",
      "177586 SET      reg2 -> reg4",
      "177589 SET      reg4 -> reg6",
      "177592 SET MEMORY ELEMENT IF INIT      5756 = reg6",
      "177595 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "177599 JUMP IF FALSE      reg4 TO: 177615 | 177602"
  ],
  "177602": [
      "177602 PUSH MEMORY ELEMENT IF INIT      5756 -> reg7",
      "177605 SET      undefined -> reg6",
      "177608 STRICT NOT EQUAL      reg7 !== reg6 -> reg9",
      "177612 SET      reg9 -> reg4",
      "177615 JUMP IF FALSE      reg4 TO: 177626 | 177618"
  ],
  "177615": ["177615 JUMP IF FALSE      reg4 TO: 177626 | 177618"],
  "177618": [
      "177618 PUSH MEMORY ELEMENT IF INIT      5756 -> reg7",
      "177621 SET      reg7 -> reg6",
      "177624 JUMP      177631",
      "177631 JUMP OR RETURN VAL      reg6"
  ],
  "177626": [
      "177626 SET      no -> reg6",
      "177631 JUMP OR RETURN VAL      reg6"
  ],
  "178031": [
      "178031 GET      reg3[1] -> reg6",
      "178035 GET WINDOW PROP      undefined -> reg4",
      "178040 STRICT NOT EQUAL      reg6 !== reg4 -> reg7",
      "178044 SET      reg7 -> reg5",
      "178047 JUMP IF FALSE      reg5 TO: 178059 | 178050"
  ],
  "178047": ["178047 JUMP IF FALSE      reg5 TO: 178059 | 178050"],
  "178050": [
      "178050 GET      reg3[1] -> reg4",
      "178054 SET      reg4 -> reg6",
      "178057 JUMP      178062",
      "178062 SET MEMORY ELEMENT IF INIT      5780 = reg6",
      "178065 PUSH MEMORY ELEMENT IF INIT      5779 -> reg5",
      "178068 GET      reg5[slice] -> reg6",
      "178074 NEW ARRAY      1 -> reg7",
      "178077 PUT      reg7[0] = 0",
      "178081 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "178085 SET      reg2 -> reg4",
      "178088 SET MEMORY ELEMENT IF INIT      5782 = reg4",
      "178091 PUSH MEMORY ELEMENT IF INIT      5782 -> reg7",
      "178094 GET      reg7[length] -> reg8",
      "178100 SET MEMORY ELEMENT IF INIT      5783 = reg8",
      "178103 PUSH MEMORY ELEMENT IF INIT      5783 -> reg4",
      "178106 JUMP IF FALSE      reg4 TO: 178235 | 178109"
  ],
  "178059": [
      "178059 SET      78012697 -> reg6",
      "178062 SET MEMORY ELEMENT IF INIT      5780 = reg6",
      "178065 PUSH MEMORY ELEMENT IF INIT      5779 -> reg5",
      "178068 GET      reg5[slice] -> reg6",
      "178074 NEW ARRAY      1 -> reg7",
      "178077 PUT      reg7[0] = 0",
      "178081 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg7",
      "178085 SET      reg2 -> reg4",
      "178088 SET MEMORY ELEMENT IF INIT      5782 = reg4",
      "178091 PUSH MEMORY ELEMENT IF INIT      5782 -> reg7",
      "178094 GET      reg7[length] -> reg8",
      "178100 SET MEMORY ELEMENT IF INIT      5783 = reg8",
      "178103 PUSH MEMORY ELEMENT IF INIT      5783 -> reg4",
      "178106 JUMP IF FALSE      reg4 TO: 178235 | 178109"
  ],
  "178109": [
      "178109 GET WINDOW PROP      Math -> reg6",
      "178114 GET      reg6[floor] -> reg8",
      "178120 NEW ARRAY      1 -> reg7",
      "178123 PUSH MEMORY ELEMENT IF INIT      5781 -> reg11",
      "178126 NEW ARRAY      1 -> reg12",
      "178129 PUSH MEMORY ELEMENT IF INIT      5780 -> reg10",
      "178132 PUT      reg12[0] = reg10",
      "178136 CALL FUNCTION      PTR: reg11 MEM: reg12",
      "178140 SET      reg2 -> reg9",
      "178143 PUSH MEMORY ELEMENT IF INIT      5783 -> reg10",
      "178146 SET      reg10 -> reg12",
      "178149 SUBTRACT      reg10 - 1 -> reg10",
      "178153 SET MEMORY ELEMENT IF INIT      5783 = reg10",
      "178156 MULTIPLY      reg9 * reg12 -> reg10",
      "178160 PUT      reg7[0] = reg10",
      "178164 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg7",
      "178168 SET      reg2 -> reg4",
      "178171 SET MEMORY ELEMENT IF INIT      5785 = reg4",
      "178174 PUSH MEMORY ELEMENT IF INIT      5782 -> reg4",
      "178177 PUSH MEMORY ELEMENT IF INIT      5783 -> reg8",
      "178180 GET      reg4[reg8] -> reg7",
      "178184 SET MEMORY ELEMENT IF INIT      5784 = reg7",
      "178187 PUSH MEMORY ELEMENT IF INIT      5782 -> reg4",
      "178190 PUSH MEMORY ELEMENT IF INIT      5783 -> reg7",
      "178193 PUSH MEMORY ELEMENT IF INIT      5782 -> reg8",
      "178196 PUSH MEMORY ELEMENT IF INIT      5785 -> reg11",
      "178199 GET      reg8[reg11] -> reg9",
      "178203 PUT      reg4[reg7] = reg9",
      "178207 PUSH MEMORY ELEMENT IF INIT      5782 -> reg7",
      "178210 PUSH MEMORY ELEMENT IF INIT      5785 -> reg4",
      "178213 PUSH MEMORY ELEMENT IF INIT      5784 -> reg8",
      "178216 PUT      reg7[reg4] = reg8",
      "178220 PUSH MEMORY ELEMENT IF INIT      5780 -> reg4",
      "178223 SET      1 -> reg9",
      "178226 ADD      reg4NaN-> reg9",
      "178230 SET MEMORY ELEMENT IF INIT      5780 = reg9",
      "178233 JUMP      178103",
      "178103 PUSH MEMORY ELEMENT IF INIT      5783 -> reg4",
      "178106 JUMP IF FALSE      reg4 TO: 178235 | 178109"
  ],
  "178235": [
      "178235 PUSH MEMORY ELEMENT IF INIT      5782 -> reg4",
      "178238 JUMP OR RETURN VAL      reg4"
  ],
  "178315": [
      "178315 PUSH MEMORY ELEMENT IF INIT      5794 -> reg4",
      "178318 GET      reg4[rkg] -> reg7",
      "178324 GET      reg7[personalbar] -> reg4",
      "178330 GET      reg4[visible] -> reg9",
      "178336 SET      reg9 -> reg5",
      "178339 SET MEMORY ELEMENT IF INIT      5795 = reg5",
      "178342 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "178346 JUMP IF FALSE      reg4 TO: 178362 | 178349"
  ],
  "178339": [
      "178339 SET MEMORY ELEMENT IF INIT      5795 = reg5",
      "178342 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "178346 JUMP IF FALSE      reg4 TO: 178362 | 178349"
  ],
  "178349": [
      "178349 PUSH MEMORY ELEMENT IF INIT      5795 -> reg7",
      "178352 SET      undefined -> reg5",
      "178355 STRICT NOT EQUAL      reg7 !== reg5 -> reg6",
      "178359 SET      reg6 -> reg4",
      "178362 JUMP IF FALSE      reg4 TO: 178373 | 178365"
  ],
  "178362": ["178362 JUMP IF FALSE      reg4 TO: 178373 | 178365"],
  "178365": [
      "178365 PUSH MEMORY ELEMENT IF INIT      5795 -> reg5",
      "178368 SET      reg5 -> reg6",
      "178371 JUMP      178376",
      "178376 JUMP OR RETURN VAL      reg6"
  ],
  "178373": [
      "178373 SET      false -> reg6",
      "178376 JUMP OR RETURN VAL      reg6"
  ],
  "178468": [
      "178468 PUSH MEMORY ELEMENT IF INIT      5803 -> reg4",
      "178471 SET      undefined -> reg6",
      "178474 STRICT EQUAL      reg4 === reg6 -> reg7",
      "178478 SET      reg7 -> reg5",
      "178481 JUMP IF FALSE      reg5 TO: 178492 | 178484"
  ],
  "178481": ["178481 JUMP IF FALSE      reg5 TO: 178492 | 178484"],
  "178484": [
      "178484 SET      undefined -> reg5",
      "178487 SET      reg5 -> reg4",
      "178490 JUMP      178510",
      "178510 SET MEMORY ELEMENT IF INIT      5804 = reg4",
      "178513 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "178517 JUMP IF FALSE      reg5 TO: 178533 | 178520"
  ],
  "178492": [
      "178492 PUSH MEMORY ELEMENT IF INIT      5803 -> reg5",
      "178495 GET      reg5[styleTags] -> reg6",
      "178501 GET      reg6[marker] -> reg5",
      "178507 SET      reg5 -> reg4",
      "178510 SET MEMORY ELEMENT IF INIT      5804 = reg4",
      "178513 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "178517 JUMP IF FALSE      reg5 TO: 178533 | 178520"
  ],
  "178520": [
      "178520 PUSH MEMORY ELEMENT IF INIT      5804 -> reg7",
      "178523 SET      undefined -> reg8",
      "178526 STRICT NOT EQUAL      reg7 !== reg8 -> reg4",
      "178530 SET      reg4 -> reg5",
      "178533 JUMP IF FALSE      reg5 TO: 178544 | 178536"
  ],
  "178533": ["178533 JUMP IF FALSE      reg5 TO: 178544 | 178536"],
  "178536": [
      "178536 PUSH MEMORY ELEMENT IF INIT      5804 -> reg5",
      "178539 SET      reg5 -> reg4",
      "178542 JUMP      178547",
      "178547 JUMP OR RETURN VAL      reg4"
  ],
  "178544": [
      "178544 SET      0 -> reg4",
      "178547 JUMP OR RETURN VAL      reg4"
  ],
  "178641": [
      "178641 PUSH MEMORY ELEMENT IF INIT      5813 -> reg6",
      "178644 SET      undefined -> reg4",
      "178647 STRICT EQUAL      reg6 === reg4 -> reg11",
      "178651 SET      reg11 -> reg5",
      "178654 JUMP IF FALSE      reg5 TO: 178665 | 178657"
  ],
  "178654": ["178654 JUMP IF FALSE      reg5 TO: 178665 | 178657"],
  "178657": [
      "178657 SET      undefined -> reg7",
      "178660 SET      reg7 -> reg6",
      "178663 JUMP      178677",
      "178677 SET MEMORY ELEMENT IF INIT      5814 = reg6",
      "178680 STRICT EQUAL      reg6 === null -> reg5",
      "178684 JUMP IF TRUE      reg5 TO: 178700 | 178687"
  ],
  "178665": [
      "178665 PUSH MEMORY ELEMENT IF INIT      5813 -> reg4",
      "178668 GET      reg4[video] -> reg5",
      "178674 SET      reg5 -> reg6",
      "178677 SET MEMORY ELEMENT IF INIT      5814 = reg6",
      "178680 STRICT EQUAL      reg6 === null -> reg5",
      "178684 JUMP IF TRUE      reg5 TO: 178700 | 178687"
  ],
  "178687": [
      "178687 PUSH MEMORY ELEMENT IF INIT      5814 -> reg4",
      "178690 SET      undefined -> reg8",
      "178693 STRICT EQUAL      reg4 === reg8 -> reg6",
      "178697 SET      reg6 -> reg5",
      "178700 JUMP IF FALSE      reg5 TO: 178711 | 178703"
  ],
  "178700": ["178700 JUMP IF FALSE      reg5 TO: 178711 | 178703"],
  "178703": [
      "178703 SET      undefined -> reg4",
      "178706 SET      reg4 -> reg6",
      "178709 JUMP      178739",
      "178739 SET MEMORY ELEMENT IF INIT      5815 = reg6",
      "178742 STRICT NOT EQUAL      reg6 !== null -> reg8",
      "178746 JUMP IF FALSE      reg8 TO: 178762 | 178749"
  ],
  "178711": [
      "178711 PUSH MEMORY ELEMENT IF INIT      5814 -> reg5",
      "178714 GET      reg5[canPlayType] -> reg4",
      "178720 NEW ARRAY      1 -> reg9",
      "178723 PUT      reg9[0] = video/mp4;",
      "178729 CALL FUNCTION      OBJ: reg5 FUNC: reg4 ARGS: reg9",
      "178733 SET      reg2 -> reg7",
      "178736 SET      reg7 -> reg6",
      "178739 SET MEMORY ELEMENT IF INIT      5815 = reg6",
      "178742 STRICT NOT EQUAL      reg6 !== null -> reg8",
      "178746 JUMP IF FALSE      reg8 TO: 178762 | 178749"
  ],
  "178749": [
      "178749 PUSH MEMORY ELEMENT IF INIT      5815 -> reg4",
      "178752 SET      undefined -> reg6",
      "178755 STRICT NOT EQUAL      reg4 !== reg6 -> reg10",
      "178759 SET      reg10 -> reg8",
      "178762 JUMP IF FALSE      reg8 TO: 178773 | 178765"
  ],
  "178762": ["178762 JUMP IF FALSE      reg8 TO: 178773 | 178765"],
  "178765": [
      "178765 PUSH MEMORY ELEMENT IF INIT      5815 -> reg7",
      "178768 SET      reg7 -> reg4",
      "178771 JUMP      178778",
      "178778 JUMP OR RETURN VAL      reg4"
  ],
  "178773": [
      "178773 SET      no -> reg4",
      "178778 JUMP OR RETURN VAL      reg4"
  ],
  "179292": [
      "179292 PUSH MEMORY ELEMENT IF INIT      5842 -> reg4",
      "179295 SET      undefined -> reg6",
      "179298 STRICT EQUAL      reg4 === reg6 -> reg9",
      "179302 SET      reg9 -> reg5",
      "179305 JUMP IF FALSE      reg5 TO: 179316 | 179308"
  ],
  "179305": ["179305 JUMP IF FALSE      reg5 TO: 179316 | 179308"],
  "179308": [
      "179308 SET      undefined -> reg5",
      "179311 SET      reg5 -> reg6",
      "179314 JUMP      179334",
      "179334 SET MEMORY ELEMENT IF INIT      5843 = reg6",
      "179337 STRICT NOT EQUAL      reg6 !== null -> reg5",
      "179341 JUMP IF FALSE      reg5 TO: 179357 | 179344"
  ],
  "179316": [
      "179316 PUSH MEMORY ELEMENT IF INIT      5842 -> reg4",
      "179319 GET      reg4[styleTags] -> reg8",
      "179325 GET      reg8[mask] -> reg4",
      "179331 SET      reg4 -> reg6",
      "179334 SET MEMORY ELEMENT IF INIT      5843 = reg6",
      "179337 STRICT NOT EQUAL      reg6 !== null -> reg5",
      "179341 JUMP IF FALSE      reg5 TO: 179357 | 179344"
  ],
  "179344": [
      "179344 PUSH MEMORY ELEMENT IF INIT      5843 -> reg4",
      "179347 SET      undefined -> reg6",
      "179350 STRICT NOT EQUAL      reg4 !== reg6 -> reg7",
      "179354 SET      reg7 -> reg5",
      "179357 JUMP IF FALSE      reg5 TO: 179368 | 179360"
  ],
  "179357": ["179357 JUMP IF FALSE      reg5 TO: 179368 | 179360"],
  "179360": [
      "179360 PUSH MEMORY ELEMENT IF INIT      5843 -> reg5",
      "179363 SET      reg5 -> reg4",
      "179366 JUMP      179371",
      "179371 JUMP OR RETURN VAL      reg4"
  ],
  "179368": [
      "179368 SET      0 -> reg4",
      "179371 JUMP OR RETURN VAL      reg4"
  ],
  "179800": [
      "179800 PUSH MEMORY ELEMENT IF INIT      5865 -> reg6",
      "179803 SET      undefined -> reg4",
      "179806 STRICT EQUAL      reg6 === reg4 -> reg7",
      "179810 SET      reg7 -> reg5",
      "179813 JUMP IF FALSE      reg5 TO: 179824 | 179816"
  ],
  "179813": ["179813 JUMP IF FALSE      reg5 TO: 179824 | 179816"],
  "179816": [
      "179816 SET      undefined -> reg5",
      "179819 SET      reg5 -> reg4",
      "179822 JUMP      179836",
      "179836 SET MEMORY ELEMENT IF INIT      5866 = reg4",
      "179839 STRICT EQUAL      reg4 === null -> reg5",
      "179843 JUMP IF TRUE      reg5 TO: 179859 | 179846"
  ],
  "179824": [
      "179824 PUSH MEMORY ELEMENT IF INIT      5865 -> reg6",
      "179827 GET      reg6[audio] -> reg5",
      "179833 SET      reg5 -> reg4",
      "179836 SET MEMORY ELEMENT IF INIT      5866 = reg4",
      "179839 STRICT EQUAL      reg4 === null -> reg5",
      "179843 JUMP IF TRUE      reg5 TO: 179859 | 179846"
  ],
  "179846": [
      "179846 PUSH MEMORY ELEMENT IF INIT      5866 -> reg4",
      "179849 SET      undefined -> reg6",
      "179852 STRICT EQUAL      reg4 === reg6 -> reg7",
      "179856 SET      reg7 -> reg5",
      "179859 JUMP IF FALSE      reg5 TO: 179870 | 179862"
  ],
  "179859": ["179859 JUMP IF FALSE      reg5 TO: 179870 | 179862"],
  "179862": [
      "179862 SET      undefined -> reg4",
      "179865 SET      reg4 -> reg6",
      "179868 JUMP      179898",
      "179898 SET MEMORY ELEMENT IF INIT      5867 = reg6",
      "179901 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "179905 JUMP IF FALSE      reg4 TO: 179921 | 179908"
  ],
  "179870": [
      "179870 PUSH MEMORY ELEMENT IF INIT      5866 -> reg5",
      "179873 GET      reg5[canPlayType] -> reg8",
      "179879 NEW ARRAY      1 -> reg9",
      "179882 PUT      reg9[0] = audio/x-mpeg",
      "179888 CALL FUNCTION      OBJ: reg5 FUNC: reg8 ARGS: reg9",
      "179892 SET      reg2 -> reg4",
      "179895 SET      reg4 -> reg6",
      "179898 SET MEMORY ELEMENT IF INIT      5867 = reg6",
      "179901 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "179905 JUMP IF FALSE      reg4 TO: 179921 | 179908"
  ],
  "179908": [
      "179908 PUSH MEMORY ELEMENT IF INIT      5867 -> reg6",
      "179911 SET      undefined -> reg7",
      "179914 STRICT NOT EQUAL      reg6 !== reg7 -> reg9",
      "179918 SET      reg9 -> reg4",
      "179921 JUMP IF FALSE      reg4 TO: 179932 | 179924"
  ],
  "179921": ["179921 JUMP IF FALSE      reg4 TO: 179932 | 179924"],
  "179924": [
      "179924 PUSH MEMORY ELEMENT IF INIT      5867 -> reg8",
      "179927 SET      reg8 -> reg7",
      "179930 JUMP      179937",
      "179937 JUMP OR RETURN VAL      reg7"
  ],
  "179932": [
      "179932 SET      no -> reg7",
      "179937 JUMP OR RETURN VAL      reg7"
  ],
  "180029": [
      "180029 PUSH MEMORY ELEMENT IF INIT      5878 -> reg4",
      "180032 SET      undefined -> reg6",
      "180035 STRICT EQUAL      reg4 === reg6 -> reg9",
      "180039 SET      reg9 -> reg5",
      "180042 JUMP IF FALSE      reg5 TO: 180053 | 180045"
  ],
  "180042": ["180042 JUMP IF FALSE      reg5 TO: 180053 | 180045"],
  "180045": [
      "180045 SET      undefined -> reg4",
      "180048 SET      reg4 -> reg6",
      "180051 JUMP      180071",
      "180071 SET MEMORY ELEMENT IF INIT      5879 = reg6",
      "180074 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "180078 JUMP IF FALSE      reg4 TO: 180094 | 180081"
  ],
  "180053": [
      "180053 PUSH MEMORY ELEMENT IF INIT      5878 -> reg5",
      "180056 GET      reg5[styleTags] -> reg4",
      "180062 GET      reg4[fill] -> reg5",
      "180068 SET      reg5 -> reg6",
      "180071 SET MEMORY ELEMENT IF INIT      5879 = reg6",
      "180074 STRICT NOT EQUAL      reg6 !== null -> reg4",
      "180078 JUMP IF FALSE      reg4 TO: 180094 | 180081"
  ],
  "180081": [
      "180081 PUSH MEMORY ELEMENT IF INIT      5879 -> reg5",
      "180084 SET      undefined -> reg6",
      "180087 STRICT NOT EQUAL      reg5 !== reg6 -> reg8",
      "180091 SET      reg8 -> reg4",
      "180094 JUMP IF FALSE      reg4 TO: 180105 | 180097"
  ],
  "180094": ["180094 JUMP IF FALSE      reg4 TO: 180105 | 180097"],
  "180097": [
      "180097 PUSH MEMORY ELEMENT IF INIT      5879 -> reg4",
      "180100 SET      reg4 -> reg5",
      "180103 JUMP      180108",
      "180108 JUMP OR RETURN VAL      reg5"
  ],
  "180105": [
      "180105 SET      0 -> reg5",
      "180108 JUMP OR RETURN VAL      reg5"
  ],
  "180202": [
      "180202 PUSH MEMORY ELEMENT IF INIT      5888 -> reg5",
      "180205 SET      undefined -> reg7",
      "180208 STRICT EQUAL      reg5 === reg7 -> reg6",
      "180212 SET      reg6 -> reg4",
      "180215 JUMP IF FALSE      reg4 TO: 180226 | 180218"
  ],
  "180215": ["180215 JUMP IF FALSE      reg4 TO: 180226 | 180218"],
  "180218": [
      "180218 SET      undefined -> reg6",
      "180221 SET      reg6 -> reg5",
      "180224 JUMP      180238",
      "180238 SET MEMORY ELEMENT IF INIT      5889 = reg5",
      "180241 STRICT EQUAL      reg5 === null -> reg7",
      "180245 JUMP IF TRUE      reg7 TO: 180261 | 180248"
  ],
  "180226": [
      "180226 PUSH MEMORY ELEMENT IF INIT      5888 -> reg4",
      "180229 GET      reg4[audio] -> reg6",
      "180235 SET      reg6 -> reg5",
      "180238 SET MEMORY ELEMENT IF INIT      5889 = reg5",
      "180241 STRICT EQUAL      reg5 === null -> reg7",
      "180245 JUMP IF TRUE      reg7 TO: 180261 | 180248"
  ],
  "180248": [
      "180248 PUSH MEMORY ELEMENT IF INIT      5889 -> reg4",
      "180251 SET      undefined -> reg6",
      "180254 STRICT EQUAL      reg4 === reg6 -> reg8",
      "180258 SET      reg8 -> reg7",
      "180261 JUMP IF FALSE      reg7 TO: 180272 | 180264"
  ],
  "180261": ["180261 JUMP IF FALSE      reg7 TO: 180272 | 180264"],
  "180264": [
      "180264 SET      undefined -> reg4",
      "180267 SET      reg4 -> reg5",
      "180270 JUMP      180300",
      "180300 SET MEMORY ELEMENT IF INIT      5890 = reg5",
      "180303 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "180307 JUMP IF FALSE      reg6 TO: 180323 | 180310"
  ],
  "180272": [
      "180272 PUSH MEMORY ELEMENT IF INIT      5889 -> reg4",
      "180275 GET      reg4[canPlayType] -> reg7",
      "180281 NEW ARRAY      1 -> reg8",
      "180284 PUT      reg8[0] = audio/webm;",
      "180290 CALL FUNCTION      OBJ: reg4 FUNC: reg7 ARGS: reg8",
      "180294 SET      reg2 -> reg6",
      "180297 SET      reg6 -> reg5",
      "180300 SET MEMORY ELEMENT IF INIT      5890 = reg5",
      "180303 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "180307 JUMP IF FALSE      reg6 TO: 180323 | 180310"
  ],
  "180310": [
      "180310 PUSH MEMORY ELEMENT IF INIT      5890 -> reg7",
      "180313 SET      undefined -> reg5",
      "180316 STRICT NOT EQUAL      reg7 !== reg5 -> reg8",
      "180320 SET      reg8 -> reg6",
      "180323 JUMP IF FALSE      reg6 TO: 180334 | 180326"
  ],
  "180323": ["180323 JUMP IF FALSE      reg6 TO: 180334 | 180326"],
  "180326": [
      "180326 PUSH MEMORY ELEMENT IF INIT      5890 -> reg7",
      "180329 SET      reg7 -> reg5",
      "180332 JUMP      180339",
      "180339 JUMP OR RETURN VAL      reg5"
  ],
  "180334": [
      "180334 SET      no -> reg5",
      "180339 JUMP OR RETURN VAL      reg5"
  ],
  "180433": [
      "180433 PUSH MEMORY ELEMENT IF INIT      5901 -> reg4",
      "180436 SET      undefined -> reg5",
      "180439 STRICT EQUAL      reg4 === reg5 -> reg8",
      "180443 SET      reg8 -> reg6",
      "180446 JUMP IF FALSE      reg6 TO: 180457 | 180449"
  ],
  "180446": ["180446 JUMP IF FALSE      reg6 TO: 180457 | 180449"],
  "180449": [
      "180449 SET      undefined -> reg4",
      "180452 SET      reg4 -> reg5",
      "180455 JUMP      180469",
      "180469 SET MEMORY ELEMENT IF INIT      5902 = reg5",
      "180472 STRICT EQUAL      reg5 === null -> reg4",
      "180476 JUMP IF TRUE      reg4 TO: 180492 | 180479"
  ],
  "180457": [
      "180457 PUSH MEMORY ELEMENT IF INIT      5901 -> reg4",
      "180460 GET      reg4[video] -> reg6",
      "180466 SET      reg6 -> reg5",
      "180469 SET MEMORY ELEMENT IF INIT      5902 = reg5",
      "180472 STRICT EQUAL      reg5 === null -> reg4",
      "180476 JUMP IF TRUE      reg4 TO: 180492 | 180479"
  ],
  "180479": [
      "180479 PUSH MEMORY ELEMENT IF INIT      5902 -> reg5",
      "180482 SET      undefined -> reg6",
      "180485 STRICT EQUAL      reg5 === reg6 -> reg7",
      "180489 SET      reg7 -> reg4",
      "180492 JUMP IF FALSE      reg4 TO: 180503 | 180495"
  ],
  "180492": ["180492 JUMP IF FALSE      reg4 TO: 180503 | 180495"],
  "180495": [
      "180495 SET      undefined -> reg4",
      "180498 SET      reg4 -> reg5",
      "180501 JUMP      180531",
      "180531 SET MEMORY ELEMENT IF INIT      5903 = reg5",
      "180534 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "180538 JUMP IF FALSE      reg6 TO: 180554 | 180541"
  ],
  "180503": [
      "180503 PUSH MEMORY ELEMENT IF INIT      5902 -> reg7",
      "180506 GET      reg7[canPlayType] -> reg6",
      "180512 NEW ARRAY      1 -> reg8",
      "180515 PUT      reg8[0] = video/ogg; codecs=\"theora, speex\"",
      "180521 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg8",
      "180525 SET      reg2 -> reg4",
      "180528 SET      reg4 -> reg5",
      "180531 SET MEMORY ELEMENT IF INIT      5903 = reg5",
      "180534 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "180538 JUMP IF FALSE      reg6 TO: 180554 | 180541"
  ],
  "180541": [
      "180541 PUSH MEMORY ELEMENT IF INIT      5903 -> reg5",
      "180544 SET      undefined -> reg8",
      "180547 STRICT NOT EQUAL      reg5 !== reg8 -> reg4",
      "180551 SET      reg4 -> reg6",
      "180554 JUMP IF FALSE      reg6 TO: 180565 | 180557"
  ],
  "180554": ["180554 JUMP IF FALSE      reg6 TO: 180565 | 180557"],
  "180557": [
      "180557 PUSH MEMORY ELEMENT IF INIT      5903 -> reg5",
      "180560 SET      reg5 -> reg4",
      "180563 JUMP      180570",
      "180570 JUMP OR RETURN VAL      reg4"
  ],
  "180565": [
      "180565 SET      no -> reg4",
      "180570 JUMP OR RETURN VAL      reg4"
  ],
  "180779": [
      "180779 PUSH MEMORY ELEMENT IF INIT      5919 -> reg6",
      "180782 SET      undefined -> reg4",
      "180785 STRICT EQUAL      reg6 === reg4 -> reg7",
      "180789 SET      reg7 -> reg5",
      "180792 JUMP IF FALSE      reg5 TO: 180803 | 180795"
  ],
  "180792": ["180792 JUMP IF FALSE      reg5 TO: 180803 | 180795"],
  "180795": [
      "180795 SET      undefined -> reg5",
      "180798 SET      reg5 -> reg6",
      "180801 JUMP      180821",
      "180821 SET MEMORY ELEMENT IF INIT      5920 = reg6",
      "180824 STRICT NOT EQUAL      reg6 !== null -> reg5",
      "180828 JUMP IF FALSE      reg5 TO: 180844 | 180831"
  ],
  "180803": [
      "180803 PUSH MEMORY ELEMENT IF INIT      5919 -> reg4",
      "180806 GET      reg4[styleTags] -> reg5",
      "180812 GET      reg5[unicode] -> reg7",
      "180818 SET      reg7 -> reg6",
      "180821 SET MEMORY ELEMENT IF INIT      5920 = reg6",
      "180824 STRICT NOT EQUAL      reg6 !== null -> reg5",
      "180828 JUMP IF FALSE      reg5 TO: 180844 | 180831"
  ],
  "180831": [
      "180831 PUSH MEMORY ELEMENT IF INIT      5920 -> reg4",
      "180834 SET      undefined -> reg7",
      "180837 STRICT NOT EQUAL      reg4 !== reg7 -> reg6",
      "180841 SET      reg6 -> reg5",
      "180844 JUMP IF FALSE      reg5 TO: 180855 | 180847"
  ],
  "180844": ["180844 JUMP IF FALSE      reg5 TO: 180855 | 180847"],
  "180847": [
      "180847 PUSH MEMORY ELEMENT IF INIT      5920 -> reg4",
      "180850 SET      reg4 -> reg7",
      "180853 JUMP      180858",
      "180858 JUMP OR RETURN VAL      reg7"
  ],
  "180855": [
      "180855 SET      0 -> reg7",
      "180858 JUMP OR RETURN VAL      reg7"
  ],
  "180950": [
      "180950 PUSH MEMORY ELEMENT IF INIT      5929 -> reg4",
      "180953 SET      undefined -> reg7",
      "180956 STRICT EQUAL      reg4 === reg7 -> reg9",
      "180960 SET      reg9 -> reg5",
      "180963 JUMP IF FALSE      reg5 TO: 180974 | 180966"
  ],
  "180963": ["180963 JUMP IF FALSE      reg5 TO: 180974 | 180966"],
  "180966": [
      "180966 SET      undefined -> reg4",
      "180969 SET      reg4 -> reg7",
      "180972 JUMP      180992",
      "180992 SET MEMORY ELEMENT IF INIT      5930 = reg7",
      "180995 STRICT NOT EQUAL      reg7 !== null -> reg4",
      "180999 JUMP IF FALSE      reg4 TO: 181015 | 181002"
  ],
  "180974": [
      "180974 PUSH MEMORY ELEMENT IF INIT      5929 -> reg4",
      "180977 GET      reg4[styleTags] -> reg5",
      "180983 GET      reg5[get] -> reg10",
      "180989 SET      reg10 -> reg7",
      "180992 SET MEMORY ELEMENT IF INIT      5930 = reg7",
      "180995 STRICT NOT EQUAL      reg7 !== null -> reg4",
      "180999 JUMP IF FALSE      reg4 TO: 181015 | 181002"
  ],
  "181002": [
      "181002 PUSH MEMORY ELEMENT IF INIT      5930 -> reg5",
      "181005 SET      undefined -> reg6",
      "181008 STRICT NOT EQUAL      reg5 !== reg6 -> reg7",
      "181012 SET      reg7 -> reg4",
      "181015 JUMP IF FALSE      reg4 TO: 181026 | 181018"
  ],
  "181015": ["181015 JUMP IF FALSE      reg4 TO: 181026 | 181018"],
  "181018": [
      "181018 PUSH MEMORY ELEMENT IF INIT      5930 -> reg6",
      "181021 SET      reg6 -> reg5",
      "181024 JUMP      181029",
      "181029 JUMP OR RETURN VAL      reg5"
  ],
  "181026": [
      "181026 SET      0 -> reg5",
      "181029 JUMP OR RETURN VAL      reg5"
  ],
  "181253": [
      "181253 PUSH MEMORY ELEMENT IF INIT      5943 -> reg5",
      "181256 SET      undefined -> reg4",
      "181259 STRICT NOT EQUAL      reg5 !== reg4 -> reg9",
      "181263 SET      reg9 -> reg6",
      "181266 JUMP IF FALSE      reg6 TO: 181277 | 181269"
  ],
  "181266": ["181266 JUMP IF FALSE      reg6 TO: 181277 | 181269"],
  "181269": [
      "181269 PUSH MEMORY ELEMENT IF INIT      5943 -> reg6",
      "181272 SET      reg6 -> reg4",
      "181275 JUMP      181280",
      "181280 JUMP OR RETURN VAL      reg4"
  ],
  "181277": [
      "181277 SET      null -> reg4",
      "181280 JUMP OR RETURN VAL      reg4"
  ],
  "181580": [
      "181580 PUSH MEMORY ELEMENT IF INIT      5958 -> reg5",
      "181583 SET      undefined -> reg7",
      "181586 STRICT EQUAL      reg5 === reg7 -> reg9",
      "181590 SET      reg9 -> reg4",
      "181593 JUMP IF FALSE      reg4 TO: 181604 | 181596"
  ],
  "181593": ["181593 JUMP IF FALSE      reg4 TO: 181604 | 181596"],
  "181596": [
      "181596 SET      undefined -> reg6",
      "181599 SET      reg6 -> reg5",
      "181602 JUMP      181616",
      "181616 SET MEMORY ELEMENT IF INIT      5959 = reg5",
      "181619 STRICT EQUAL      reg5 === null -> reg7",
      "181623 JUMP IF TRUE      reg7 TO: 181639 | 181626"
  ],
  "181604": [
      "181604 PUSH MEMORY ELEMENT IF INIT      5958 -> reg4",
      "181607 GET      reg4[video] -> reg7",
      "181613 SET      reg7 -> reg5",
      "181616 SET MEMORY ELEMENT IF INIT      5959 = reg5",
      "181619 STRICT EQUAL      reg5 === null -> reg7",
      "181623 JUMP IF TRUE      reg7 TO: 181639 | 181626"
  ],
  "181626": [
      "181626 PUSH MEMORY ELEMENT IF INIT      5959 -> reg6",
      "181629 SET      undefined -> reg4",
      "181632 STRICT EQUAL      reg6 === reg4 -> reg8",
      "181636 SET      reg8 -> reg7",
      "181639 JUMP IF FALSE      reg7 TO: 181650 | 181642"
  ],
  "181639": ["181639 JUMP IF FALSE      reg7 TO: 181650 | 181642"],
  "181642": [
      "181642 SET      undefined -> reg7",
      "181645 SET      reg7 -> reg4",
      "181648 JUMP      181678",
      "181678 SET MEMORY ELEMENT IF INIT      5960 = reg4",
      "181681 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "181685 JUMP IF FALSE      reg5 TO: 181701 | 181688"
  ],
  "181650": [
      "181650 PUSH MEMORY ELEMENT IF INIT      5959 -> reg7",
      "181653 GET      reg7[canPlayType] -> reg8",
      "181659 NEW ARRAY      1 -> reg10",
      "181662 PUT      reg10[0] = video/mp4; codecs=mp4a.40.2",
      "181668 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg10",
      "181672 SET      reg2 -> reg5",
      "181675 SET      reg5 -> reg4",
      "181678 SET MEMORY ELEMENT IF INIT      5960 = reg4",
      "181681 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "181685 JUMP IF FALSE      reg5 TO: 181701 | 181688"
  ],
  "181688": [
      "181688 PUSH MEMORY ELEMENT IF INIT      5960 -> reg4",
      "181691 SET      undefined -> reg6",
      "181694 STRICT NOT EQUAL      reg4 !== reg6 -> reg9",
      "181698 SET      reg9 -> reg5",
      "181701 JUMP IF FALSE      reg5 TO: 181712 | 181704"
  ],
  "181701": ["181701 JUMP IF FALSE      reg5 TO: 181712 | 181704"],
  "181704": [
      "181704 PUSH MEMORY ELEMENT IF INIT      5960 -> reg6",
      "181707 SET      reg6 -> reg8",
      "181710 JUMP      181717",
      "181717 JUMP OR RETURN VAL      reg8"
  ],
  "181712": [
      "181712 SET      no -> reg8",
      "181717 JUMP OR RETURN VAL      reg8"
  ],
  "182117": [
      "182117 GET      reg3[1] -> reg5",
      "182121 GET WINDOW PROP      undefined -> reg4",
      "182126 STRICT NOT EQUAL      reg5 !== reg4 -> reg8",
      "182130 SET      reg8 -> reg6",
      "182133 JUMP IF FALSE      reg6 TO: 182145 | 182136"
  ],
  "182133": ["182133 JUMP IF FALSE      reg6 TO: 182145 | 182136"],
  "182136": [
      "182136 GET      reg3[1] -> reg5",
      "182140 SET      reg5 -> reg4",
      "182143 JUMP      182148",
      "182148 SET MEMORY ELEMENT IF INIT      5984 = reg4",
      "182151 PUSH MEMORY ELEMENT IF INIT      5983 -> reg5",
      "182154 GET      reg5[slice] -> reg7",
      "182160 NEW ARRAY      1 -> reg8",
      "182163 PUT      reg8[0] = 0",
      "182167 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "182171 SET      reg2 -> reg4",
      "182174 SET MEMORY ELEMENT IF INIT      5986 = reg4",
      "182177 PUSH MEMORY ELEMENT IF INIT      5986 -> reg4",
      "182180 GET      reg4[length] -> reg6",
      "182186 SET MEMORY ELEMENT IF INIT      5987 = reg6",
      "182189 PUSH MEMORY ELEMENT IF INIT      5987 -> reg4",
      "182192 JUMP IF FALSE      reg4 TO: 182321 | 182195"
  ],
  "182145": [
      "182145 SET      78012697 -> reg4",
      "182148 SET MEMORY ELEMENT IF INIT      5984 = reg4",
      "182151 PUSH MEMORY ELEMENT IF INIT      5983 -> reg5",
      "182154 GET      reg5[slice] -> reg7",
      "182160 NEW ARRAY      1 -> reg8",
      "182163 PUT      reg8[0] = 0",
      "182167 CALL FUNCTION      OBJ: reg5 FUNC: reg7 ARGS: reg8",
      "182171 SET      reg2 -> reg4",
      "182174 SET MEMORY ELEMENT IF INIT      5986 = reg4",
      "182177 PUSH MEMORY ELEMENT IF INIT      5986 -> reg4",
      "182180 GET      reg4[length] -> reg6",
      "182186 SET MEMORY ELEMENT IF INIT      5987 = reg6",
      "182189 PUSH MEMORY ELEMENT IF INIT      5987 -> reg4",
      "182192 JUMP IF FALSE      reg4 TO: 182321 | 182195"
  ],
  "182195": [
      "182195 GET WINDOW PROP      Math -> reg6",
      "182200 GET      reg6[floor] -> reg7",
      "182206 NEW ARRAY      1 -> reg11",
      "182209 PUSH MEMORY ELEMENT IF INIT      5985 -> reg9",
      "182212 NEW ARRAY      1 -> reg12",
      "182215 PUSH MEMORY ELEMENT IF INIT      5984 -> reg13",
      "182218 PUT      reg12[0] = reg13",
      "182222 CALL FUNCTION      PTR: reg9 MEM: reg12",
      "182226 SET      reg2 -> reg8",
      "182229 PUSH MEMORY ELEMENT IF INIT      5987 -> reg10",
      "182232 SET      reg10 -> reg9",
      "182235 SUBTRACT      reg10 - 1 -> reg10",
      "182239 SET MEMORY ELEMENT IF INIT      5987 = reg10",
      "182242 MULTIPLY      reg8 * reg9 -> reg10",
      "182246 PUT      reg11[0] = reg10",
      "182250 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg11",
      "182254 SET      reg2 -> reg4",
      "182257 SET MEMORY ELEMENT IF INIT      5989 = reg4",
      "182260 PUSH MEMORY ELEMENT IF INIT      5986 -> reg4",
      "182263 PUSH MEMORY ELEMENT IF INIT      5987 -> reg8",
      "182266 GET      reg4[reg8] -> reg7",
      "182270 SET MEMORY ELEMENT IF INIT      5988 = reg7",
      "182273 PUSH MEMORY ELEMENT IF INIT      5986 -> reg4",
      "182276 PUSH MEMORY ELEMENT IF INIT      5987 -> reg11",
      "182279 PUSH MEMORY ELEMENT IF INIT      5986 -> reg9",
      "182282 PUSH MEMORY ELEMENT IF INIT      5989 -> reg10",
      "182285 GET      reg9[reg10] -> reg7",
      "182289 PUT      reg4[reg11] = reg7",
      "182293 PUSH MEMORY ELEMENT IF INIT      5986 -> reg4",
      "182296 PUSH MEMORY ELEMENT IF INIT      5989 -> reg7",
      "182299 PUSH MEMORY ELEMENT IF INIT      5988 -> reg8",
      "182302 PUT      reg4[reg7] = reg8",
      "182306 PUSH MEMORY ELEMENT IF INIT      5984 -> reg4",
      "182309 SET      1 -> reg7",
      "182312 ADD      reg4NaN-> reg7",
      "182316 SET MEMORY ELEMENT IF INIT      5984 = reg7",
      "182319 JUMP      182189",
      "182189 PUSH MEMORY ELEMENT IF INIT      5987 -> reg4",
      "182192 JUMP IF FALSE      reg4 TO: 182321 | 182195"
  ],
  "182321": [
      "182321 PUSH MEMORY ELEMENT IF INIT      5986 -> reg4",
      "182324 JUMP OR RETURN VAL      reg4"
  ],
  "182412": [
      "182412 GET      [concat] -> reg8",
      "182420 NEW ARRAY      1 -> reg4",
      "182423 PUSH MEMORY ELEMENT IF INIT      5998 -> reg6",
      "182426 GET      reg6[npx] -> reg9",
      "182432 GET      reg9[document] -> reg6",
      "182438 GET      reg6[body] -> reg9",
      "182444 GET      reg9[clientHeight] -> reg6",
      "182450 PUT      reg4[0] = reg6",
      "182454 CALL FUNCTION      OBJ:  FUNC: reg8 ARGS: reg4",
      "182460 SET      reg2 -> reg5",
      "182463 SET MEMORY ELEMENT IF INIT      5999 = reg5",
      "182466 PUSH MEMORY ELEMENT IF INIT      5999 -> reg4",
      "182469 JUMP OR RETURN VAL      reg4"
  ],
  "182466": [
      "182466 PUSH MEMORY ELEMENT IF INIT      5999 -> reg4",
      "182469 JUMP OR RETURN VAL      reg4"
  ],
  "182567": [
      "182567 SET      true -> reg6",
      "182570 JUMP      182575",
      "182575 JUMP OR RETURN VAL      reg6"
  ],
  "182572": [
      "182572 SET      null -> reg6",
      "182575 JUMP OR RETURN VAL      reg6"
  ],
  "182865": [
      "182865 SET      1 -> reg7",
      "182868 JUMP      182873",
      "182873 JUMP OR RETURN VAL      reg7"
  ],
  "182870": [
      "182870 SET      0 -> reg7",
      "182873 JUMP OR RETURN VAL      reg7"
  ],
  "183143": [
      "183143 PUSH MEMORY ELEMENT IF INIT      6027 -> reg5",
      "183146 SET      undefined -> reg4",
      "183149 STRICT EQUAL      reg5 === reg4 -> reg8",
      "183153 SET      reg8 -> reg6",
      "183156 JUMP IF FALSE      reg6 TO: 183167 | 183159"
  ],
  "183156": ["183156 JUMP IF FALSE      reg6 TO: 183167 | 183159"],
  "183159": [
      "183159 SET      undefined -> reg4",
      "183162 SET      reg4 -> reg5",
      "183165 JUMP      183185",
      "183185 SET MEMORY ELEMENT IF INIT      6028 = reg5",
      "183188 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "183192 JUMP IF FALSE      reg4 TO: 183208 | 183195"
  ],
  "183167": [
      "183167 PUSH MEMORY ELEMENT IF INIT      6027 -> reg7",
      "183170 GET      reg7[styleTags] -> reg4",
      "183176 GET      reg4[list] -> reg7",
      "183182 SET      reg7 -> reg5",
      "183185 SET MEMORY ELEMENT IF INIT      6028 = reg5",
      "183188 STRICT NOT EQUAL      reg5 !== null -> reg4",
      "183192 JUMP IF FALSE      reg4 TO: 183208 | 183195"
  ],
  "183195": [
      "183195 PUSH MEMORY ELEMENT IF INIT      6028 -> reg6",
      "183198 SET      undefined -> reg5",
      "183201 STRICT NOT EQUAL      reg6 !== reg5 -> reg7",
      "183205 SET      reg7 -> reg4",
      "183208 JUMP IF FALSE      reg4 TO: 183219 | 183211"
  ],
  "183208": ["183208 JUMP IF FALSE      reg4 TO: 183219 | 183211"],
  "183211": [
      "183211 PUSH MEMORY ELEMENT IF INIT      6028 -> reg4",
      "183214 SET      reg4 -> reg5",
      "183217 JUMP      183222",
      "183222 JUMP OR RETURN VAL      reg5"
  ],
  "183219": [
      "183219 SET      0 -> reg5",
      "183222 JUMP OR RETURN VAL      reg5"
  ],
  "183417": [
      "183417 PUSH MEMORY ELEMENT IF INIT      6042 -> reg4",
      "183420 SET      undefined -> reg6",
      "183423 STRICT EQUAL      reg4 === reg6 -> reg7",
      "183427 SET      reg7 -> reg5",
      "183430 JUMP IF FALSE      reg5 TO: 183441 | 183433"
  ],
  "183430": ["183430 JUMP IF FALSE      reg5 TO: 183441 | 183433"],
  "183433": [
      "183433 SET      undefined -> reg5",
      "183436 SET      reg5 -> reg4",
      "183439 JUMP      183459",
      "183459 SET MEMORY ELEMENT IF INIT      6043 = reg4",
      "183462 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "183466 JUMP IF FALSE      reg5 TO: 183482 | 183469"
  ],
  "183441": [
      "183441 PUSH MEMORY ELEMENT IF INIT      6042 -> reg5",
      "183444 GET      reg5[styleTags] -> reg6",
      "183450 GET      reg6[animation] -> reg5",
      "183456 SET      reg5 -> reg4",
      "183459 SET MEMORY ELEMENT IF INIT      6043 = reg4",
      "183462 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "183466 JUMP IF FALSE      reg5 TO: 183482 | 183469"
  ],
  "183469": [
      "183469 PUSH MEMORY ELEMENT IF INIT      6043 -> reg6",
      "183472 SET      undefined -> reg4",
      "183475 STRICT NOT EQUAL      reg6 !== reg4 -> reg7",
      "183479 SET      reg7 -> reg5",
      "183482 JUMP IF FALSE      reg5 TO: 183493 | 183485"
  ],
  "183482": ["183482 JUMP IF FALSE      reg5 TO: 183493 | 183485"],
  "183485": [
      "183485 PUSH MEMORY ELEMENT IF INIT      6043 -> reg5",
      "183488 SET      reg5 -> reg4",
      "183491 JUMP      183496",
      "183496 JUMP OR RETURN VAL      reg4"
  ],
  "183493": [
      "183493 SET      0 -> reg4",
      "183496 JUMP OR RETURN VAL      reg4"
  ],
  "183588": [
      "183588 PUSH MEMORY ELEMENT IF INIT      6052 -> reg7",
      "183591 SET      undefined -> reg4",
      "183594 STRICT EQUAL      reg7 === reg4 -> reg5",
      "183598 SET      reg5 -> reg6",
      "183601 JUMP IF FALSE      reg6 TO: 183612 | 183604"
  ],
  "183601": ["183601 JUMP IF FALSE      reg6 TO: 183612 | 183604"],
  "183604": [
      "183604 SET      undefined -> reg5",
      "183607 SET      reg5 -> reg4",
      "183610 JUMP      183630",
      "183630 SET MEMORY ELEMENT IF INIT      6053 = reg4",
      "183633 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "183637 JUMP IF FALSE      reg6 TO: 183653 | 183640"
  ],
  "183612": [
      "183612 PUSH MEMORY ELEMENT IF INIT      6052 -> reg5",
      "183615 GET      reg5[styleTags] -> reg6",
      "183621 GET      reg6[perspective] -> reg5",
      "183627 SET      reg5 -> reg4",
      "183630 SET MEMORY ELEMENT IF INIT      6053 = reg4",
      "183633 STRICT NOT EQUAL      reg4 !== null -> reg6",
      "183637 JUMP IF FALSE      reg6 TO: 183653 | 183640"
  ],
  "183640": [
      "183640 PUSH MEMORY ELEMENT IF INIT      6053 -> reg5",
      "183643 SET      undefined -> reg8",
      "183646 STRICT NOT EQUAL      reg5 !== reg8 -> reg4",
      "183650 SET      reg4 -> reg6",
      "183653 JUMP IF FALSE      reg6 TO: 183664 | 183656"
  ],
  "183653": ["183653 JUMP IF FALSE      reg6 TO: 183664 | 183656"],
  "183656": [
      "183656 PUSH MEMORY ELEMENT IF INIT      6053 -> reg4",
      "183659 SET      reg4 -> reg7",
      "183662 JUMP      183667",
      "183667 JUMP OR RETURN VAL      reg7"
  ],
  "183664": [
      "183664 SET      0 -> reg7",
      "183667 JUMP OR RETURN VAL      reg7"
  ],
  "183761": [
      "183761 PUSH MEMORY ELEMENT IF INIT      6062 -> reg7",
      "183764 SET      undefined -> reg4",
      "183767 STRICT EQUAL      reg7 === reg4 -> reg6",
      "183771 SET      reg6 -> reg5",
      "183774 JUMP IF FALSE      reg5 TO: 183785 | 183777"
  ],
  "183774": ["183774 JUMP IF FALSE      reg5 TO: 183785 | 183777"],
  "183777": [
      "183777 SET      undefined -> reg4",
      "183780 SET      reg4 -> reg6",
      "183783 JUMP      183797",
      "183797 SET MEMORY ELEMENT IF INIT      6063 = reg6",
      "183800 STRICT EQUAL      reg6 === null -> reg4",
      "183804 JUMP IF TRUE      reg4 TO: 183820 | 183807"
  ],
  "183785": [
      "183785 PUSH MEMORY ELEMENT IF INIT      6062 -> reg7",
      "183788 GET      reg7[video] -> reg4",
      "183794 SET      reg4 -> reg6",
      "183797 SET MEMORY ELEMENT IF INIT      6063 = reg6",
      "183800 STRICT EQUAL      reg6 === null -> reg4",
      "183804 JUMP IF TRUE      reg4 TO: 183820 | 183807"
  ],
  "183807": [
      "183807 PUSH MEMORY ELEMENT IF INIT      6063 -> reg7",
      "183810 SET      undefined -> reg5",
      "183813 STRICT EQUAL      reg7 === reg5 -> reg8",
      "183817 SET      reg8 -> reg4",
      "183820 JUMP IF FALSE      reg4 TO: 183831 | 183823"
  ],
  "183820": ["183820 JUMP IF FALSE      reg4 TO: 183831 | 183823"],
  "183823": [
      "183823 SET      undefined -> reg4",
      "183826 SET      reg4 -> reg5",
      "183829 JUMP      183859",
      "183859 SET MEMORY ELEMENT IF INIT      6064 = reg5",
      "183862 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "183866 JUMP IF FALSE      reg6 TO: 183882 | 183869"
  ],
  "183831": [
      "183831 PUSH MEMORY ELEMENT IF INIT      6063 -> reg8",
      "183834 GET      reg8[canPlayType] -> reg6",
      "183840 NEW ARRAY      1 -> reg7",
      "183843 PUT      reg7[0] = video/mp4; codecs=\"mp4v.20.240, mp4a.40.2\"",
      "183849 CALL FUNCTION      OBJ: reg8 FUNC: reg6 ARGS: reg7",
      "183853 SET      reg2 -> reg4",
      "183856 SET      reg4 -> reg5",
      "183859 SET MEMORY ELEMENT IF INIT      6064 = reg5",
      "183862 STRICT NOT EQUAL      reg5 !== null -> reg6",
      "183866 JUMP IF FALSE      reg6 TO: 183882 | 183869"
  ],
  "183869": [
      "183869 PUSH MEMORY ELEMENT IF INIT      6064 -> reg4",
      "183872 SET      undefined -> reg5",
      "183875 STRICT NOT EQUAL      reg4 !== reg5 -> reg7",
      "183879 SET      reg7 -> reg6",
      "183882 JUMP IF FALSE      reg6 TO: 183893 | 183885"
  ],
  "183882": ["183882 JUMP IF FALSE      reg6 TO: 183893 | 183885"],
  "183885": [
      "183885 PUSH MEMORY ELEMENT IF INIT      6064 -> reg5",
      "183888 SET      reg5 -> reg4",
      "183891 JUMP      183898",
      "183898 JUMP OR RETURN VAL      reg4"
  ],
  "183893": [
      "183893 SET      no -> reg4",
      "183898 JUMP OR RETURN VAL      reg4"
  ],
  "184298": [
      "184298 GET      reg3[1] -> reg5",
      "184302 GET WINDOW PROP      undefined -> reg4",
      "184307 STRICT NOT EQUAL      reg5 !== reg4 -> reg8",
      "184311 SET      reg8 -> reg6",
      "184314 JUMP IF FALSE      reg6 TO: 184326 | 184317"
  ],
  "184314": ["184314 JUMP IF FALSE      reg6 TO: 184326 | 184317"],
  "184317": [
      "184317 GET      reg3[1] -> reg4",
      "184321 SET      reg4 -> reg7",
      "184324 JUMP      184329",
      "184329 SET MEMORY ELEMENT IF INIT      6088 = reg7",
      "184332 PUSH MEMORY ELEMENT IF INIT      6087 -> reg4",
      "184335 GET      reg4[slice] -> reg6",
      "184341 NEW ARRAY      1 -> reg7",
      "184344 PUT      reg7[0] = 0",
      "184348 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "184352 SET      reg2 -> reg5",
      "184355 SET MEMORY ELEMENT IF INIT      6090 = reg5",
      "184358 PUSH MEMORY ELEMENT IF INIT      6090 -> reg6",
      "184361 GET      reg6[length] -> reg5",
      "184367 SET MEMORY ELEMENT IF INIT      6091 = reg5",
      "184370 PUSH MEMORY ELEMENT IF INIT      6091 -> reg5",
      "184373 JUMP IF FALSE      reg5 TO: 184502 | 184376"
  ],
  "184326": [
      "184326 SET      78012697 -> reg7",
      "184329 SET MEMORY ELEMENT IF INIT      6088 = reg7",
      "184332 PUSH MEMORY ELEMENT IF INIT      6087 -> reg4",
      "184335 GET      reg4[slice] -> reg6",
      "184341 NEW ARRAY      1 -> reg7",
      "184344 PUT      reg7[0] = 0",
      "184348 CALL FUNCTION      OBJ: reg4 FUNC: reg6 ARGS: reg7",
      "184352 SET      reg2 -> reg5",
      "184355 SET MEMORY ELEMENT IF INIT      6090 = reg5",
      "184358 PUSH MEMORY ELEMENT IF INIT      6090 -> reg6",
      "184361 GET      reg6[length] -> reg5",
      "184367 SET MEMORY ELEMENT IF INIT      6091 = reg5",
      "184370 PUSH MEMORY ELEMENT IF INIT      6091 -> reg5",
      "184373 JUMP IF FALSE      reg5 TO: 184502 | 184376"
  ],
  "184376": [
      "184376 GET WINDOW PROP      Math -> reg6",
      "184381 GET      reg6[floor] -> reg7",
      "184387 NEW ARRAY      1 -> reg8",
      "184390 PUSH MEMORY ELEMENT IF INIT      6089 -> reg10",
      "184393 NEW ARRAY      1 -> reg13",
      "184396 PUSH MEMORY ELEMENT IF INIT      6088 -> reg11",
      "184399 PUT      reg13[0] = reg11",
      "184403 CALL FUNCTION      PTR: reg10 MEM: reg13",
      "184407 SET      reg2 -> reg9",
      "184410 PUSH MEMORY ELEMENT IF INIT      6091 -> reg10",
      "184413 SET      reg10 -> reg11",
      "184416 SUBTRACT      reg10 - 1 -> reg10",
      "184420 SET MEMORY ELEMENT IF INIT      6091 = reg10",
      "184423 MULTIPLY      reg9 * reg11 -> reg10",
      "184427 PUT      reg8[0] = reg10",
      "184431 CALL FUNCTION      OBJ: reg6 FUNC: reg7 ARGS: reg8",
      "184435 SET      reg2 -> reg5",
      "184438 SET MEMORY ELEMENT IF INIT      6093 = reg5",
      "184441 PUSH MEMORY ELEMENT IF INIT      6090 -> reg5",
      "184444 PUSH MEMORY ELEMENT IF INIT      6091 -> reg8",
      "184447 GET      reg5[reg8] -> reg7",
      "184451 SET MEMORY ELEMENT IF INIT      6092 = reg7",
      "184454 PUSH MEMORY ELEMENT IF INIT      6090 -> reg7",
      "184457 PUSH MEMORY ELEMENT IF INIT      6091 -> reg5",
      "184460 PUSH MEMORY ELEMENT IF INIT      6090 -> reg10",
      "184463 PUSH MEMORY ELEMENT IF INIT      6093 -> reg8",
      "184466 GET      reg10[reg8] -> reg9",
      "184470 PUT      reg7[reg5] = reg9",
      "184474 PUSH MEMORY ELEMENT IF INIT      6090 -> reg9",
      "184477 PUSH MEMORY ELEMENT IF INIT      6093 -> reg5",
      "184480 PUSH MEMORY ELEMENT IF INIT      6092 -> reg7",
      "184483 PUT      reg9[reg5] = reg7",
      "184487 PUSH MEMORY ELEMENT IF INIT      6088 -> reg7",
      "184490 SET      1 -> reg5",
      "184493 ADD      reg7NaN-> reg5",
      "184497 SET MEMORY ELEMENT IF INIT      6088 = reg5",
      "184500 JUMP      184370",
      "184370 PUSH MEMORY ELEMENT IF INIT      6091 -> reg5",
      "184373 JUMP IF FALSE      reg5 TO: 184502 | 184376"
  ],
  "184502": [
      "184502 PUSH MEMORY ELEMENT IF INIT      6090 -> reg5",
      "184505 JUMP OR RETURN VAL      reg5"
  ],
  "184887": [
      "184887 PUSH MEMORY ELEMENT IF INIT      6138 -> reg5",
      "184890 PUSH MEMORY ELEMENT IF INIT      6139 -> reg4",
      "184893 PUSH MEMORY ELEMENT IF INIT      6139 -> reg10",
      "184896 GET      reg3[reg10] -> reg7",
      "184900 PUT      reg5[reg4] = reg7",
      "184904 PUSH MEMORY ELEMENT IF INIT      6139 -> reg4",
      "184907 SET      reg4 -> reg6",
      "184910 ADD      reg41-> reg4",
      "184914 SET MEMORY ELEMENT IF INIT      6139 = reg4",
      "184917 JUMP      184874",
      "184874 PUSH MEMORY ELEMENT IF INIT      6139 -> reg6",
      "184877 PUSH MEMORY ELEMENT IF INIT      6137 -> reg4",
      "184880 LESS THAN      reg6 < reg4 -> reg5",
      "184884 JUMP IF FALSE      reg5 TO: 184919 | 184887"
  ],
  "184919": [
      "184919 INIT FUNCTION STATE      PTR: 184928 NAME:  LEN: 1 -> reg5",
      "184926 JUMP      185000",
      "185000 JUMP OR RETURN VAL      reg5"
  ],
  "185292": [
      "185292 PUSH MEMORY ELEMENT IF INIT      6159 -> reg6",
      "185295 SET      reg6 -> reg8",
      "185298 JUMP      185377",
      "185377 JUMP OR RETURN VAL      reg8"
  ],
  "185300": [
      "185300 GET WINDOW PROP      String -> reg7",
      "185305 NEW ARRAY      1 -> reg5",
      "185308 GET WINDOW PROP      Math -> reg10",
      "185313 GET      reg10[round] -> reg12",
      "185319 NEW ARRAY      1 -> reg11",
      "185322 GET WINDOW PROP      Number -> reg14",
      "185327 NEW ARRAY      1 -> reg15",
      "185330 PUSH MEMORY ELEMENT IF INIT      6159 -> reg16",
      "185333 PUT      reg15[0] = reg16",
      "185337 CALL FUNCTION      PTR: reg14 MEM: reg15",
      "185341 SET      reg2 -> reg13",
      "185344 DIVIDE      reg13 / 255 -> reg14",
      "185348 MULTIPLY      reg14 * 1000 -> reg15",
      "185352 PUT      reg11[0] = reg15",
      "185356 CALL FUNCTION      OBJ: reg10 FUNC: reg12 ARGS: reg11",
      "185360 SET      reg2 -> reg9",
      "185363 PUT      reg5[0] = reg9",
      "185367 CALL FUNCTION      PTR: reg7 MEM: reg5",
      "185371 SET      reg2 -> reg6",
      "185374 SET      reg6 -> reg8",
      "185377 JUMP OR RETURN VAL      reg8"
  ],
  "185448": [
      "185448 PUSH MEMORY ELEMENT IF INIT      6113 -> reg6",
      "185451 NEW ARRAY      1 -> reg7",
      "185454 PUSH MEMORY ELEMENT IF INIT      6164 -> reg8",
      "185457 PUT      reg7[0] = reg8",
      "185461 CALL FUNCTION      PTR: reg6 MEM: reg7",
      "185465 SET      reg2 -> reg5",
      "185468 SET      reg5 -> reg4",
      "185471 JUMP      185498",
      "185498 JUMP OR RETURN VAL      reg4"
  ],
  "185473": [
      "185473 GET WINDOW PROP      btoa -> reg5",
      "185478 NEW ARRAY      1 -> reg7",
      "185481 PUSH MEMORY ELEMENT IF INIT      6164 -> reg9",
      "185484 PUT      reg7[0] = reg9",
      "185488 CALL FUNCTION      PTR: reg5 MEM: reg7",
      "185492 SET      reg2 -> reg6",
      "185495 SET      reg6 -> reg4",
      "185498 JUMP OR RETURN VAL      reg4"
  ],
  "185705": [
      "185705 PUSH MEMORY ELEMENT IF INIT      6171 -> reg8",
      "185708 GET      reg8[includes] -> reg7",
      "185714 NEW ARRAY      1 -> reg9",
      "185717 PUT      reg9[0] = :",
      "185723 CALL FUNCTION      OBJ: reg8 FUNC: reg7 ARGS: reg9",
      "185727 SET      reg2 -> reg6",
      "185730 SET      reg6 -> reg5",
      "185733 JUMP IF FALSE      reg5 TO: 185741 | 185736"
  ],
  "185733": ["185733 JUMP IF FALSE      reg5 TO: 185741 | 185736"],
  "185736": [
      "185736 PUSH MEMORY ELEMENT IF INIT      6171 -> reg5",
      "185739 JUMP OR RETURN VAL      reg5"
  ],
  "185741": [
      "185741 PUSH MEMORY ELEMENT IF INIT      6118 -> reg9",
      "185744 NEW ARRAY      1 -> reg6",
      "185747 PUSH MEMORY ELEMENT IF INIT      6109 -> reg7",
      "185750 PUSH MEMORY ELEMENT IF INIT      6171 -> reg11",
      "185753 GET      reg7[reg11] -> reg10",
      "185757 SET MEMORY ELEMENT IF INIT      6172 = reg10",
      "185760 STRICT NOT EQUAL      reg10 !== null -> reg7",
      "185764 JUMP IF FALSE      reg7 TO: 185780 | 185767"
  ],
  "185767": [
      "185767 PUSH MEMORY ELEMENT IF INIT      6172 -> reg11",
      "185770 SET      undefined -> reg10",
      "185773 STRICT NOT EQUAL      reg11 !== reg10 -> reg12",
      "185777 SET      reg12 -> reg7",
      "185780 JUMP IF FALSE      reg7 TO: 185791 | 185783"
  ],
  "185780": ["185780 JUMP IF FALSE      reg7 TO: 185791 | 185783"],
  "185783": [
      "185783 PUSH MEMORY ELEMENT IF INIT      6172 -> reg11",
      "185786 SET      reg11 -> reg10",
      "185789 JUMP      185794",
      "185794 PUT      reg6[0] = reg10",
      "185798 CALL FUNCTION      PTR: reg9 MEM: reg6",
      "185802 SET      reg2 -> reg5",
      "185805 JUMP OR RETURN VAL      reg5"
  ],
  "185791": [
      "185791 SET      240 -> reg10",
      "185794 PUT      reg6[0] = reg10",
      "185798 CALL FUNCTION      PTR: reg9 MEM: reg6",
      "185802 SET      reg2 -> reg5",
      "185805 JUMP OR RETURN VAL      reg5"
  ],
  "185850": [
      "185850 SET      xD -> reg5",
      "185855 JUMP      185862",
      "185862 JUMP OR RETURN VAL      reg5"
  ],
  "185857": [
      "185857 SET      xd -> reg5",
      "185862 JUMP OR RETURN VAL      reg5"
  ],
  "185906": [
      "185906 SET      . -> reg8",
      "185911 JUMP      185918",
      "185918 PUT      reg5[0] = reg8",
      "185922 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg5",
      "185926 SET      reg2 -> reg4",
      "185929 JUMP OR RETURN VAL      reg4"
  ],
  "185913": [
      "185913 SET      : -> reg8",
      "185918 PUT      reg5[0] = reg8",
      "185922 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg5",
      "185926 SET      reg2 -> reg4",
      "185929 JUMP OR RETURN VAL      reg4"
  ],
  "186469": [
      "186469 GET WINDOW PROP      Error -> reg9",
      "186474 NEW ARRAY      1 -> reg5",
      "186477 PUSH MEMORY ELEMENT IF INIT      6110 -> reg7",
      "186480 NEW ARRAY      2 -> reg8",
      "186483 PUT      reg8[0] = Cby^x}}byhi",
      "186489 PUT      reg8[1] = 13",
      "186493 CALL FUNCTION      PTR: reg7 MEM: reg8",
      "186497 SET      reg2 -> reg6",
      "186500 PUT      reg5[0] = reg6",
      "186504 BIND APPLY      reg9 reg5 -> 4",
      "186508 HANDLE ERROR      reg4",
      "186510 GET WINDOW PROP      setTimeout -> reg5",
      "186515 NEW ARRAY      2 -> reg6",
      "186518 INIT FUNCTION STATE      PTR: 186527 NAME:  LEN: 0 -> reg7",
      "186525 JUMP      186659",
      "186659 PUT      reg6[0] = reg7",
      "186663 PUT      reg6[1] = 400",
      "186667 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "186671 SET      reg2 -> reg4",
      "186674 PUSH MEMORY ELEMENT IF INIT      6102 -> reg5",
      "186677 GET      reg5[npx] -> reg6",
      "186683 GET      reg6[RTCPeerConnection] -> reg5",
      "186689 NEW ARRAY      1 -> reg6",
      "186692 EMPTY OBJECT      -> reg8",
      "186694 NEW ARRAY      1 -> reg7",
      "186697 EMPTY OBJECT      -> reg10",
      "186699 PUSH MEMORY ELEMENT IF INIT      6110 -> reg13",
      "186702 NEW ARRAY      2 -> reg14",
      "186705 PUT      reg14[0] = ursh<ursh(j(aiiajc(eik<7?564",
      "186711 PUT      reg14[1] = 6",
      "186715 CALL FUNCTION      PTR: reg13 MEM: reg14",
      "186719 SET      reg2 -> reg9",
      "186722 PUT      reg10[urls] = reg9",
      "186728 PUT      reg7[0] = reg10",
      "186732 PUT      reg8[iceServers] = reg7",
      "186738 PUT      reg6[0] = reg8",
      "186742 BIND APPLY      reg5 reg6 -> 4",
      "186746 SET MEMORY ELEMENT IF INIT      6127 = reg4",
      "186749 PUSH MEMORY ELEMENT IF INIT      6127 -> reg4",
      "186752 INIT FUNCTION STATE      PTR: 186761 NAME:  LEN: 1 -> reg5",
      "186759 JUMP      187033",
      "187033 PUT      reg4[onicecandidate] = reg5",
      "187039 PUSH MEMORY ELEMENT IF INIT      6127 -> reg4",
      "187042 GET      reg4[createDataChannel] -> reg5",
      "187048 NEW ARRAY      1 -> reg7",
      "187051 PUT      reg7[0] = ",
      "187057 CALL FUNCTION      OBJ: reg4 FUNC: reg5 ARGS: reg7",
      "187061 SET      reg2 -> reg6",
      "187064 PUSH MEMORY ELEMENT IF INIT      6127 -> reg6",
      "187067 GET      reg6[createOffer] -> reg8",
      "187073 EMPTY ARRAY      -> reg9",
      "187075 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "187079 SET      reg2 -> reg7",
      "187082 GET      reg7[then] -> reg8",
      "187088 NEW ARRAY      1 -> reg11",
      "187091 INIT FUNCTION STATE      PTR: 187100 NAME:  LEN: 1 -> reg9",
      "187098 JUMP      187131",
      "187131 PUT      reg11[0] = reg9",
      "187135 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg11",
      "187139 SET      reg2 -> reg5",
      "187142 JUMP      187220",
      "187220 SET I      null",
      "187222 JUMP OR RETURN"
  ],
  "186510": [
      "186510 GET WINDOW PROP      setTimeout -> reg5",
      "186515 NEW ARRAY      2 -> reg6",
      "186518 INIT FUNCTION STATE      PTR: 186527 NAME:  LEN: 0 -> reg7",
      "186525 JUMP      186659",
      "186659 PUT      reg6[0] = reg7",
      "186663 PUT      reg6[1] = 400",
      "186667 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "186671 SET      reg2 -> reg4",
      "186674 PUSH MEMORY ELEMENT IF INIT      6102 -> reg5",
      "186677 GET      reg5[npx] -> reg6",
      "186683 GET      reg6[RTCPeerConnection] -> reg5",
      "186689 NEW ARRAY      1 -> reg6",
      "186692 EMPTY OBJECT      -> reg8",
      "186694 NEW ARRAY      1 -> reg7",
      "186697 EMPTY OBJECT      -> reg10",
      "186699 PUSH MEMORY ELEMENT IF INIT      6110 -> reg13",
      "186702 NEW ARRAY      2 -> reg14",
      "186705 PUT      reg14[0] = ursh<ursh(j(aiiajc(eik<7?564",
      "186711 PUT      reg14[1] = 6",
      "186715 CALL FUNCTION      PTR: reg13 MEM: reg14",
      "186719 SET      reg2 -> reg9",
      "186722 PUT      reg10[urls] = reg9",
      "186728 PUT      reg7[0] = reg10",
      "186732 PUT      reg8[iceServers] = reg7",
      "186738 PUT      reg6[0] = reg8",
      "186742 BIND APPLY      reg5 reg6 -> 4",
      "186746 SET MEMORY ELEMENT IF INIT      6127 = reg4",
      "186749 PUSH MEMORY ELEMENT IF INIT      6127 -> reg4",
      "186752 INIT FUNCTION STATE      PTR: 186761 NAME:  LEN: 1 -> reg5",
      "186759 JUMP      187033",
      "187033 PUT      reg4[onicecandidate] = reg5",
      "187039 PUSH MEMORY ELEMENT IF INIT      6127 -> reg4",
      "187042 GET      reg4[createDataChannel] -> reg5",
      "187048 NEW ARRAY      1 -> reg7",
      "187051 PUT      reg7[0] = ",
      "187057 CALL FUNCTION      OBJ: reg4 FUNC: reg5 ARGS: reg7",
      "187061 SET      reg2 -> reg6",
      "187064 PUSH MEMORY ELEMENT IF INIT      6127 -> reg6",
      "187067 GET      reg6[createOffer] -> reg8",
      "187073 EMPTY ARRAY      -> reg9",
      "187075 CALL FUNCTION      OBJ: reg6 FUNC: reg8 ARGS: reg9",
      "187079 SET      reg2 -> reg7",
      "187082 GET      reg7[then] -> reg8",
      "187088 NEW ARRAY      1 -> reg11",
      "187091 INIT FUNCTION STATE      PTR: 187100 NAME:  LEN: 1 -> reg9",
      "187098 JUMP      187131",
      "187131 PUT      reg11[0] = reg9",
      "187135 CALL FUNCTION      OBJ: reg7 FUNC: reg8 ARGS: reg11",
      "187139 SET      reg2 -> reg5",
      "187142 JUMP      187220",
      "187220 SET I      null",
      "187222 JUMP OR RETURN"
  ],
  "186557": [
      "186557 PUSH MEMORY ELEMENT IF INIT      6102 -> reg10",
      "186560 GET      reg10[rkg] -> reg13",
      "186566 GET      reg13[RTCPeerConnection] -> reg10",
      "186572 NOT      reg10 -> reg11",
      "186575 SET      reg11 -> reg12",
      "186578 JUMP IF FALSE      reg12 TO: 186609 | 186581"
  ],
  "186578": ["186578 JUMP IF FALSE      reg12 TO: 186609 | 186581"],
  "186581": [
      "186581 PUSH MEMORY ELEMENT IF INIT      6110 -> reg11",
      "186584 NEW ARRAY      2 -> reg13",
      "186587 PUT      reg13[0] = Alvdgi`a",
      "186593 PUT      reg13[1] = 5",
      "186597 CALL FUNCTION      PTR: reg11 MEM: reg13",
      "186601 SET      reg2 -> reg12",
      "186604 SET      reg12 -> reg10",
      "186607 JUMP      186635",
      "186635 PUT      reg9[0] = reg10",
      "186639 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "186643 SET      reg2 -> reg7",
      "186646 PUT      reg6[0] = reg7",
      "186650 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "186654 SET      reg2 -> reg4",
      "186657 JUMP OR RETURN VAL      reg4"
  ],
  "186609": [
      "186609 PUSH MEMORY ELEMENT IF INIT      6110 -> reg12",
      "186612 NEW ARRAY      2 -> reg13",
      "186615 PUT      reg13[0] = Kvrzpjk",
      "186621 PUT      reg13[1] = 31",
      "186625 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "186629 SET      reg2 -> reg11",
      "186632 SET      reg11 -> reg10",
      "186635 PUT      reg9[0] = reg10",
      "186639 CALL FUNCTION      PTR: reg8 MEM: reg9",
      "186643 SET      reg2 -> reg7",
      "186646 PUT      reg6[0] = reg7",
      "186650 CALL FUNCTION      PTR: reg5 MEM: reg6",
      "186654 SET      reg2 -> reg4",
      "186657 JUMP OR RETURN VAL      reg4"
  ],
  "186780": [
      "186780 PUSH MEMORY ELEMENT IF INIT      6206 -> reg4",
      "186783 SET      undefined -> reg6",
      "186786 STRICT EQUAL      reg4 === reg6 -> reg7",
      "186790 SET      reg7 -> reg5",
      "186793 JUMP IF FALSE      reg5 TO: 186804 | 186796"
  ],
  "186793": ["186793 JUMP IF FALSE      reg5 TO: 186804 | 186796"],
  "186796": [
      "186796 SET      undefined -> reg5",
      "186799 SET      reg5 -> reg4",
      "186802 JUMP      186816",
      "186816 SET MEMORY ELEMENT IF INIT      6207 = reg4",
      "186819 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "186823 JUMP IF FALSE      reg5 TO: 186839 | 186826"
  ],
  "186804": [
      "186804 PUSH MEMORY ELEMENT IF INIT      6206 -> reg5",
      "186807 GET      reg5[candidate] -> reg6",
      "186813 SET      reg6 -> reg4",
      "186816 SET MEMORY ELEMENT IF INIT      6207 = reg4",
      "186819 STRICT NOT EQUAL      reg4 !== null -> reg5",
      "186823 JUMP IF FALSE      reg5 TO: 186839 | 186826"
  ],
  "186826": [
      "186826 PUSH MEMORY ELEMENT IF INIT      6207 -> reg6",
      "186829 SET      undefined -> reg7",
      "186832 STRICT NOT EQUAL      reg6 !== reg7 -> reg8",
      "186836 SET      reg8 -> reg5",
      "186839 JUMP IF FALSE      reg5 TO: 186850 | 186842"
  ],
  "186839": ["186839 JUMP IF FALSE      reg5 TO: 186850 | 186842"],
  "186842": [
      "186842 PUSH MEMORY ELEMENT IF INIT      6207 -> reg5",
      "186845 SET      reg5 -> reg4",
      "186848 JUMP      186855",
      "186855 SET MEMORY ELEMENT IF INIT      6208 = reg4",
      "186858 PUSH MEMORY ELEMENT IF INIT      6208 -> reg4",
      "186861 GET      reg4[candidate] -> reg5",
      "186867 SET MEMORY ELEMENT IF INIT      6209 = reg5",
      "186870 PUSH MEMORY ELEMENT IF INIT      6209 -> reg5",
      "186873 STRICT EQUAL      reg5 === null -> reg4",
      "186877 JUMP IF TRUE      reg4 TO: 186893 | 186880"
  ],
  "186850": [
      "186850 EMPTY OBJECT      -> reg5",
      "186852 SET      reg5 -> reg4",
      "186855 SET MEMORY ELEMENT IF INIT      6208 = reg4",
      "186858 PUSH MEMORY ELEMENT IF INIT      6208 -> reg4",
      "186861 GET      reg4[candidate] -> reg5",
      "186867 SET MEMORY ELEMENT IF INIT      6209 = reg5",
      "186870 PUSH MEMORY ELEMENT IF INIT      6209 -> reg5",
      "186873 STRICT EQUAL      reg5 === null -> reg4",
      "186877 JUMP IF TRUE      reg4 TO: 186893 | 186880"
  ],
  "186880": [
      "186880 PUSH MEMORY ELEMENT IF INIT      6209 -> reg6",
      "186883 SET      undefined -> reg5",
      "186886 STRICT EQUAL      reg6 === reg5 -> reg7",
      "186890 SET      reg7 -> reg4",
      "186893 JUMP IF FALSE      reg4 TO: 186904 | 186896"
  ],
  "186893": ["186893 JUMP IF FALSE      reg4 TO: 186904 | 186896"],
  "186896": [
      "186896 SET      undefined -> reg4",
      "186899 SET      reg4 -> reg5",
      "186902 JUMP      186953",
      "186953 NOT      reg5 -> reg4",
      "186956 JUMP IF FALSE      reg4 TO: 186960 | 186959"
  ],
  "186904": [
      "186904 PUSH MEMORY ELEMENT IF INIT      6209 -> reg7",
      "186907 GET      reg7[includes] -> reg6",
      "186913 NEW ARRAY      1 -> reg8",
      "186916 PUSH MEMORY ELEMENT IF INIT      6110 -> reg9",
      "186919 NEW ARRAY      2 -> reg14",
      "186922 PUT      reg14[0] = xu|,~j`t",
      "186928 PUT      reg14[1] = 12",
      "186932 CALL FUNCTION      PTR: reg9 MEM: reg14",
      "186936 SET      reg2 -> reg10",
      "186939 PUT      reg8[0] = reg10",
      "186943 CALL FUNCTION      OBJ: reg7 FUNC: reg6 ARGS: reg8",
      "186947 SET      reg2 -> reg4",
      "186950 SET      reg4 -> reg5",
      "186953 NOT      reg5 -> reg4",
      "186956 JUMP IF FALSE      reg4 TO: 186960 | 186959"
  ],
  "186959": ["186959 JUMP OR RETURN"],
  "186960": [
      "186960 PUSH MEMORY ELEMENT IF INIT      6127 -> reg5",
      "186963 GET      reg5[close] -> reg6",
      "186969 EMPTY ARRAY      -> reg8",
      "186971 CALL FUNCTION      OBJ: reg5 FUNC: reg6 ARGS: reg8",
      "186975 SET      reg2 -> reg4",
      "186978 PUSH MEMORY ELEMENT IF INIT      6108 -> reg8",
      "186981 NEW ARRAY      1 -> reg6",
      "186984 PUSH MEMORY ELEMENT IF INIT      6126 -> reg11",
      "186987 NEW ARRAY      1 -> reg10",
      "186990 PUSH MEMORY ELEMENT IF INIT      6125 -> reg12",
      "186993 NEW ARRAY      1 -> reg13",
      "186996 PUSH MEMORY ELEMENT IF INIT      6209 -> reg15",
      "186999 PUT      reg13[0] = reg15",
      "187003 CALL FUNCTION      PTR: reg12 MEM: reg13",
      "187007 SET      reg2 -> reg14",
      "187010 PUT      reg10[0] = reg14",
      "187014 CALL FUNCTION      PTR: reg11 MEM: reg10",
      "187018 SET      reg2 -> reg9",
      "187021 PUT      reg6[0] = reg9",
      "187025 CALL FUNCTION      PTR: reg8 MEM: reg6",
      "187029 SET      reg2 -> reg4",
      "187032 JUMP OR RETURN"
  ],
  "187144": [
      "187144 SET I      null",
      "187146 PUSH F.K      -> reg5",
      "187148 VOID F",
      "187149 SET MEMORY ELEMENT      0 = reg5",
      "187152 PUSH MEMORY ELEMENT IF INIT      6108 -> reg5",
      "187155 NEW ARRAY      1 -> reg9",
      "187158 PUSH MEMORY ELEMENT IF INIT      6126 -> reg12",
      "187161 NEW ARRAY      1 -> reg10",
      "187164 PUSH MEMORY ELEMENT IF INIT      0 -> reg16",
      "187167 GET WINDOW PROP      Error -> reg15",
      "187172 INSTANCEOF      reg16 instanceof reg15 -> reg13",
      "187176 JUMP IF FALSE      reg13 TO: 187193 | 187179"
  ],
  "187179": [
      "187179 PUSH MEMORY ELEMENT IF INIT      0 -> reg15",
      "187182 GET      reg15[message] -> reg13",
      "187188 SET      reg13 -> reg14",
      "187191 JUMP      187198",
      "187198 PUT      reg10[0] = reg14",
      "187202 CALL FUNCTION      PTR: reg12 MEM: reg10",
      "187206 SET      reg2 -> reg11",
      "187209 PUT      reg9[0] = reg11",
      "187213 CALL FUNCTION      PTR: reg5 MEM: reg9",
      "187217 SET      reg2 -> reg8",
      "187220 SET I      null",
      "187222 JUMP OR RETURN"
  ],
  "187193": [
      "187193 SET      unknown -> reg14",
      "187198 PUT      reg10[0] = reg14",
      "187202 CALL FUNCTION      PTR: reg12 MEM: reg10",
      "187206 SET      reg2 -> reg11",
      "187209 PUT      reg9[0] = reg11",
      "187213 CALL FUNCTION      PTR: reg5 MEM: reg9",
      "187217 SET      reg2 -> reg8",
      "187220 SET I      null",
      "187222 JUMP OR RETURN"
  ],
  "null": ["0 TERM"]
}